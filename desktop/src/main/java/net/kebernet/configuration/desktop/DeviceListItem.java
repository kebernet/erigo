/*
 *     Copyright (c) 2017 Robert Cooper
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package net.kebernet.configuration.desktop;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import net.kebernet.configuration.client.model.Device;

import javax.swing.*;
import java.awt.*;

/**
 * Created by rcooper on 7/7/17.
 */
public class DeviceListItem {
    private final Device device;
    private JLabel id;
    private JLabel type;
    private JLabel manufacturer;
    private JLabel address;
    JPanel root;
    private JPanel imageHolder;

    public static void main(String[] args) {
        JFrame frame = new JFrame("DeviceListItem");
        Device d = new Device();
        d.setName("My Device");
        d.setType("thermometer");
        d.setManufacturer("kebernet.net");
        d.setAddress("http://foo.com");
        d.setThumbnailUrl("http://www.kebernet.net/_/rsrc/1264535093579/Home/therespie.jpg");
        frame.setContentPane(new DeviceListItem(d).root);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public DeviceListItem(Device device) {
        this.device = device;
        this.id.setText(device.getName());
        this.type.setText(String.format("(%s)", device.getType()));
        this.manufacturer.setText(device.getManufacturer());
        this.address.setText(device.getAddress());
        try {
            ImageView imageView = new ImageView();
            imageView.setImageUrl(device.getThumbnailUrl());
            imageHolder.add(imageView);
        } catch (Exception e) {
            e.printStackTrace();
        }
        root.setMaximumSize(new Dimension(Integer.MAX_VALUE, 105));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridLayoutManager(5, 4, new Insets(2, 2, 2, 8), -1, -1));
        id = new JLabel();
        id.setFont(new Font(id.getFont().getName(), Font.BOLD, 22));
        id.setForeground(new Color(-16777216));
        id.setText("Label");
        root.add(id, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        manufacturer = new JLabel();
        manufacturer.setForeground(new Color(-10526881));
        manufacturer.setText("Label");
        root.add(manufacturer, new GridConstraints(1, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        address = new JLabel();
        address.setForeground(new Color(-10526881));
        address.setText("Label");
        root.add(address, new GridConstraints(2, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        root.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        imageHolder = new JPanel();
        imageHolder.setLayout(new BorderLayout(0, 0));
        root.add(imageHolder, new GridConstraints(0, 0, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(100, 100), new Dimension(100, 100), new Dimension(100, 100), 0, false));
        type = new JLabel();
        type.setForeground(new Color(-10526881));
        type.setText("Label");
        root.add(type, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        root.add(spacer2, new GridConstraints(3, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        root.add(spacer3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }
}
