//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/CommonMatcher.java
//

#include "J2ObjC_source.h"
#include "com/google/common/base/CommonMatcher.h"

@implementation ComGoogleCommonBaseCommonMatcher

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseCommonMatcher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)matches {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)find {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)findWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)replaceAllWithNSString:(NSString *)replacement {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)end {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)start {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x400, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x400, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(matches);
  methods[2].selector = @selector(find);
  methods[3].selector = @selector(findWithInt:);
  methods[4].selector = @selector(replaceAllWithNSString:);
  methods[5].selector = @selector(end);
  methods[6].selector = @selector(start);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "find", "I", "replaceAll", "LNSString;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseCommonMatcher = { "CommonMatcher", "com.google.common.base", ptrTable, methods, NULL, 7, 0x400, 7, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseCommonMatcher;
}

@end

void ComGoogleCommonBaseCommonMatcher_init(ComGoogleCommonBaseCommonMatcher *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseCommonMatcher)
