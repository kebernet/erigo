//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/FinalizableReferenceQueue.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/FinalizableReference.h"
#include "com/google/common/base/FinalizableReferenceQueue.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/ref/PhantomReference.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/lang/reflect/Method.h"
#include "java/net/URL.h"
#include "java/net/URLClassLoader.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBaseFinalizableReferenceQueue ()

+ (IOSClass *)loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray:(IOSObjectArray *)loaders;

@end

inline JavaUtilLoggingLogger *ComGoogleCommonBaseFinalizableReferenceQueue_get_logger();
static JavaUtilLoggingLogger *ComGoogleCommonBaseFinalizableReferenceQueue_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseFinalizableReferenceQueue, logger, JavaUtilLoggingLogger *)

inline NSString *ComGoogleCommonBaseFinalizableReferenceQueue_get_FINALIZER_CLASS_NAME();
static NSString *ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME = @"com.google.common.base.internal.Finalizer";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseFinalizableReferenceQueue, FINALIZER_CLASS_NAME, NSString *)

inline JavaLangReflectMethod *ComGoogleCommonBaseFinalizableReferenceQueue_get_startFinalizer();
static JavaLangReflectMethod *ComGoogleCommonBaseFinalizableReferenceQueue_startFinalizer;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseFinalizableReferenceQueue, startFinalizer, JavaLangReflectMethod *)

__attribute__((unused)) static IOSClass *ComGoogleCommonBaseFinalizableReferenceQueue_loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray_(IOSObjectArray *loaders);

@interface ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader : NSObject

@end

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader__Annotations$0();

inline NSString *ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_get_LOADING_ERROR();
static NSString *ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_LOADING_ERROR = @"Could not load Finalizer in its own class loader. Loading Finalizer in the current class loader instead. As a result, you will not be able to garbage collect this class loader. To support reclaiming this class loader, either resolve the underlying issue, or move Guava to your system class path.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader, LOADING_ERROR, NSString *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader__Annotations$0();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonBaseFinalizableReferenceQueue)

@implementation ComGoogleCommonBaseFinalizableReferenceQueue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseFinalizableReferenceQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)close {
  [((JavaLangRefPhantomReference *) nil_chk(frqRef_)) enqueue];
  [self cleanUp];
}

- (void)cleanUp {
  if (threadStarted_) {
    return;
  }
  JavaLangRefReference *reference;
  while ((reference = [((JavaLangRefReferenceQueue *) nil_chk(queue_)) poll]) != nil) {
    [((JavaLangRefReference *) nil_chk(reference)) clear];
    @try {
      [((id<ComGoogleCommonBaseFinalizableReference>) cast_check(reference, ComGoogleCommonBaseFinalizableReference_class_())) finalizeReferent];
    }
    @catch (NSException *t) {
      [((JavaUtilLoggingLogger *) nil_chk(ComGoogleCommonBaseFinalizableReferenceQueue_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:@"Error cleaning up after reference." withNSException:t];
    }
  }
}

+ (IOSClass *)loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray:(IOSObjectArray *)loaders {
  return ComGoogleCommonBaseFinalizableReferenceQueue_loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray_(loaders);
}

+ (JavaLangReflectMethod *)getStartFinalizerWithIOSClass:(IOSClass *)finalizer {
  return ComGoogleCommonBaseFinalizableReferenceQueue_getStartFinalizerWithIOSClass_(finalizer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x8a, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangReflectMethod;", 0x8, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(cleanUp);
  methods[3].selector = @selector(loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray:);
  methods[4].selector = @selector(getStartFinalizerWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "FINALIZER_CLASS_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "startFinalizer", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "queue_", "LJavaLangRefReferenceQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "frqRef_", "LJavaLangRefPhantomReference;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "threadStarted_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "loadFinalizer", "[LComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader;", "([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class<*>;", "getStartFinalizer", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;", &ComGoogleCommonBaseFinalizableReferenceQueue_logger, &ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME, &ComGoogleCommonBaseFinalizableReferenceQueue_startFinalizer, "Ljava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;", "Ljava/lang/ref/PhantomReference<Ljava/lang/Object;>;", "LComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader;LComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader;LComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader;LComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFinalizableReferenceQueue = { "FinalizableReferenceQueue", "com.google.common.base", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, 11, -1, -1, -1 };
  return &_ComGoogleCommonBaseFinalizableReferenceQueue;
}

+ (void)initialize {
  if (self == [ComGoogleCommonBaseFinalizableReferenceQueue class]) {
    ComGoogleCommonBaseFinalizableReferenceQueue_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([ComGoogleCommonBaseFinalizableReferenceQueue_class_() getName]);
    {
      IOSClass *finalizer = ComGoogleCommonBaseFinalizableReferenceQueue_loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray_([IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_init(), create_ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_init(), create_ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader_init() } count:3 type:ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader_class_()]);
      ComGoogleCommonBaseFinalizableReferenceQueue_startFinalizer = ComGoogleCommonBaseFinalizableReferenceQueue_getStartFinalizerWithIOSClass_(finalizer);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonBaseFinalizableReferenceQueue)
  }
}

@end

void ComGoogleCommonBaseFinalizableReferenceQueue_init(ComGoogleCommonBaseFinalizableReferenceQueue *self) {
  NSObject_init(self);
  self->queue_ = new_JavaLangRefReferenceQueue_init();
  self->frqRef_ = new_JavaLangRefPhantomReference_initWithId_withJavaLangRefReferenceQueue_(self, self->queue_);
  jboolean threadStarted = false;
  @try {
    (void) [((JavaLangReflectMethod *) nil_chk(ComGoogleCommonBaseFinalizableReferenceQueue_startFinalizer)) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ ComGoogleCommonBaseFinalizableReference_class_(), self->queue_, self->frqRef_ } count:3 type:NSObject_class_()]];
    threadStarted = true;
  }
  @catch (JavaLangIllegalAccessException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
  @catch (NSException *t) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleCommonBaseFinalizableReferenceQueue_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:@"Failed to start reference finalizer thread. Reference cleanup will only occur when new references are created." withNSException:t];
  }
  self->threadStarted_ = threadStarted;
}

ComGoogleCommonBaseFinalizableReferenceQueue *new_ComGoogleCommonBaseFinalizableReferenceQueue_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue, init)
}

ComGoogleCommonBaseFinalizableReferenceQueue *create_ComGoogleCommonBaseFinalizableReferenceQueue_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue, init)
}

IOSClass *ComGoogleCommonBaseFinalizableReferenceQueue_loadFinalizerWithComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoaderArray_(IOSObjectArray *loaders) {
  ComGoogleCommonBaseFinalizableReferenceQueue_initialize();
  {
    IOSObjectArray *a__ = loaders;
    id<ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader> loader = *b__++;
      IOSClass *finalizer = [((id<ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader>) nil_chk(loader)) loadFinalizer];
      if (finalizer != nil) {
        return finalizer;
      }
    }
  }
  @throw new_JavaLangAssertionError_init();
}

JavaLangReflectMethod *ComGoogleCommonBaseFinalizableReferenceQueue_getStartFinalizerWithIOSClass_(IOSClass *finalizer) {
  ComGoogleCommonBaseFinalizableReferenceQueue_initialize();
  @try {
    return [((IOSClass *) nil_chk(finalizer)) getMethod:@"startFinalizer" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ IOSClass_class_(), JavaLangRefReferenceQueue_class_(), JavaLangRefPhantomReference_class_() } count:3 type:IOSClass_class_()]];
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFinalizableReferenceQueue)

@implementation ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, 0, 1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(loadFinalizer);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<*>;", (void *)&ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader__Annotations$0, "LComGoogleCommonBaseFinalizableReferenceQueue;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader = { "FinalizerLoader", "com.google.common.base", ptrTable, methods, NULL, 7, 0x608, 1, 0, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader;
}

@end

IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFinalizableReferenceQueue_FinalizerLoader)

jboolean ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_disabled;

@implementation ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)loadFinalizer {
  if (ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_disabled) {
    return nil;
  }
  JavaLangClassLoader *systemLoader;
  @try {
    systemLoader = JavaLangClassLoader_getSystemClassLoader();
  }
  @catch (JavaLangSecurityException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonBaseFinalizableReferenceQueue, logger))) infoWithNSString:@"Not allowed to access system class loader."];
    return nil;
  }
  if (systemLoader != nil) {
    @try {
      return [systemLoader loadClassWithNSString:ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME];
    }
    @catch (JavaLangClassNotFoundException *e) {
      return nil;
    }
  }
  else {
    return nil;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, 1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadFinalizer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "disabled", "Z", .constantValue.asLong = 0, 0x8, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/lang/Class<*>;", (void *)&ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader__Annotations$0, &ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_disabled, "LComGoogleCommonBaseFinalizableReferenceQueue;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader = { "SystemLoader", "com.google.common.base", ptrTable, methods, fields, 7, 0x8, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader;
}

@end

void ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_init(ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader *self) {
  NSObject_init(self);
}

ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader *new_ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader, init)
}

ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader *create_ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader, init)
}

IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFinalizableReferenceQueue_SystemLoader)

@implementation ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)loadFinalizer {
  @try {
    JavaLangClassLoader *finalizerLoader = [self newLoaderWithJavaNetURL:[self getBaseUrl]];
    return [((JavaLangClassLoader *) nil_chk(finalizerLoader)) loadClassWithNSString:ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonBaseFinalizableReferenceQueue, logger))) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_LOADING_ERROR withNSException:e];
    return nil;
  }
}

- (JavaNetURL *)getBaseUrl {
  NSString *finalizerPath = JreStrcat("$$", [((NSString *) nil_chk(ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME)) java_replace:'.' withChar:'/'], @".class");
  JavaNetURL *finalizerUrl = [((JavaLangClassLoader *) nil_chk([[self java_getClass] getClassLoader])) getResourceWithNSString:finalizerPath];
  if (finalizerUrl == nil) {
    @throw new_JavaIoFileNotFoundException_initWithNSString_(finalizerPath);
  }
  NSString *urlString = [finalizerUrl description];
  if (![((NSString *) nil_chk(urlString)) java_hasSuffix:finalizerPath]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", @"Unsupported path style: ", urlString));
  }
  urlString = [urlString java_substring:0 endIndex:[urlString java_length] - [finalizerPath java_length]];
  return new_JavaNetURL_initWithJavaNetURL_withNSString_(finalizerUrl, urlString);
}

- (JavaNetURLClassLoader *)newLoaderWithJavaNetURL:(JavaNetURL *)base {
  return new_JavaNetURLClassLoader_initWithJavaNetURLArray_withJavaLangClassLoader_([IOSObjectArray newArrayWithObjects:(id[]){ base } count:1 type:JavaNetURL_class_()], nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, 1, -1 },
    { NULL, "LJavaNetURL;", 0x0, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaNetURLClassLoader;", 0x0, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadFinalizer);
  methods[2].selector = @selector(getBaseUrl);
  methods[3].selector = @selector(newLoaderWithJavaNetURL:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOADING_ERROR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/lang/Class<*>;", (void *)&ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader__Annotations$0, "LJavaIoIOException;", "newLoader", "LJavaNetURL;", &ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_LOADING_ERROR, "LComGoogleCommonBaseFinalizableReferenceQueue;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader = { "DecoupledLoader", "com.google.common.base", ptrTable, methods, fields, 7, 0x8, 4, 1, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader;
}

@end

void ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_init(ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader *self) {
  NSObject_init(self);
}

ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader *new_ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader, init)
}

ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader *create_ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader, init)
}

IOSObjectArray *ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFinalizableReferenceQueue_DecoupledLoader)

@implementation ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)loadFinalizer {
  @try {
    return IOSClass_forName_(ComGoogleCommonBaseFinalizableReferenceQueue_FINALIZER_CLASS_NAME);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadFinalizer);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<*>;", "LComGoogleCommonBaseFinalizableReferenceQueue;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader = { "DirectLoader", "com.google.common.base", ptrTable, methods, NULL, 7, 0x8, 2, 0, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader;
}

@end

void ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader_init(ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader *self) {
  NSObject_init(self);
}

ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader *new_ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader, init)
}

ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader *create_ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFinalizableReferenceQueue_DirectLoader)
