//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/FunctionalEquivalence.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Equivalence.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/FunctionalEquivalence.h"
#include "com/google/common/base/Objects.h"
#include "com/google/common/base/Preconditions.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBaseFunctionalEquivalence () {
 @public
  id<ComGoogleCommonBaseFunction> function_;
  ComGoogleCommonBaseEquivalence *resultEquivalence_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonBaseFunctionalEquivalence, function_, id<ComGoogleCommonBaseFunction>)
J2OBJC_FIELD_SETTER(ComGoogleCommonBaseFunctionalEquivalence, resultEquivalence_, ComGoogleCommonBaseEquivalence *)

inline jlong ComGoogleCommonBaseFunctionalEquivalence_get_serialVersionUID();
#define ComGoogleCommonBaseFunctionalEquivalence_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonBaseFunctionalEquivalence, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseFunctionalEquivalence__Annotations$0();

@implementation ComGoogleCommonBaseFunctionalEquivalence

- (instancetype)initWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                 withComGoogleCommonBaseEquivalence:(ComGoogleCommonBaseEquivalence *)resultEquivalence {
  ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(self, function, resultEquivalence);
  return self;
}

- (jboolean)doEquivalentWithId:(id)a
                        withId:(id)b {
  return [((ComGoogleCommonBaseEquivalence *) nil_chk(resultEquivalence_)) equivalentWithId:[((id<ComGoogleCommonBaseFunction>) nil_chk(function_)) applyWithId:a] withId:[function_ applyWithId:b]];
}

- (jint)doHashWithId:(id)a {
  return [((ComGoogleCommonBaseEquivalence *) nil_chk(resultEquivalence_)) hash__WithId:[((id<ComGoogleCommonBaseFunction>) nil_chk(function_)) applyWithId:a]];
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  if ([obj isKindOfClass:[ComGoogleCommonBaseFunctionalEquivalence class]]) {
    ComGoogleCommonBaseFunctionalEquivalence *that = (ComGoogleCommonBaseFunctionalEquivalence *) cast_chk(obj, [ComGoogleCommonBaseFunctionalEquivalence class]);
    return [((id<ComGoogleCommonBaseFunction>) nil_chk(function_)) isEqual:((ComGoogleCommonBaseFunctionalEquivalence *) nil_chk(that))->function_] && [((ComGoogleCommonBaseEquivalence *) nil_chk(resultEquivalence_)) isEqual:that->resultEquivalence_];
  }
  return false;
}

- (NSUInteger)hash {
  return ComGoogleCommonBaseObjects_hashCodeWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ function_, resultEquivalence_ } count:2 type:NSObject_class_()]);
}

- (NSString *)description {
  return JreStrcat("@$@C", resultEquivalence_, @".onResultOf(", function_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x4, 2, 3, -1, 4, -1, -1 },
    { NULL, "I", 0x4, 5, 6, -1, 7, -1, -1 },
    { NULL, "Z", 0x1, 8, 6, -1, -1, -1, 9 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonBaseFunction:withComGoogleCommonBaseEquivalence:);
  methods[1].selector = @selector(doEquivalentWithId:withId:);
  methods[2].selector = @selector(doHashWithId:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonBaseFunctionalEquivalence_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "function_", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "resultEquivalence_", "LComGoogleCommonBaseEquivalence;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonBaseFunction;LComGoogleCommonBaseEquivalence;", "(Lcom/google/common/base/Function<TF;+TT;>;Lcom/google/common/base/Equivalence<TT;>;)V", "doEquivalent", "LNSObject;LNSObject;", "(TF;TF;)Z", "doHash", "LNSObject;", "(TF;)I", "equals", (void *)&ComGoogleCommonBaseFunctionalEquivalence__Annotations$0, "hashCode", "toString", "Lcom/google/common/base/Function<TF;+TT;>;", "Lcom/google/common/base/Equivalence<TT;>;", "<F:Ljava/lang/Object;T:Ljava/lang/Object;>Lcom/google/common/base/Equivalence<TF;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseFunctionalEquivalence = { "FunctionalEquivalence", "com.google.common.base", ptrTable, methods, fields, 7, 0x10, 6, 3, -1, -1, -1, 14, -1 };
  return &_ComGoogleCommonBaseFunctionalEquivalence;
}

@end

void ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(ComGoogleCommonBaseFunctionalEquivalence *self, id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence) {
  ComGoogleCommonBaseEquivalence_init(self);
  self->function_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(function);
  self->resultEquivalence_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(resultEquivalence);
}

ComGoogleCommonBaseFunctionalEquivalence *new_ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseFunctionalEquivalence, initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_, function, resultEquivalence)
}

ComGoogleCommonBaseFunctionalEquivalence *create_ComGoogleCommonBaseFunctionalEquivalence_initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_(id<ComGoogleCommonBaseFunction> function, ComGoogleCommonBaseEquivalence *resultEquivalence) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseFunctionalEquivalence, initWithComGoogleCommonBaseFunction_withComGoogleCommonBaseEquivalence_, function, resultEquivalence)
}

IOSObjectArray *ComGoogleCommonBaseFunctionalEquivalence__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseFunctionalEquivalence)
