//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/Joiner.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Joiner.h"
#include "com/google/common/base/Preconditions.h"
#include "java/io/IOException.h"
#include "java/lang/Appendable.h"
#include "java/lang/AssertionError.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBaseJoiner () {
 @public
  NSString *separator_;
}

- (instancetype)initWithNSString:(NSString *)separator;

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype;

+ (id<JavaLangIterable>)iterableWithId:(id)first
                                withId:(id)second
                     withNSObjectArray:(IOSObjectArray *)rest;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonBaseJoiner, separator_, NSString *)

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_initWithNSString_(ComGoogleCommonBaseJoiner *self, NSString *separator);

__attribute__((unused)) static ComGoogleCommonBaseJoiner *new_ComGoogleCommonBaseJoiner_initWithNSString_(NSString *separator) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner *create_ComGoogleCommonBaseJoiner_initWithNSString_(NSString *separator);

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *self, ComGoogleCommonBaseJoiner *prototype);

__attribute__((unused)) static ComGoogleCommonBaseJoiner *new_ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *prototype) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner *create_ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *prototype);

__attribute__((unused)) static JavaLangStringBuilder *ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaLangIterable_(ComGoogleCommonBaseJoiner *self, JavaLangStringBuilder *builder, id<JavaLangIterable> parts);

__attribute__((unused)) static JavaLangStringBuilder *ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaUtilIterator_(ComGoogleCommonBaseJoiner *self, JavaLangStringBuilder *builder, id<JavaUtilIterator> parts);

__attribute__((unused)) static NSString *ComGoogleCommonBaseJoiner_joinWithJavaLangIterable_(ComGoogleCommonBaseJoiner *self, id<JavaLangIterable> parts);

__attribute__((unused)) static NSString *ComGoogleCommonBaseJoiner_joinWithJavaUtilIterator_(ComGoogleCommonBaseJoiner *self, id<JavaUtilIterator> parts);

__attribute__((unused)) static id<JavaLangIterable> ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(id first, id second, IOSObjectArray *rest);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$2();

@interface ComGoogleCommonBaseJoiner_1 : ComGoogleCommonBaseJoiner {
 @public
  ComGoogleCommonBaseJoiner *this$0_;
  NSString *val$nullText_;
}

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)outer$
                                     withNSString:(NSString *)capture$0
                    withComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype;

- (id<JavaLangCharSequence>)toStringWithId:(id)part;

- (ComGoogleCommonBaseJoiner *)useForNullWithNSString:(NSString *)nullText;

- (ComGoogleCommonBaseJoiner *)skipNulls;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseJoiner_1)

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner_1 *self, ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype);

__attribute__((unused)) static ComGoogleCommonBaseJoiner_1 *new_ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner_1 *create_ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseJoiner_1__Annotations$0();

@interface ComGoogleCommonBaseJoiner_2 : ComGoogleCommonBaseJoiner {
 @public
  ComGoogleCommonBaseJoiner *this$0_;
}

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)outer$
                    withComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype;

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaUtilIterator:(id<JavaUtilIterator>)parts;

- (ComGoogleCommonBaseJoiner *)useForNullWithNSString:(NSString *)nullText;

- (ComGoogleCommonBaseJoiner_MapJoiner *)withKeyValueSeparatorWithNSString:(NSString *)kvs;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseJoiner_2)

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner_2 *self, ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype);

__attribute__((unused)) static ComGoogleCommonBaseJoiner_2 *new_ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner_2 *create_ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype);

@interface ComGoogleCommonBaseJoiner_MapJoiner () {
 @public
  ComGoogleCommonBaseJoiner *joiner_;
  NSString *keyValueSeparator_;
}

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)joiner
                                     withNSString:(NSString *)keyValueSeparator;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonBaseJoiner_MapJoiner, joiner_, ComGoogleCommonBaseJoiner *)
J2OBJC_FIELD_SETTER(ComGoogleCommonBaseJoiner_MapJoiner, keyValueSeparator_, NSString *)

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner_MapJoiner *self, ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator);

__attribute__((unused)) static ComGoogleCommonBaseJoiner_MapJoiner *new_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner_MapJoiner *create_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator);

@interface ComGoogleCommonBaseJoiner_3 : JavaUtilAbstractList {
 @public
  IOSObjectArray *val$rest_;
  id val$first_;
  id val$second_;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)capture$0
                               withId:(id)capture$1
                               withId:(id)capture$2;

- (jint)size;

- (id)getWithInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseJoiner_3)

__attribute__((unused)) static void ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(ComGoogleCommonBaseJoiner_3 *self, IOSObjectArray *capture$0, id capture$1, id capture$2);

__attribute__((unused)) static ComGoogleCommonBaseJoiner_3 *new_ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(IOSObjectArray *capture$0, id capture$1, id capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseJoiner_3 *create_ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(IOSObjectArray *capture$0, id capture$1, id capture$2);

@implementation ComGoogleCommonBaseJoiner

+ (ComGoogleCommonBaseJoiner *)onWithNSString:(NSString *)separator {
  return ComGoogleCommonBaseJoiner_onWithNSString_(separator);
}

+ (ComGoogleCommonBaseJoiner *)onWithChar:(jchar)separator {
  return ComGoogleCommonBaseJoiner_onWithChar_(separator);
}

- (instancetype)initWithNSString:(NSString *)separator {
  ComGoogleCommonBaseJoiner_initWithNSString_(self, separator);
  return self;
}

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype {
  ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(self, prototype);
  return self;
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaLangIterable:(id<JavaLangIterable>)parts {
  return [self appendToWithJavaLangAppendable:appendable withJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(parts)) iterator]];
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaUtilIterator:(id<JavaUtilIterator>)parts {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(appendable);
  if ([((id<JavaUtilIterator>) nil_chk(parts)) hasNext]) {
    (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:[self toStringWithId:[parts next]]];
    while ([parts hasNext]) {
      (void) [appendable appendWithJavaLangCharSequence:separator_];
      (void) [appendable appendWithJavaLangCharSequence:[self toStringWithId:[parts next]]];
    }
  }
  return appendable;
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                       withNSObjectArray:(IOSObjectArray *)parts {
  return [self appendToWithJavaLangAppendable:appendable withJavaLangIterable:JavaUtilArrays_asListWithNSObjectArray_(parts)];
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                                  withId:(id)first
                                                  withId:(id)second
                                       withNSObjectArray:(IOSObjectArray *)rest {
  return [self appendToWithJavaLangAppendable:appendable withJavaLangIterable:ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(first, second, rest)];
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                        withJavaLangIterable:(id<JavaLangIterable>)parts {
  return ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaLangIterable_(self, builder, parts);
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                        withJavaUtilIterator:(id<JavaUtilIterator>)parts {
  return ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaUtilIterator_(self, builder, parts);
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                           withNSObjectArray:(IOSObjectArray *)parts {
  return ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaLangIterable_(self, builder, JavaUtilArrays_asListWithNSObjectArray_(parts));
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                                      withId:(id)first
                                                      withId:(id)second
                                           withNSObjectArray:(IOSObjectArray *)rest {
  return ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaLangIterable_(self, builder, ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(first, second, rest));
}

- (NSString *)joinWithJavaLangIterable:(id<JavaLangIterable>)parts {
  return ComGoogleCommonBaseJoiner_joinWithJavaLangIterable_(self, parts);
}

- (NSString *)joinWithJavaUtilIterator:(id<JavaUtilIterator>)parts {
  return ComGoogleCommonBaseJoiner_joinWithJavaUtilIterator_(self, parts);
}

- (NSString *)joinWithNSObjectArray:(IOSObjectArray *)parts {
  return ComGoogleCommonBaseJoiner_joinWithJavaLangIterable_(self, JavaUtilArrays_asListWithNSObjectArray_(parts));
}

- (NSString *)joinWithId:(id)first
                  withId:(id)second
       withNSObjectArray:(IOSObjectArray *)rest {
  return ComGoogleCommonBaseJoiner_joinWithJavaLangIterable_(self, ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(first, second, rest));
}

- (ComGoogleCommonBaseJoiner *)useForNullWithNSString:(NSString *)nullText {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(nullText);
  return new_ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(self, nullText, self);
}

- (ComGoogleCommonBaseJoiner *)skipNulls {
  return new_ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(self, self);
}

- (ComGoogleCommonBaseJoiner_MapJoiner *)withKeyValueSeparatorWithChar:(jchar)keyValueSeparator {
  return [self withKeyValueSeparatorWithNSString:NSString_java_valueOfChar_(keyValueSeparator)];
}

- (ComGoogleCommonBaseJoiner_MapJoiner *)withKeyValueSeparatorWithNSString:(NSString *)keyValueSeparator {
  return new_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(self, keyValueSeparator);
}

- (id<JavaLangCharSequence>)toStringWithId:(id)part {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(part);
  return ([JavaLangCharSequence_class_() isInstance:part]) ? (id<JavaLangCharSequence>) cast_check(part, JavaLangCharSequence_class_()) : (id) [nil_chk(part) description];
}

+ (id<JavaLangIterable>)iterableWithId:(id)first
                                withId:(id)second
                     withNSObjectArray:(IOSObjectArray *)rest {
  return ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(first, second, rest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonBaseJoiner;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 4, 5, 6, 7, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 4, 8, 6, 9, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x11, 4, 10, 6, 11, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x91, 4, 12, 6, 13, -1, 14 },
    { NULL, "LJavaLangStringBuilder;", 0x11, 4, 15, -1, 16, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x11, 4, 17, -1, 18, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x11, 4, 19, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x91, 4, 20, -1, -1, -1, 21 },
    { NULL, "LNSString;", 0x11, 22, 23, -1, 24, -1, -1 },
    { NULL, "LNSString;", 0x11, 22, 25, -1, 26, -1, -1 },
    { NULL, "LNSString;", 0x11, 22, 27, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x91, 22, 28, -1, -1, -1, 29 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x1, 30, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner_MapJoiner;", 0x1, 31, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner_MapJoiner;", 0x1, 31, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x0, 32, 33, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0xa, 34, 28, -1, 35, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onWithNSString:);
  methods[1].selector = @selector(onWithChar:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithComGoogleCommonBaseJoiner:);
  methods[4].selector = @selector(appendToWithJavaLangAppendable:withJavaLangIterable:);
  methods[5].selector = @selector(appendToWithJavaLangAppendable:withJavaUtilIterator:);
  methods[6].selector = @selector(appendToWithJavaLangAppendable:withNSObjectArray:);
  methods[7].selector = @selector(appendToWithJavaLangAppendable:withId:withId:withNSObjectArray:);
  methods[8].selector = @selector(appendToWithJavaLangStringBuilder:withJavaLangIterable:);
  methods[9].selector = @selector(appendToWithJavaLangStringBuilder:withJavaUtilIterator:);
  methods[10].selector = @selector(appendToWithJavaLangStringBuilder:withNSObjectArray:);
  methods[11].selector = @selector(appendToWithJavaLangStringBuilder:withId:withId:withNSObjectArray:);
  methods[12].selector = @selector(joinWithJavaLangIterable:);
  methods[13].selector = @selector(joinWithJavaUtilIterator:);
  methods[14].selector = @selector(joinWithNSObjectArray:);
  methods[15].selector = @selector(joinWithId:withId:withNSObjectArray:);
  methods[16].selector = @selector(useForNullWithNSString:);
  methods[17].selector = @selector(skipNulls);
  methods[18].selector = @selector(withKeyValueSeparatorWithChar:);
  methods[19].selector = @selector(withKeyValueSeparatorWithNSString:);
  methods[20].selector = @selector(toStringWithId:);
  methods[21].selector = @selector(iterableWithId:withId:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "separator_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "on", "LNSString;", "C", "LComGoogleCommonBaseJoiner;", "appendTo", "LJavaLangAppendable;LJavaLangIterable;", "LJavaIoIOException;", "<A::Ljava/lang/Appendable;>(TA;Ljava/lang/Iterable<*>;)TA;", "LJavaLangAppendable;LJavaUtilIterator;", "<A::Ljava/lang/Appendable;>(TA;Ljava/util/Iterator<*>;)TA;", "LJavaLangAppendable;[LNSObject;", "<A::Ljava/lang/Appendable;>(TA;[Ljava/lang/Object;)TA;", "LJavaLangAppendable;LNSObject;LNSObject;[LNSObject;", "<A::Ljava/lang/Appendable;>(TA;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)TA;", (void *)&ComGoogleCommonBaseJoiner__Annotations$0, "LJavaLangStringBuilder;LJavaLangIterable;", "(Ljava/lang/StringBuilder;Ljava/lang/Iterable<*>;)Ljava/lang/StringBuilder;", "LJavaLangStringBuilder;LJavaUtilIterator;", "(Ljava/lang/StringBuilder;Ljava/util/Iterator<*>;)Ljava/lang/StringBuilder;", "LJavaLangStringBuilder;[LNSObject;", "LJavaLangStringBuilder;LNSObject;LNSObject;[LNSObject;", (void *)&ComGoogleCommonBaseJoiner__Annotations$1, "join", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)Ljava/lang/String;", "LJavaUtilIterator;", "(Ljava/util/Iterator<*>;)Ljava/lang/String;", "[LNSObject;", "LNSObject;LNSObject;[LNSObject;", (void *)&ComGoogleCommonBaseJoiner__Annotations$2, "useForNull", "withKeyValueSeparator", "toString", "LNSObject;", "iterable", "(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Iterable<Ljava/lang/Object;>;", "LComGoogleCommonBaseJoiner_MapJoiner;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseJoiner = { "Joiner", "com.google.common.base", ptrTable, methods, fields, 7, 0x1, 22, 1, -1, 36, -1, -1, -1 };
  return &_ComGoogleCommonBaseJoiner;
}

@end

ComGoogleCommonBaseJoiner *ComGoogleCommonBaseJoiner_onWithNSString_(NSString *separator) {
  ComGoogleCommonBaseJoiner_initialize();
  return new_ComGoogleCommonBaseJoiner_initWithNSString_(separator);
}

ComGoogleCommonBaseJoiner *ComGoogleCommonBaseJoiner_onWithChar_(jchar separator) {
  ComGoogleCommonBaseJoiner_initialize();
  return new_ComGoogleCommonBaseJoiner_initWithNSString_(NSString_java_valueOfChar_(separator));
}

void ComGoogleCommonBaseJoiner_initWithNSString_(ComGoogleCommonBaseJoiner *self, NSString *separator) {
  NSObject_init(self);
  self->separator_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
}

ComGoogleCommonBaseJoiner *new_ComGoogleCommonBaseJoiner_initWithNSString_(NSString *separator) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner, initWithNSString_, separator)
}

ComGoogleCommonBaseJoiner *create_ComGoogleCommonBaseJoiner_initWithNSString_(NSString *separator) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner, initWithNSString_, separator)
}

void ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *self, ComGoogleCommonBaseJoiner *prototype) {
  NSObject_init(self);
  self->separator_ = ((ComGoogleCommonBaseJoiner *) nil_chk(prototype))->separator_;
}

ComGoogleCommonBaseJoiner *new_ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner, initWithComGoogleCommonBaseJoiner_, prototype)
}

ComGoogleCommonBaseJoiner *create_ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner, initWithComGoogleCommonBaseJoiner_, prototype)
}

JavaLangStringBuilder *ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaLangIterable_(ComGoogleCommonBaseJoiner *self, JavaLangStringBuilder *builder, id<JavaLangIterable> parts) {
  return ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaUtilIterator_(self, builder, [((id<JavaLangIterable>) nil_chk(parts)) iterator]);
}

JavaLangStringBuilder *ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaUtilIterator_(ComGoogleCommonBaseJoiner *self, JavaLangStringBuilder *builder, id<JavaUtilIterator> parts) {
  @try {
    (void) [self appendToWithJavaLangAppendable:builder withJavaUtilIterator:parts];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
  return builder;
}

NSString *ComGoogleCommonBaseJoiner_joinWithJavaLangIterable_(ComGoogleCommonBaseJoiner *self, id<JavaLangIterable> parts) {
  return ComGoogleCommonBaseJoiner_joinWithJavaUtilIterator_(self, [((id<JavaLangIterable>) nil_chk(parts)) iterator]);
}

NSString *ComGoogleCommonBaseJoiner_joinWithJavaUtilIterator_(ComGoogleCommonBaseJoiner *self, id<JavaUtilIterator> parts) {
  return [((JavaLangStringBuilder *) nil_chk(ComGoogleCommonBaseJoiner_appendToWithJavaLangStringBuilder_withJavaUtilIterator_(self, new_JavaLangStringBuilder_init(), parts))) description];
}

id<JavaLangIterable> ComGoogleCommonBaseJoiner_iterableWithId_withId_withNSObjectArray_(id first, id second, IOSObjectArray *rest) {
  ComGoogleCommonBaseJoiner_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(rest);
  return new_ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(rest, first, second);
}

IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:4 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:4 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseJoiner__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseJoiner)

@implementation ComGoogleCommonBaseJoiner_1

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)outer$
                                     withNSString:(NSString *)capture$0
                    withComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype {
  ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(self, outer$, capture$0, prototype);
  return self;
}

- (id<JavaLangCharSequence>)toStringWithId:(id)part {
  return (part == nil) ? val$nullText_ : (id) [this$0_ toStringWithId:part];
}

- (ComGoogleCommonBaseJoiner *)useForNullWithNSString:(NSString *)nullText {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"already specified useForNull");
}

- (ComGoogleCommonBaseJoiner *)skipNulls {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"already specified useForNull");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x0, 1, 2, -1, -1, -1, 3 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonBaseJoiner:withNSString:withComGoogleCommonBaseJoiner:);
  methods[1].selector = @selector(toStringWithId:);
  methods[2].selector = @selector(useForNullWithNSString:);
  methods[3].selector = @selector(skipNulls);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonBaseJoiner;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$nullText_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonBaseJoiner;", "toString", "LNSObject;", (void *)&ComGoogleCommonBaseJoiner_1__Annotations$0, "useForNull", "LNSString;", "useForNullWithNSString:" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseJoiner_1 = { "", "com.google.common.base", ptrTable, methods, fields, 7, 0x8018, 4, 2, 0, -1, 6, -1, -1 };
  return &_ComGoogleCommonBaseJoiner_1;
}

@end

void ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner_1 *self, ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype) {
  self->this$0_ = outer$;
  self->val$nullText_ = capture$0;
  ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(self, prototype);
}

ComGoogleCommonBaseJoiner_1 *new_ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner_1, initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_, outer$, capture$0, prototype)
}

ComGoogleCommonBaseJoiner_1 *create_ComGoogleCommonBaseJoiner_1_initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, NSString *capture$0, ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner_1, initWithComGoogleCommonBaseJoiner_withNSString_withComGoogleCommonBaseJoiner_, outer$, capture$0, prototype)
}

IOSObjectArray *ComGoogleCommonBaseJoiner_1__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

@implementation ComGoogleCommonBaseJoiner_2

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)outer$
                    withComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)prototype {
  ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(self, outer$, prototype);
  return self;
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaUtilIterator:(id<JavaUtilIterator>)parts {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(appendable, @"appendable");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(parts, @"parts");
  while ([((id<JavaUtilIterator>) nil_chk(parts)) hasNext]) {
    id part = [parts next];
    if (part != nil) {
      (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:[this$0_ toStringWithId:part]];
      break;
    }
  }
  while ([parts hasNext]) {
    id part = [parts next];
    if (part != nil) {
      (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:separator_];
      (void) [appendable appendWithJavaLangCharSequence:[this$0_ toStringWithId:part]];
    }
  }
  return appendable;
}

- (ComGoogleCommonBaseJoiner *)useForNullWithNSString:(NSString *)nullText {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"already specified skipNulls");
}

- (ComGoogleCommonBaseJoiner_MapJoiner *)withKeyValueSeparatorWithNSString:(NSString *)kvs {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"can't use .skipNulls() with maps");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 1, 2, 3, 4, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner_MapJoiner;", 0x1, 7, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonBaseJoiner:withComGoogleCommonBaseJoiner:);
  methods[1].selector = @selector(appendToWithJavaLangAppendable:withJavaUtilIterator:);
  methods[2].selector = @selector(useForNullWithNSString:);
  methods[3].selector = @selector(withKeyValueSeparatorWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonBaseJoiner;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonBaseJoiner;", "appendTo", "LJavaLangAppendable;LJavaUtilIterator;", "LJavaIoIOException;", "<A::Ljava/lang/Appendable;>(TA;Ljava/util/Iterator<*>;)TA;", "useForNull", "LNSString;", "withKeyValueSeparator", "skipNulls" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseJoiner_2 = { "", "com.google.common.base", ptrTable, methods, fields, 7, 0x8018, 4, 1, 0, -1, 8, -1, -1 };
  return &_ComGoogleCommonBaseJoiner_2;
}

@end

void ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner_2 *self, ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype) {
  self->this$0_ = outer$;
  ComGoogleCommonBaseJoiner_initWithComGoogleCommonBaseJoiner_(self, prototype);
}

ComGoogleCommonBaseJoiner_2 *new_ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner_2, initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_, outer$, prototype)
}

ComGoogleCommonBaseJoiner_2 *create_ComGoogleCommonBaseJoiner_2_initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_(ComGoogleCommonBaseJoiner *outer$, ComGoogleCommonBaseJoiner *prototype) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner_2, initWithComGoogleCommonBaseJoiner_withComGoogleCommonBaseJoiner_, outer$, prototype)
}

@implementation ComGoogleCommonBaseJoiner_MapJoiner

- (instancetype)initWithComGoogleCommonBaseJoiner:(ComGoogleCommonBaseJoiner *)joiner
                                     withNSString:(NSString *)keyValueSeparator {
  ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(self, joiner, keyValueSeparator);
  return self;
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                         withJavaUtilMap:(id<JavaUtilMap>)map {
  return [self appendToWithJavaLangAppendable:appendable withJavaLangIterable:[((id<JavaUtilMap>) nil_chk(map)) entrySet]];
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                             withJavaUtilMap:(id<JavaUtilMap>)map {
  return [self appendToWithJavaLangStringBuilder:builder withJavaLangIterable:[((id<JavaUtilMap>) nil_chk(map)) entrySet]];
}

- (NSString *)joinWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [self joinWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk(map)) entrySet]];
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaLangIterable:(id<JavaLangIterable>)entries {
  return [self appendToWithJavaLangAppendable:appendable withJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(entries)) iterator]];
}

- (id<JavaLangAppendable>)appendToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                    withJavaUtilIterator:(id<JavaUtilIterator>)parts {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(appendable);
  if ([((id<JavaUtilIterator>) nil_chk(parts)) hasNext]) {
    id<JavaUtilMap_Entry> entry_ = [parts next];
    (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:[((ComGoogleCommonBaseJoiner *) nil_chk(joiner_)) toStringWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]]];
    (void) [appendable appendWithJavaLangCharSequence:keyValueSeparator_];
    (void) [appendable appendWithJavaLangCharSequence:[joiner_ toStringWithId:[entry_ getValue]]];
    while ([parts hasNext]) {
      (void) [appendable appendWithJavaLangCharSequence:joiner_->separator_];
      id<JavaUtilMap_Entry> e = [parts next];
      (void) [appendable appendWithJavaLangCharSequence:[joiner_ toStringWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]]];
      (void) [appendable appendWithJavaLangCharSequence:keyValueSeparator_];
      (void) [appendable appendWithJavaLangCharSequence:[joiner_ toStringWithId:[e getValue]]];
    }
  }
  return appendable;
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                        withJavaLangIterable:(id<JavaLangIterable>)entries {
  return [self appendToWithJavaLangStringBuilder:builder withJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(entries)) iterator]];
}

- (JavaLangStringBuilder *)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                        withJavaUtilIterator:(id<JavaUtilIterator>)entries {
  @try {
    (void) [self appendToWithJavaLangAppendable:builder withJavaUtilIterator:entries];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
  return builder;
}

- (NSString *)joinWithJavaLangIterable:(id<JavaLangIterable>)entries {
  return [self joinWithJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(entries)) iterator]];
}

- (NSString *)joinWithJavaUtilIterator:(id<JavaUtilIterator>)entries {
  return [((JavaLangStringBuilder *) nil_chk([self appendToWithJavaLangStringBuilder:new_JavaLangStringBuilder_init() withJavaUtilIterator:entries])) description];
}

- (ComGoogleCommonBaseJoiner_MapJoiner *)useForNullWithNSString:(NSString *)nullText {
  return new_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_([((ComGoogleCommonBaseJoiner *) nil_chk(joiner_)) useForNullWithNSString:nullText], keyValueSeparator_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 1, 2, 3, 4, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 1, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 1, 10, 3, 11, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 1, 12, 3, 13, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 1, 14, -1, 15, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 1, 16, -1, 17, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 18, -1, 19, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 20, -1, 21, -1, -1 },
    { NULL, "LComGoogleCommonBaseJoiner_MapJoiner;", 0x1, 22, 23, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonBaseJoiner:withNSString:);
  methods[1].selector = @selector(appendToWithJavaLangAppendable:withJavaUtilMap:);
  methods[2].selector = @selector(appendToWithJavaLangStringBuilder:withJavaUtilMap:);
  methods[3].selector = @selector(joinWithJavaUtilMap:);
  methods[4].selector = @selector(appendToWithJavaLangAppendable:withJavaLangIterable:);
  methods[5].selector = @selector(appendToWithJavaLangAppendable:withJavaUtilIterator:);
  methods[6].selector = @selector(appendToWithJavaLangStringBuilder:withJavaLangIterable:);
  methods[7].selector = @selector(appendToWithJavaLangStringBuilder:withJavaUtilIterator:);
  methods[8].selector = @selector(joinWithJavaLangIterable:);
  methods[9].selector = @selector(joinWithJavaUtilIterator:);
  methods[10].selector = @selector(useForNullWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "joiner_", "LComGoogleCommonBaseJoiner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keyValueSeparator_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonBaseJoiner;LNSString;", "appendTo", "LJavaLangAppendable;LJavaUtilMap;", "LJavaIoIOException;", "<A::Ljava/lang/Appendable;>(TA;Ljava/util/Map<**>;)TA;", "LJavaLangStringBuilder;LJavaUtilMap;", "(Ljava/lang/StringBuilder;Ljava/util/Map<**>;)Ljava/lang/StringBuilder;", "join", "LJavaUtilMap;", "(Ljava/util/Map<**>;)Ljava/lang/String;", "LJavaLangAppendable;LJavaLangIterable;", "<A::Ljava/lang/Appendable;>(TA;Ljava/lang/Iterable<+Ljava/util/Map$Entry<**>;>;)TA;", "LJavaLangAppendable;LJavaUtilIterator;", "<A::Ljava/lang/Appendable;>(TA;Ljava/util/Iterator<+Ljava/util/Map$Entry<**>;>;)TA;", "LJavaLangStringBuilder;LJavaLangIterable;", "(Ljava/lang/StringBuilder;Ljava/lang/Iterable<+Ljava/util/Map$Entry<**>;>;)Ljava/lang/StringBuilder;", "LJavaLangStringBuilder;LJavaUtilIterator;", "(Ljava/lang/StringBuilder;Ljava/util/Iterator<+Ljava/util/Map$Entry<**>;>;)Ljava/lang/StringBuilder;", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Ljava/util/Map$Entry<**>;>;)Ljava/lang/String;", "LJavaUtilIterator;", "(Ljava/util/Iterator<+Ljava/util/Map$Entry<**>;>;)Ljava/lang/String;", "useForNull", "LNSString;", "LComGoogleCommonBaseJoiner;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseJoiner_MapJoiner = { "MapJoiner", "com.google.common.base", ptrTable, methods, fields, 7, 0x19, 11, 2, 24, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseJoiner_MapJoiner;
}

@end

void ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner_MapJoiner *self, ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator) {
  NSObject_init(self);
  self->joiner_ = joiner;
  self->keyValueSeparator_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(keyValueSeparator);
}

ComGoogleCommonBaseJoiner_MapJoiner *new_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner_MapJoiner, initWithComGoogleCommonBaseJoiner_withNSString_, joiner, keyValueSeparator)
}

ComGoogleCommonBaseJoiner_MapJoiner *create_ComGoogleCommonBaseJoiner_MapJoiner_initWithComGoogleCommonBaseJoiner_withNSString_(ComGoogleCommonBaseJoiner *joiner, NSString *keyValueSeparator) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner_MapJoiner, initWithComGoogleCommonBaseJoiner_withNSString_, joiner, keyValueSeparator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseJoiner_MapJoiner)

@implementation ComGoogleCommonBaseJoiner_3

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)capture$0
                               withId:(id)capture$1
                               withId:(id)capture$2 {
  ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(self, capture$0, capture$1, capture$2);
  return self;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(val$rest_))->size_ + 2;
}

- (id)getWithInt:(jint)index {
  switch (index) {
    case 0:
    return val$first_;
    case 1:
    return val$second_;
    default:
    return IOSObjectArray_Get(nil_chk(val$rest_), index - 2);
  }
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSObjectArray:withId:withId:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rest_", "[LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$first_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$second_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "LComGoogleCommonBaseJoiner;", "iterableWithId:withId:withNSObjectArray:", "Ljava/util/AbstractList<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseJoiner_3 = { "", "com.google.common.base", ptrTable, methods, fields, 7, 0x8018, 3, 3, 2, -1, 3, 4, -1 };
  return &_ComGoogleCommonBaseJoiner_3;
}

@end

void ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(ComGoogleCommonBaseJoiner_3 *self, IOSObjectArray *capture$0, id capture$1, id capture$2) {
  self->val$rest_ = capture$0;
  self->val$first_ = capture$1;
  self->val$second_ = capture$2;
  JavaUtilAbstractList_init(self);
}

ComGoogleCommonBaseJoiner_3 *new_ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(IOSObjectArray *capture$0, id capture$1, id capture$2) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseJoiner_3, initWithNSObjectArray_withId_withId_, capture$0, capture$1, capture$2)
}

ComGoogleCommonBaseJoiner_3 *create_ComGoogleCommonBaseJoiner_3_initWithNSObjectArray_withId_withId_(IOSObjectArray *capture$0, id capture$1, id capture$2) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseJoiner_3, initWithNSObjectArray_withId_withId_, capture$0, capture$1, capture$2)
}
