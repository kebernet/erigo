//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/Present.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Present.h"
#include "com/google/common/base/Supplier.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collections.h"
#include "java/util/Set.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBasePresent () {
 @public
  id reference_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonBasePresent, reference_, id)

inline jlong ComGoogleCommonBasePresent_get_serialVersionUID();
#define ComGoogleCommonBasePresent_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonBasePresent, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBasePresent__Annotations$0();

@implementation ComGoogleCommonBasePresent

- (instancetype)initWithId:(id)reference {
  ComGoogleCommonBasePresent_initWithId_(self, reference);
  return self;
}

- (jboolean)isPresent {
  return true;
}

- (id)get {
  return reference_;
}

- (id)or__WithId:(id)defaultValue {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(defaultValue, @"use Optional.orNull() instead of Optional.or(null)");
  return reference_;
}

- (ComGoogleCommonBaseOptional *)or__WithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)secondChoice {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(secondChoice);
  return self;
}

- (id)or__WithComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)supplier {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(supplier);
  return reference_;
}

- (id)orNull {
  return reference_;
}

- (id<JavaUtilSet>)asSet {
  return JavaUtilCollections_singletonWithId_(reference_);
}

- (ComGoogleCommonBaseOptional *)transformWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function {
  return new_ComGoogleCommonBasePresent_initWithId_(ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_([((id<ComGoogleCommonBaseFunction>) nil_chk(function)) applyWithId:reference_], @"the Function passed to Optional.transform() must not return null."));
}

- (jboolean)isEqual:(id)object {
  if ([object isKindOfClass:[ComGoogleCommonBasePresent class]]) {
    ComGoogleCommonBasePresent *other = (ComGoogleCommonBasePresent *) cast_chk(object, [ComGoogleCommonBasePresent class]);
    return [nil_chk(reference_) isEqual:((ComGoogleCommonBasePresent *) nil_chk(other))->reference_];
  }
  return false;
}

- (NSUInteger)hash {
  return (jint) 0x598df91c + ((jint) [nil_chk(reference_) hash]);
}

- (NSString *)description {
  return JreStrcat("$@C", @"Optional.of(", reference_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 0, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, 3, 5, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 7, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 9, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0x1, 13, 0, -1, -1, -1, 14 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(isPresent);
  methods[2].selector = @selector(get);
  methods[3].selector = @selector(or__WithId:);
  methods[4].selector = @selector(or__WithComGoogleCommonBaseOptional:);
  methods[5].selector = @selector(or__WithComGoogleCommonBaseSupplier:);
  methods[6].selector = @selector(orNull);
  methods[7].selector = @selector(asSet);
  methods[8].selector = @selector(transformWithComGoogleCommonBaseFunction:);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reference_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonBasePresent_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "()TT;", "or", "(TT;)TT;", "LComGoogleCommonBaseOptional;", "(Lcom/google/common/base/Optional<+TT;>;)Lcom/google/common/base/Optional<TT;>;", "LComGoogleCommonBaseSupplier;", "(Lcom/google/common/base/Supplier<+TT;>;)TT;", "()Ljava/util/Set<TT;>;", "transform", "LComGoogleCommonBaseFunction;", "<V:Ljava/lang/Object;>(Lcom/google/common/base/Function<-TT;TV;>;)Lcom/google/common/base/Optional<TV;>;", "equals", (void *)&ComGoogleCommonBasePresent__Annotations$0, "hashCode", "toString", "TT;", "<T:Ljava/lang/Object;>Lcom/google/common/base/Optional<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonBasePresent = { "Present", "com.google.common.base", ptrTable, methods, fields, 7, 0x10, 12, 2, -1, -1, -1, 18, -1 };
  return &_ComGoogleCommonBasePresent;
}

@end

void ComGoogleCommonBasePresent_initWithId_(ComGoogleCommonBasePresent *self, id reference) {
  ComGoogleCommonBaseOptional_init(self);
  self->reference_ = reference;
}

ComGoogleCommonBasePresent *new_ComGoogleCommonBasePresent_initWithId_(id reference) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBasePresent, initWithId_, reference)
}

ComGoogleCommonBasePresent *create_ComGoogleCommonBasePresent_initWithId_(id reference) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBasePresent, initWithId_, reference)
}

IOSObjectArray *ComGoogleCommonBasePresent__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBasePresent)
