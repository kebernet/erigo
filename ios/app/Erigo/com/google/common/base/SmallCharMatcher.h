//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/SmallCharMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonBaseSmallCharMatcher")
#ifdef RESTRICT_ComGoogleCommonBaseSmallCharMatcher
#define INCLUDE_ALL_ComGoogleCommonBaseSmallCharMatcher 0
#else
#define INCLUDE_ALL_ComGoogleCommonBaseSmallCharMatcher 1
#endif
#undef RESTRICT_ComGoogleCommonBaseSmallCharMatcher

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonBaseSmallCharMatcher_) && (INCLUDE_ALL_ComGoogleCommonBaseSmallCharMatcher || defined(INCLUDE_ComGoogleCommonBaseSmallCharMatcher))
#define ComGoogleCommonBaseSmallCharMatcher_

#define RESTRICT_ComGoogleCommonBaseCharMatcher 1
#define INCLUDE_ComGoogleCommonBaseCharMatcher_NamedFastMatcher 1
#include "com/google/common/base/CharMatcher.h"

@class ComGoogleCommonBaseCharMatcher;
@class JavaUtilBitSet;

@interface ComGoogleCommonBaseSmallCharMatcher : ComGoogleCommonBaseCharMatcher_NamedFastMatcher

#pragma mark Public

- (jboolean)matchesWithChar:(jchar)c;

#pragma mark Package-Private

+ (jint)chooseTableSizeWithInt:(jint)setSize;

+ (ComGoogleCommonBaseCharMatcher *)fromWithJavaUtilBitSet:(JavaUtilBitSet *)chars
                                              withNSString:(NSString *)description_;

- (void)setBitsWithJavaUtilBitSet:(JavaUtilBitSet *)table;

+ (jint)smearWithInt:(jint)hashCode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseSmallCharMatcher)

inline jint ComGoogleCommonBaseSmallCharMatcher_get_MAX_SIZE();
#define ComGoogleCommonBaseSmallCharMatcher_MAX_SIZE 1023
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonBaseSmallCharMatcher, MAX_SIZE, jint)

FOUNDATION_EXPORT jint ComGoogleCommonBaseSmallCharMatcher_smearWithInt_(jint hashCode);

FOUNDATION_EXPORT jint ComGoogleCommonBaseSmallCharMatcher_chooseTableSizeWithInt_(jint setSize);

FOUNDATION_EXPORT ComGoogleCommonBaseCharMatcher *ComGoogleCommonBaseSmallCharMatcher_fromWithJavaUtilBitSet_withNSString_(JavaUtilBitSet *chars, NSString *description_);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBaseSmallCharMatcher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonBaseSmallCharMatcher")
