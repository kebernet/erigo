//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/Strings.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Platform.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Strings.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBaseStrings ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonBaseStrings_init(ComGoogleCommonBaseStrings *self);

__attribute__((unused)) static ComGoogleCommonBaseStrings *new_ComGoogleCommonBaseStrings_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseStrings *create_ComGoogleCommonBaseStrings_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$3();

@implementation ComGoogleCommonBaseStrings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseStrings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)nullToEmptyWithNSString:(NSString *)string {
  return ComGoogleCommonBaseStrings_nullToEmptyWithNSString_(string);
}

+ (NSString *)emptyToNullWithNSString:(NSString *)string {
  return ComGoogleCommonBaseStrings_emptyToNullWithNSString_(string);
}

+ (jboolean)isNullOrEmptyWithNSString:(NSString *)string {
  return ComGoogleCommonBaseStrings_isNullOrEmptyWithNSString_(string);
}

+ (NSString *)padStartWithNSString:(NSString *)string
                           withInt:(jint)minLength
                          withChar:(jchar)padChar {
  return ComGoogleCommonBaseStrings_padStartWithNSString_withInt_withChar_(string, minLength, padChar);
}

+ (NSString *)padEndWithNSString:(NSString *)string
                         withInt:(jint)minLength
                        withChar:(jchar)padChar {
  return ComGoogleCommonBaseStrings_padEndWithNSString_withInt_withChar_(string, minLength, padChar);
}

+ (NSString *)repeatWithNSString:(NSString *)string
                         withInt:(jint)count {
  return ComGoogleCommonBaseStrings_repeatWithNSString_withInt_(string, count);
}

+ (NSString *)commonPrefixWithJavaLangCharSequence:(id<JavaLangCharSequence>)a
                          withJavaLangCharSequence:(id<JavaLangCharSequence>)b {
  return ComGoogleCommonBaseStrings_commonPrefixWithJavaLangCharSequence_withJavaLangCharSequence_(a, b);
}

+ (NSString *)commonSuffixWithJavaLangCharSequence:(id<JavaLangCharSequence>)a
                          withJavaLangCharSequence:(id<JavaLangCharSequence>)b {
  return ComGoogleCommonBaseStrings_commonSuffixWithJavaLangCharSequence_withJavaLangCharSequence_(a, b);
}

+ (jboolean)validSurrogatePairAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)string
                                                 withInt:(jint)index {
  return ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(string, index);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, 2 },
    { NULL, "LNSString;", 0x9, 3, 1, -1, -1, 4, 5 },
    { NULL, "Z", 0x9, 6, 1, -1, -1, -1, 7 },
    { NULL, "LNSString;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 10, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 15, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nullToEmptyWithNSString:);
  methods[2].selector = @selector(emptyToNullWithNSString:);
  methods[3].selector = @selector(isNullOrEmptyWithNSString:);
  methods[4].selector = @selector(padStartWithNSString:withInt:withChar:);
  methods[5].selector = @selector(padEndWithNSString:withInt:withChar:);
  methods[6].selector = @selector(repeatWithNSString:withInt:);
  methods[7].selector = @selector(commonPrefixWithJavaLangCharSequence:withJavaLangCharSequence:);
  methods[8].selector = @selector(commonSuffixWithJavaLangCharSequence:withJavaLangCharSequence:);
  methods[9].selector = @selector(validSurrogatePairAtWithJavaLangCharSequence:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nullToEmpty", "LNSString;", (void *)&ComGoogleCommonBaseStrings__Annotations$0, "emptyToNull", (void *)&ComGoogleCommonBaseStrings__Annotations$1, (void *)&ComGoogleCommonBaseStrings__Annotations$2, "isNullOrEmpty", (void *)&ComGoogleCommonBaseStrings__Annotations$3, "padStart", "LNSString;IC", "padEnd", "repeat", "LNSString;I", "commonPrefix", "LJavaLangCharSequence;LJavaLangCharSequence;", "commonSuffix", "validSurrogatePairAt", "LJavaLangCharSequence;I" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseStrings = { "Strings", "com.google.common.base", ptrTable, methods, NULL, 7, 0x11, 10, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseStrings;
}

@end

void ComGoogleCommonBaseStrings_init(ComGoogleCommonBaseStrings *self) {
  NSObject_init(self);
}

ComGoogleCommonBaseStrings *new_ComGoogleCommonBaseStrings_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseStrings, init)
}

ComGoogleCommonBaseStrings *create_ComGoogleCommonBaseStrings_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseStrings, init)
}

NSString *ComGoogleCommonBaseStrings_nullToEmptyWithNSString_(NSString *string) {
  ComGoogleCommonBaseStrings_initialize();
  return (string == nil) ? @"" : string;
}

NSString *ComGoogleCommonBaseStrings_emptyToNullWithNSString_(NSString *string) {
  ComGoogleCommonBaseStrings_initialize();
  return ComGoogleCommonBaseStrings_isNullOrEmptyWithNSString_(string) ? nil : string;
}

jboolean ComGoogleCommonBaseStrings_isNullOrEmptyWithNSString_(NSString *string) {
  ComGoogleCommonBaseStrings_initialize();
  return ComGoogleCommonBasePlatform_stringIsNullOrEmptyWithNSString_(string);
}

NSString *ComGoogleCommonBaseStrings_padStartWithNSString_withInt_withChar_(NSString *string, jint minLength, jchar padChar) {
  ComGoogleCommonBaseStrings_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
  if ([((NSString *) nil_chk(string)) java_length] >= minLength) {
    return string;
  }
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithInt_(minLength);
  for (jint i = [string java_length]; i < minLength; i++) {
    (void) [sb appendWithChar:padChar];
  }
  (void) [sb appendWithNSString:string];
  return [sb description];
}

NSString *ComGoogleCommonBaseStrings_padEndWithNSString_withInt_withChar_(NSString *string, jint minLength, jchar padChar) {
  ComGoogleCommonBaseStrings_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
  if ([((NSString *) nil_chk(string)) java_length] >= minLength) {
    return string;
  }
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithInt_(minLength);
  (void) [sb appendWithNSString:string];
  for (jint i = [string java_length]; i < minLength; i++) {
    (void) [sb appendWithChar:padChar];
  }
  return [sb description];
}

NSString *ComGoogleCommonBaseStrings_repeatWithNSString_withInt_(NSString *string, jint count) {
  ComGoogleCommonBaseStrings_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
  if (count <= 1) {
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(count >= 0, @"invalid count: %s", count);
    return (count == 0) ? @"" : string;
  }
  jint len = [((NSString *) nil_chk(string)) java_length];
  jlong longSize = (jlong) len * (jlong) count;
  jint size = (jint) longSize;
  if (size != longSize) {
    @throw new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(JreStrcat("$J", @"Required array size too large: ", longSize));
  }
  IOSCharArray *array = [IOSCharArray newArrayWithLength:size];
  [string java_getChars:0 sourceEnd:len destination:array destinationBegin:0];
  jint n;
  for (n = len; n < size - n; JreLShiftAssignInt(&n, 1)) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, array, n, n);
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, array, n, size - n);
  return [NSString java_stringWithCharacters:array];
}

NSString *ComGoogleCommonBaseStrings_commonPrefixWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> a, id<JavaLangCharSequence> b) {
  ComGoogleCommonBaseStrings_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(a);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(b);
  jint maxPrefixLength = JavaLangMath_minWithInt_withInt_([((id<JavaLangCharSequence>) nil_chk(a)) java_length], [((id<JavaLangCharSequence>) nil_chk(b)) java_length]);
  jint p = 0;
  while (p < maxPrefixLength && [a charAtWithInt:p] == [b charAtWithInt:p]) {
    p++;
  }
  if (ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(a, p - 1) || ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(b, p - 1)) {
    p--;
  }
  return [((id<JavaLangCharSequence>) nil_chk([a subSequenceFrom:0 to:p])) description];
}

NSString *ComGoogleCommonBaseStrings_commonSuffixWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> a, id<JavaLangCharSequence> b) {
  ComGoogleCommonBaseStrings_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(a);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(b);
  jint maxSuffixLength = JavaLangMath_minWithInt_withInt_([((id<JavaLangCharSequence>) nil_chk(a)) java_length], [((id<JavaLangCharSequence>) nil_chk(b)) java_length]);
  jint s = 0;
  while (s < maxSuffixLength && [a charAtWithInt:[a java_length] - s - 1] == [b charAtWithInt:[b java_length] - s - 1]) {
    s++;
  }
  if (ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(a, [a java_length] - s - 1) || ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(b, [b java_length] - s - 1)) {
    s--;
  }
  return [((id<JavaLangCharSequence>) nil_chk([a subSequenceFrom:[a java_length] - s to:[a java_length]])) description];
}

jboolean ComGoogleCommonBaseStrings_validSurrogatePairAtWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> string, jint index) {
  ComGoogleCommonBaseStrings_initialize();
  return index >= 0 && index <= ([((id<JavaLangCharSequence>) nil_chk(string)) java_length] - 2) && JavaLangCharacter_isHighSurrogateWithChar_([string charAtWithInt:index]) && JavaLangCharacter_isLowSurrogateWithChar_([string charAtWithInt:index + 1]);
}

IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseStrings__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseStrings)
