//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/Throwables.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Throwables.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Error.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/ThreadDeath.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/util/AbstractList.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonBaseThrowables ()

- (instancetype)init;

+ (id<JavaUtilList>)jlaStackTraceWithNSException:(NSException *)t;
#define jlaStackTraceWithJavaLangThrowable jlaStackTraceWithNSException

+ (id)invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method
                                                          withId:(id)receiver
                                               withNSObjectArray:(IOSObjectArray *)params;

+ (id)getJLA;

+ (JavaLangReflectMethod *)getGetMethod;

+ (JavaLangReflectMethod *)getSizeMethod;

+ (JavaLangReflectMethod *)getJlaMethodWithNSString:(NSString *)name
                                  withIOSClassArray:(IOSObjectArray *)parameterTypes;

@end

inline NSString *ComGoogleCommonBaseThrowables_get_JAVA_LANG_ACCESS_CLASSNAME();
static NSString *ComGoogleCommonBaseThrowables_JAVA_LANG_ACCESS_CLASSNAME = @"sun.misc.JavaLangAccess";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseThrowables, JAVA_LANG_ACCESS_CLASSNAME, NSString *)

inline id ComGoogleCommonBaseThrowables_get_jla();
static id ComGoogleCommonBaseThrowables_jla;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseThrowables, jla, id)

inline JavaLangReflectMethod *ComGoogleCommonBaseThrowables_get_getStackTraceElementMethod();
static JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getStackTraceElementMethod;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseThrowables, getStackTraceElementMethod, JavaLangReflectMethod *)

inline JavaLangReflectMethod *ComGoogleCommonBaseThrowables_get_getStackTraceDepthMethod();
static JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getStackTraceDepthMethod;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseThrowables, getStackTraceDepthMethod, JavaLangReflectMethod *)

__attribute__((unused)) static void ComGoogleCommonBaseThrowables_init(ComGoogleCommonBaseThrowables *self);

__attribute__((unused)) static ComGoogleCommonBaseThrowables *new_ComGoogleCommonBaseThrowables_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseThrowables *create_ComGoogleCommonBaseThrowables_init();

__attribute__((unused)) static id<JavaUtilList> ComGoogleCommonBaseThrowables_jlaStackTraceWithNSException_(NSException *t);

__attribute__((unused)) static id ComGoogleCommonBaseThrowables_invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(JavaLangReflectMethod *method, id receiver, IOSObjectArray *params);

__attribute__((unused)) static id ComGoogleCommonBaseThrowables_getJLA();

__attribute__((unused)) static JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getGetMethod();

__attribute__((unused)) static JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getSizeMethod();

__attribute__((unused)) static JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getJlaMethodWithNSString_withIOSClassArray_(NSString *name, IOSObjectArray *parameterTypes);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$4();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$5();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$6();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$7();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$8();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$9();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$10();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$11();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$12();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$13();

@interface ComGoogleCommonBaseThrowables_1 : JavaUtilAbstractList {
 @public
  NSException *val$t_;
}

- (instancetype)initWithNSException:(NSException *)capture$0;
#define initWithJavaLangThrowable initWithNSException

- (JavaLangStackTraceElement *)getWithInt:(jint)n;

- (jint)size;

- (JavaLangStackTraceElement *)removeWithInt:(jint)arg0;

- (JavaLangStackTraceElement *)setWithInt:(jint)arg0
                                   withId:(JavaLangStackTraceElement *)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseThrowables_1)

__attribute__((unused)) static void ComGoogleCommonBaseThrowables_1_initWithNSException_(ComGoogleCommonBaseThrowables_1 *self, NSException *capture$0);

__attribute__((unused)) static ComGoogleCommonBaseThrowables_1 *new_ComGoogleCommonBaseThrowables_1_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseThrowables_1 *create_ComGoogleCommonBaseThrowables_1_initWithNSException_(NSException *capture$0);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonBaseThrowables)

NSString *ComGoogleCommonBaseThrowables_SHARED_SECRETS_CLASSNAME = @"sun.misc.SharedSecrets";

@implementation ComGoogleCommonBaseThrowables

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonBaseThrowables_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)throwIfInstanceOfWithNSException:(NSException *)throwable
                            withIOSClass:(IOSClass *)declaredType {
  ComGoogleCommonBaseThrowables_throwIfInstanceOfWithNSException_withIOSClass_(throwable, declaredType);
}

+ (void)propagateIfInstanceOfWithNSException:(NSException *)throwable
                                withIOSClass:(IOSClass *)declaredType {
  ComGoogleCommonBaseThrowables_propagateIfInstanceOfWithNSException_withIOSClass_(throwable, declaredType);
}

+ (void)throwIfUncheckedWithNSException:(NSException *)throwable {
  ComGoogleCommonBaseThrowables_throwIfUncheckedWithNSException_(throwable);
}

+ (void)propagateIfPossibleWithNSException:(NSException *)throwable {
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_(throwable);
}

+ (void)propagateIfPossibleWithNSException:(NSException *)throwable
                              withIOSClass:(IOSClass *)declaredType {
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(throwable, declaredType);
}

+ (void)propagateIfPossibleWithNSException:(NSException *)throwable
                              withIOSClass:(IOSClass *)declaredType1
                              withIOSClass:(IOSClass *)declaredType2 {
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_withIOSClass_(throwable, declaredType1, declaredType2);
}

+ (JavaLangRuntimeException *)propagateWithNSException:(NSException *)throwable {
  return ComGoogleCommonBaseThrowables_propagateWithNSException_(throwable);
}

+ (NSException *)getRootCauseWithNSException:(NSException *)throwable {
  return ComGoogleCommonBaseThrowables_getRootCauseWithNSException_(throwable);
}

+ (id<JavaUtilList>)getCausalChainWithNSException:(NSException *)throwable {
  return ComGoogleCommonBaseThrowables_getCausalChainWithNSException_(throwable);
}

+ (NSException *)getCauseAsWithNSException:(NSException *)throwable
                              withIOSClass:(IOSClass *)expectedCauseType {
  return ComGoogleCommonBaseThrowables_getCauseAsWithNSException_withIOSClass_(throwable, expectedCauseType);
}

+ (NSString *)getStackTraceAsStringWithNSException:(NSException *)throwable {
  return ComGoogleCommonBaseThrowables_getStackTraceAsStringWithNSException_(throwable);
}

+ (id<JavaUtilList>)lazyStackTraceWithNSException:(NSException *)throwable {
  return ComGoogleCommonBaseThrowables_lazyStackTraceWithNSException_(throwable);
}

+ (jboolean)lazyStackTraceIsLazy {
  return ComGoogleCommonBaseThrowables_lazyStackTraceIsLazy();
}

+ (id<JavaUtilList>)jlaStackTraceWithNSException:(NSException *)t {
  return ComGoogleCommonBaseThrowables_jlaStackTraceWithNSException_(t);
}

+ (id)invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method
                                                          withId:(id)receiver
                                               withNSObjectArray:(IOSObjectArray *)params {
  return ComGoogleCommonBaseThrowables_invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(method, receiver, params);
}

+ (id)getJLA {
  return ComGoogleCommonBaseThrowables_getJLA();
}

+ (JavaLangReflectMethod *)getGetMethod {
  return ComGoogleCommonBaseThrowables_getGetMethod();
}

+ (JavaLangReflectMethod *)getSizeMethod {
  return ComGoogleCommonBaseThrowables_getSizeMethod();
}

+ (JavaLangReflectMethod *)getJlaMethodWithNSString:(NSString *)name
                                  withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return ComGoogleCommonBaseThrowables_getJlaMethodWithNSString_withIOSClassArray_(name, parameterTypes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, 3, -1, -1 },
    { NULL, "V", 0x9, 4, 1, 2, 3, 5, 6 },
    { NULL, "V", 0x9, 7, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 2, -1, -1, 9, 10 },
    { NULL, "V", 0x9, 8, 1, 2, 3, -1, 11 },
    { NULL, "V", 0x9, 8, 12, 13, 14, -1, 15 },
    { NULL, "LJavaLangRuntimeException;", 0x9, 16, 2, -1, -1, 17, -1 },
    { NULL, "LNSException;", 0x9, 18, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 19, 2, -1, 20, -1, -1 },
    { NULL, "LNSException;", 0x9, 21, 1, -1, 22, -1, -1 },
    { NULL, "LNSString;", 0x9, 23, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 24, 2, -1, 25, -1, -1 },
    { NULL, "Z", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0xa, 26, 2, -1, 25, -1, -1 },
    { NULL, "LNSObject;", 0x8a, 27, 28, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, -1, -1, -1, -1, 29, -1 },
    { NULL, "LJavaLangReflectMethod;", 0xa, -1, -1, -1, -1, 30, -1 },
    { NULL, "LJavaLangReflectMethod;", 0xa, -1, -1, -1, -1, 31, -1 },
    { NULL, "LJavaLangReflectMethod;", 0x8a, 32, 33, 34, 35, 36, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(throwIfInstanceOfWithNSException:withIOSClass:);
  methods[2].selector = @selector(propagateIfInstanceOfWithNSException:withIOSClass:);
  methods[3].selector = @selector(throwIfUncheckedWithNSException:);
  methods[4].selector = @selector(propagateIfPossibleWithNSException:);
  methods[5].selector = @selector(propagateIfPossibleWithNSException:withIOSClass:);
  methods[6].selector = @selector(propagateIfPossibleWithNSException:withIOSClass:withIOSClass:);
  methods[7].selector = @selector(propagateWithNSException:);
  methods[8].selector = @selector(getRootCauseWithNSException:);
  methods[9].selector = @selector(getCausalChainWithNSException:);
  methods[10].selector = @selector(getCauseAsWithNSException:withIOSClass:);
  methods[11].selector = @selector(getStackTraceAsStringWithNSException:);
  methods[12].selector = @selector(lazyStackTraceWithNSException:);
  methods[13].selector = @selector(lazyStackTraceIsLazy);
  methods[14].selector = @selector(jlaStackTraceWithNSException:);
  methods[15].selector = @selector(invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod:withId:withNSObjectArray:);
  methods[16].selector = @selector(getJLA);
  methods[17].selector = @selector(getGetMethod);
  methods[18].selector = @selector(getSizeMethod);
  methods[19].selector = @selector(getJlaMethodWithNSString:withIOSClassArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "JAVA_LANG_ACCESS_CLASSNAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "SHARED_SECRETS_CLASSNAME", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 38, -1, -1 },
    { "jla", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, 40 },
    { "getStackTraceElementMethod", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x1a, -1, 41, -1, 42 },
    { "getStackTraceDepthMethod", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x1a, -1, 43, -1, 44 },
  };
  static const void *ptrTable[] = { "throwIfInstanceOf", "LNSException;LIOSClass;", "LNSException;", "<X:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TX;>;)V^TX;", "propagateIfInstanceOf", (void *)&ComGoogleCommonBaseThrowables__Annotations$0, (void *)&ComGoogleCommonBaseThrowables__Annotations$1, "throwIfUnchecked", "propagateIfPossible", (void *)&ComGoogleCommonBaseThrowables__Annotations$2, (void *)&ComGoogleCommonBaseThrowables__Annotations$3, (void *)&ComGoogleCommonBaseThrowables__Annotations$4, "LNSException;LIOSClass;LIOSClass;", "LNSException;LNSException;", "<X1:Ljava/lang/Throwable;X2:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TX1;>;Ljava/lang/Class<TX2;>;)V^TX1;^TX2;", (void *)&ComGoogleCommonBaseThrowables__Annotations$5, "propagate", (void *)&ComGoogleCommonBaseThrowables__Annotations$6, "getRootCause", "getCausalChain", "(Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;", "getCauseAs", "<X:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TX;>;)TX;", "getStackTraceAsString", "lazyStackTrace", "(Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/StackTraceElement;>;", "jlaStackTrace", "invokeAccessibleNonThrowingMethod", "LJavaLangReflectMethod;LNSObject;[LNSObject;", (void *)&ComGoogleCommonBaseThrowables__Annotations$7, (void *)&ComGoogleCommonBaseThrowables__Annotations$8, (void *)&ComGoogleCommonBaseThrowables__Annotations$9, "getJlaMethod", "LNSString;[LIOSClass;", "LJavaLangThreadDeath;", "(Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;", (void *)&ComGoogleCommonBaseThrowables__Annotations$10, &ComGoogleCommonBaseThrowables_JAVA_LANG_ACCESS_CLASSNAME, &ComGoogleCommonBaseThrowables_SHARED_SECRETS_CLASSNAME, &ComGoogleCommonBaseThrowables_jla, (void *)&ComGoogleCommonBaseThrowables__Annotations$11, &ComGoogleCommonBaseThrowables_getStackTraceElementMethod, (void *)&ComGoogleCommonBaseThrowables__Annotations$12, &ComGoogleCommonBaseThrowables_getStackTraceDepthMethod, (void *)&ComGoogleCommonBaseThrowables__Annotations$13 };
  static const J2ObjcClassInfo _ComGoogleCommonBaseThrowables = { "Throwables", "com.google.common.base", ptrTable, methods, fields, 7, 0x11, 20, 5, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseThrowables;
}

+ (void)initialize {
  if (self == [ComGoogleCommonBaseThrowables class]) {
    ComGoogleCommonBaseThrowables_jla = ComGoogleCommonBaseThrowables_getJLA();
    ComGoogleCommonBaseThrowables_getStackTraceElementMethod = (ComGoogleCommonBaseThrowables_jla == nil) ? nil : ComGoogleCommonBaseThrowables_getGetMethod();
    ComGoogleCommonBaseThrowables_getStackTraceDepthMethod = (ComGoogleCommonBaseThrowables_jla == nil) ? nil : ComGoogleCommonBaseThrowables_getSizeMethod();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonBaseThrowables)
  }
}

@end

void ComGoogleCommonBaseThrowables_init(ComGoogleCommonBaseThrowables *self) {
  NSObject_init(self);
}

ComGoogleCommonBaseThrowables *new_ComGoogleCommonBaseThrowables_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseThrowables, init)
}

ComGoogleCommonBaseThrowables *create_ComGoogleCommonBaseThrowables_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseThrowables, init)
}

void ComGoogleCommonBaseThrowables_throwIfInstanceOfWithNSException_withIOSClass_(NSException *throwable, IOSClass *declaredType) {
  ComGoogleCommonBaseThrowables_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(throwable);
  if ([((IOSClass *) nil_chk(declaredType)) isInstance:throwable]) {
    @throw nil_chk([declaredType cast:throwable]);
  }
}

void ComGoogleCommonBaseThrowables_propagateIfInstanceOfWithNSException_withIOSClass_(NSException *throwable, IOSClass *declaredType) {
  ComGoogleCommonBaseThrowables_initialize();
  if (throwable != nil) {
    ComGoogleCommonBaseThrowables_throwIfInstanceOfWithNSException_withIOSClass_(throwable, declaredType);
  }
}

void ComGoogleCommonBaseThrowables_throwIfUncheckedWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(throwable);
  if ([throwable isKindOfClass:[JavaLangRuntimeException class]]) {
    @throw nil_chk((JavaLangRuntimeException *) cast_chk(throwable, [JavaLangRuntimeException class]));
  }
  if ([throwable isKindOfClass:[JavaLangError class]]) {
    @throw nil_chk((JavaLangError *) cast_chk(throwable, [JavaLangError class]));
  }
}

void ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  if (throwable != nil) {
    ComGoogleCommonBaseThrowables_throwIfUncheckedWithNSException_(throwable);
  }
}

void ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(NSException *throwable, IOSClass *declaredType) {
  ComGoogleCommonBaseThrowables_initialize();
  ComGoogleCommonBaseThrowables_propagateIfInstanceOfWithNSException_withIOSClass_(throwable, declaredType);
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_(throwable);
}

void ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_withIOSClass_(NSException *throwable, IOSClass *declaredType1, IOSClass *declaredType2) {
  ComGoogleCommonBaseThrowables_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(declaredType2);
  ComGoogleCommonBaseThrowables_propagateIfInstanceOfWithNSException_withIOSClass_(throwable, declaredType1);
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(throwable, declaredType2);
}

JavaLangRuntimeException *ComGoogleCommonBaseThrowables_propagateWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  ComGoogleCommonBaseThrowables_throwIfUncheckedWithNSException_(throwable);
  @throw new_JavaLangRuntimeException_initWithNSException_(throwable);
}

NSException *ComGoogleCommonBaseThrowables_getRootCauseWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  NSException *cause;
  while ((cause = [((NSException *) nil_chk(throwable)) getCause]) != nil) {
    throwable = cause;
  }
  return throwable;
}

id<JavaUtilList> ComGoogleCommonBaseThrowables_getCausalChainWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(throwable);
  id<JavaUtilList> causes = new_JavaUtilArrayList_initWithInt_(4);
  while (throwable != nil) {
    [causes addWithId:throwable];
    throwable = [throwable getCause];
  }
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(causes);
}

NSException *ComGoogleCommonBaseThrowables_getCauseAsWithNSException_withIOSClass_(NSException *throwable, IOSClass *expectedCauseType) {
  ComGoogleCommonBaseThrowables_initialize();
  @try {
    return [((IOSClass *) nil_chk(expectedCauseType)) cast:[((NSException *) nil_chk(throwable)) getCause]];
  }
  @catch (JavaLangClassCastException *e) {
    (void) [e initCauseWithNSException:throwable];
    @throw e;
  }
}

NSString *ComGoogleCommonBaseThrowables_getStackTraceAsStringWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  JavaIoStringWriter *stringWriter = new_JavaIoStringWriter_init();
  [((NSException *) nil_chk(throwable)) printStackTraceWithJavaIoPrintWriter:new_JavaIoPrintWriter_initWithJavaIoWriter_(stringWriter)];
  return [stringWriter description];
}

id<JavaUtilList> ComGoogleCommonBaseThrowables_lazyStackTraceWithNSException_(NSException *throwable) {
  ComGoogleCommonBaseThrowables_initialize();
  return ComGoogleCommonBaseThrowables_lazyStackTraceIsLazy() ? ComGoogleCommonBaseThrowables_jlaStackTraceWithNSException_(throwable) : JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_([((NSException *) nil_chk(throwable)) getStackTrace]));
}

jboolean ComGoogleCommonBaseThrowables_lazyStackTraceIsLazy() {
  ComGoogleCommonBaseThrowables_initialize();
  return (ComGoogleCommonBaseThrowables_getStackTraceElementMethod != nil) & (ComGoogleCommonBaseThrowables_getStackTraceDepthMethod != nil);
}

id<JavaUtilList> ComGoogleCommonBaseThrowables_jlaStackTraceWithNSException_(NSException *t) {
  ComGoogleCommonBaseThrowables_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(t);
  return new_ComGoogleCommonBaseThrowables_1_initWithNSException_(t);
}

id ComGoogleCommonBaseThrowables_invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(JavaLangReflectMethod *method, id receiver, IOSObjectArray *params) {
  ComGoogleCommonBaseThrowables_initialize();
  @try {
    return [((JavaLangReflectMethod *) nil_chk(method)) invokeWithId:receiver withNSObjectArray:params];
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw nil_chk(ComGoogleCommonBaseThrowables_propagateWithNSException_([e getCause]));
  }
}

id ComGoogleCommonBaseThrowables_getJLA() {
  ComGoogleCommonBaseThrowables_initialize();
  @try {
    IOSClass *sharedSecrets = IOSClass_forName_initialize_classLoader_(ComGoogleCommonBaseThrowables_SHARED_SECRETS_CLASSNAME, false, nil);
    JavaLangReflectMethod *langAccess = [((IOSClass *) nil_chk(sharedSecrets)) getMethod:@"getJavaLangAccess" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
    return [((JavaLangReflectMethod *) nil_chk(langAccess)) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
  }
  @catch (JavaLangThreadDeath *death) {
    @throw death;
  }
  @catch (NSException *t) {
    return nil;
  }
}

JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getGetMethod() {
  ComGoogleCommonBaseThrowables_initialize();
  return ComGoogleCommonBaseThrowables_getJlaMethodWithNSString_withIOSClassArray_(@"getStackTraceElement", [IOSObjectArray newArrayWithObjects:(id[]){ NSException_class_(), [IOSClass intClass] } count:2 type:IOSClass_class_()]);
}

JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getSizeMethod() {
  ComGoogleCommonBaseThrowables_initialize();
  return ComGoogleCommonBaseThrowables_getJlaMethodWithNSString_withIOSClassArray_(@"getStackTraceDepth", [IOSObjectArray newArrayWithObjects:(id[]){ NSException_class_() } count:1 type:IOSClass_class_()]);
}

JavaLangReflectMethod *ComGoogleCommonBaseThrowables_getJlaMethodWithNSString_withIOSClassArray_(NSString *name, IOSObjectArray *parameterTypes) {
  ComGoogleCommonBaseThrowables_initialize();
  @try {
    return [((IOSClass *) nil_chk(IOSClass_forName_initialize_classLoader_(ComGoogleCommonBaseThrowables_JAVA_LANG_ACCESS_CLASSNAME, false, nil))) getMethod:name parameterTypes:parameterTypes];
  }
  @catch (JavaLangThreadDeath *death) {
    @throw death;
  }
  @catch (NSException *t) {
    return nil;
  }
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$7() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$8() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$9() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$10() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$11() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$12() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseThrowables__Annotations$13() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseThrowables)

@implementation ComGoogleCommonBaseThrowables_1

- (instancetype)initWithNSException:(NSException *)capture$0 {
  ComGoogleCommonBaseThrowables_1_initWithNSException_(self, capture$0);
  return self;
}

- (JavaLangStackTraceElement *)getWithInt:(jint)n {
  return (JavaLangStackTraceElement *) cast_chk(ComGoogleCommonBaseThrowables_invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(JreLoadStatic(ComGoogleCommonBaseThrowables, getStackTraceElementMethod), JreLoadStatic(ComGoogleCommonBaseThrowables, jla), [IOSObjectArray newArrayWithObjects:(id[]){ val$t_, JavaLangInteger_valueOfWithInt_(n) } count:2 type:NSObject_class_()]), [JavaLangStackTraceElement class]);
}

- (jint)size {
  return [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(ComGoogleCommonBaseThrowables_invokeAccessibleNonThrowingMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(JreLoadStatic(ComGoogleCommonBaseThrowables, getStackTraceDepthMethod), JreLoadStatic(ComGoogleCommonBaseThrowables, jla), [IOSObjectArray newArrayWithObjects:(id[]){ val$t_ } count:1 type:NSObject_class_()]), [JavaLangInteger class]))) intValue];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStackTraceElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:);
  methods[1].selector = @selector(getWithInt:);
  methods[2].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$t_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "LComGoogleCommonBaseThrowables;", "jlaStackTraceWithNSException:", "Ljava/util/AbstractList<Ljava/lang/StackTraceElement;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonBaseThrowables_1 = { "", "com.google.common.base", ptrTable, methods, fields, 7, 0x8018, 3, 1, 2, -1, 3, 4, -1 };
  return &_ComGoogleCommonBaseThrowables_1;
}

@end

void ComGoogleCommonBaseThrowables_1_initWithNSException_(ComGoogleCommonBaseThrowables_1 *self, NSException *capture$0) {
  self->val$t_ = capture$0;
  JavaUtilAbstractList_init(self);
}

ComGoogleCommonBaseThrowables_1 *new_ComGoogleCommonBaseThrowables_1_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseThrowables_1, initWithNSException_, capture$0)
}

ComGoogleCommonBaseThrowables_1 *create_ComGoogleCommonBaseThrowables_1_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseThrowables_1, initWithNSException_, capture$0)
}
