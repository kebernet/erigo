//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/base/internal/Finalizer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/internal/Finalizer.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/ref/PhantomReference.h"
#include "java/lang/ref/Reference.h"
#include "java/lang/ref/ReferenceQueue.h"
#include "java/lang/ref/WeakReference.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonBaseInternalFinalizer () {
 @public
  JavaLangRefWeakReference *finalizableReferenceClassReference_;
  JavaLangRefPhantomReference *frqReference_;
  JavaLangRefReferenceQueue *queue_;
}

- (instancetype)initWithIOSClass:(IOSClass *)finalizableReferenceClass
   withJavaLangRefReferenceQueue:(JavaLangRefReferenceQueue *)queue
 withJavaLangRefPhantomReference:(JavaLangRefPhantomReference *)frqReference;

- (jboolean)cleanUpWithJavaLangRefReference:(JavaLangRefReference *)reference;

- (JavaLangReflectMethod *)getFinalizeReferentMethod;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonBaseInternalFinalizer, finalizableReferenceClassReference_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(ComGoogleCommonBaseInternalFinalizer, frqReference_, JavaLangRefPhantomReference *)
J2OBJC_FIELD_SETTER(ComGoogleCommonBaseInternalFinalizer, queue_, JavaLangRefReferenceQueue *)

inline JavaUtilLoggingLogger *ComGoogleCommonBaseInternalFinalizer_get_logger();
static JavaUtilLoggingLogger *ComGoogleCommonBaseInternalFinalizer_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseInternalFinalizer, logger, JavaUtilLoggingLogger *)

inline NSString *ComGoogleCommonBaseInternalFinalizer_get_FINALIZABLE_REFERENCE();
static NSString *ComGoogleCommonBaseInternalFinalizer_FINALIZABLE_REFERENCE = @"com.google.common.base.FinalizableReference";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseInternalFinalizer, FINALIZABLE_REFERENCE, NSString *)

inline JavaLangReflectField *ComGoogleCommonBaseInternalFinalizer_get_inheritableThreadLocals();
static JavaLangReflectField *ComGoogleCommonBaseInternalFinalizer_inheritableThreadLocals;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseInternalFinalizer, inheritableThreadLocals, JavaLangReflectField *)

__attribute__((unused)) static void ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(ComGoogleCommonBaseInternalFinalizer *self, IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference);

__attribute__((unused)) static ComGoogleCommonBaseInternalFinalizer *new_ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonBaseInternalFinalizer *create_ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference);

__attribute__((unused)) static jboolean ComGoogleCommonBaseInternalFinalizer_cleanUpWithJavaLangRefReference_(ComGoogleCommonBaseInternalFinalizer *self, JavaLangRefReference *reference);

__attribute__((unused)) static JavaLangReflectMethod *ComGoogleCommonBaseInternalFinalizer_getFinalizeReferentMethod(ComGoogleCommonBaseInternalFinalizer *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseInternalFinalizer__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonBaseInternalFinalizer__Annotations$1();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonBaseInternalFinalizer)

@implementation ComGoogleCommonBaseInternalFinalizer

+ (void)startFinalizerWithIOSClass:(IOSClass *)finalizableReferenceClass
     withJavaLangRefReferenceQueue:(JavaLangRefReferenceQueue *)queue
   withJavaLangRefPhantomReference:(JavaLangRefPhantomReference *)frqReference {
  ComGoogleCommonBaseInternalFinalizer_startFinalizerWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(finalizableReferenceClass, queue, frqReference);
}

- (instancetype)initWithIOSClass:(IOSClass *)finalizableReferenceClass
   withJavaLangRefReferenceQueue:(JavaLangRefReferenceQueue *)queue
 withJavaLangRefPhantomReference:(JavaLangRefPhantomReference *)frqReference {
  ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(self, finalizableReferenceClass, queue, frqReference);
  return self;
}

- (void)run {
  while (true) {
    @try {
      if (!ComGoogleCommonBaseInternalFinalizer_cleanUpWithJavaLangRefReference_(self, [((JavaLangRefReferenceQueue *) nil_chk(queue_)) remove])) {
        break;
      }
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
}

- (jboolean)cleanUpWithJavaLangRefReference:(JavaLangRefReference *)reference {
  return ComGoogleCommonBaseInternalFinalizer_cleanUpWithJavaLangRefReference_(self, reference);
}

- (JavaLangReflectMethod *)getFinalizeReferentMethod {
  return ComGoogleCommonBaseInternalFinalizer_getFinalizeReferentMethod(self);
}

+ (JavaLangReflectField *)getInheritableThreadLocalsField {
  return ComGoogleCommonBaseInternalFinalizer_getInheritableThreadLocalsField();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaLangReflectMethod;", 0x2, -1, -1, -1, -1, 6, -1 },
    { NULL, "LJavaLangReflectField;", 0x9, -1, -1, -1, -1, 7, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(startFinalizerWithIOSClass:withJavaLangRefReferenceQueue:withJavaLangRefPhantomReference:);
  methods[1].selector = @selector(initWithIOSClass:withJavaLangRefReferenceQueue:withJavaLangRefPhantomReference:);
  methods[2].selector = @selector(run);
  methods[3].selector = @selector(cleanUpWithJavaLangRefReference:);
  methods[4].selector = @selector(getFinalizeReferentMethod);
  methods[5].selector = @selector(getInheritableThreadLocalsField);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "FINALIZABLE_REFERENCE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "finalizableReferenceClassReference_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "frqReference_", "LJavaLangRefPhantomReference;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "queue_", "LJavaLangRefReferenceQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "inheritableThreadLocals", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "startFinalizer", "LIOSClass;LJavaLangRefReferenceQueue;LJavaLangRefPhantomReference;", "(Ljava/lang/Class<*>;Ljava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;Ljava/lang/ref/PhantomReference<Ljava/lang/Object;>;)V", "cleanUp", "LJavaLangRefReference;", "(Ljava/lang/ref/Reference<*>;)Z", (void *)&ComGoogleCommonBaseInternalFinalizer__Annotations$0, (void *)&ComGoogleCommonBaseInternalFinalizer__Annotations$1, &ComGoogleCommonBaseInternalFinalizer_logger, &ComGoogleCommonBaseInternalFinalizer_FINALIZABLE_REFERENCE, "Ljava/lang/ref/WeakReference<Ljava/lang/Class<*>;>;", "Ljava/lang/ref/PhantomReference<Ljava/lang/Object;>;", "Ljava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;", &ComGoogleCommonBaseInternalFinalizer_inheritableThreadLocals };
  static const J2ObjcClassInfo _ComGoogleCommonBaseInternalFinalizer = { "Finalizer", "com.google.common.base.internal", ptrTable, methods, fields, 7, 0x1, 6, 6, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonBaseInternalFinalizer;
}

+ (void)initialize {
  if (self == [ComGoogleCommonBaseInternalFinalizer class]) {
    ComGoogleCommonBaseInternalFinalizer_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([ComGoogleCommonBaseInternalFinalizer_class_() getName]);
    ComGoogleCommonBaseInternalFinalizer_inheritableThreadLocals = ComGoogleCommonBaseInternalFinalizer_getInheritableThreadLocalsField();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonBaseInternalFinalizer)
  }
}

@end

void ComGoogleCommonBaseInternalFinalizer_startFinalizerWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference) {
  ComGoogleCommonBaseInternalFinalizer_initialize();
  if (![((NSString *) nil_chk([((IOSClass *) nil_chk(finalizableReferenceClass)) getName])) isEqual:ComGoogleCommonBaseInternalFinalizer_FINALIZABLE_REFERENCE]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Expected ", ComGoogleCommonBaseInternalFinalizer_FINALIZABLE_REFERENCE, '.'));
  }
  ComGoogleCommonBaseInternalFinalizer *finalizer = new_ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(finalizableReferenceClass, queue, frqReference);
  JavaLangThread *thread = new_JavaLangThread_initWithJavaLangRunnable_(finalizer);
  [thread setNameWithNSString:[ComGoogleCommonBaseInternalFinalizer_class_() getName]];
  [thread setDaemonWithBoolean:true];
  @try {
    if (ComGoogleCommonBaseInternalFinalizer_inheritableThreadLocals != nil) {
      [ComGoogleCommonBaseInternalFinalizer_inheritableThreadLocals setWithId:thread withId:nil];
    }
  }
  @catch (NSException *t) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleCommonBaseInternalFinalizer_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:@"Failed to clear thread local values inherited by reference finalizer thread." withNSException:t];
  }
  [thread start];
}

void ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(ComGoogleCommonBaseInternalFinalizer *self, IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference) {
  NSObject_init(self);
  self->queue_ = queue;
  self->finalizableReferenceClassReference_ = new_JavaLangRefWeakReference_initWithId_(finalizableReferenceClass);
  self->frqReference_ = frqReference;
}

ComGoogleCommonBaseInternalFinalizer *new_ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference) {
  J2OBJC_NEW_IMPL(ComGoogleCommonBaseInternalFinalizer, initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_, finalizableReferenceClass, queue, frqReference)
}

ComGoogleCommonBaseInternalFinalizer *create_ComGoogleCommonBaseInternalFinalizer_initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_(IOSClass *finalizableReferenceClass, JavaLangRefReferenceQueue *queue, JavaLangRefPhantomReference *frqReference) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonBaseInternalFinalizer, initWithIOSClass_withJavaLangRefReferenceQueue_withJavaLangRefPhantomReference_, finalizableReferenceClass, queue, frqReference)
}

jboolean ComGoogleCommonBaseInternalFinalizer_cleanUpWithJavaLangRefReference_(ComGoogleCommonBaseInternalFinalizer *self, JavaLangRefReference *reference) {
  JavaLangReflectMethod *finalizeReferentMethod = ComGoogleCommonBaseInternalFinalizer_getFinalizeReferentMethod(self);
  if (finalizeReferentMethod == nil) {
    return false;
  }
  do {
    [((JavaLangRefReference *) nil_chk(reference)) clear];
    if (reference == self->frqReference_) {
      return false;
    }
    @try {
      (void) [finalizeReferentMethod invokeWithId:reference withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
    }
    @catch (NSException *t) {
      [((JavaUtilLoggingLogger *) nil_chk(ComGoogleCommonBaseInternalFinalizer_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:@"Error cleaning up after reference." withNSException:t];
    }
  }
  while ((reference = [((JavaLangRefReferenceQueue *) nil_chk(self->queue_)) poll]) != nil);
  return true;
}

JavaLangReflectMethod *ComGoogleCommonBaseInternalFinalizer_getFinalizeReferentMethod(ComGoogleCommonBaseInternalFinalizer *self) {
  IOSClass *finalizableReferenceClass = [((JavaLangRefWeakReference *) nil_chk(self->finalizableReferenceClassReference_)) get];
  if (finalizableReferenceClass == nil) {
    return nil;
  }
  @try {
    return [finalizableReferenceClass getMethod:@"finalizeReferent" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

JavaLangReflectField *ComGoogleCommonBaseInternalFinalizer_getInheritableThreadLocalsField() {
  ComGoogleCommonBaseInternalFinalizer_initialize();
  @try {
    JavaLangReflectField *inheritableThreadLocals = [JavaLangThread_class_() getDeclaredField:@"inheritableThreadLocals"];
    [((JavaLangReflectField *) nil_chk(inheritableThreadLocals)) setAccessibleWithBoolean:true];
    return inheritableThreadLocals;
  }
  @catch (NSException *t) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleCommonBaseInternalFinalizer_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:@"Couldn't access Thread.inheritableThreadLocals. Reference finalizer threads will inherit thread local values."];
    return nil;
  }
}

IOSObjectArray *ComGoogleCommonBaseInternalFinalizer__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonBaseInternalFinalizer__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonBaseInternalFinalizer)
