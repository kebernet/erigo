//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/cache/AbstractLoadingCache.java
//

#include "J2ObjC_source.h"
#include "com/google/common/cache/AbstractCache.h"
#include "com/google/common/cache/AbstractLoadingCache.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/util/concurrent/UncheckedExecutionException.h"
#include "java/lang/Iterable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ExecutionException.h"
#include "java/util/function/Function.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation ComGoogleCommonCacheAbstractLoadingCache

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCacheAbstractLoadingCache_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)getUncheckedWithId:(id)key {
  @try {
    return [self getWithId:key];
  }
  @catch (JavaUtilConcurrentExecutionException *e) {
    @throw new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSException_([e getCause]);
  }
}

- (ComGoogleCommonCollectImmutableMap *)getAllWithJavaLangIterable:(id<JavaLangIterable>)keys {
  id<JavaUtilMap> result = ComGoogleCommonCollectMaps_newLinkedHashMap();
  for (id __strong key in nil_chk(keys)) {
    if (![((id<JavaUtilMap>) nil_chk(result)) containsKeyWithId:key]) {
      (void) [result putWithId:key withId:[self getWithId:key]];
    }
  }
  return ComGoogleCommonCollectImmutableMap_copyOfWithJavaUtilMap_(result);
}

- (id)applyWithId:(id)key {
  return [self getUncheckedWithId:key];
}

- (void)refreshWithId:(id)key {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x1, 3, 4, 5, 6, -1, -1 },
    { NULL, "LNSObject;", 0x11, 7, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 8, 1, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getUncheckedWithId:);
  methods[2].selector = @selector(getAllWithJavaLangIterable:);
  methods[3].selector = @selector(applyWithId:);
  methods[4].selector = @selector(refreshWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getUnchecked", "LNSObject;", "(TK;)TV;", "getAll", "LJavaLangIterable;", "LJavaUtilConcurrentExecutionException;", "(Ljava/lang/Iterable<+TK;>;)Lcom/google/common/collect/ImmutableMap<TK;TV;>;", "apply", "refresh", "(TK;)V", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/cache/AbstractCache<TK;TV;>;Lcom/google/common/cache/LoadingCache<TK;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCacheAbstractLoadingCache = { "AbstractLoadingCache", "com.google.common.cache", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, 10, -1 };
  return &_ComGoogleCommonCacheAbstractLoadingCache;
}

@end

void ComGoogleCommonCacheAbstractLoadingCache_init(ComGoogleCommonCacheAbstractLoadingCache *self) {
  ComGoogleCommonCacheAbstractCache_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCacheAbstractLoadingCache)
