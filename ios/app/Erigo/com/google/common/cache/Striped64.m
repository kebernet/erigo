//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/cache/Striped64.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/cache/Striped64.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/NoSuchFieldError.h"
#include "java/lang/Runtime.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/reflect/Field.h"
#include "java/security/AccessController.h"
#include "java/security/PrivilegedActionException.h"
#include "java/security/PrivilegedExceptionAction.h"
#include "java/util/Random.h"
#include "sun/misc/Unsafe.h"

@interface ComGoogleCommonCacheStriped64 ()

+ (SunMiscUnsafe *)getUnsafe;

@end

inline SunMiscUnsafe *ComGoogleCommonCacheStriped64_get_UNSAFE();
static SunMiscUnsafe *ComGoogleCommonCacheStriped64_UNSAFE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCacheStriped64, UNSAFE, SunMiscUnsafe *)

inline jlong ComGoogleCommonCacheStriped64_get_baseOffset();
static jlong ComGoogleCommonCacheStriped64_baseOffset;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonCacheStriped64, baseOffset, jlong)

inline jlong ComGoogleCommonCacheStriped64_get_busyOffset();
static jlong ComGoogleCommonCacheStriped64_busyOffset;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonCacheStriped64, busyOffset, jlong)

__attribute__((unused)) static jboolean ComGoogleCommonCacheStriped64_casBaseWithLong_withLong_(ComGoogleCommonCacheStriped64 *self, jlong cmp, jlong val);

__attribute__((unused)) static jboolean ComGoogleCommonCacheStriped64_casBusy(ComGoogleCommonCacheStriped64 *self);

__attribute__((unused)) static SunMiscUnsafe *ComGoogleCommonCacheStriped64_getUnsafe();

inline SunMiscUnsafe *ComGoogleCommonCacheStriped64_Cell_get_UNSAFE();
static SunMiscUnsafe *ComGoogleCommonCacheStriped64_Cell_UNSAFE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCacheStriped64_Cell, UNSAFE, SunMiscUnsafe *)

inline jlong ComGoogleCommonCacheStriped64_Cell_get_valueOffset();
static jlong ComGoogleCommonCacheStriped64_Cell_valueOffset;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonCacheStriped64_Cell, valueOffset, jlong)

__attribute__((unused)) static jboolean ComGoogleCommonCacheStriped64_Cell_casWithLong_withLong_(ComGoogleCommonCacheStriped64_Cell *self, jlong cmp, jlong val);

@interface ComGoogleCommonCacheStriped64_1 : NSObject < JavaSecurityPrivilegedExceptionAction >

- (instancetype)init;

- (SunMiscUnsafe *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheStriped64_1)

__attribute__((unused)) static void ComGoogleCommonCacheStriped64_1_init(ComGoogleCommonCacheStriped64_1 *self);

__attribute__((unused)) static ComGoogleCommonCacheStriped64_1 *new_ComGoogleCommonCacheStriped64_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCacheStriped64_1 *create_ComGoogleCommonCacheStriped64_1_init();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCacheStriped64)

JavaLangThreadLocal *ComGoogleCommonCacheStriped64_threadHashCode;
JavaUtilRandom *ComGoogleCommonCacheStriped64_rng;
jint ComGoogleCommonCacheStriped64_NCPU;

@implementation ComGoogleCommonCacheStriped64

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCacheStriped64_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)casBaseWithLong:(jlong)cmp
                   withLong:(jlong)val {
  return ComGoogleCommonCacheStriped64_casBaseWithLong_withLong_(self, cmp, val);
}

- (jboolean)casBusy {
  return ComGoogleCommonCacheStriped64_casBusy(self);
}

- (jlong)fnWithLong:(jlong)currentValue
           withLong:(jlong)newValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)retryUpdateWithLong:(jlong)x
               withIntArray:(IOSIntArray *)hc
                withBoolean:(jboolean)wasUncontended {
  jint h;
  if (hc == nil) {
    [((JavaLangThreadLocal *) nil_chk(ComGoogleCommonCacheStriped64_threadHashCode)) setWithId:hc = [IOSIntArray newArrayWithLength:1]];
    jint r = [((JavaUtilRandom *) nil_chk(ComGoogleCommonCacheStriped64_rng)) nextInt];
    h = *IOSIntArray_GetRef(hc, 0) = (r == 0) ? 1 : r;
  }
  else h = IOSIntArray_Get(hc, 0);
  jboolean collide = false;
  for (; ; ) {
    IOSObjectArray *as;
    ComGoogleCommonCacheStriped64_Cell *a;
    jint n;
    jlong v;
    if ((as = JreLoadVolatileId(&cells_)) != nil && (n = ((IOSObjectArray *) nil_chk(as))->size_) > 0) {
      if ((a = IOSObjectArray_Get(nil_chk(as), (n - 1) & h)) == nil) {
        if (JreLoadVolatileInt(&busy_) == 0) {
          ComGoogleCommonCacheStriped64_Cell *r = new_ComGoogleCommonCacheStriped64_Cell_initWithLong_(x);
          if (JreLoadVolatileInt(&busy_) == 0 && ComGoogleCommonCacheStriped64_casBusy(self)) {
            jboolean created = false;
            @try {
              IOSObjectArray *rs;
              jint m;
              jint j;
              if ((rs = JreLoadVolatileId(&cells_)) != nil && (m = ((IOSObjectArray *) nil_chk(rs))->size_) > 0 && IOSObjectArray_Get(rs, j = (m - 1) & h) == nil) {
                (void) IOSObjectArray_Set(nil_chk(rs), j, r);
                created = true;
              }
            }
            @finally {
              JreAssignVolatileInt(&busy_, 0);
            }
            if (created) break;
            continue;
          }
        }
        collide = false;
      }
      else if (!wasUncontended) wasUncontended = true;
      else {
        jlong unseq$1 = v = JreLoadVolatileLong(&a->value_);
        if (ComGoogleCommonCacheStriped64_Cell_casWithLong_withLong_(nil_chk(a), unseq$1, [self fnWithLong:v withLong:x])) break;
        else if (n >= ComGoogleCommonCacheStriped64_NCPU || JreLoadVolatileId(&cells_) != as) collide = false;
        else if (!collide) collide = true;
        else if (JreLoadVolatileInt(&busy_) == 0 && ComGoogleCommonCacheStriped64_casBusy(self)) {
          @try {
            if (JreLoadVolatileId(&cells_) == as) {
              IOSObjectArray *rs = [IOSObjectArray newArrayWithLength:JreLShift32(n, 1) type:ComGoogleCommonCacheStriped64_Cell_class_()];
              for (jint i = 0; i < n; ++i) (void) IOSObjectArray_Set(rs, i, IOSObjectArray_Get(as, i));
              (void) JreVolatileStrongAssign(&cells_, rs);
            }
          }
          @finally {
            JreAssignVolatileInt(&busy_, 0);
          }
          collide = false;
          continue;
        }
      }
      h ^= JreLShift32(h, 13);
      h ^= JreURShift32(h, 17);
      h ^= JreLShift32(h, 5);
      *IOSIntArray_GetRef(hc, 0) = h;
    }
    else if (JreLoadVolatileInt(&busy_) == 0 && JreLoadVolatileId(&cells_) == as && ComGoogleCommonCacheStriped64_casBusy(self)) {
      jboolean init_ = false;
      @try {
        if (JreLoadVolatileId(&cells_) == as) {
          IOSObjectArray *rs = [IOSObjectArray newArrayWithLength:2 type:ComGoogleCommonCacheStriped64_Cell_class_()];
          (void) IOSObjectArray_SetAndConsume(rs, h & 1, new_ComGoogleCommonCacheStriped64_Cell_initWithLong_(x));
          (void) JreVolatileStrongAssign(&cells_, rs);
          init_ = true;
        }
      }
      @finally {
        JreAssignVolatileInt(&busy_, 0);
      }
      if (init_) break;
    }
    else {
      jlong unseq$2 = v = JreLoadVolatileLong(&base_);
      if (ComGoogleCommonCacheStriped64_casBaseWithLong_withLong_(self, unseq$2, [self fnWithLong:v withLong:x])) break;
    }
  }
}

- (void)internalResetWithLong:(jlong)initialValue {
  IOSObjectArray *as = JreLoadVolatileId(&cells_);
  JreAssignVolatileLong(&base_, initialValue);
  if (as != nil) {
    jint n = as->size_;
    for (jint i = 0; i < n; ++i) {
      ComGoogleCommonCacheStriped64_Cell *a = IOSObjectArray_Get(as, i);
      if (a != nil) JreAssignVolatileLong(&a->value_, initialValue);
    }
  }
}

+ (SunMiscUnsafe *)getUnsafe {
  return ComGoogleCommonCacheStriped64_getUnsafe();
}

- (jboolean)isEqual:(id)obj {
  return self == obj;
}

- (NSUInteger)hash {
  return (NSUInteger)self;
}

- (void)__javaClone:(ComGoogleCommonCacheStriped64 *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&cells_, &original->cells_);
}

- (void)dealloc {
  JreReleaseVolatile(&cells_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x400, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 5, 6, -1, -1, -1, -1 },
    { NULL, "LSunMiscUnsafe;", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(casBaseWithLong:withLong:);
  methods[2].selector = @selector(casBusy);
  methods[3].selector = @selector(fnWithLong:withLong:);
  methods[4].selector = @selector(retryUpdateWithLong:withIntArray:withBoolean:);
  methods[5].selector = @selector(internalResetWithLong:);
  methods[6].selector = @selector(getUnsafe);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "threadHashCode", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x18, -1, 7, 8, -1 },
    { "rng", "LJavaUtilRandom;", .constantValue.asLong = 0, 0x18, -1, 9, -1, -1 },
    { "NCPU", "I", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "cells_", "[LComGoogleCommonCacheStriped64_Cell;", .constantValue.asLong = 0, 0xc0, -1, -1, -1, -1 },
    { "base_", "J", .constantValue.asLong = 0, 0xc0, -1, -1, -1, -1 },
    { "busy_", "I", .constantValue.asLong = 0, 0xc0, -1, -1, -1, -1 },
    { "UNSAFE", "LSunMiscUnsafe;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "baseOffset", "J", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "busyOffset", "J", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "casBase", "JJ", "fn", "retryUpdate", "J[IZ", "internalReset", "J", &ComGoogleCommonCacheStriped64_threadHashCode, "Ljava/lang/ThreadLocal<[I>;", &ComGoogleCommonCacheStriped64_rng, &ComGoogleCommonCacheStriped64_NCPU, &ComGoogleCommonCacheStriped64_UNSAFE, &ComGoogleCommonCacheStriped64_baseOffset, &ComGoogleCommonCacheStriped64_busyOffset, "LComGoogleCommonCacheStriped64_Cell;" };
  static const J2ObjcClassInfo _ComGoogleCommonCacheStriped64 = { "Striped64", "com.google.common.cache", ptrTable, methods, fields, 7, 0x400, 7, 9, -1, 14, -1, -1, -1 };
  return &_ComGoogleCommonCacheStriped64;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCacheStriped64 class]) {
    ComGoogleCommonCacheStriped64_threadHashCode = new_JavaLangThreadLocal_init();
    ComGoogleCommonCacheStriped64_rng = new_JavaUtilRandom_init();
    ComGoogleCommonCacheStriped64_NCPU = [((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) availableProcessors];
    {
      @try {
        ComGoogleCommonCacheStriped64_UNSAFE = ComGoogleCommonCacheStriped64_getUnsafe();
        IOSClass *sk = ComGoogleCommonCacheStriped64_class_();
        ComGoogleCommonCacheStriped64_baseOffset = [((SunMiscUnsafe *) nil_chk(ComGoogleCommonCacheStriped64_UNSAFE)) objectFieldOffsetWithJavaLangReflectField:[sk getDeclaredField:@"base"]];
        ComGoogleCommonCacheStriped64_busyOffset = [ComGoogleCommonCacheStriped64_UNSAFE objectFieldOffsetWithJavaLangReflectField:[sk getDeclaredField:@"busy"]];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangError_initWithNSException_(e);
      }
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCacheStriped64)
  }
}

@end

void ComGoogleCommonCacheStriped64_init(ComGoogleCommonCacheStriped64 *self) {
  NSNumber_init(self);
}

jboolean ComGoogleCommonCacheStriped64_casBaseWithLong_withLong_(ComGoogleCommonCacheStriped64 *self, jlong cmp, jlong val) {
  return [((SunMiscUnsafe *) nil_chk(ComGoogleCommonCacheStriped64_UNSAFE)) compareAndSwapLongWithId:self withLong:ComGoogleCommonCacheStriped64_baseOffset withLong:cmp withLong:val];
}

jboolean ComGoogleCommonCacheStriped64_casBusy(ComGoogleCommonCacheStriped64 *self) {
  return [((SunMiscUnsafe *) nil_chk(ComGoogleCommonCacheStriped64_UNSAFE)) compareAndSwapIntWithId:self withLong:ComGoogleCommonCacheStriped64_busyOffset withInt:0 withInt:1];
}

SunMiscUnsafe *ComGoogleCommonCacheStriped64_getUnsafe() {
  ComGoogleCommonCacheStriped64_initialize();
  @try {
    return SunMiscUnsafe_getUnsafe();
  }
  @catch (JavaLangSecurityException *tryReflectionInstead) {
  }
  @try {
    return JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedExceptionAction_(new_ComGoogleCommonCacheStriped64_1_init());
  }
  @catch (JavaSecurityPrivilegedActionException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(@"Could not initialize intrinsics", [e getCause]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCacheStriped64)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCacheStriped64_Cell)

@implementation ComGoogleCommonCacheStriped64_Cell

- (instancetype)initWithLong:(jlong)x {
  ComGoogleCommonCacheStriped64_Cell_initWithLong_(self, x);
  return self;
}

- (jboolean)casWithLong:(jlong)cmp
               withLong:(jlong)val {
  return ComGoogleCommonCacheStriped64_Cell_casWithLong_withLong_(self, cmp, val);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(casWithLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p0_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p1_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p2_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p3_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p4_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p5_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "p6_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "value_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q0_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q1_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q2_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q3_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q4_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q5_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "q6_", "J", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "UNSAFE", "LSunMiscUnsafe;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "valueOffset", "J", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "cas", "JJ", &ComGoogleCommonCacheStriped64_Cell_UNSAFE, &ComGoogleCommonCacheStriped64_Cell_valueOffset, "LComGoogleCommonCacheStriped64;" };
  static const J2ObjcClassInfo _ComGoogleCommonCacheStriped64_Cell = { "Cell", "com.google.common.cache", ptrTable, methods, fields, 7, 0x18, 2, 17, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonCacheStriped64_Cell;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCacheStriped64_Cell class]) {
    {
      @try {
        ComGoogleCommonCacheStriped64_Cell_UNSAFE = ComGoogleCommonCacheStriped64_getUnsafe();
        IOSClass *ak = ComGoogleCommonCacheStriped64_Cell_class_();
        ComGoogleCommonCacheStriped64_Cell_valueOffset = [((SunMiscUnsafe *) nil_chk(ComGoogleCommonCacheStriped64_Cell_UNSAFE)) objectFieldOffsetWithJavaLangReflectField:[ak getDeclaredField:@"value"]];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangError_initWithNSException_(e);
      }
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCacheStriped64_Cell)
  }
}

@end

void ComGoogleCommonCacheStriped64_Cell_initWithLong_(ComGoogleCommonCacheStriped64_Cell *self, jlong x) {
  NSObject_init(self);
  JreAssignVolatileLong(&self->value_, x);
}

ComGoogleCommonCacheStriped64_Cell *new_ComGoogleCommonCacheStriped64_Cell_initWithLong_(jlong x) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCacheStriped64_Cell, initWithLong_, x)
}

ComGoogleCommonCacheStriped64_Cell *create_ComGoogleCommonCacheStriped64_Cell_initWithLong_(jlong x) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCacheStriped64_Cell, initWithLong_, x)
}

jboolean ComGoogleCommonCacheStriped64_Cell_casWithLong_withLong_(ComGoogleCommonCacheStriped64_Cell *self, jlong cmp, jlong val) {
  return [((SunMiscUnsafe *) nil_chk(ComGoogleCommonCacheStriped64_Cell_UNSAFE)) compareAndSwapLongWithId:self withLong:ComGoogleCommonCacheStriped64_Cell_valueOffset withLong:cmp withLong:val];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCacheStriped64_Cell)

@implementation ComGoogleCommonCacheStriped64_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCacheStriped64_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (SunMiscUnsafe *)run {
  IOSClass *k = SunMiscUnsafe_class_();
  {
    IOSObjectArray *a__ = [k getDeclaredFields];
    JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectField * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectField *f = *b__++;
      [((JavaLangReflectField *) nil_chk(f)) setAccessibleWithBoolean:true];
      id x = [f getWithId:nil];
      if ([k isInstance:x]) return [k cast:x];
    }
  }
  @throw new_JavaLangNoSuchFieldError_initWithNSString_(@"the Unsafe");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSunMiscUnsafe;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleCommonCacheStriped64;", "getUnsafe", "Ljava/lang/Object;Ljava/security/PrivilegedExceptionAction<Lsun/misc/Unsafe;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCacheStriped64_1 = { "", "com.google.common.cache", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_ComGoogleCommonCacheStriped64_1;
}

@end

void ComGoogleCommonCacheStriped64_1_init(ComGoogleCommonCacheStriped64_1 *self) {
  NSObject_init(self);
}

ComGoogleCommonCacheStriped64_1 *new_ComGoogleCommonCacheStriped64_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonCacheStriped64_1, init)
}

ComGoogleCommonCacheStriped64_1 *create_ComGoogleCommonCacheStriped64_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCacheStriped64_1, init)
}
