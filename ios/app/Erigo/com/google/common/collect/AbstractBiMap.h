//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/AbstractBiMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap")
#ifdef RESTRICT_ComGoogleCommonCollectAbstractBiMap
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectAbstractBiMap
#ifdef INCLUDE_ComGoogleCommonCollectAbstractBiMap_Inverse
#define INCLUDE_ComGoogleCommonCollectAbstractBiMap 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectAbstractBiMap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap || defined(INCLUDE_ComGoogleCommonCollectAbstractBiMap))
#define ComGoogleCommonCollectAbstractBiMap_

#define RESTRICT_ComGoogleCommonCollectForwardingMap 1
#define INCLUDE_ComGoogleCommonCollectForwardingMap 1
#include "com/google/common/collect/ForwardingMap.h"

#define RESTRICT_ComGoogleCommonCollectBiMap 1
#define INCLUDE_ComGoogleCommonCollectBiMap 1
#include "com/google/common/collect/BiMap.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectAbstractBiMap : ComGoogleCommonCollectForwardingMap < ComGoogleCommonCollectBiMap, JavaIoSerializable > {
 @public
  ComGoogleCommonCollectAbstractBiMap *inverse_;
}

#pragma mark Public

- (void)clear;

- (jboolean)containsValueWithId:(id)value;

- (id<JavaUtilSet>)entrySet;

- (id)forcePutWithId:(id)key
              withId:(id)value;

- (id<ComGoogleCommonCollectBiMap>)inverse;

- (id<JavaUtilSet>)keySet;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)removeWithId:(id)key;

- (void)replaceAllWithJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)function;

- (id<JavaUtilSet>)values;

#pragma mark Protected

- (id<JavaUtilMap>)delegate;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)forward
                    withJavaUtilMap:(id<JavaUtilMap>)backward;

- (id)checkKeyWithId:(id)key;

- (id)checkValueWithId:(id)value;

- (id<JavaUtilIterator>)entrySetIterator;

- (ComGoogleCommonCollectAbstractBiMap *)makeInverseWithJavaUtilMap:(id<JavaUtilMap>)backward;

- (void)setDelegatesWithJavaUtilMap:(id<JavaUtilMap>)forward
                    withJavaUtilMap:(id<JavaUtilMap>)backward;

- (void)setInverseWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)inverse;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withJavaUtilMap_(ComGoogleCommonCollectAbstractBiMap *self, id<JavaUtilMap> forward, id<JavaUtilMap> backward);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap)

#endif

#if !defined (ComGoogleCommonCollectAbstractBiMap_BiMapEntry_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap || defined(INCLUDE_ComGoogleCommonCollectAbstractBiMap_BiMapEntry))
#define ComGoogleCommonCollectAbstractBiMap_BiMapEntry_

#define RESTRICT_ComGoogleCommonCollectForwardingMapEntry 1
#define INCLUDE_ComGoogleCommonCollectForwardingMapEntry 1
#include "com/google/common/collect/ForwardingMapEntry.h"

@class ComGoogleCommonCollectAbstractBiMap;
@protocol JavaUtilMap_Entry;

@interface ComGoogleCommonCollectAbstractBiMap_BiMapEntry : ComGoogleCommonCollectForwardingMapEntry

#pragma mark Public

- (id)setValueWithId:(id)value;

#pragma mark Protected

- (id<JavaUtilMap_Entry>)delegate;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$
                                      withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_BiMapEntry)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap_BiMapEntry *self, ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractBiMap_BiMapEntry *new_ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractBiMap_BiMapEntry *create_ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap_BiMapEntry)

#endif

#if !defined (ComGoogleCommonCollectAbstractBiMap_Inverse_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap || defined(INCLUDE_ComGoogleCommonCollectAbstractBiMap_Inverse))
#define ComGoogleCommonCollectAbstractBiMap_Inverse_

@class ComGoogleCommonCollectAbstractBiMap;
@protocol JavaUtilMap;

@interface ComGoogleCommonCollectAbstractBiMap_Inverse : ComGoogleCommonCollectAbstractBiMap

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backward
withComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)forward;

- (id)checkKeyWithId:(id)key;

- (id)checkValueWithId:(id)value;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_Inverse)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_Inverse *self, id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractBiMap_Inverse *new_ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractBiMap_Inverse *create_ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap_Inverse)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractBiMap")
