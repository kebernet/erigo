//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/AbstractBiMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Objects.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/AbstractBiMap.h"
#include "com/google/common/collect/BiMap.h"
#include "com/google/common/collect/CollectPreconditions.h"
#include "com/google/common/collect/ForwardingMap.h"
#include "com/google/common/collect/ForwardingMapEntry.h"
#include "com/google/common/collect/ForwardingSet.h"
#include "com/google/common/collect/Maps.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/BiFunction.h"
#include "java/util/function/Consumer.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonCollectAbstractBiMap () {
 @public
  id<JavaUtilMap> delegate_;
  id<JavaUtilSet> keySet_;
  id<JavaUtilSet> valueSet_;
  id<JavaUtilSet> entrySet_;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backward
withComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)forward;

- (id)putInBothMapsWithId:(id)key
                   withId:(id)value
              withBoolean:(jboolean)force;

- (void)updateInverseMapWithId:(id)key
                   withBoolean:(jboolean)containedKey
                        withId:(id)oldValue
                        withId:(id)newValue;

- (id)removeFromBothMapsWithId:(id)key;

- (void)removeFromInverseMapWithId:(id)oldValue;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap, delegate_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap, keySet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap, valueSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap, entrySet_, id<JavaUtilSet>)

inline jlong ComGoogleCommonCollectAbstractBiMap_get_serialVersionUID();
#define ComGoogleCommonCollectAbstractBiMap_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectAbstractBiMap, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *self, id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward);

__attribute__((unused)) static id ComGoogleCommonCollectAbstractBiMap_putInBothMapsWithId_withId_withBoolean_(ComGoogleCommonCollectAbstractBiMap *self, id key, id value, jboolean force);

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_updateInverseMapWithId_withBoolean_withId_withId_(ComGoogleCommonCollectAbstractBiMap *self, id key, jboolean containedKey, id oldValue, id newValue);

__attribute__((unused)) static id ComGoogleCommonCollectAbstractBiMap_removeFromBothMapsWithId_(ComGoogleCommonCollectAbstractBiMap *self, id key);

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(ComGoogleCommonCollectAbstractBiMap *self, id oldValue);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$4();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$5();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$6();

@interface ComGoogleCommonCollectAbstractBiMap_KeySet : ComGoogleCommonCollectForwardingSet {
 @public
  __unsafe_unretained ComGoogleCommonCollectAbstractBiMap *this$0_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$;

- (id<JavaUtilSet>)delegate;

- (void)clear;

- (jboolean)removeWithId:(id)key;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)keysToRemove;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)keysToRetain;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_KeySet)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_KeySet *self, ComGoogleCommonCollectAbstractBiMap *outer$);

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_KeySet *new_ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_KeySet *create_ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap_KeySet)

@interface ComGoogleCommonCollectAbstractBiMap_ValueSet : ComGoogleCommonCollectForwardingSet {
 @public
  __unsafe_unretained ComGoogleCommonCollectAbstractBiMap *this$0_;
  id<JavaUtilSet> valuesDelegate_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$;

- (id<JavaUtilSet>)delegate;

- (id<JavaUtilIterator>)iterator;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_ValueSet)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap_ValueSet, valuesDelegate_, id<JavaUtilSet>)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_ValueSet *self, ComGoogleCommonCollectAbstractBiMap *outer$);

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_ValueSet *new_ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_ValueSet *create_ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap_ValueSet)

@interface ComGoogleCommonCollectAbstractBiMap_BiMapEntry () {
 @public
  ComGoogleCommonCollectAbstractBiMap *this$0_;
  id<JavaUtilMap_Entry> delegate_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap_BiMapEntry, delegate_, id<JavaUtilMap_Entry>)

@interface ComGoogleCommonCollectAbstractBiMap_1 : NSObject < JavaUtilIterator > {
 @public
  ComGoogleCommonCollectAbstractBiMap *this$0_;
  id<JavaUtilIterator> val$iterator_;
  id<JavaUtilMap_Entry> entry__;
}

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$
                                       withJavaUtilIterator:(id<JavaUtilIterator>)capture$0;

- (jboolean)hasNext;

- (id<JavaUtilMap_Entry>)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_1)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap_1, entry__, id<JavaUtilMap_Entry>)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap_1 *self, ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0);

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_1 *new_ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_1 *create_ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0);

@interface ComGoogleCommonCollectAbstractBiMap_EntrySet : ComGoogleCommonCollectForwardingSet {
 @public
  __unsafe_unretained ComGoogleCommonCollectAbstractBiMap *this$0_;
  id<JavaUtilSet> esDelegate_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$;

- (id<JavaUtilSet>)delegate;

- (void)clear;

- (jboolean)removeWithId:(id)object;

- (id<JavaUtilIterator>)iterator;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractBiMap_EntrySet)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractBiMap_EntrySet, esDelegate_, id<JavaUtilSet>)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_EntrySet *self, ComGoogleCommonCollectAbstractBiMap *outer$);

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_EntrySet *new_ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractBiMap_EntrySet *create_ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractBiMap_EntrySet)

@interface ComGoogleCommonCollectAbstractBiMap_Inverse ()

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)stream;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)stream;

@end

inline jlong ComGoogleCommonCollectAbstractBiMap_Inverse_get_serialVersionUID();
#define ComGoogleCommonCollectAbstractBiMap_Inverse_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectAbstractBiMap_Inverse, serialVersionUID, jlong)

@implementation ComGoogleCommonCollectAbstractBiMap

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)forward
                    withJavaUtilMap:(id<JavaUtilMap>)backward {
  ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withJavaUtilMap_(self, forward, backward);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backward
withComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)forward {
  ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(self, backward, forward);
  return self;
}

- (id<JavaUtilMap>)delegate {
  return delegate_;
}

- (id)checkKeyWithId:(id)key {
  return key;
}

- (id)checkValueWithId:(id)value {
  return value;
}

- (void)setDelegatesWithJavaUtilMap:(id<JavaUtilMap>)forward
                    withJavaUtilMap:(id<JavaUtilMap>)backward {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_(delegate_ == nil);
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_(inverse_ == nil);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_([((id<JavaUtilMap>) nil_chk(forward)) isEmpty]);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_([((id<JavaUtilMap>) nil_chk(backward)) isEmpty]);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(forward != backward);
  delegate_ = forward;
  (void) JreRetainedWithAssign(self, &inverse_, [self makeInverseWithJavaUtilMap:backward]);
}

- (ComGoogleCommonCollectAbstractBiMap *)makeInverseWithJavaUtilMap:(id<JavaUtilMap>)backward {
  return new_ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(backward, self);
}

- (void)setInverseWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)inverse {
  ComGoogleCommonCollectAbstractBiMap *__rw$0;
  (__rw$0 = self, JreRetainedWithAssign(__rw$0, &__rw$0->inverse_, inverse));
}

- (jboolean)containsValueWithId:(id)value {
  return [((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_)) containsKeyWithId:value];
}

- (id)putWithId:(id)key
         withId:(id)value {
  return ComGoogleCommonCollectAbstractBiMap_putInBothMapsWithId_withId_withBoolean_(self, key, value, false);
}

- (id)forcePutWithId:(id)key
              withId:(id)value {
  return ComGoogleCommonCollectAbstractBiMap_putInBothMapsWithId_withId_withBoolean_(self, key, value, true);
}

- (id)putInBothMapsWithId:(id)key
                   withId:(id)value
              withBoolean:(jboolean)force {
  return ComGoogleCommonCollectAbstractBiMap_putInBothMapsWithId_withId_withBoolean_(self, key, value, force);
}

- (void)updateInverseMapWithId:(id)key
                   withBoolean:(jboolean)containedKey
                        withId:(id)oldValue
                        withId:(id)newValue {
  ComGoogleCommonCollectAbstractBiMap_updateInverseMapWithId_withBoolean_withId_withId_(self, key, containedKey, oldValue, newValue);
}

- (id)removeWithId:(id)key {
  return [self containsKeyWithId:key] ? ComGoogleCommonCollectAbstractBiMap_removeFromBothMapsWithId_(self, key) : nil;
}

- (id)removeFromBothMapsWithId:(id)key {
  return ComGoogleCommonCollectAbstractBiMap_removeFromBothMapsWithId_(self, key);
}

- (void)removeFromInverseMapWithId:(id)oldValue {
  ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(self, oldValue);
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    (void) [self putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[entry_ getValue]];
  }
}

- (void)replaceAllWithJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)function {
  [((id<JavaUtilMap>) nil_chk(self->delegate_)) replaceAllWithJavaUtilFunctionBiFunction:function];
  [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_))->delegate_)) clear];
  id<JavaUtilMap_Entry> broken = nil;
  id<JavaUtilIterator> itr = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->delegate_)) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(itr)) hasNext]) {
    id<JavaUtilMap_Entry> entry_ = [itr next];
    id k = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id v = [entry_ getValue];
    id conflict = [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_))->delegate_)) putIfAbsentWithId:v withId:k];
    if (conflict != nil) {
      broken = entry_;
      [itr remove];
    }
  }
  if (broken != nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"value already present: ", [broken getValue]));
  }
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(delegate_)) clear];
  [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_))->delegate_)) clear];
}

- (id<ComGoogleCommonCollectBiMap>)inverse {
  return inverse_;
}

- (id<JavaUtilSet>)keySet {
  id<JavaUtilSet> result = keySet_;
  return (result == nil) ? keySet_ = new_ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(self) : result;
}

- (id<JavaUtilSet>)values {
  id<JavaUtilSet> result = valueSet_;
  return (result == nil) ? valueSet_ = new_ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(self) : result;
}

- (id<JavaUtilSet>)entrySet {
  id<JavaUtilSet> result = entrySet_;
  return (result == nil) ? entrySet_ = new_ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(self) : result;
}

- (id<JavaUtilIterator>)entrySetIterator {
  id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(delegate_)) entrySet])) iterator];
  return new_ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(self, iterator);
}

- (void)dealloc {
  JreRetainedWithRelease(self, inverse_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x4, -1, -1, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x0, 5, 6, -1, 7, -1, 8 },
    { NULL, "LNSObject;", 0x0, 9, 6, -1, 10, -1, 11 },
    { NULL, "V", 0x0, 12, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonCollectAbstractBiMap;", 0x0, 13, 14, -1, 15, -1, -1 },
    { NULL, "V", 0x0, 16, 17, -1, 18, -1, -1 },
    { NULL, "Z", 0x1, 19, 6, -1, -1, -1, 20 },
    { NULL, "LNSObject;", 0x1, 21, 22, -1, 23, -1, 24 },
    { NULL, "LNSObject;", 0x1, 25, 22, -1, 23, -1, 26 },
    { NULL, "LNSObject;", 0x2, 27, 28, -1, 29, -1, 30 },
    { NULL, "V", 0x2, 31, 32, -1, 33, -1, -1 },
    { NULL, "LNSObject;", 0x1, 34, 6, -1, 35, -1, 36 },
    { NULL, "LNSObject;", 0x2, 37, 6, -1, 35, -1, -1 },
    { NULL, "V", 0x2, 38, 6, -1, 39, -1, -1 },
    { NULL, "V", 0x1, 40, 14, -1, 41, -1, -1 },
    { NULL, "V", 0x1, 42, 43, -1, 44, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectBiMap;", 0x1, -1, -1, -1, 45, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 47, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 48, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, -1, -1, -1, 49, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:withJavaUtilMap:);
  methods[1].selector = @selector(initWithJavaUtilMap:withComGoogleCommonCollectAbstractBiMap:);
  methods[2].selector = @selector(delegate);
  methods[3].selector = @selector(checkKeyWithId:);
  methods[4].selector = @selector(checkValueWithId:);
  methods[5].selector = @selector(setDelegatesWithJavaUtilMap:withJavaUtilMap:);
  methods[6].selector = @selector(makeInverseWithJavaUtilMap:);
  methods[7].selector = @selector(setInverseWithComGoogleCommonCollectAbstractBiMap:);
  methods[8].selector = @selector(containsValueWithId:);
  methods[9].selector = @selector(putWithId:withId:);
  methods[10].selector = @selector(forcePutWithId:withId:);
  methods[11].selector = @selector(putInBothMapsWithId:withId:withBoolean:);
  methods[12].selector = @selector(updateInverseMapWithId:withBoolean:withId:withId:);
  methods[13].selector = @selector(removeWithId:);
  methods[14].selector = @selector(removeFromBothMapsWithId:);
  methods[15].selector = @selector(removeFromInverseMapWithId:);
  methods[16].selector = @selector(putAllWithJavaUtilMap:);
  methods[17].selector = @selector(replaceAllWithJavaUtilFunctionBiFunction:);
  methods[18].selector = @selector(clear);
  methods[19].selector = @selector(inverse);
  methods[20].selector = @selector(keySet);
  methods[21].selector = @selector(values);
  methods[22].selector = @selector(entrySet);
  methods[23].selector = @selector(entrySetIterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x82, -1, -1, 50, -1 },
    { "inverse_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x80, -1, -1, 51, -1 },
    { "keySet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x82, -1, -1, 52, -1 },
    { "valueSet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x82, -1, -1, 53, -1 },
    { "entrySet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x82, -1, -1, 54, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectAbstractBiMap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;LJavaUtilMap;", "(Ljava/util/Map<TK;TV;>;Ljava/util/Map<TV;TK;>;)V", "LJavaUtilMap;LComGoogleCommonCollectAbstractBiMap;", "(Ljava/util/Map<TK;TV;>;Lcom/google/common/collect/AbstractBiMap<TV;TK;>;)V", "()Ljava/util/Map<TK;TV;>;", "checkKey", "LNSObject;", "(TK;)TK;", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$0, "checkValue", "(TV;)TV;", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$1, "setDelegates", "makeInverse", "LJavaUtilMap;", "(Ljava/util/Map<TV;TK;>;)Lcom/google/common/collect/AbstractBiMap<TV;TK;>;", "setInverse", "LComGoogleCommonCollectAbstractBiMap;", "(Lcom/google/common/collect/AbstractBiMap<TV;TK;>;)V", "containsValue", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$2, "put", "LNSObject;LNSObject;", "(TK;TV;)TV;", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$3, "forcePut", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$4, "putInBothMaps", "LNSObject;LNSObject;Z", "(TK;TV;Z)TV;", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$5, "updateInverseMap", "LNSObject;ZLNSObject;LNSObject;", "(TK;ZTV;TV;)V", "remove", "(Ljava/lang/Object;)TV;", (void *)&ComGoogleCommonCollectAbstractBiMap__Annotations$6, "removeFromBothMaps", "removeFromInverseMap", "(TV;)V", "putAll", "(Ljava/util/Map<+TK;+TV;>;)V", "replaceAll", "LJavaUtilFunctionBiFunction;", "(Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V", "()Lcom/google/common/collect/BiMap<TV;TK;>;", "()Ljava/util/Set<TK;>;", "()Ljava/util/Set<TV;>;", "()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;", "Ljava/util/Map<TK;TV;>;", "Lcom/google/common/collect/AbstractBiMap<TV;TK;>;", "Ljava/util/Set<TK;>;", "Ljava/util/Set<TV;>;", "Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "LComGoogleCommonCollectAbstractBiMap_KeySet;LComGoogleCommonCollectAbstractBiMap_ValueSet;LComGoogleCommonCollectAbstractBiMap_BiMapEntry;LComGoogleCommonCollectAbstractBiMap_EntrySet;LComGoogleCommonCollectAbstractBiMap_Inverse;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingMap<TK;TV;>;Lcom/google/common/collect/BiMap<TK;TV;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap = { "AbstractBiMap", "com.google.common.collect", ptrTable, methods, fields, 7, 0x400, 24, 6, -1, 55, -1, 56, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap;
}

@end

void ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withJavaUtilMap_(ComGoogleCommonCollectAbstractBiMap *self, id<JavaUtilMap> forward, id<JavaUtilMap> backward) {
  ComGoogleCommonCollectForwardingMap_init(self);
  [self setDelegatesWithJavaUtilMap:forward withJavaUtilMap:backward];
}

void ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *self, id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward) {
  ComGoogleCommonCollectForwardingMap_init(self);
  self->delegate_ = backward;
  (void) JreRetainedWithAssign(self, &self->inverse_, forward);
}

id ComGoogleCommonCollectAbstractBiMap_putInBothMapsWithId_withId_withBoolean_(ComGoogleCommonCollectAbstractBiMap *self, id key, id value, jboolean force) {
  (void) [self checkKeyWithId:key];
  (void) [self checkValueWithId:value];
  jboolean containedKey = [self containsKeyWithId:key];
  if (containedKey && ComGoogleCommonBaseObjects_equalWithId_withId_(value, [self getWithId:key])) {
    return value;
  }
  if (force) {
    (void) [((id<ComGoogleCommonCollectBiMap>) nil_chk([self inverse])) removeWithId:value];
  }
  else {
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_(![self containsValueWithId:value], @"value already present: %s", value);
  }
  id oldValue = [((id<JavaUtilMap>) nil_chk(self->delegate_)) putWithId:key withId:value];
  ComGoogleCommonCollectAbstractBiMap_updateInverseMapWithId_withBoolean_withId_withId_(self, key, containedKey, oldValue, value);
  return oldValue;
}

void ComGoogleCommonCollectAbstractBiMap_updateInverseMapWithId_withBoolean_withId_withId_(ComGoogleCommonCollectAbstractBiMap *self, id key, jboolean containedKey, id oldValue, id newValue) {
  if (containedKey) {
    ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(self, oldValue);
  }
  (void) [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(self->inverse_))->delegate_)) putWithId:newValue withId:key];
}

id ComGoogleCommonCollectAbstractBiMap_removeFromBothMapsWithId_(ComGoogleCommonCollectAbstractBiMap *self, id key) {
  id oldValue = [((id<JavaUtilMap>) nil_chk(self->delegate_)) removeWithId:key];
  ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(self, oldValue);
  return oldValue;
}

void ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(ComGoogleCommonCollectAbstractBiMap *self, id oldValue) {
  (void) [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(self->inverse_))->delegate_)) removeWithId:oldValue];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractBiMap__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap)

@implementation ComGoogleCommonCollectAbstractBiMap_KeySet

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$ {
  ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(self, outer$);
  return self;
}

- (id<JavaUtilSet>)delegate {
  return [((id<JavaUtilMap>) nil_chk(this$0_->delegate_)) keySet];
}

- (void)clear {
  [this$0_ clear];
}

- (jboolean)removeWithId:(id)key {
  if (![self containsWithId:key]) {
    return false;
  }
  (void) ComGoogleCommonCollectAbstractBiMap_removeFromBothMapsWithId_(this$0_, key);
  return true;
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)keysToRemove {
  return [self standardRemoveAllWithJavaUtilCollection:keysToRemove];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)keysToRetain {
  return [self standardRetainAllWithJavaUtilCollection:keysToRetain];
}

- (id<JavaUtilIterator>)iterator {
  return ComGoogleCommonCollectMaps_keyIteratorWithJavaUtilIterator_([((id<JavaUtilSet>) nil_chk([this$0_ entrySet])) iterator]);
}

- (void)__javaClone:(ComGoogleCommonCollectAbstractBiMap_KeySet *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, 6, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractBiMap:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(clear);
  methods[3].selector = @selector(removeWithId:);
  methods[4].selector = @selector(removeAllWithJavaUtilCollection:);
  methods[5].selector = @selector(retainAllWithJavaUtilCollection:);
  methods[6].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Set<TK;>;", "remove", "LNSObject;", "removeAll", "LJavaUtilCollection;", "(Ljava/util/Collection<*>;)Z", "retainAll", "()Ljava/util/Iterator<TK;>;", "Lcom/google/common/collect/AbstractBiMap<TK;TV;>;", "LComGoogleCommonCollectAbstractBiMap;", "Lcom/google/common/collect/ForwardingSet<TK;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_KeySet = { "KeySet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x2, 7, 1, 9, -1, -1, 10, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_KeySet;
}

@end

void ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_KeySet *self, ComGoogleCommonCollectAbstractBiMap *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectForwardingSet_init(self);
}

ComGoogleCommonCollectAbstractBiMap_KeySet *new_ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_KeySet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

ComGoogleCommonCollectAbstractBiMap_KeySet *create_ComGoogleCommonCollectAbstractBiMap_KeySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_KeySet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap_KeySet)

@implementation ComGoogleCommonCollectAbstractBiMap_ValueSet

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$ {
  ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(self, outer$);
  return self;
}

- (id<JavaUtilSet>)delegate {
  return valuesDelegate_;
}

- (id<JavaUtilIterator>)iterator {
  return ComGoogleCommonCollectMaps_valueIteratorWithJavaUtilIterator_([((id<JavaUtilSet>) nil_chk([this$0_ entrySet])) iterator]);
}

- (IOSObjectArray *)toArray {
  return [self standardToArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  return [self standardToArrayWithNSObjectArray:array];
}

- (NSString *)description {
  return [self standardToString];
}

- (void)__javaClone:(ComGoogleCommonCollectAbstractBiMap_ValueSet *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractBiMap:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(toArray);
  methods[4].selector = @selector(toArrayWithNSObjectArray:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "valuesDelegate_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Set<TV;>;", "()Ljava/util/Iterator<TV;>;", "toArray", "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)[TT;", "toString", "Lcom/google/common/collect/AbstractBiMap<TK;TV;>;", "Ljava/util/Set<TV;>;", "LComGoogleCommonCollectAbstractBiMap;", "Lcom/google/common/collect/ForwardingSet<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_ValueSet = { "ValueSet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x2, 6, 2, 8, -1, -1, 9, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_ValueSet;
}

@end

void ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_ValueSet *self, ComGoogleCommonCollectAbstractBiMap *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectForwardingSet_init(self);
  self->valuesDelegate_ = [((ComGoogleCommonCollectAbstractBiMap *) nil_chk(outer$->inverse_)) keySet];
}

ComGoogleCommonCollectAbstractBiMap_ValueSet *new_ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_ValueSet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

ComGoogleCommonCollectAbstractBiMap_ValueSet *create_ComGoogleCommonCollectAbstractBiMap_ValueSet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_ValueSet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap_ValueSet)

@implementation ComGoogleCommonCollectAbstractBiMap_BiMapEntry

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$
                                      withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)delegate {
  ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(self, outer$, delegate);
  return self;
}

- (id<JavaUtilMap_Entry>)delegate {
  return delegate_;
}

- (id)setValueWithId:(id)value {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_([((id<JavaUtilSet>) nil_chk([this$0_ entrySet])) containsWithId:self], @"entry no longer in map");
  if (ComGoogleCommonBaseObjects_equalWithId_withId_(value, [self getValue])) {
    return value;
  }
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_(![this$0_ containsValueWithId:value], @"value already present: %s", value);
  id oldValue = [((id<JavaUtilMap_Entry>) nil_chk(delegate_)) setValueWithId:value];
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_(ComGoogleCommonBaseObjects_equalWithId_withId_(value, [this$0_ getWithId:[self getKey]]), @"entry no longer in map");
  ComGoogleCommonCollectAbstractBiMap_updateInverseMapWithId_withBoolean_withId_withId_(this$0_, [self getKey], true, oldValue, value);
  return oldValue;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x4, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractBiMap:withJavaUtilMap_Entry:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(setValueWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "delegate_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap_Entry;", "(Ljava/util/Map$Entry<TK;TV;>;)V", "()Ljava/util/Map$Entry<TK;TV;>;", "setValue", "LNSObject;", "(TV;)TV;", "Lcom/google/common/collect/AbstractBiMap<TK;TV;>;", "Ljava/util/Map$Entry<TK;TV;>;", "LComGoogleCommonCollectAbstractBiMap;", "Lcom/google/common/collect/ForwardingMapEntry<TK;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_BiMapEntry = { "BiMapEntry", "com.google.common.collect", ptrTable, methods, fields, 7, 0x0, 3, 2, 8, -1, -1, 9, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_BiMapEntry;
}

@end

void ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap_BiMapEntry *self, ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectForwardingMapEntry_init(self);
  self->delegate_ = delegate;
}

ComGoogleCommonCollectAbstractBiMap_BiMapEntry *new_ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_BiMapEntry, initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_, outer$, delegate)
}

ComGoogleCommonCollectAbstractBiMap_BiMapEntry *create_ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilMap_Entry> delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_BiMapEntry, initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_, outer$, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap_BiMapEntry)

@implementation ComGoogleCommonCollectAbstractBiMap_1

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$
                                       withJavaUtilIterator:(id<JavaUtilIterator>)capture$0 {
  ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(self, outer$, capture$0);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(val$iterator_)) hasNext];
}

- (id<JavaUtilMap_Entry>)next {
  entry__ = [((id<JavaUtilIterator>) nil_chk(val$iterator_)) next];
  return new_ComGoogleCommonCollectAbstractBiMap_BiMapEntry_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilMap_Entry_(this$0_, entry__);
}

- (void)remove {
  ComGoogleCommonCollectCollectPreconditions_checkRemoveWithBoolean_(entry__ != nil);
  id value = [((id<JavaUtilMap_Entry>) nil_chk(entry__)) getValue];
  [((id<JavaUtilIterator>) nil_chk(val$iterator_)) remove];
  ComGoogleCommonCollectAbstractBiMap_removeFromInverseMapWithId_(this$0_, value);
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractBiMap:withJavaUtilIterator:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$iterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "entry__", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x0, 3, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map$Entry<TK;TV;>;", "Lcom/google/common/collect/AbstractBiMap<TK;TV;>;", "Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;", "entry", "Ljava/util/Map$Entry<TK;TV;>;", "LComGoogleCommonCollectAbstractBiMap;", "entrySetIterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 4, 3, 5, -1, 6, 7, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_1;
}

@end

void ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap_1 *self, ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0) {
  self->this$0_ = outer$;
  self->val$iterator_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonCollectAbstractBiMap_1 *new_ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_1, initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_, outer$, capture$0)
}

ComGoogleCommonCollectAbstractBiMap_1 *create_ComGoogleCommonCollectAbstractBiMap_1_initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_(ComGoogleCommonCollectAbstractBiMap *outer$, id<JavaUtilIterator> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_1, initWithComGoogleCommonCollectAbstractBiMap_withJavaUtilIterator_, outer$, capture$0)
}

@implementation ComGoogleCommonCollectAbstractBiMap_EntrySet

- (instancetype)initWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)outer$ {
  ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(self, outer$);
  return self;
}

- (id<JavaUtilSet>)delegate {
  return esDelegate_;
}

- (void)clear {
  [this$0_ clear];
}

- (jboolean)removeWithId:(id)object {
  if (![((id<JavaUtilSet>) nil_chk(esDelegate_)) containsWithId:object]) {
    return false;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check(object, JavaUtilMap_Entry_class_());
  (void) [((id<JavaUtilMap>) nil_chk(((ComGoogleCommonCollectAbstractBiMap *) nil_chk(this$0_->inverse_))->delegate_)) removeWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue]];
  [esDelegate_ removeWithId:entry_];
  return true;
}

- (id<JavaUtilIterator>)iterator {
  return [this$0_ entrySetIterator];
}

- (IOSObjectArray *)toArray {
  return [self standardToArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  return [self standardToArrayWithNSObjectArray:array];
}

- (jboolean)containsWithId:(id)o {
  return ComGoogleCommonCollectMaps_containsEntryImplWithJavaUtilCollection_withId_([self delegate], o);
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [self standardContainsAllWithJavaUtilCollection:c];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [self standardRemoveAllWithJavaUtilCollection:c];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [self standardRetainAllWithJavaUtilCollection:c];
}

- (void)__javaClone:(ComGoogleCommonCollectAbstractBiMap_EntrySet *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, 11, 9, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, 12, 9, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractBiMap:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(clear);
  methods[3].selector = @selector(removeWithId:);
  methods[4].selector = @selector(iterator);
  methods[5].selector = @selector(toArray);
  methods[6].selector = @selector(toArrayWithNSObjectArray:);
  methods[7].selector = @selector(containsWithId:);
  methods[8].selector = @selector(containsAllWithJavaUtilCollection:);
  methods[9].selector = @selector(removeAllWithJavaUtilCollection:);
  methods[10].selector = @selector(retainAllWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractBiMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 13, -1 },
    { "esDelegate_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x10, -1, -1, 14, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "remove", "LNSObject;", "()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;", "toArray", "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)[TT;", "contains", "containsAll", "LJavaUtilCollection;", "(Ljava/util/Collection<*>;)Z", "removeAll", "retainAll", "Lcom/google/common/collect/AbstractBiMap<TK;TV;>;", "Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;", "LComGoogleCommonCollectAbstractBiMap;", "Lcom/google/common/collect/ForwardingSet<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_EntrySet = { "EntrySet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x2, 11, 2, 15, -1, -1, 16, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_EntrySet;
}

@end

void ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_EntrySet *self, ComGoogleCommonCollectAbstractBiMap *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectForwardingSet_init(self);
  self->esDelegate_ = [((id<JavaUtilMap>) nil_chk(outer$->delegate_)) entrySet];
}

ComGoogleCommonCollectAbstractBiMap_EntrySet *new_ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_EntrySet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

ComGoogleCommonCollectAbstractBiMap_EntrySet *create_ComGoogleCommonCollectAbstractBiMap_EntrySet_initWithComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_EntrySet, initWithComGoogleCommonCollectAbstractBiMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap_EntrySet)

@implementation ComGoogleCommonCollectAbstractBiMap_Inverse

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backward
withComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *)forward {
  ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(self, backward, forward);
  return self;
}

- (id)checkKeyWithId:(id)key {
  return [((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_)) checkValueWithId:key];
}

- (id)checkValueWithId:(id)value {
  return [((ComGoogleCommonCollectAbstractBiMap *) nil_chk(inverse_)) checkKeyWithId:value];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)stream {
  [((JavaIoObjectOutputStream *) nil_chk(stream)) defaultWriteObject];
  [stream writeObjectWithId:[self inverse]];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)stream {
  [((JavaIoObjectInputStream *) nil_chk(stream)) defaultReadObject];
  [self setInverseWithComGoogleCommonCollectAbstractBiMap:(ComGoogleCommonCollectAbstractBiMap *) cast_chk([stream readObject], [ComGoogleCommonCollectAbstractBiMap class])];
}

- (id)readResolve {
  return [((id<ComGoogleCommonCollectBiMap>) nil_chk([self inverse])) inverse];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x0, 5, 3, -1, 6, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 12, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:withComGoogleCommonCollectAbstractBiMap:);
  methods[1].selector = @selector(checkKeyWithId:);
  methods[2].selector = @selector(checkValueWithId:);
  methods[3].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  methods[4].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[5].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectAbstractBiMap_Inverse_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;LComGoogleCommonCollectAbstractBiMap;", "(Ljava/util/Map<TK;TV;>;Lcom/google/common/collect/AbstractBiMap<TV;TK;>;)V", "checkKey", "LNSObject;", "(TK;)TK;", "checkValue", "(TV;)TV;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "LComGoogleCommonCollectAbstractBiMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/AbstractBiMap<TK;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractBiMap_Inverse = { "Inverse", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8, 6, 1, 13, -1, -1, 14, -1 };
  return &_ComGoogleCommonCollectAbstractBiMap_Inverse;
}

@end

void ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(ComGoogleCommonCollectAbstractBiMap_Inverse *self, id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward) {
  ComGoogleCommonCollectAbstractBiMap_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(self, backward, forward);
}

ComGoogleCommonCollectAbstractBiMap_Inverse *new_ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractBiMap_Inverse, initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_, backward, forward)
}

ComGoogleCommonCollectAbstractBiMap_Inverse *create_ComGoogleCommonCollectAbstractBiMap_Inverse_initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_(id<JavaUtilMap> backward, ComGoogleCommonCollectAbstractBiMap *forward) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractBiMap_Inverse, initWithJavaUtilMap_withComGoogleCommonCollectAbstractBiMap_, backward, forward)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractBiMap_Inverse)
