//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/AbstractMapBasedMultiset.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/AbstractMapBasedMultiset.h"
#include "com/google/common/collect/AbstractMultiset.h"
#include "com/google/common/collect/CollectPreconditions.h"
#include "com/google/common/collect/Count.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/Multiset.h"
#include "com/google/common/collect/Multisets.h"
#include "com/google/common/primitives/Ints.h"
#include "java/io/InvalidObjectException.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/BiConsumer.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/ObjIntConsumer.h"
#include "javax/annotation/Nullable.h"

static jint (*ComGoogleCommonCollectAbstractMapBasedMultiset_super$_size)(id, SEL);

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonCollectAbstractMapBasedMultiset () {
 @public
  id<JavaUtilMap> backingMap_;
  jlong size_;
}

+ (jint)getAndSetWithComGoogleCommonCollectCount:(ComGoogleCommonCollectCount *)i
                                         withInt:(jint)count;

- (void)readObjectNoData;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultiset, backingMap_, id<JavaUtilMap>)

inline jlong ComGoogleCommonCollectAbstractMapBasedMultiset_get_serialVersionUID();
#define ComGoogleCommonCollectAbstractMapBasedMultiset_serialVersionUID -2250766705698539974LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectAbstractMapBasedMultiset, serialVersionUID, jlong)

__attribute__((unused)) static jint ComGoogleCommonCollectAbstractMapBasedMultiset_getAndSetWithComGoogleCommonCollectCount_withInt_(ComGoogleCommonCollectCount *i, jint count);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$4();

@interface ComGoogleCommonCollectAbstractMapBasedMultiset_1 : NSObject < JavaUtilIterator > {
 @public
  ComGoogleCommonCollectAbstractMapBasedMultiset *this$0_;
  id<JavaUtilIterator> val$backingEntries_;
  id<JavaUtilMap_Entry> toRemove_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset:(ComGoogleCommonCollectAbstractMapBasedMultiset *)outer$
                                                  withJavaUtilIterator:(id<JavaUtilIterator>)capture$0;

- (jboolean)hasNext;

- (id<ComGoogleCommonCollectMultiset_Entry>)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultiset_1)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultiset_1, toRemove_, id<JavaUtilMap_Entry>)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *self, ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0);

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0);

@interface ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 : ComGoogleCommonCollectMultisets_AbstractEntry {
 @public
  ComGoogleCommonCollectAbstractMapBasedMultiset_1 *this$0_;
  id<JavaUtilMap_Entry> val$mapEntry_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset_1:(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *)outer$
                                                   withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0;

- (id)getElement;

- (jint)getCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultiset_1_1)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *self, ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0);

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0);

@interface ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator : NSObject < JavaUtilIterator > {
 @public
  ComGoogleCommonCollectAbstractMapBasedMultiset *this$0_;
  id<JavaUtilIterator> entryIterator_;
  id<JavaUtilMap_Entry> currentEntry_;
  jint occurrencesLeft_;
  jboolean canRemove_;
}

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset:(ComGoogleCommonCollectAbstractMapBasedMultiset *)outer$;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator, entryIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator, currentEntry_, id<JavaUtilMap_Entry>)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *self, ComGoogleCommonCollectAbstractMapBasedMultiset *outer$);

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *new_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *create_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator)

@interface ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 : NSObject < JavaUtilFunctionBiConsumer > {
 @public
  id<JavaUtilFunctionObjIntConsumer> val$action_;
}

- (void)acceptWithId:(id)element
              withId:(ComGoogleCommonCollectCount *)count;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1)

__attribute__((unused)) static void ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *self, id<JavaUtilFunctionObjIntConsumer> capture$0);

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(id<JavaUtilFunctionObjIntConsumer> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(id<JavaUtilFunctionObjIntConsumer> capture$0);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCollectAbstractMapBasedMultiset)

@implementation ComGoogleCommonCollectAbstractMapBasedMultiset

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingMap {
  ComGoogleCommonCollectAbstractMapBasedMultiset_initWithJavaUtilMap_(self, backingMap);
  return self;
}

- (void)setBackingMapWithJavaUtilMap:(id<JavaUtilMap>)backingMap {
  self->backingMap_ = backingMap;
}

- (id<JavaUtilSet>)entrySet {
  return [super entrySet];
}

- (id<JavaUtilIterator>)entryIterator {
  id<JavaUtilIterator> backingEntries = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(backingMap_)) entrySet])) iterator];
  return new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(self, backingEntries);
}

- (void)forEachEntryWithJavaUtilFunctionObjIntConsumer:(id<JavaUtilFunctionObjIntConsumer>)action {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(action);
  [((id<JavaUtilMap>) nil_chk(backingMap_)) forEachWithJavaUtilFunctionBiConsumer:new_ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(action)];
}

- (void)clear {
  for (ComGoogleCommonCollectCount * __strong frequency in nil_chk([((id<JavaUtilMap>) nil_chk(backingMap_)) values])) {
    [((ComGoogleCommonCollectCount *) nil_chk(frequency)) setWithInt:0];
  }
  [((id<JavaUtilMap>) nil_chk(backingMap_)) clear];
  size_ = 0LL;
}

- (jint)distinctElements {
  return [((id<JavaUtilMap>) nil_chk(backingMap_)) size];
}

- (jint)size {
  return ComGoogleCommonPrimitivesInts_saturatedCastWithLong_(size_);
}

- (id<JavaUtilIterator>)iterator {
  return new_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(self);
}

- (jint)countWithId:(id)element {
  ComGoogleCommonCollectCount *frequency = ComGoogleCommonCollectMaps_safeGetWithJavaUtilMap_withId_(backingMap_, element);
  return (frequency == nil) ? 0 : [((ComGoogleCommonCollectCount *) nil_chk(frequency)) get];
}

- (jint)addWithId:(id)element
          withInt:(jint)occurrences {
  if (occurrences == 0) {
    return [self countWithId:element];
  }
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(occurrences > 0, @"occurrences cannot be negative: %s", occurrences);
  ComGoogleCommonCollectCount *frequency = [((id<JavaUtilMap>) nil_chk(backingMap_)) getWithId:element];
  jint oldCount;
  if (frequency == nil) {
    oldCount = 0;
    (void) [((id<JavaUtilMap>) nil_chk(backingMap_)) putWithId:element withId:new_ComGoogleCommonCollectCount_initWithInt_(occurrences)];
  }
  else {
    oldCount = [frequency get];
    jlong newCount = (jlong) oldCount + (jlong) occurrences;
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(newCount <= JavaLangInteger_MAX_VALUE, @"too many occurrences: %s", newCount);
    [frequency addWithInt:occurrences];
  }
  size_ += occurrences;
  return oldCount;
}

- (jint)removeWithId:(id)element
             withInt:(jint)occurrences {
  if (occurrences == 0) {
    return [self countWithId:element];
  }
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(occurrences > 0, @"occurrences cannot be negative: %s", occurrences);
  ComGoogleCommonCollectCount *frequency = [((id<JavaUtilMap>) nil_chk(backingMap_)) getWithId:element];
  if (frequency == nil) {
    return 0;
  }
  jint oldCount = [frequency get];
  jint numberRemoved;
  if (oldCount > occurrences) {
    numberRemoved = occurrences;
  }
  else {
    numberRemoved = oldCount;
    (void) [((id<JavaUtilMap>) nil_chk(backingMap_)) removeWithId:element];
  }
  [frequency addWithInt:-numberRemoved];
  size_ -= numberRemoved;
  return oldCount;
}

- (jint)setCountWithId:(id)element
               withInt:(jint)count {
  ComGoogleCommonCollectCollectPreconditions_checkNonnegativeWithInt_withNSString_(count, @"count");
  ComGoogleCommonCollectCount *existingCounter;
  jint oldCount;
  if (count == 0) {
    existingCounter = [((id<JavaUtilMap>) nil_chk(backingMap_)) removeWithId:element];
    oldCount = ComGoogleCommonCollectAbstractMapBasedMultiset_getAndSetWithComGoogleCommonCollectCount_withInt_(existingCounter, count);
  }
  else {
    existingCounter = [((id<JavaUtilMap>) nil_chk(backingMap_)) getWithId:element];
    oldCount = ComGoogleCommonCollectAbstractMapBasedMultiset_getAndSetWithComGoogleCommonCollectCount_withInt_(existingCounter, count);
    if (existingCounter == nil) {
      (void) [((id<JavaUtilMap>) nil_chk(backingMap_)) putWithId:element withId:new_ComGoogleCommonCollectCount_initWithInt_(count)];
    }
  }
  size_ += (count - oldCount);
  return oldCount;
}

+ (jint)getAndSetWithComGoogleCommonCollectCount:(ComGoogleCommonCollectCount *)i
                                         withInt:(jint)count {
  return ComGoogleCommonCollectAbstractMapBasedMultiset_getAndSetWithComGoogleCommonCollectCount_withInt_(i, count);
}

- (void)readObjectNoData {
  @throw new_JavaIoInvalidObjectException_initWithNSString_(@"Stream data required");
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, 2, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "I", 0x1, 9, 10, -1, -1, -1, 11 },
    { NULL, "I", 0x1, 12, 13, -1, 14, -1, 15 },
    { NULL, "I", 0x1, 16, 13, -1, -1, -1, 17 },
    { NULL, "I", 0x1, 18, 13, -1, 14, -1, 19 },
    { NULL, "I", 0xa, 20, 21, -1, -1, -1, 22 },
    { NULL, "V", 0x2, -1, -1, 23, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(setBackingMapWithJavaUtilMap:);
  methods[2].selector = @selector(entrySet);
  methods[3].selector = @selector(entryIterator);
  methods[4].selector = @selector(forEachEntryWithJavaUtilFunctionObjIntConsumer:);
  methods[5].selector = @selector(clear);
  methods[6].selector = @selector(distinctElements);
  methods[7].selector = @selector(size);
  methods[8].selector = @selector(iterator);
  methods[9].selector = @selector(countWithId:);
  methods[10].selector = @selector(addWithId:withInt:);
  methods[11].selector = @selector(removeWithId:withInt:);
  methods[12].selector = @selector(setCountWithId:withInt:);
  methods[13].selector = @selector(getAndSetWithComGoogleCommonCollectCount:withInt:);
  methods[14].selector = @selector(readObjectNoData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "backingMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x82, -1, -1, 24, -1 },
    { "size_", "J", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectAbstractMapBasedMultiset_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<TE;Lcom/google/common/collect/Count;>;)V", "setBackingMap", "()Ljava/util/Set<Lcom/google/common/collect/Multiset$Entry<TE;>;>;", "()Ljava/util/Iterator<Lcom/google/common/collect/Multiset$Entry<TE;>;>;", "forEachEntry", "LJavaUtilFunctionObjIntConsumer;", "(Ljava/util/function/ObjIntConsumer<-TE;>;)V", "()Ljava/util/Iterator<TE;>;", "count", "LNSObject;", (void *)&ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$0, "add", "LNSObject;I", "(TE;I)I", (void *)&ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$1, "remove", (void *)&ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$2, "setCount", (void *)&ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$3, "getAndSet", "LComGoogleCommonCollectCount;I", (void *)&ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$4, "LJavaIoObjectStreamException;", "Ljava/util/Map<TE;Lcom/google/common/collect/Count;>;", "LComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator;", "<E:Ljava/lang/Object;>Lcom/google/common/collect/AbstractMultiset<TE;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractMapBasedMultiset = { "AbstractMapBasedMultiset", "com.google.common.collect", ptrTable, methods, fields, 7, 0x400, 15, 3, -1, 25, -1, 26, -1 };
  return &_ComGoogleCommonCollectAbstractMapBasedMultiset;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCollectAbstractMapBasedMultiset class]) {
    ComGoogleCommonCollectAbstractMapBasedMultiset_super$_size = (jint (*)(id, SEL))[ComGoogleCommonCollectAbstractMultiset instanceMethodForSelector:@selector(size)];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCollectAbstractMapBasedMultiset)
  }
}

@end

void ComGoogleCommonCollectAbstractMapBasedMultiset_initWithJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultiset *self, id<JavaUtilMap> backingMap) {
  ComGoogleCommonCollectAbstractMultiset_init(self);
  self->backingMap_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(backingMap);
  self->size_ = ComGoogleCommonCollectAbstractMapBasedMultiset_super$_size(self, @selector(size));
}

jint ComGoogleCommonCollectAbstractMapBasedMultiset_getAndSetWithComGoogleCommonCollectCount_withInt_(ComGoogleCommonCollectCount *i, jint count) {
  ComGoogleCommonCollectAbstractMapBasedMultiset_initialize();
  if (i == nil) {
    return 0;
  }
  return [i getAndSetWithInt:count];
}

IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectAbstractMapBasedMultiset__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractMapBasedMultiset)

@implementation ComGoogleCommonCollectAbstractMapBasedMultiset_1

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset:(ComGoogleCommonCollectAbstractMapBasedMultiset *)outer$
                                                  withJavaUtilIterator:(id<JavaUtilIterator>)capture$0 {
  ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(self, outer$, capture$0);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(val$backingEntries_)) hasNext];
}

- (id<ComGoogleCommonCollectMultiset_Entry>)next {
  id<JavaUtilMap_Entry> mapEntry = [((id<JavaUtilIterator>) nil_chk(val$backingEntries_)) next];
  toRemove_ = mapEntry;
  return new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(self, mapEntry);
}

- (void)remove {
  ComGoogleCommonCollectCollectPreconditions_checkRemoveWithBoolean_(toRemove_ != nil);
  this$0_->size_ -= [((ComGoogleCommonCollectCount *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(toRemove_)) getValue])) getAndSetWithInt:0];
  [((id<JavaUtilIterator>) nil_chk(val$backingEntries_)) remove];
  toRemove_ = nil;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectMultiset_Entry;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractMapBasedMultiset:withJavaUtilIterator:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractMapBasedMultiset;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$backingEntries_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "toRemove_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/common/collect/Multiset$Entry<TE;>;", "Lcom/google/common/collect/AbstractMapBasedMultiset<TE;>;", "Ljava/util/Iterator<Ljava/util/Map$Entry<TE;Lcom/google/common/collect/Count;>;>;", "Ljava/util/Map$Entry<TE;Lcom/google/common/collect/Count;>;", "LComGoogleCommonCollectAbstractMapBasedMultiset;", "entryIterator", "Ljava/lang/Object;Ljava/util/Iterator<Lcom/google/common/collect/Multiset$Entry<TE;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractMapBasedMultiset_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 4, 3, 4, -1, 5, 6, -1 };
  return &_ComGoogleCommonCollectAbstractMapBasedMultiset_1;
}

@end

void ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *self, ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0) {
  self->this$0_ = outer$;
  self->val$backingEntries_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonCollectAbstractMapBasedMultiset_1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_1, initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_, outer$, capture$0)
}

ComGoogleCommonCollectAbstractMapBasedMultiset_1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$, id<JavaUtilIterator> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_1, initWithComGoogleCommonCollectAbstractMapBasedMultiset_withJavaUtilIterator_, outer$, capture$0)
}

@implementation ComGoogleCommonCollectAbstractMapBasedMultiset_1_1

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset_1:(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *)outer$
                                                   withJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)capture$0 {
  ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(self, outer$, capture$0);
  return self;
}

- (id)getElement {
  return [((id<JavaUtilMap_Entry>) nil_chk(val$mapEntry_)) getKey];
}

- (jint)getCount {
  ComGoogleCommonCollectCount *count = [((id<JavaUtilMap_Entry>) nil_chk(val$mapEntry_)) getValue];
  if (count == nil || [count get] == 0) {
    ComGoogleCommonCollectCount *frequency = [((id<JavaUtilMap>) nil_chk(this$0_->this$0_->backingMap_)) getWithId:[self getElement]];
    if (frequency != nil) {
      return [frequency get];
    }
  }
  return (count == nil) ? 0 : [((ComGoogleCommonCollectCount *) nil_chk(count)) get];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractMapBasedMultiset_1:withJavaUtilMap_Entry:);
  methods[1].selector = @selector(getElement);
  methods[2].selector = @selector(getCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractMapBasedMultiset_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$mapEntry_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()TE;", "Ljava/util/Map$Entry<TE;Lcom/google/common/collect/Count;>;", "LComGoogleCommonCollectAbstractMapBasedMultiset_1;", "next", "Lcom/google/common/collect/Multisets$AbstractEntry<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 3, 2, 2, -1, 3, 4, -1 };
  return &_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1;
}

@end

void ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *self, ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0) {
  self->this$0_ = outer$;
  self->val$mapEntry_ = capture$0;
  ComGoogleCommonCollectMultisets_AbstractEntry_init(self);
}

ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_1_1, initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_, outer$, capture$0)
}

ComGoogleCommonCollectAbstractMapBasedMultiset_1_1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_1_1_initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_(ComGoogleCommonCollectAbstractMapBasedMultiset_1 *outer$, id<JavaUtilMap_Entry> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_1_1, initWithComGoogleCommonCollectAbstractMapBasedMultiset_1_withJavaUtilMap_Entry_, outer$, capture$0)
}

@implementation ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator

- (instancetype)initWithComGoogleCommonCollectAbstractMapBasedMultiset:(ComGoogleCommonCollectAbstractMapBasedMultiset *)outer$ {
  ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  return occurrencesLeft_ > 0 || [((id<JavaUtilIterator>) nil_chk(entryIterator_)) hasNext];
}

- (id)next {
  if (occurrencesLeft_ == 0) {
    currentEntry_ = [((id<JavaUtilIterator>) nil_chk(entryIterator_)) next];
    occurrencesLeft_ = [((ComGoogleCommonCollectCount *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(currentEntry_)) getValue])) get];
  }
  occurrencesLeft_--;
  canRemove_ = true;
  return [((id<JavaUtilMap_Entry>) nil_chk(currentEntry_)) getKey];
}

- (void)remove {
  ComGoogleCommonCollectCollectPreconditions_checkRemoveWithBoolean_(canRemove_);
  jint frequency = [((ComGoogleCommonCollectCount *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(currentEntry_)) getValue])) get];
  if (frequency <= 0) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  if ([((ComGoogleCommonCollectCount *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(currentEntry_)) getValue])) addAndGetWithInt:-1] == 0) {
    [((id<JavaUtilIterator>) nil_chk(entryIterator_)) remove];
  }
  this$0_->size_--;
  canRemove_ = false;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectAbstractMapBasedMultiset:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectAbstractMapBasedMultiset;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "entryIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x10, -1, -1, 2, -1 },
    { "currentEntry_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
    { "occurrencesLeft_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "canRemove_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TE;", "Lcom/google/common/collect/AbstractMapBasedMultiset<TE;>;", "Ljava/util/Iterator<Ljava/util/Map$Entry<TE;Lcom/google/common/collect/Count;>;>;", "Ljava/util/Map$Entry<TE;Lcom/google/common/collect/Count;>;", "LComGoogleCommonCollectAbstractMapBasedMultiset;", "Ljava/lang/Object;Ljava/util/Iterator<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator = { "MapBasedMultisetIterator", "com.google.common.collect", ptrTable, methods, fields, 7, 0x2, 4, 5, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator;
}

@end

void ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *self, ComGoogleCommonCollectAbstractMapBasedMultiset *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->entryIterator_ = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(outer$->backingMap_)) entrySet])) iterator];
}

ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *new_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator, initWithComGoogleCommonCollectAbstractMapBasedMultiset_, outer$)
}

ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator *create_ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator_initWithComGoogleCommonCollectAbstractMapBasedMultiset_(ComGoogleCommonCollectAbstractMapBasedMultiset *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator, initWithComGoogleCommonCollectAbstractMapBasedMultiset_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractMapBasedMultiset_MapBasedMultisetIterator)

@implementation ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1

- (void)acceptWithId:(id)element
              withId:(ComGoogleCommonCollectCount *)count {
  [((id<JavaUtilFunctionObjIntConsumer>) nil_chk(val$action_)) acceptWithId:element withInt:[((ComGoogleCommonCollectCount *) nil_chk(count)) get]];
}

- (id<JavaUtilFunctionBiConsumer>)andThenWithJavaUtilFunctionBiConsumer:(id<JavaUtilFunctionBiConsumer>)arg0 {
  return JavaUtilFunctionBiConsumer_andThenWithJavaUtilFunctionBiConsumer_(self, arg0);
}

@end

void ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *self, id<JavaUtilFunctionObjIntConsumer> capture$0) {
  self->val$action_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *new_ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(id<JavaUtilFunctionObjIntConsumer> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1, initWithJavaUtilFunctionObjIntConsumer_, capture$0)
}

ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1 *create_ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1_initWithJavaUtilFunctionObjIntConsumer_(id<JavaUtilFunctionObjIntConsumer> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectAbstractMapBasedMultiset_$Lambda$1, initWithJavaUtilFunctionObjIntConsumer_, capture$0)
}
