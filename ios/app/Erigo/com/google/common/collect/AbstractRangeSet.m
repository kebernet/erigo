//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/AbstractRangeSet.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/AbstractRangeSet.h"
#include "com/google/common/collect/Range.h"
#include "com/google/common/collect/RangeSet.h"
#include "java/lang/Comparable.h"
#include "java/lang/Iterable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Set.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractRangeSet__Annotations$0();

@implementation ComGoogleCommonCollectAbstractRangeSet

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectAbstractRangeSet_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)containsWithJavaLangComparable:(id<JavaLangComparable>)value {
  return [self rangeContainingWithJavaLangComparable:value] != nil;
}

- (ComGoogleCommonCollectRange *)rangeContainingWithJavaLangComparable:(id<JavaLangComparable>)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEmpty {
  return [((id<JavaUtilSet>) nil_chk([self asRanges])) isEmpty];
}

- (void)addWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)removeWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)range {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)clear {
  [self removeWithComGoogleCommonCollectRange:ComGoogleCommonCollectRange_all()];
}

- (jboolean)enclosesAllWithComGoogleCommonCollectRangeSet:(id<ComGoogleCommonCollectRangeSet>)other {
  return [self enclosesAllWithJavaLangIterable:[((id<ComGoogleCommonCollectRangeSet>) nil_chk(other)) asRanges]];
}

- (void)addAllWithComGoogleCommonCollectRangeSet:(id<ComGoogleCommonCollectRangeSet>)other {
  [self addAllWithJavaLangIterable:[((id<ComGoogleCommonCollectRangeSet>) nil_chk(other)) asRanges]];
}

- (void)removeAllWithComGoogleCommonCollectRangeSet:(id<ComGoogleCommonCollectRangeSet>)other {
  [self removeAllWithJavaLangIterable:[((id<ComGoogleCommonCollectRangeSet>) nil_chk(other)) asRanges]];
}

- (jboolean)intersectsWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)otherRange {
  return ![((id<ComGoogleCommonCollectRangeSet>) nil_chk([self subRangeSetWithComGoogleCommonCollectRange:otherRange])) isEmpty];
}

- (jboolean)enclosesWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)otherRange {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  else if ([ComGoogleCommonCollectRangeSet_class_() isInstance:obj]) {
    id<ComGoogleCommonCollectRangeSet> other = (id<ComGoogleCommonCollectRangeSet>) cast_check(obj, ComGoogleCommonCollectRangeSet_class_());
    return [((id<JavaUtilSet>) nil_chk([self asRanges])) isEqual:[((id<ComGoogleCommonCollectRangeSet>) nil_chk(other)) asRanges]];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilSet>) nil_chk([self asRanges])) hash]);
}

- (NSString *)description {
  return [((id<JavaUtilSet>) nil_chk([self asRanges])) description];
}

- (jboolean)enclosesAllWithJavaLangIterable:(id<JavaLangIterable>)arg0 {
  return ComGoogleCommonCollectRangeSet_enclosesAllWithJavaLangIterable_(self, arg0);
}

- (void)addAllWithJavaLangIterable:(id<JavaLangIterable>)arg0 {
  ComGoogleCommonCollectRangeSet_addAllWithJavaLangIterable_(self, arg0);
}

- (void)removeAllWithJavaLangIterable:(id<JavaLangIterable>)arg0 {
  ComGoogleCommonCollectRangeSet_removeAllWithJavaLangIterable_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectRange;", 0x401, 3, 1, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 8, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 10, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 14, 10, -1, 13, -1, -1 },
    { NULL, "Z", 0x1, 15, 6, -1, 16, -1, -1 },
    { NULL, "Z", 0x401, 17, 6, -1, 16, -1, -1 },
    { NULL, "Z", 0x1, 18, 19, -1, -1, -1, 20 },
    { NULL, "I", 0x11, 21, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 22, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(containsWithJavaLangComparable:);
  methods[2].selector = @selector(rangeContainingWithJavaLangComparable:);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(addWithComGoogleCommonCollectRange:);
  methods[5].selector = @selector(removeWithComGoogleCommonCollectRange:);
  methods[6].selector = @selector(clear);
  methods[7].selector = @selector(enclosesAllWithComGoogleCommonCollectRangeSet:);
  methods[8].selector = @selector(addAllWithComGoogleCommonCollectRangeSet:);
  methods[9].selector = @selector(removeAllWithComGoogleCommonCollectRangeSet:);
  methods[10].selector = @selector(intersectsWithComGoogleCommonCollectRange:);
  methods[11].selector = @selector(enclosesWithComGoogleCommonCollectRange:);
  methods[12].selector = @selector(isEqual:);
  methods[13].selector = @selector(hash);
  methods[14].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "contains", "LJavaLangComparable;", "(TC;)Z", "rangeContaining", "(TC;)Lcom/google/common/collect/Range<TC;>;", "add", "LComGoogleCommonCollectRange;", "(Lcom/google/common/collect/Range<TC;>;)V", "remove", "enclosesAll", "LComGoogleCommonCollectRangeSet;", "(Lcom/google/common/collect/RangeSet<TC;>;)Z", "addAll", "(Lcom/google/common/collect/RangeSet<TC;>;)V", "removeAll", "intersects", "(Lcom/google/common/collect/Range<TC;>;)Z", "encloses", "equals", "LNSObject;", (void *)&ComGoogleCommonCollectAbstractRangeSet__Annotations$0, "hashCode", "toString", "<C::Ljava/lang/Comparable;>Ljava/lang/Object;Lcom/google/common/collect/RangeSet<TC;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractRangeSet = { "AbstractRangeSet", "com.google.common.collect", ptrTable, methods, NULL, 7, 0x400, 15, 0, -1, -1, -1, 23, -1 };
  return &_ComGoogleCommonCollectAbstractRangeSet;
}

@end

void ComGoogleCommonCollectAbstractRangeSet_init(ComGoogleCommonCollectAbstractRangeSet *self) {
  NSObject_init(self);
}

IOSObjectArray *ComGoogleCommonCollectAbstractRangeSet__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractRangeSet)
