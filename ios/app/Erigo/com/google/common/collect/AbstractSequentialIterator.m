//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/AbstractSequentialIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/AbstractSequentialIterator.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/NoSuchElementException.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonCollectAbstractSequentialIterator () {
 @public
  id nextOrNull_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractSequentialIterator, nextOrNull_, id)

__attribute__((unused)) static jboolean ComGoogleCommonCollectAbstractSequentialIterator_hasNext(ComGoogleCommonCollectAbstractSequentialIterator *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectAbstractSequentialIterator__Annotations$0();

@implementation ComGoogleCommonCollectAbstractSequentialIterator

- (instancetype)initWithId:(id)firstOrNull {
  ComGoogleCommonCollectAbstractSequentialIterator_initWithId_(self, firstOrNull);
  return self;
}

- (id)computeNextWithId:(id)previous {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasNext {
  return ComGoogleCommonCollectAbstractSequentialIterator_hasNext(self);
}

- (id)next {
  if (!ComGoogleCommonCollectAbstractSequentialIterator_hasNext(self)) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  @try {
    return nextOrNull_;
  }
  @finally {
    nextOrNull_ = [self computeNextWithId:nextOrNull_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, 2 },
    { NULL, "LNSObject;", 0x404, 3, 0, -1, 4, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x11, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(computeNextWithId:);
  methods[2].selector = @selector(hasNext);
  methods[3].selector = @selector(next);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nextOrNull_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", (void *)&ComGoogleCommonCollectAbstractSequentialIterator__Annotations$0, "computeNext", "(TT;)TT;", "()TT;", "TT;", "<T:Ljava/lang/Object;>Lcom/google/common/collect/UnmodifiableIterator<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectAbstractSequentialIterator = { "AbstractSequentialIterator", "com.google.common.collect", ptrTable, methods, fields, 7, 0x401, 4, 1, -1, -1, -1, 7, -1 };
  return &_ComGoogleCommonCollectAbstractSequentialIterator;
}

@end

void ComGoogleCommonCollectAbstractSequentialIterator_initWithId_(ComGoogleCommonCollectAbstractSequentialIterator *self, id firstOrNull) {
  ComGoogleCommonCollectUnmodifiableIterator_init(self);
  self->nextOrNull_ = firstOrNull;
}

jboolean ComGoogleCommonCollectAbstractSequentialIterator_hasNext(ComGoogleCommonCollectAbstractSequentialIterator *self) {
  return self->nextOrNull_ != nil;
}

IOSObjectArray *ComGoogleCommonCollectAbstractSequentialIterator__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectAbstractSequentialIterator)
