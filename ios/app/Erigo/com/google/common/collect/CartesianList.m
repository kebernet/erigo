//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/CartesianList.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/CartesianList.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/math/IntMath.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonCollectCartesianList () {
 @public
  ComGoogleCommonCollectImmutableList *axes_;
  IOSIntArray *axesSizeProduct_;
}

- (jint)getAxisIndexForProductIndexWithInt:(jint)index
                                   withInt:(jint)axis;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectCartesianList, axes_, ComGoogleCommonCollectImmutableList *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectCartesianList, axesSizeProduct_, IOSIntArray *)

__attribute__((unused)) static jint ComGoogleCommonCollectCartesianList_getAxisIndexForProductIndexWithInt_withInt_(ComGoogleCommonCollectCartesianList *self, jint index, jint axis);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectCartesianList__Annotations$0();

@interface ComGoogleCommonCollectCartesianList_1 : ComGoogleCommonCollectImmutableList {
 @public
  ComGoogleCommonCollectCartesianList *this$0_;
  jint val$index_;
}

- (instancetype)initWithComGoogleCommonCollectCartesianList:(ComGoogleCommonCollectCartesianList *)outer$
                                                    withInt:(jint)capture$0;

- (jint)size;

- (id)getWithInt:(jint)axis;

- (jboolean)isPartialView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectCartesianList_1)

__attribute__((unused)) static void ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList_1 *self, ComGoogleCommonCollectCartesianList *outer$, jint capture$0);

__attribute__((unused)) static ComGoogleCommonCollectCartesianList_1 *new_ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectCartesianList_1 *create_ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList *outer$, jint capture$0);

@implementation ComGoogleCommonCollectCartesianList

+ (id<JavaUtilList>)createWithJavaUtilList:(id<JavaUtilList>)lists {
  return ComGoogleCommonCollectCartesianList_createWithJavaUtilList_(lists);
}

- (instancetype)initWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)axes {
  ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(self, axes);
  return self;
}

- (jint)getAxisIndexForProductIndexWithInt:(jint)index
                                   withInt:(jint)axis {
  return ComGoogleCommonCollectCartesianList_getAxisIndexForProductIndexWithInt_withInt_(self, index, axis);
}

- (ComGoogleCommonCollectImmutableList *)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  return new_ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(self, index);
}

- (jint)size {
  return IOSIntArray_Get(nil_chk(axesSizeProduct_), 0);
}

- (jboolean)containsWithId:(id)o {
  if (!([JavaUtilList_class_() isInstance:o])) {
    return false;
  }
  id<JavaUtilList> list = (id<JavaUtilList>) cast_check(o, JavaUtilList_class_());
  if ([((id<JavaUtilList>) nil_chk(list)) size] != [((ComGoogleCommonCollectImmutableList *) nil_chk(axes_)) size]) {
    return false;
  }
  id<JavaUtilListIterator> itr = [list listIterator];
  while ([((id<JavaUtilListIterator>) nil_chk(itr)) hasNext]) {
    jint index = [itr nextIndex];
    if (![((id<JavaUtilList>) nil_chk([axes_ getWithInt:index])) containsWithId:[itr next]]) {
      return false;
    }
  }
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x8, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, 12 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithJavaUtilList:);
  methods[1].selector = @selector(initWithComGoogleCommonCollectImmutableList:);
  methods[2].selector = @selector(getAxisIndexForProductIndexWithInt:withInt:);
  methods[3].selector = @selector(getWithInt:);
  methods[4].selector = @selector(size);
  methods[5].selector = @selector(containsWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "axes_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x92, -1, -1, 13, -1 },
    { "axesSizeProduct_", "[I", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LJavaUtilList;", "<E:Ljava/lang/Object;>(Ljava/util/List<+Ljava/util/List<+TE;>;>;)Ljava/util/List<Ljava/util/List<TE;>;>;", "LComGoogleCommonCollectImmutableList;", "(Lcom/google/common/collect/ImmutableList<Ljava/util/List<TE;>;>;)V", "getAxisIndexForProductIndex", "II", "get", "I", "(I)Lcom/google/common/collect/ImmutableList<TE;>;", "contains", "LNSObject;", (void *)&ComGoogleCommonCollectCartesianList__Annotations$0, "Lcom/google/common/collect/ImmutableList<Ljava/util/List<TE;>;>;", "<E:Ljava/lang/Object;>Ljava/util/AbstractList<Ljava/util/List<TE;>;>;Ljava/util/RandomAccess;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectCartesianList = { "CartesianList", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 6, 2, -1, -1, -1, 14, -1 };
  return &_ComGoogleCommonCollectCartesianList;
}

@end

id<JavaUtilList> ComGoogleCommonCollectCartesianList_createWithJavaUtilList_(id<JavaUtilList> lists) {
  ComGoogleCommonCollectCartesianList_initialize();
  ComGoogleCommonCollectImmutableList_Builder *axesBuilder = new_ComGoogleCommonCollectImmutableList_Builder_initWithInt_([((id<JavaUtilList>) nil_chk(lists)) size]);
  for (id<JavaUtilList> __strong list in lists) {
    id<JavaUtilList> copy_ = ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilCollection_(list);
    if ([((id<JavaUtilList>) nil_chk(copy_)) isEmpty]) {
      return ComGoogleCommonCollectImmutableList_of();
    }
    (void) [axesBuilder addWithId:copy_];
  }
  return new_ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_([axesBuilder build]);
}

void ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectCartesianList *self, ComGoogleCommonCollectImmutableList *axes) {
  JavaUtilAbstractList_init(self);
  self->axes_ = axes;
  IOSIntArray *axesSizeProduct = [IOSIntArray newArrayWithLength:[((ComGoogleCommonCollectImmutableList *) nil_chk(axes)) size] + 1];
  *IOSIntArray_GetRef(axesSizeProduct, [axes size]) = 1;
  @try {
    for (jint i = [axes size] - 1; i >= 0; i--) {
      *IOSIntArray_GetRef(axesSizeProduct, i) = ComGoogleCommonMathIntMath_checkedMultiplyWithInt_withInt_(IOSIntArray_Get(axesSizeProduct, i + 1), [((id<JavaUtilList>) nil_chk([axes getWithInt:i])) size]);
    }
  }
  @catch (JavaLangArithmeticException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Cartesian product too large; must have size at most Integer.MAX_VALUE");
  }
  self->axesSizeProduct_ = axesSizeProduct;
}

ComGoogleCommonCollectCartesianList *new_ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectImmutableList *axes) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectCartesianList, initWithComGoogleCommonCollectImmutableList_, axes)
}

ComGoogleCommonCollectCartesianList *create_ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectImmutableList *axes) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectCartesianList, initWithComGoogleCommonCollectImmutableList_, axes)
}

jint ComGoogleCommonCollectCartesianList_getAxisIndexForProductIndexWithInt_withInt_(ComGoogleCommonCollectCartesianList *self, jint index, jint axis) {
  return (index / IOSIntArray_Get(nil_chk(self->axesSizeProduct_), axis + 1)) % [((id<JavaUtilList>) nil_chk([((ComGoogleCommonCollectImmutableList *) nil_chk(self->axes_)) getWithInt:axis])) size];
}

IOSObjectArray *ComGoogleCommonCollectCartesianList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectCartesianList)

@implementation ComGoogleCommonCollectCartesianList_1

- (instancetype)initWithComGoogleCommonCollectCartesianList:(ComGoogleCommonCollectCartesianList *)outer$
                                                    withInt:(jint)capture$0 {
  ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(self, outer$, capture$0);
  return self;
}

- (jint)size {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(this$0_->axes_)) size];
}

- (id)getWithInt:(jint)axis {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(axis, [self size]);
  jint axisIndex = ComGoogleCommonCollectCartesianList_getAxisIndexForProductIndexWithInt_withInt_(this$0_, val$index_, axis);
  return [((id<JavaUtilList>) nil_chk([((ComGoogleCommonCollectImmutableList *) nil_chk(this$0_->axes_)) getWithInt:axis])) getWithInt:axisIndex];
}

- (jboolean)isPartialView {
  return true;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectCartesianList:withInt:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectCartesianList;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$index_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "(I)TE;", "Lcom/google/common/collect/CartesianList<TE;>;", "LComGoogleCommonCollectCartesianList;", "getWithInt:", "Lcom/google/common/collect/ImmutableList<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectCartesianList_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 4, 2, 4, -1, 5, 6, -1 };
  return &_ComGoogleCommonCollectCartesianList_1;
}

@end

void ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList_1 *self, ComGoogleCommonCollectCartesianList *outer$, jint capture$0) {
  self->this$0_ = outer$;
  self->val$index_ = capture$0;
  ComGoogleCommonCollectImmutableList_init(self);
}

ComGoogleCommonCollectCartesianList_1 *new_ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectCartesianList_1, initWithComGoogleCommonCollectCartesianList_withInt_, outer$, capture$0)
}

ComGoogleCommonCollectCartesianList_1 *create_ComGoogleCommonCollectCartesianList_1_initWithComGoogleCommonCollectCartesianList_withInt_(ComGoogleCommonCollectCartesianList *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectCartesianList_1, initWithComGoogleCommonCollectCartesianList_withInt_, outer$, capture$0)
}
