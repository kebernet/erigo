//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/DenseImmutableTable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/AbstractIterator.h"
#include "com/google/common/collect/DenseImmutableTable.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/ImmutableTable.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/RegularImmutableTable.h"
#include "com/google/common/collect/Table.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Map.h"
#include "javax/annotation/Nullable.h"

@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonCollectDenseImmutableTable () {
 @public
  ComGoogleCommonCollectImmutableMap *rowKeyToIndex_;
  ComGoogleCommonCollectImmutableMap *columnKeyToIndex_;
  ComGoogleCommonCollectImmutableMap *rowMap_;
  ComGoogleCommonCollectImmutableMap *columnMap_;
  IOSIntArray *rowCounts_;
  IOSIntArray *columnCounts_;
  IOSObjectArray *values_DenseImmutableTable_;
  IOSIntArray *cellRowIndices_;
  IOSIntArray *cellColumnIndices_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, rowKeyToIndex_, ComGoogleCommonCollectImmutableMap *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, columnKeyToIndex_, ComGoogleCommonCollectImmutableMap *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, rowMap_, ComGoogleCommonCollectImmutableMap *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, columnMap_, ComGoogleCommonCollectImmutableMap *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, rowCounts_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, columnCounts_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, values_DenseImmutableTable_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, cellRowIndices_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectDenseImmutableTable, cellColumnIndices_, IOSIntArray *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable__Annotations$0();

@interface ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap : ComGoogleCommonCollectImmutableMap_IteratorBasedImmutableMap {
 @public
  jint size_;
}

- (instancetype)initWithInt:(jint)size;

- (ComGoogleCommonCollectImmutableMap *)keyToIndex;

- (jboolean)isFull;

- (id)getKeyWithInt:(jint)index;

- (id)getValueWithInt:(jint)keyIndex;

- (ComGoogleCommonCollectImmutableSet *)createKeySet;

- (jint)size;

- (id)getWithId:(id)key;

- (ComGoogleCommonCollectUnmodifiableIterator *)entryIterator;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *self, jint size);

__attribute__((unused)) static jboolean ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_isFull(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$1();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap)

@interface ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 : ComGoogleCommonCollectAbstractIterator {
 @public
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *this$0_;
  jint index_;
  jint maxIndex_;
}

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap:(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *)outer$;

- (id<JavaUtilMap_Entry>)computeNext;

- (id<JavaUtilMap_Entry>)endOfData;

- (id<JavaUtilMap_Entry>)next;

- (id<JavaUtilMap_Entry>)peek;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *self, ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$);

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *new_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *create_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$);

@interface ComGoogleCommonCollectDenseImmutableTable_Row : ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap {
 @public
  ComGoogleCommonCollectDenseImmutableTable *this$0_;
  jint rowIndex_;
}

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$
                                                          withInt:(jint)rowIndex;

- (ComGoogleCommonCollectImmutableMap *)keyToIndex;

- (id)getValueWithInt:(jint)keyIndex;

- (jboolean)isPartialView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_Row)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable_Row *self, ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex);

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_Row *new_ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_Row *create_ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectDenseImmutableTable_Row)

@interface ComGoogleCommonCollectDenseImmutableTable_Column : ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap {
 @public
  ComGoogleCommonCollectDenseImmutableTable *this$0_;
  jint columnIndex_;
}

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$
                                                          withInt:(jint)columnIndex;

- (ComGoogleCommonCollectImmutableMap *)keyToIndex;

- (id)getValueWithInt:(jint)keyIndex;

- (jboolean)isPartialView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_Column)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable_Column *self, ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex);

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_Column *new_ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_Column *create_ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectDenseImmutableTable_Column)

@interface ComGoogleCommonCollectDenseImmutableTable_RowMap : ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap {
 @public
  __unsafe_unretained ComGoogleCommonCollectDenseImmutableTable *this$0_;
}

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$;

- (ComGoogleCommonCollectImmutableMap *)keyToIndex;

- (id<JavaUtilMap>)getValueWithInt:(jint)keyIndex;

- (jboolean)isPartialView;

- (id<JavaUtilMap>)computeIfAbsentWithId:(id)arg0
            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilMap>)getWithId:(id)arg0;

- (id<JavaUtilMap>)putIfAbsentWithId:(id)arg0
                              withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)removeWithId:(id)arg0;

- (id<JavaUtilMap>)computeIfPresentWithId:(id)arg0
           withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilMap>)replaceWithId:(id)arg0
                          withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)putWithId:(id)arg0
                      withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)computeWithId:(id)arg0
  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilMap>)mergeWithId:(id)arg0
                        withId:(id<JavaUtilMap>)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilMap>)getOrDefaultWithId:(id)arg0
                               withId:(id<JavaUtilMap>)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_RowMap)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable_RowMap *self, ComGoogleCommonCollectDenseImmutableTable *outer$);

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_RowMap *new_ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_RowMap *create_ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectDenseImmutableTable_RowMap)

@interface ComGoogleCommonCollectDenseImmutableTable_ColumnMap : ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap {
 @public
  __unsafe_unretained ComGoogleCommonCollectDenseImmutableTable *this$0_;
}

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$;

- (ComGoogleCommonCollectImmutableMap *)keyToIndex;

- (id<JavaUtilMap>)getValueWithInt:(jint)keyIndex;

- (jboolean)isPartialView;

- (id<JavaUtilMap>)computeIfAbsentWithId:(id)arg0
            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilMap>)getWithId:(id)arg0;

- (id<JavaUtilMap>)putIfAbsentWithId:(id)arg0
                              withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)removeWithId:(id)arg0;

- (id<JavaUtilMap>)computeIfPresentWithId:(id)arg0
           withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilMap>)replaceWithId:(id)arg0
                          withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)putWithId:(id)arg0
                      withId:(id<JavaUtilMap>)arg1;

- (id<JavaUtilMap>)computeWithId:(id)arg0
  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilMap>)mergeWithId:(id)arg0
                        withId:(id<JavaUtilMap>)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilMap>)getOrDefaultWithId:(id)arg0
                               withId:(id<JavaUtilMap>)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectDenseImmutableTable_ColumnMap)

__attribute__((unused)) static void ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable_ColumnMap *self, ComGoogleCommonCollectDenseImmutableTable *outer$);

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_ColumnMap *new_ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectDenseImmutableTable_ColumnMap *create_ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectDenseImmutableTable_ColumnMap)

@implementation ComGoogleCommonCollectDenseImmutableTable

- (instancetype)initWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)cellList
                     withComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)rowSpace
                     withComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)columnSpace {
  ComGoogleCommonCollectDenseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(self, cellList, rowSpace, columnSpace);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)columnMap {
  return columnMap_;
}

- (ComGoogleCommonCollectImmutableMap *)rowMap {
  return rowMap_;
}

- (id)getWithId:(id)rowKey
         withId:(id)columnKey {
  JavaLangInteger *rowIndex = [((ComGoogleCommonCollectImmutableMap *) nil_chk(rowKeyToIndex_)) getWithId:rowKey];
  JavaLangInteger *columnIndex = [((ComGoogleCommonCollectImmutableMap *) nil_chk(columnKeyToIndex_)) getWithId:columnKey];
  return ((rowIndex == nil) || (columnIndex == nil)) ? nil : IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(values_DenseImmutableTable_), [((JavaLangInteger *) nil_chk(rowIndex)) intValue])), [((JavaLangInteger *) nil_chk(columnIndex)) intValue]);
}

- (jint)size {
  return ((IOSIntArray *) nil_chk(cellRowIndices_))->size_;
}

- (id<ComGoogleCommonCollectTable_Cell>)getCellWithInt:(jint)index {
  jint rowIndex = IOSIntArray_Get(nil_chk(cellRowIndices_), index);
  jint columnIndex = IOSIntArray_Get(nil_chk(cellColumnIndices_), index);
  id rowKey = [((ComGoogleCommonCollectImmutableList *) nil_chk([((ComGoogleCommonCollectImmutableSet *) nil_chk([self rowKeySet])) asList])) getWithInt:rowIndex];
  id columnKey = [((ComGoogleCommonCollectImmutableList *) nil_chk([((ComGoogleCommonCollectImmutableSet *) nil_chk([self columnKeySet])) asList])) getWithInt:columnIndex];
  id value = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(values_DenseImmutableTable_), rowIndex)), columnIndex);
  return ComGoogleCommonCollectImmutableTable_cellOfWithId_withId_withId_(rowKey, columnKey, value);
}

- (id)getValueWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(values_DenseImmutableTable_), IOSIntArray_Get(nil_chk(cellRowIndices_), index))), IOSIntArray_Get(nil_chk(cellColumnIndices_), index));
}

- (ComGoogleCommonCollectImmutableTable_SerializedForm *)createSerializedForm {
  return ComGoogleCommonCollectImmutableTable_SerializedForm_createWithComGoogleCommonCollectImmutableTable_withIntArray_withIntArray_(self, cellRowIndices_, cellColumnIndices_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, -1, 6, -1, 7 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectTable_Cell;", 0x0, 8, 9, -1, 10, -1, -1 },
    { NULL, "LNSObject;", 0x0, 11, 9, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableTable_SerializedForm;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectImmutableList:withComGoogleCommonCollectImmutableSet:withComGoogleCommonCollectImmutableSet:);
  methods[1].selector = @selector(columnMap);
  methods[2].selector = @selector(rowMap);
  methods[3].selector = @selector(getWithId:withId:);
  methods[4].selector = @selector(size);
  methods[5].selector = @selector(getCellWithInt:);
  methods[6].selector = @selector(getValueWithInt:);
  methods[7].selector = @selector(createSerializedForm);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "rowKeyToIndex_", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "columnKeyToIndex_", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
    { "rowMap_", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "columnMap_", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "rowCounts_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "columnCounts_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "values_DenseImmutableTable_", "[[LNSObject;", .constantValue.asLong = 0, 0x12, 17, -1, 18, -1 },
    { "cellRowIndices_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cellColumnIndices_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableList;LComGoogleCommonCollectImmutableSet;LComGoogleCommonCollectImmutableSet;", "(Lcom/google/common/collect/ImmutableList<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;Lcom/google/common/collect/ImmutableSet<TR;>;Lcom/google/common/collect/ImmutableSet<TC;>;)V", "()Lcom/google/common/collect/ImmutableMap<TC;Ljava/util/Map<TR;TV;>;>;", "()Lcom/google/common/collect/ImmutableMap<TR;Ljava/util/Map<TC;TV;>;>;", "get", "LNSObject;LNSObject;", "(Ljava/lang/Object;Ljava/lang/Object;)TV;", (void *)&ComGoogleCommonCollectDenseImmutableTable__Annotations$0, "getCell", "I", "(I)Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;", "getValue", "(I)TV;", "Lcom/google/common/collect/ImmutableMap<TR;Ljava/lang/Integer;>;", "Lcom/google/common/collect/ImmutableMap<TC;Ljava/lang/Integer;>;", "Lcom/google/common/collect/ImmutableMap<TR;Ljava/util/Map<TC;TV;>;>;", "Lcom/google/common/collect/ImmutableMap<TC;Ljava/util/Map<TR;TV;>;>;", "values", "[[TV;", "LComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap;LComGoogleCommonCollectDenseImmutableTable_Row;LComGoogleCommonCollectDenseImmutableTable_Column;LComGoogleCommonCollectDenseImmutableTable_RowMap;LComGoogleCommonCollectDenseImmutableTable_ColumnMap;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable = { "DenseImmutableTable", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 8, 9, -1, 19, -1, 20, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectDenseImmutableTable *self, ComGoogleCommonCollectImmutableList *cellList, ComGoogleCommonCollectImmutableSet *rowSpace, ComGoogleCommonCollectImmutableSet *columnSpace) {
  ComGoogleCommonCollectRegularImmutableTable_init(self);
  IOSObjectArray *array = [IOSObjectArray newArrayWithDimensions:2 lengths:(jint[]){ [((ComGoogleCommonCollectImmutableSet *) nil_chk(rowSpace)) size], [((ComGoogleCommonCollectImmutableSet *) nil_chk(columnSpace)) size] } type:NSObject_class_()];
  self->values_DenseImmutableTable_ = array;
  self->rowKeyToIndex_ = ComGoogleCommonCollectMaps_indexMapWithJavaUtilCollection_(rowSpace);
  self->columnKeyToIndex_ = ComGoogleCommonCollectMaps_indexMapWithJavaUtilCollection_(columnSpace);
  self->rowCounts_ = [IOSIntArray newArrayWithLength:[((ComGoogleCommonCollectImmutableMap *) nil_chk(self->rowKeyToIndex_)) size]];
  self->columnCounts_ = [IOSIntArray newArrayWithLength:[((ComGoogleCommonCollectImmutableMap *) nil_chk(self->columnKeyToIndex_)) size]];
  IOSIntArray *cellRowIndices = [IOSIntArray newArrayWithLength:[((ComGoogleCommonCollectImmutableList *) nil_chk(cellList)) size]];
  IOSIntArray *cellColumnIndices = [IOSIntArray newArrayWithLength:[cellList size]];
  for (jint i = 0; i < [cellList size]; i++) {
    id<ComGoogleCommonCollectTable_Cell> cell = [cellList getWithInt:i];
    id rowKey = [((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell)) getRowKey];
    id columnKey = [cell getColumnKey];
    jint rowIndex = [((JavaLangInteger *) nil_chk([self->rowKeyToIndex_ getWithId:rowKey])) intValue];
    jint columnIndex = [((JavaLangInteger *) nil_chk([self->columnKeyToIndex_ getWithId:columnKey])) intValue];
    id existingValue = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->values_DenseImmutableTable_, rowIndex)), columnIndex);
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(existingValue == nil, @"duplicate key: (%s, %s)", rowKey, columnKey);
    (void) IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(self->values_DenseImmutableTable_, rowIndex)), columnIndex, [cell getValue]);
    (*IOSIntArray_GetRef(self->rowCounts_, rowIndex))++;
    (*IOSIntArray_GetRef(self->columnCounts_, columnIndex))++;
    *IOSIntArray_GetRef(cellRowIndices, i) = rowIndex;
    *IOSIntArray_GetRef(cellColumnIndices, i) = columnIndex;
  }
  self->cellRowIndices_ = cellRowIndices;
  self->cellColumnIndices_ = cellColumnIndices;
  self->rowMap_ = new_ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(self);
  self->columnMap_ = new_ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(self);
}

ComGoogleCommonCollectDenseImmutableTable *new_ComGoogleCommonCollectDenseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableList *cellList, ComGoogleCommonCollectImmutableSet *rowSpace, ComGoogleCommonCollectImmutableSet *columnSpace) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable, initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_, cellList, rowSpace, columnSpace)
}

ComGoogleCommonCollectDenseImmutableTable *create_ComGoogleCommonCollectDenseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableList *cellList, ComGoogleCommonCollectImmutableSet *rowSpace, ComGoogleCommonCollectImmutableSet *columnSpace) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable, initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_, cellList, rowSpace, columnSpace)
}

IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable)

@implementation ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap

- (instancetype)initWithInt:(jint)size {
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(self, size);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)keyToIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isFull {
  return ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_isFull(self);
}

- (id)getKeyWithInt:(jint)index {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk([((ComGoogleCommonCollectImmutableSet *) nil_chk([((ComGoogleCommonCollectImmutableMap *) nil_chk([self keyToIndex])) keySet])) asList])) getWithInt:index];
}

- (id)getValueWithInt:(jint)keyIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonCollectImmutableSet *)createKeySet {
  return ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_isFull(self) ? [((ComGoogleCommonCollectImmutableMap *) nil_chk([self keyToIndex])) keySet] : [super createKeySet];
}

- (jint)size {
  return size_;
}

- (id)getWithId:(id)key {
  JavaLangInteger *keyIndex = [((ComGoogleCommonCollectImmutableMap *) nil_chk([self keyToIndex])) getWithId:key];
  return (keyIndex == nil) ? nil : [self getValueWithInt:[((JavaLangInteger *) nil_chk(keyIndex)) intValue]];
}

- (ComGoogleCommonCollectUnmodifiableIterator *)entryIterator {
  return new_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x400, -1, -1, -1, 1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 2, 0, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x400, 4, 0, -1, 5, 6, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x0, -1, -1, -1, 7, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, 9, -1, 10, -1, 11 },
    { NULL, "LComGoogleCommonCollectUnmodifiableIterator;", 0x0, -1, -1, -1, 12, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(keyToIndex);
  methods[2].selector = @selector(isFull);
  methods[3].selector = @selector(getKeyWithInt:);
  methods[4].selector = @selector(getValueWithInt:);
  methods[5].selector = @selector(createKeySet);
  methods[6].selector = @selector(size);
  methods[7].selector = @selector(getWithId:);
  methods[8].selector = @selector(entryIterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "size_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "()Lcom/google/common/collect/ImmutableMap<TK;Ljava/lang/Integer;>;", "getKey", "(I)TK;", "getValue", "(I)TV;", (void *)&ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$0, "()Lcom/google/common/collect/ImmutableSet<TK;>;", "get", "LNSObject;", "(Ljava/lang/Object;)TV;", (void *)&ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$1, "()Lcom/google/common/collect/UnmodifiableIterator<Ljava/util/Map$Entry<TK;TV;>;>;", "LComGoogleCommonCollectDenseImmutableTable;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/ImmutableMap$IteratorBasedImmutableMap<TK;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap = { "ImmutableArrayMap", "com.google.common.collect", ptrTable, methods, fields, 7, 0x40a, 9, 1, 13, -1, -1, 14, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *self, jint size) {
  ComGoogleCommonCollectImmutableMap_IteratorBasedImmutableMap_init(self);
  self->size_ = size;
}

jboolean ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_isFull(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *self) {
  return self->size_ == [((ComGoogleCommonCollectImmutableMap *) nil_chk([self keyToIndex])) size];
}

IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap)

@implementation ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap:(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *)outer$ {
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(self, outer$);
  return self;
}

- (id<JavaUtilMap_Entry>)computeNext {
  for (index_++; index_ < maxIndex_; index_++) {
    id value = [this$0_ getValueWithInt:index_];
    if (value != nil) {
      return ComGoogleCommonCollectMaps_immutableEntryWithId_withId_([this$0_ getKeyWithInt:index_], value);
    }
  }
  return [self endOfData];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x4, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap:);
  methods[1].selector = @selector(computeNext);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map$Entry<TK;TV;>;", "Lcom/google/common/collect/DenseImmutableTable$ImmutableArrayMap<TK;TV;>;", "LComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap;", "entryIterator", "Lcom/google/common/collect/AbstractIterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, 4, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *self, ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectAbstractIterator_init(self);
  self->index_ = -1;
  self->maxIndex_ = [((ComGoogleCommonCollectImmutableMap *) nil_chk([outer$ keyToIndex])) size];
}

ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *new_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1, initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_, outer$)
}

ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1 *create_ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1_initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_1, initWithComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_, outer$)
}

@implementation ComGoogleCommonCollectDenseImmutableTable_Row

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$
                                                          withInt:(jint)rowIndex {
  ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(self, outer$, rowIndex);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)keyToIndex {
  return this$0_->columnKeyToIndex_;
}

- (id)getValueWithInt:(jint)keyIndex {
  return IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(this$0_->values_DenseImmutableTable_), rowIndex_)), keyIndex);
}

- (jboolean)isPartialView {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x0, -1, -1, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 2, 0, -1, 3, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectDenseImmutableTable:withInt:);
  methods[1].selector = @selector(keyToIndex);
  methods[2].selector = @selector(getValueWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectDenseImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "rowIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "()Lcom/google/common/collect/ImmutableMap<TC;Ljava/lang/Integer;>;", "getValue", "(I)TV;", "Lcom/google/common/collect/DenseImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectDenseImmutableTable;", "Lcom/google/common/collect/DenseImmutableTable$ImmutableArrayMap<TC;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_Row = { "Row", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 4, 2, 5, -1, -1, 6, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_Row;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable_Row *self, ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(self, IOSIntArray_Get(nil_chk(outer$->rowCounts_), rowIndex));
  self->rowIndex_ = rowIndex;
}

ComGoogleCommonCollectDenseImmutableTable_Row *new_ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable_Row, initWithComGoogleCommonCollectDenseImmutableTable_withInt_, outer$, rowIndex)
}

ComGoogleCommonCollectDenseImmutableTable_Row *create_ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint rowIndex) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable_Row, initWithComGoogleCommonCollectDenseImmutableTable_withInt_, outer$, rowIndex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable_Row)

@implementation ComGoogleCommonCollectDenseImmutableTable_Column

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$
                                                          withInt:(jint)columnIndex {
  ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(self, outer$, columnIndex);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)keyToIndex {
  return this$0_->rowKeyToIndex_;
}

- (id)getValueWithInt:(jint)keyIndex {
  return IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(this$0_->values_DenseImmutableTable_), keyIndex)), columnIndex_);
}

- (jboolean)isPartialView {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x0, -1, -1, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x0, 2, 0, -1, 3, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectDenseImmutableTable:withInt:);
  methods[1].selector = @selector(keyToIndex);
  methods[2].selector = @selector(getValueWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectDenseImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "columnIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "()Lcom/google/common/collect/ImmutableMap<TR;Ljava/lang/Integer;>;", "getValue", "(I)TV;", "Lcom/google/common/collect/DenseImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectDenseImmutableTable;", "Lcom/google/common/collect/DenseImmutableTable$ImmutableArrayMap<TR;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_Column = { "Column", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 4, 2, 5, -1, -1, 6, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_Column;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable_Column *self, ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(self, IOSIntArray_Get(nil_chk(outer$->columnCounts_), columnIndex));
  self->columnIndex_ = columnIndex;
}

ComGoogleCommonCollectDenseImmutableTable_Column *new_ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable_Column, initWithComGoogleCommonCollectDenseImmutableTable_withInt_, outer$, columnIndex)
}

ComGoogleCommonCollectDenseImmutableTable_Column *create_ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(ComGoogleCommonCollectDenseImmutableTable *outer$, jint columnIndex) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable_Column, initWithComGoogleCommonCollectDenseImmutableTable_withInt_, outer$, columnIndex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable_Column)

@implementation ComGoogleCommonCollectDenseImmutableTable_RowMap

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$ {
  ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(self, outer$);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)keyToIndex {
  return this$0_->rowKeyToIndex_;
}

- (id<JavaUtilMap>)getValueWithInt:(jint)keyIndex {
  return new_ComGoogleCommonCollectDenseImmutableTable_Row_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(this$0_, keyIndex);
}

- (jboolean)isPartialView {
  return false;
}

- (void)__javaClone:(ComGoogleCommonCollectDenseImmutableTable_RowMap *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x0, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x0, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectDenseImmutableTable:);
  methods[1].selector = @selector(keyToIndex);
  methods[2].selector = @selector(getValueWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectDenseImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/common/collect/ImmutableMap<TR;Ljava/lang/Integer;>;", "getValue", "I", "(I)Ljava/util/Map<TC;TV;>;", "Lcom/google/common/collect/DenseImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectDenseImmutableTable;", "Lcom/google/common/collect/DenseImmutableTable$ImmutableArrayMap<TR;Ljava/util/Map<TC;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_RowMap = { "RowMap", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 4, 1, 5, -1, -1, 6, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_RowMap;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable_RowMap *self, ComGoogleCommonCollectDenseImmutableTable *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(self, ((IOSIntArray *) nil_chk(outer$->rowCounts_))->size_);
}

ComGoogleCommonCollectDenseImmutableTable_RowMap *new_ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable_RowMap, initWithComGoogleCommonCollectDenseImmutableTable_, outer$)
}

ComGoogleCommonCollectDenseImmutableTable_RowMap *create_ComGoogleCommonCollectDenseImmutableTable_RowMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable_RowMap, initWithComGoogleCommonCollectDenseImmutableTable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable_RowMap)

@implementation ComGoogleCommonCollectDenseImmutableTable_ColumnMap

- (instancetype)initWithComGoogleCommonCollectDenseImmutableTable:(ComGoogleCommonCollectDenseImmutableTable *)outer$ {
  ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(self, outer$);
  return self;
}

- (ComGoogleCommonCollectImmutableMap *)keyToIndex {
  return this$0_->columnKeyToIndex_;
}

- (id<JavaUtilMap>)getValueWithInt:(jint)keyIndex {
  return new_ComGoogleCommonCollectDenseImmutableTable_Column_initWithComGoogleCommonCollectDenseImmutableTable_withInt_(this$0_, keyIndex);
}

- (jboolean)isPartialView {
  return false;
}

- (void)__javaClone:(ComGoogleCommonCollectDenseImmutableTable_ColumnMap *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x0, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x0, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectDenseImmutableTable:);
  methods[1].selector = @selector(keyToIndex);
  methods[2].selector = @selector(getValueWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectDenseImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/common/collect/ImmutableMap<TC;Ljava/lang/Integer;>;", "getValue", "I", "(I)Ljava/util/Map<TR;TV;>;", "Lcom/google/common/collect/DenseImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectDenseImmutableTable;", "Lcom/google/common/collect/DenseImmutableTable$ImmutableArrayMap<TC;Ljava/util/Map<TR;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectDenseImmutableTable_ColumnMap = { "ColumnMap", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 4, 1, 5, -1, -1, 6, -1 };
  return &_ComGoogleCommonCollectDenseImmutableTable_ColumnMap;
}

@end

void ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable_ColumnMap *self, ComGoogleCommonCollectDenseImmutableTable *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectDenseImmutableTable_ImmutableArrayMap_initWithInt_(self, ((IOSIntArray *) nil_chk(outer$->columnCounts_))->size_);
}

ComGoogleCommonCollectDenseImmutableTable_ColumnMap *new_ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectDenseImmutableTable_ColumnMap, initWithComGoogleCommonCollectDenseImmutableTable_, outer$)
}

ComGoogleCommonCollectDenseImmutableTable_ColumnMap *create_ComGoogleCommonCollectDenseImmutableTable_ColumnMap_initWithComGoogleCommonCollectDenseImmutableTable_(ComGoogleCommonCollectDenseImmutableTable *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectDenseImmutableTable_ColumnMap, initWithComGoogleCommonCollectDenseImmutableTable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectDenseImmutableTable_ColumnMap)
