//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/EvictingQueue.java
//

#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/EvictingQueue.h"
#include "com/google/common/collect/ForwardingQueue.h"
#include "com/google/common/collect/Iterables.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayDeque.h"
#include "java/util/Collection.h"
#include "java/util/Queue.h"

@interface ComGoogleCommonCollectEvictingQueue () {
 @public
  id<JavaUtilQueue> delegate_;
}

- (instancetype)initWithInt:(jint)maxSize;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectEvictingQueue, delegate_, id<JavaUtilQueue>)

inline jlong ComGoogleCommonCollectEvictingQueue_get_serialVersionUID();
#define ComGoogleCommonCollectEvictingQueue_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectEvictingQueue, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonCollectEvictingQueue_initWithInt_(ComGoogleCommonCollectEvictingQueue *self, jint maxSize);

__attribute__((unused)) static ComGoogleCommonCollectEvictingQueue *new_ComGoogleCommonCollectEvictingQueue_initWithInt_(jint maxSize) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectEvictingQueue *create_ComGoogleCommonCollectEvictingQueue_initWithInt_(jint maxSize);

@implementation ComGoogleCommonCollectEvictingQueue

- (instancetype)initWithInt:(jint)maxSize {
  ComGoogleCommonCollectEvictingQueue_initWithInt_(self, maxSize);
  return self;
}

+ (ComGoogleCommonCollectEvictingQueue *)createWithInt:(jint)maxSize {
  return ComGoogleCommonCollectEvictingQueue_createWithInt_(maxSize);
}

- (jint)remainingCapacity {
  return maxSize_ - [self size];
}

- (id<JavaUtilQueue>)delegate {
  return delegate_;
}

- (jboolean)offerWithId:(id)e {
  return [self addWithId:e];
}

- (jboolean)addWithId:(id)e {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(e);
  if (maxSize_ == 0) {
    return true;
  }
  if ([self size] == maxSize_) {
    (void) [((id<JavaUtilQueue>) nil_chk(delegate_)) remove];
  }
  [((id<JavaUtilQueue>) nil_chk(delegate_)) addWithId:e];
  return true;
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  jint size = [((id<JavaUtilCollection>) nil_chk(collection)) size];
  if (size >= maxSize_) {
    [self clear];
    return ComGoogleCommonCollectIterables_addAllWithJavaUtilCollection_withJavaLangIterable_(self, ComGoogleCommonCollectIterables_skipWithJavaLangIterable_withInt_(collection, size - maxSize_));
  }
  return [self standardAddAllWithJavaUtilCollection:collection];
}

- (jboolean)containsWithId:(id)object {
  return [((id<JavaUtilQueue>) nil_chk([self delegate])) containsWithId:ComGoogleCommonBasePreconditions_checkNotNullWithId_(object)];
}

- (jboolean)removeWithId:(id)object {
  return [((id<JavaUtilQueue>) nil_chk([self delegate])) removeWithId:ComGoogleCommonBasePreconditions_checkNotNullWithId_(object)];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectEvictingQueue;", 0x9, 1, 0, -1, 2, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilQueue;", 0x4, -1, -1, -1, 3, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(createWithInt:);
  methods[2].selector = @selector(remainingCapacity);
  methods[3].selector = @selector(delegate);
  methods[4].selector = @selector(offerWithId:);
  methods[5].selector = @selector(addWithId:);
  methods[6].selector = @selector(addAllWithJavaUtilCollection:);
  methods[7].selector = @selector(containsWithId:);
  methods[8].selector = @selector(removeWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "maxSize_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectEvictingQueue_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "create", "<E:Ljava/lang/Object;>(I)Lcom/google/common/collect/EvictingQueue<TE;>;", "()Ljava/util/Queue<TE;>;", "offer", "LNSObject;", "(TE;)Z", "add", "addAll", "LJavaUtilCollection;", "(Ljava/util/Collection<+TE;>;)Z", "contains", "remove", "Ljava/util/Queue<TE;>;", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingQueue<TE;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectEvictingQueue = { "EvictingQueue", "com.google.common.collect", ptrTable, methods, fields, 7, 0x11, 9, 3, -1, -1, -1, 14, -1 };
  return &_ComGoogleCommonCollectEvictingQueue;
}

@end

void ComGoogleCommonCollectEvictingQueue_initWithInt_(ComGoogleCommonCollectEvictingQueue *self, jint maxSize) {
  ComGoogleCommonCollectForwardingQueue_init(self);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(maxSize >= 0, @"maxSize (%s) must >= 0", maxSize);
  self->delegate_ = new_JavaUtilArrayDeque_initWithInt_(maxSize);
  self->maxSize_ = maxSize;
}

ComGoogleCommonCollectEvictingQueue *new_ComGoogleCommonCollectEvictingQueue_initWithInt_(jint maxSize) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectEvictingQueue, initWithInt_, maxSize)
}

ComGoogleCommonCollectEvictingQueue *create_ComGoogleCommonCollectEvictingQueue_initWithInt_(jint maxSize) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectEvictingQueue, initWithInt_, maxSize)
}

ComGoogleCommonCollectEvictingQueue *ComGoogleCommonCollectEvictingQueue_createWithInt_(jint maxSize) {
  ComGoogleCommonCollectEvictingQueue_initialize();
  return new_ComGoogleCommonCollectEvictingQueue_initWithInt_(maxSize);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectEvictingQueue)
