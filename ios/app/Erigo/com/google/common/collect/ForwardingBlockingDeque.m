//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/ForwardingBlockingDeque.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/ForwardingBlockingDeque.h"
#include "com/google/common/collect/ForwardingDeque.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/concurrent/BlockingDeque.h"
#include "java/util/concurrent/TimeUnit.h"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectForwardingBlockingDeque__Annotations$0();

@implementation ComGoogleCommonCollectForwardingBlockingDeque

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectForwardingBlockingDeque_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilConcurrentBlockingDeque>)delegate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)remainingCapacity {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) remainingCapacity];
}

- (void)putFirstWithId:(id)e {
  [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) putFirstWithId:e];
}

- (void)putLastWithId:(id)e {
  [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) putLastWithId:e];
}

- (jboolean)offerFirstWithId:(id)e
                    withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) offerFirstWithId:e withLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (jboolean)offerLastWithId:(id)e
                   withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) offerLastWithId:e withLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (id)takeFirst {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) takeFirst];
}

- (id)takeLast {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) takeLast];
}

- (id)pollFirstWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) pollFirstWithLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (id)pollLastWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) pollLastWithLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (void)putWithId:(id)e {
  [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) putWithId:e];
}

- (jboolean)offerWithId:(id)e
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) offerWithId:e withLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (id)take {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) take];
}

- (id)pollWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) pollWithLong:timeout withJavaUtilConcurrentTimeUnit:unit];
}

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) drainToWithJavaUtilCollection:c];
}

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements {
  return [((id<JavaUtilConcurrentBlockingDeque>) nil_chk([self delegate])) drainToWithJavaUtilCollection:c withInt:maxElements];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentBlockingDeque;", 0x404, -1, -1, -1, 0, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 2, 3, 4, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, 3, 8, -1, -1 },
    { NULL, "Z", 0x1, 9, 7, 3, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 3, 10, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 3, 10, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, 12, 3, 13, -1, -1 },
    { NULL, "LNSObject;", 0x1, 14, 12, 3, 13, -1, -1 },
    { NULL, "V", 0x1, 15, 2, 3, 4, -1, -1 },
    { NULL, "Z", 0x1, 16, 7, 3, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 3, 10, -1, -1 },
    { NULL, "LNSObject;", 0x1, 17, 12, 3, 13, -1, -1 },
    { NULL, "I", 0x1, 18, 19, -1, 20, -1, -1 },
    { NULL, "I", 0x1, 18, 21, -1, 22, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(remainingCapacity);
  methods[3].selector = @selector(putFirstWithId:);
  methods[4].selector = @selector(putLastWithId:);
  methods[5].selector = @selector(offerFirstWithId:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[6].selector = @selector(offerLastWithId:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[7].selector = @selector(takeFirst);
  methods[8].selector = @selector(takeLast);
  methods[9].selector = @selector(pollFirstWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[10].selector = @selector(pollLastWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[11].selector = @selector(putWithId:);
  methods[12].selector = @selector(offerWithId:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[13].selector = @selector(take);
  methods[14].selector = @selector(pollWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[15].selector = @selector(drainToWithJavaUtilCollection:);
  methods[16].selector = @selector(drainToWithJavaUtilCollection:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/concurrent/BlockingDeque<TE;>;", "putFirst", "LNSObject;", "LJavaLangInterruptedException;", "(TE;)V", "putLast", "offerFirst", "LNSObject;JLJavaUtilConcurrentTimeUnit;", "(TE;JLjava/util/concurrent/TimeUnit;)Z", "offerLast", "()TE;", "pollFirst", "JLJavaUtilConcurrentTimeUnit;", "(JLjava/util/concurrent/TimeUnit;)TE;", "pollLast", "put", "offer", "poll", "drainTo", "LJavaUtilCollection;", "(Ljava/util/Collection<-TE;>;)I", "LJavaUtilCollection;I", "(Ljava/util/Collection<-TE;>;I)I", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingDeque<TE;>;Ljava/util/concurrent/BlockingDeque<TE;>;", (void *)&ComGoogleCommonCollectForwardingBlockingDeque__Annotations$0 };
  static const J2ObjcClassInfo _ComGoogleCommonCollectForwardingBlockingDeque = { "ForwardingBlockingDeque", "com.google.common.collect", ptrTable, methods, NULL, 7, 0x401, 17, 0, -1, -1, -1, 23, 24 };
  return &_ComGoogleCommonCollectForwardingBlockingDeque;
}

@end

void ComGoogleCommonCollectForwardingBlockingDeque_init(ComGoogleCommonCollectForwardingBlockingDeque *self) {
  ComGoogleCommonCollectForwardingDeque_init(self);
}

IOSObjectArray *ComGoogleCommonCollectForwardingBlockingDeque__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectForwardingBlockingDeque)
