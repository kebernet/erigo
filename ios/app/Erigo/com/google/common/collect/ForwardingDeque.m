//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/ForwardingDeque.java
//

#include "J2ObjC_source.h"
#include "com/google/common/collect/ForwardingDeque.h"
#include "com/google/common/collect/ForwardingQueue.h"
#include "java/util/Deque.h"
#include "java/util/Iterator.h"

@implementation ComGoogleCommonCollectForwardingDeque

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectForwardingDeque_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilDeque>)delegate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)addFirstWithId:(id)e {
  [((id<JavaUtilDeque>) nil_chk([self delegate])) addFirstWithId:e];
}

- (void)addLastWithId:(id)e {
  [((id<JavaUtilDeque>) nil_chk([self delegate])) addLastWithId:e];
}

- (id<JavaUtilIterator>)descendingIterator {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) descendingIterator];
}

- (id)getFirst {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) getFirst];
}

- (id)getLast {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) getLast];
}

- (jboolean)offerFirstWithId:(id)e {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) offerFirstWithId:e];
}

- (jboolean)offerLastWithId:(id)e {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) offerLastWithId:e];
}

- (id)peekFirst {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) peekFirst];
}

- (id)peekLast {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) peekLast];
}

- (id)pollFirst {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) pollFirst];
}

- (id)pollLast {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) pollLast];
}

- (id)pop {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) pop];
}

- (void)pushWithId:(id)e {
  [((id<JavaUtilDeque>) nil_chk([self delegate])) pushWithId:e];
}

- (id)removeFirst {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) removeFirst];
}

- (id)removeLast {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) removeLast];
}

- (jboolean)removeFirstOccurrenceWithId:(id)o {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) removeFirstOccurrenceWithId:o];
}

- (jboolean)removeLastOccurrenceWithId:(id)o {
  return [((id<JavaUtilDeque>) nil_chk([self delegate])) removeLastOccurrenceWithId:o];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDeque;", 0x404, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 2, -1, 8, -1, -1 },
    { NULL, "Z", 0x1, 9, 2, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 10, 2, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(addFirstWithId:);
  methods[3].selector = @selector(addLastWithId:);
  methods[4].selector = @selector(descendingIterator);
  methods[5].selector = @selector(getFirst);
  methods[6].selector = @selector(getLast);
  methods[7].selector = @selector(offerFirstWithId:);
  methods[8].selector = @selector(offerLastWithId:);
  methods[9].selector = @selector(peekFirst);
  methods[10].selector = @selector(peekLast);
  methods[11].selector = @selector(pollFirst);
  methods[12].selector = @selector(pollLast);
  methods[13].selector = @selector(pop);
  methods[14].selector = @selector(pushWithId:);
  methods[15].selector = @selector(removeFirst);
  methods[16].selector = @selector(removeLast);
  methods[17].selector = @selector(removeFirstOccurrenceWithId:);
  methods[18].selector = @selector(removeLastOccurrenceWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Deque<TE;>;", "addFirst", "LNSObject;", "(TE;)V", "addLast", "()Ljava/util/Iterator<TE;>;", "()TE;", "offerFirst", "(TE;)Z", "offerLast", "push", "removeFirstOccurrence", "removeLastOccurrence", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingQueue<TE;>;Ljava/util/Deque<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectForwardingDeque = { "ForwardingDeque", "com.google.common.collect", ptrTable, methods, NULL, 7, 0x401, 19, 0, -1, -1, -1, 13, -1 };
  return &_ComGoogleCommonCollectForwardingDeque;
}

@end

void ComGoogleCommonCollectForwardingDeque_init(ComGoogleCommonCollectForwardingDeque *self) {
  ComGoogleCommonCollectForwardingQueue_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectForwardingDeque)
