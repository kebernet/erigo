//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/ForwardingListIterator.java
//

#include "J2ObjC_source.h"
#include "com/google/common/collect/ForwardingIterator.h"
#include "com/google/common/collect/ForwardingListIterator.h"
#include "java/util/ListIterator.h"

@implementation ComGoogleCommonCollectForwardingListIterator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectForwardingListIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilListIterator>)delegate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)addWithId:(id)element {
  [((id<JavaUtilListIterator>) nil_chk([self delegate])) addWithId:element];
}

- (jboolean)hasPrevious {
  return [((id<JavaUtilListIterator>) nil_chk([self delegate])) hasPrevious];
}

- (jint)nextIndex {
  return [((id<JavaUtilListIterator>) nil_chk([self delegate])) nextIndex];
}

- (id)previous {
  return [((id<JavaUtilListIterator>) nil_chk([self delegate])) previous];
}

- (jint)previousIndex {
  return [((id<JavaUtilListIterator>) nil_chk([self delegate])) previousIndex];
}

- (void)setWithId:(id)element {
  [((id<JavaUtilListIterator>) nil_chk([self delegate])) setWithId:element];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilListIterator;", 0x404, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(addWithId:);
  methods[3].selector = @selector(hasPrevious);
  methods[4].selector = @selector(nextIndex);
  methods[5].selector = @selector(previous);
  methods[6].selector = @selector(previousIndex);
  methods[7].selector = @selector(setWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/ListIterator<TE;>;", "add", "LNSObject;", "(TE;)V", "()TE;", "set", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingIterator<TE;>;Ljava/util/ListIterator<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectForwardingListIterator = { "ForwardingListIterator", "com.google.common.collect", ptrTable, methods, NULL, 7, 0x401, 8, 0, -1, -1, -1, 6, -1 };
  return &_ComGoogleCommonCollectForwardingListIterator;
}

@end

void ComGoogleCommonCollectForwardingListIterator_init(ComGoogleCommonCollectForwardingListIterator *self) {
  ComGoogleCommonCollectForwardingIterator_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectForwardingListIterator)
