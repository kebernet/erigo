//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/Hashing.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/Hashing.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonCollectHashing ()

- (instancetype)init;

@end

inline jlong ComGoogleCommonCollectHashing_get_C1();
#define ComGoogleCommonCollectHashing_C1 -862048943LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectHashing, C1, jlong)

inline jlong ComGoogleCommonCollectHashing_get_C2();
#define ComGoogleCommonCollectHashing_C2 461845907LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectHashing, C2, jlong)

inline jint ComGoogleCommonCollectHashing_get_MAX_TABLE_SIZE();
#define ComGoogleCommonCollectHashing_MAX_TABLE_SIZE 1073741824
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectHashing, MAX_TABLE_SIZE, jint)

__attribute__((unused)) static void ComGoogleCommonCollectHashing_init(ComGoogleCommonCollectHashing *self);

__attribute__((unused)) static ComGoogleCommonCollectHashing *new_ComGoogleCommonCollectHashing_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectHashing *create_ComGoogleCommonCollectHashing_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectHashing__Annotations$0();

@implementation ComGoogleCommonCollectHashing

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectHashing_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)smearWithInt:(jint)hashCode {
  return ComGoogleCommonCollectHashing_smearWithInt_(hashCode);
}

+ (jint)smearedHashWithId:(id)o {
  return ComGoogleCommonCollectHashing_smearedHashWithId_(o);
}

+ (jint)closedTableSizeWithInt:(jint)expectedEntries
                    withDouble:(jdouble)loadFactor {
  return ComGoogleCommonCollectHashing_closedTableSizeWithInt_withDouble_(expectedEntries, loadFactor);
}

+ (jboolean)needsResizingWithInt:(jint)size
                         withInt:(jint)tableSize
                      withDouble:(jdouble)loadFactor {
  return ComGoogleCommonCollectHashing_needsResizingWithInt_withInt_withDouble_(size, tableSize, loadFactor);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 2, 3, -1, -1, -1, 4 },
    { NULL, "I", 0x8, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(smearWithInt:);
  methods[2].selector = @selector(smearedHashWithId:);
  methods[3].selector = @selector(closedTableSizeWithInt:withDouble:);
  methods[4].selector = @selector(needsResizingWithInt:withInt:withDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C1", "J", .constantValue.asLong = ComGoogleCommonCollectHashing_C1, 0x1a, -1, -1, -1, -1 },
    { "C2", "J", .constantValue.asLong = ComGoogleCommonCollectHashing_C2, 0x1a, -1, -1, -1, -1 },
    { "MAX_TABLE_SIZE", "I", .constantValue.asInt = ComGoogleCommonCollectHashing_MAX_TABLE_SIZE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "smear", "I", "smearedHash", "LNSObject;", (void *)&ComGoogleCommonCollectHashing__Annotations$0, "closedTableSize", "ID", "needsResizing", "IID" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectHashing = { "Hashing", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 5, 3, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonCollectHashing;
}

@end

void ComGoogleCommonCollectHashing_init(ComGoogleCommonCollectHashing *self) {
  NSObject_init(self);
}

ComGoogleCommonCollectHashing *new_ComGoogleCommonCollectHashing_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectHashing, init)
}

ComGoogleCommonCollectHashing *create_ComGoogleCommonCollectHashing_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectHashing, init)
}

jint ComGoogleCommonCollectHashing_smearWithInt_(jint hashCode) {
  ComGoogleCommonCollectHashing_initialize();
  return (jint) (ComGoogleCommonCollectHashing_C2 * JavaLangInteger_rotateLeftWithInt_withInt_((jint) (hashCode * ComGoogleCommonCollectHashing_C1), 15));
}

jint ComGoogleCommonCollectHashing_smearedHashWithId_(id o) {
  ComGoogleCommonCollectHashing_initialize();
  return ComGoogleCommonCollectHashing_smearWithInt_((o == nil) ? 0 : ((jint) [nil_chk(o) hash]));
}

jint ComGoogleCommonCollectHashing_closedTableSizeWithInt_withDouble_(jint expectedEntries, jdouble loadFactor) {
  ComGoogleCommonCollectHashing_initialize();
  expectedEntries = JavaLangMath_maxWithInt_withInt_(expectedEntries, 2);
  jint tableSize = JavaLangInteger_highestOneBitWithInt_(expectedEntries);
  if (expectedEntries > JreFpToInt((loadFactor * tableSize))) {
    JreLShiftAssignInt(&tableSize, 1);
    return (tableSize > 0) ? tableSize : ComGoogleCommonCollectHashing_MAX_TABLE_SIZE;
  }
  return tableSize;
}

jboolean ComGoogleCommonCollectHashing_needsResizingWithInt_withInt_withDouble_(jint size, jint tableSize, jdouble loadFactor) {
  ComGoogleCommonCollectHashing_initialize();
  return size > loadFactor * tableSize && tableSize < ComGoogleCommonCollectHashing_MAX_TABLE_SIZE;
}

IOSObjectArray *ComGoogleCommonCollectHashing__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectHashing)
