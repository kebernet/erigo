//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/ImmutableClassToInstanceMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ForwardingMap.h"
#include "com/google/common/collect/ImmutableClassToInstanceMap.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/primitives/Primitives.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonCollectImmutableClassToInstanceMap () {
 @public
  ComGoogleCommonCollectImmutableMap *delegate_;
}

- (instancetype)initWithComGoogleCommonCollectImmutableMap:(ComGoogleCommonCollectImmutableMap *)delegate;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectImmutableClassToInstanceMap, delegate_, ComGoogleCommonCollectImmutableMap *)

inline ComGoogleCommonCollectImmutableClassToInstanceMap *ComGoogleCommonCollectImmutableClassToInstanceMap_get_EMPTY();
static ComGoogleCommonCollectImmutableClassToInstanceMap *ComGoogleCommonCollectImmutableClassToInstanceMap_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCollectImmutableClassToInstanceMap, EMPTY, ComGoogleCommonCollectImmutableClassToInstanceMap *)

__attribute__((unused)) static void ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableClassToInstanceMap *self, ComGoogleCommonCollectImmutableMap *delegate);

__attribute__((unused)) static ComGoogleCommonCollectImmutableClassToInstanceMap *new_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableMap *delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectImmutableClassToInstanceMap *create_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableMap *delegate);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$1();

@interface ComGoogleCommonCollectImmutableClassToInstanceMap_Builder () {
 @public
  ComGoogleCommonCollectImmutableMap_Builder *mapBuilder_;
}

+ (id)castWithIOSClass:(IOSClass *)type
                withId:(id)value;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectImmutableClassToInstanceMap_Builder, mapBuilder_, ComGoogleCommonCollectImmutableMap_Builder *)

__attribute__((unused)) static id ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_castWithIOSClass_withId_(IOSClass *type, id value);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCollectImmutableClassToInstanceMap)

@implementation ComGoogleCommonCollectImmutableClassToInstanceMap

+ (ComGoogleCommonCollectImmutableClassToInstanceMap *)of {
  return ComGoogleCommonCollectImmutableClassToInstanceMap_of();
}

+ (ComGoogleCommonCollectImmutableClassToInstanceMap *)ofWithIOSClass:(IOSClass *)type
                                                               withId:(id)value {
  return ComGoogleCommonCollectImmutableClassToInstanceMap_ofWithIOSClass_withId_(type, value);
}

+ (ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *)builder {
  return ComGoogleCommonCollectImmutableClassToInstanceMap_builder();
}

+ (ComGoogleCommonCollectImmutableClassToInstanceMap *)copyOfWithJavaUtilMap:(id<JavaUtilMap>)map {
  return ComGoogleCommonCollectImmutableClassToInstanceMap_copyOfWithJavaUtilMap_(map);
}

- (instancetype)initWithComGoogleCommonCollectImmutableMap:(ComGoogleCommonCollectImmutableMap *)delegate {
  ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(self, delegate);
  return self;
}

- (id<JavaUtilMap>)delegate {
  return delegate_;
}

- (id)getInstanceWithIOSClass:(IOSClass *)type {
  return [((ComGoogleCommonCollectImmutableMap *) nil_chk(delegate_)) getWithId:ComGoogleCommonBasePreconditions_checkNotNullWithId_(type)];
}

- (id)putInstanceWithIOSClass:(IOSClass *)type
                       withId:(id)value {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)readResolve {
  return [self isEmpty] ? ComGoogleCommonCollectImmutableClassToInstanceMap_of() : self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap_Builder;", 0x9, -1, -1, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap;", 0x9, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x2, -1, 8, -1, 9, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x4, -1, -1, -1, 10, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, 12, -1, 13, 14, -1 },
    { NULL, "LNSObject;", 0x1, 15, 2, -1, 16, 17, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(of);
  methods[1].selector = @selector(ofWithIOSClass:withId:);
  methods[2].selector = @selector(builder);
  methods[3].selector = @selector(copyOfWithJavaUtilMap:);
  methods[4].selector = @selector(initWithComGoogleCommonCollectImmutableMap:);
  methods[5].selector = @selector(delegate);
  methods[6].selector = @selector(getInstanceWithIOSClass:);
  methods[7].selector = @selector(putInstanceWithIOSClass:withId:);
  methods[8].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY", "LComGoogleCommonCollectImmutableClassToInstanceMap;", .constantValue.asLong = 0, 0x1a, -1, 18, 19, -1 },
    { "delegate_", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x12, -1, -1, 20, -1 },
  };
  static const void *ptrTable[] = { "<B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;", "of", "LIOSClass;LNSObject;", "<B:Ljava/lang/Object;T:TB;>(Ljava/lang/Class<TT;>;TT;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;", "<B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder<TB;>;", "copyOf", "LJavaUtilMap;", "<B:Ljava/lang/Object;S:TB;>(Ljava/util/Map<+Ljava/lang/Class<+TS;>;+TS;>;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;", "LComGoogleCommonCollectImmutableMap;", "(Lcom/google/common/collect/ImmutableMap<Ljava/lang/Class<+TB;>;TB;>;)V", "()Ljava/util/Map<Ljava/lang/Class<+TB;>;TB;>;", "getInstance", "LIOSClass;", "<T:TB;>(Ljava/lang/Class<TT;>;)TT;", (void *)&ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$0, "putInstance", "<T:TB;>(Ljava/lang/Class<TT;>;TT;)TT;", (void *)&ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$1, &ComGoogleCommonCollectImmutableClassToInstanceMap_EMPTY, "Lcom/google/common/collect/ImmutableClassToInstanceMap<Ljava/lang/Object;>;", "Lcom/google/common/collect/ImmutableMap<Ljava/lang/Class<+TB;>;TB;>;", "LComGoogleCommonCollectImmutableClassToInstanceMap_Builder;", "<B:Ljava/lang/Object;>Lcom/google/common/collect/ForwardingMap<Ljava/lang/Class<+TB;>;TB;>;Lcom/google/common/collect/ClassToInstanceMap<TB;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectImmutableClassToInstanceMap = { "ImmutableClassToInstanceMap", "com.google.common.collect", ptrTable, methods, fields, 7, 0x11, 9, 2, -1, 21, -1, 22, -1 };
  return &_ComGoogleCommonCollectImmutableClassToInstanceMap;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCollectImmutableClassToInstanceMap class]) {
    ComGoogleCommonCollectImmutableClassToInstanceMap_EMPTY = new_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableMap_of());
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCollectImmutableClassToInstanceMap)
  }
}

@end

ComGoogleCommonCollectImmutableClassToInstanceMap *ComGoogleCommonCollectImmutableClassToInstanceMap_of() {
  ComGoogleCommonCollectImmutableClassToInstanceMap_initialize();
  return ComGoogleCommonCollectImmutableClassToInstanceMap_EMPTY;
}

ComGoogleCommonCollectImmutableClassToInstanceMap *ComGoogleCommonCollectImmutableClassToInstanceMap_ofWithIOSClass_withId_(IOSClass *type, id value) {
  ComGoogleCommonCollectImmutableClassToInstanceMap_initialize();
  ComGoogleCommonCollectImmutableMap *map = ComGoogleCommonCollectImmutableMap_ofWithId_withId_(type, value);
  return new_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(map);
}

ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *ComGoogleCommonCollectImmutableClassToInstanceMap_builder() {
  ComGoogleCommonCollectImmutableClassToInstanceMap_initialize();
  return new_ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init();
}

ComGoogleCommonCollectImmutableClassToInstanceMap *ComGoogleCommonCollectImmutableClassToInstanceMap_copyOfWithJavaUtilMap_(id<JavaUtilMap> map) {
  ComGoogleCommonCollectImmutableClassToInstanceMap_initialize();
  if ([map isKindOfClass:[ComGoogleCommonCollectImmutableClassToInstanceMap class]]) {
    ComGoogleCommonCollectImmutableClassToInstanceMap *cast = (ComGoogleCommonCollectImmutableClassToInstanceMap *) cast_chk(map, [ComGoogleCommonCollectImmutableClassToInstanceMap class]);
    return cast;
  }
  return [((ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *) nil_chk([new_ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init() putAllWithJavaUtilMap:map])) build];
}

void ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableClassToInstanceMap *self, ComGoogleCommonCollectImmutableMap *delegate) {
  ComGoogleCommonCollectForwardingMap_init(self);
  self->delegate_ = delegate;
}

ComGoogleCommonCollectImmutableClassToInstanceMap *new_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableMap *delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectImmutableClassToInstanceMap, initWithComGoogleCommonCollectImmutableMap_, delegate)
}

ComGoogleCommonCollectImmutableClassToInstanceMap *create_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(ComGoogleCommonCollectImmutableMap *delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectImmutableClassToInstanceMap, initWithComGoogleCommonCollectImmutableMap_, delegate)
}

IOSObjectArray *ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonCollectImmutableClassToInstanceMap__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectImmutableClassToInstanceMap)

@implementation ComGoogleCommonCollectImmutableClassToInstanceMap_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *)putWithIOSClass:(IOSClass *)key
                                                                        withId:(id)value {
  (void) [((ComGoogleCommonCollectImmutableMap_Builder *) nil_chk(mapBuilder_)) putWithId:key withId:value];
  return self;
}

- (ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    IOSClass *type = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id value = [entry_ getValue];
    (void) [((ComGoogleCommonCollectImmutableMap_Builder *) nil_chk(mapBuilder_)) putWithId:type withId:ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_castWithIOSClass_withId_(type, value)];
  }
  return self;
}

+ (id)castWithIOSClass:(IOSClass *)type
                withId:(id)value {
  return ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_castWithIOSClass_withId_(type, value);
}

- (ComGoogleCommonCollectImmutableClassToInstanceMap *)build {
  ComGoogleCommonCollectImmutableMap *map = [((ComGoogleCommonCollectImmutableMap_Builder *) nil_chk(mapBuilder_)) build];
  if ([((ComGoogleCommonCollectImmutableMap *) nil_chk(map)) isEmpty]) {
    return ComGoogleCommonCollectImmutableClassToInstanceMap_of();
  }
  else {
    return new_ComGoogleCommonCollectImmutableClassToInstanceMap_initWithComGoogleCommonCollectImmutableMap_(map);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap_Builder;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap_Builder;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0xa, 6, 1, -1, 7, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableClassToInstanceMap;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(putWithIOSClass:withId:);
  methods[2].selector = @selector(putAllWithJavaUtilMap:);
  methods[3].selector = @selector(castWithIOSClass:withId:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapBuilder_", "LComGoogleCommonCollectImmutableMap_Builder;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "put", "LIOSClass;LNSObject;", "<T:TB;>(Ljava/lang/Class<TT;>;TT;)Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder<TB;>;", "putAll", "LJavaUtilMap;", "<T:TB;>(Ljava/util/Map<+Ljava/lang/Class<+TT;>;+TT;>;)Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder<TB;>;", "cast", "<B:Ljava/lang/Object;T:TB;>(Ljava/lang/Class<TT;>;TB;)TT;", "()Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;", "Lcom/google/common/collect/ImmutableMap$Builder<Ljava/lang/Class<+TB;>;TB;>;", "LComGoogleCommonCollectImmutableClassToInstanceMap;", "<B:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectImmutableClassToInstanceMap_Builder = { "Builder", "com.google.common.collect", ptrTable, methods, fields, 7, 0x19, 5, 1, 10, -1, -1, 11, -1 };
  return &_ComGoogleCommonCollectImmutableClassToInstanceMap_Builder;
}

@end

void ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init(ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *self) {
  NSObject_init(self);
  self->mapBuilder_ = ComGoogleCommonCollectImmutableMap_builder();
}

ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *new_ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectImmutableClassToInstanceMap_Builder, init)
}

ComGoogleCommonCollectImmutableClassToInstanceMap_Builder *create_ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectImmutableClassToInstanceMap_Builder, init)
}

id ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_castWithIOSClass_withId_(IOSClass *type, id value) {
  ComGoogleCommonCollectImmutableClassToInstanceMap_Builder_initialize();
  return [((IOSClass *) nil_chk(ComGoogleCommonPrimitivesPrimitives_wrapWithIOSClass_(type))) cast:value];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectImmutableClassToInstanceMap_Builder)
