//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/ImmutableEnumMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableEnumMap")
#ifdef RESTRICT_ComGoogleCommonCollectImmutableEnumMap
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableEnumMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableEnumMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectImmutableEnumMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectImmutableEnumMap_) && (INCLUDE_ALL_ComGoogleCommonCollectImmutableEnumMap || defined(INCLUDE_ComGoogleCommonCollectImmutableEnumMap))
#define ComGoogleCommonCollectImmutableEnumMap_

#define RESTRICT_ComGoogleCommonCollectImmutableMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableMap_IteratorBasedImmutableMap 1
#include "com/google/common/collect/ImmutableMap.h"

@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectUnmodifiableIterator;
@class JavaUtilEnumMap;
@protocol JavaUtilFunctionBiConsumer;
@protocol JavaUtilSpliterator;

@interface ComGoogleCommonCollectImmutableEnumMap : ComGoogleCommonCollectImmutableMap_IteratorBasedImmutableMap

#pragma mark Public

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)isEqual:(id)object;

- (void)forEachWithJavaUtilFunctionBiConsumer:(id<JavaUtilFunctionBiConsumer>)action;

- (id)getWithId:(id)key;

- (jint)size;

#pragma mark Package-Private

+ (ComGoogleCommonCollectImmutableMap *)asImmutableWithJavaUtilEnumMap:(JavaUtilEnumMap *)map;

- (ComGoogleCommonCollectUnmodifiableIterator *)entryIterator;

- (id<JavaUtilSpliterator>)entrySpliterator;

- (jboolean)isPartialView;

- (ComGoogleCommonCollectUnmodifiableIterator *)keyIterator;

- (id<JavaUtilSpliterator>)keySpliterator;

- (id)writeReplace;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectImmutableEnumMap)

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableMap *ComGoogleCommonCollectImmutableEnumMap_asImmutableWithJavaUtilEnumMap_(JavaUtilEnumMap *map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectImmutableEnumMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableEnumMap")
