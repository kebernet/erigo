//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/LexicographicalOrdering.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/LexicographicalOrdering.h"
#include "com/google/common/collect/Ordering.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong ComGoogleCommonCollectLexicographicalOrdering_get_serialVersionUID();
#define ComGoogleCommonCollectLexicographicalOrdering_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectLexicographicalOrdering, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectLexicographicalOrdering__Annotations$0();

@implementation ComGoogleCommonCollectLexicographicalOrdering

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)elementOrder {
  ComGoogleCommonCollectLexicographicalOrdering_initWithJavaUtilComparator_(self, elementOrder);
  return self;
}

- (jint)compareWithId:(id<JavaLangIterable>)leftIterable
               withId:(id<JavaLangIterable>)rightIterable {
  id<JavaUtilIterator> left = [((id<JavaLangIterable>) nil_chk(leftIterable)) iterator];
  id<JavaUtilIterator> right = [((id<JavaLangIterable>) nil_chk(rightIterable)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(left)) hasNext]) {
    if (![((id<JavaUtilIterator>) nil_chk(right)) hasNext]) {
      return ComGoogleCommonCollectOrdering_LEFT_IS_GREATER;
    }
    jint result = [((id<JavaUtilComparator>) nil_chk(elementOrder_)) compareWithId:[left next] withId:[right next]];
    if (result != 0) {
      return result;
    }
  }
  if ([((id<JavaUtilIterator>) nil_chk(right)) hasNext]) {
    return ComGoogleCommonCollectOrdering_RIGHT_IS_GREATER;
  }
  return 0;
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if ([object isKindOfClass:[ComGoogleCommonCollectLexicographicalOrdering class]]) {
    ComGoogleCommonCollectLexicographicalOrdering *that = (ComGoogleCommonCollectLexicographicalOrdering *) cast_chk(object, [ComGoogleCommonCollectLexicographicalOrdering class]);
    return [((id<JavaUtilComparator>) nil_chk(self->elementOrder_)) isEqual:((ComGoogleCommonCollectLexicographicalOrdering *) nil_chk(that))->elementOrder_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilComparator>) nil_chk(elementOrder_)) hash]) ^ 2075626741;
}

- (NSString *)description {
  return JreStrcat("@$", elementOrder_, @".lexicographical()");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, 7 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilComparator:);
  methods[1].selector = @selector(compareWithId:withId:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elementOrder_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectLexicographicalOrdering_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilComparator;", "(Ljava/util/Comparator<-TT;>;)V", "compare", "LJavaLangIterable;LJavaLangIterable;", "(Ljava/lang/Iterable<TT;>;Ljava/lang/Iterable<TT;>;)I", "equals", "LNSObject;", (void *)&ComGoogleCommonCollectLexicographicalOrdering__Annotations$0, "hashCode", "toString", "Ljava/util/Comparator<-TT;>;", "<T:Ljava/lang/Object;>Lcom/google/common/collect/Ordering<Ljava/lang/Iterable<TT;>;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectLexicographicalOrdering = { "LexicographicalOrdering", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 5, 2, -1, -1, -1, 11, -1 };
  return &_ComGoogleCommonCollectLexicographicalOrdering;
}

@end

void ComGoogleCommonCollectLexicographicalOrdering_initWithJavaUtilComparator_(ComGoogleCommonCollectLexicographicalOrdering *self, id<JavaUtilComparator> elementOrder) {
  ComGoogleCommonCollectOrdering_init(self);
  self->elementOrder_ = elementOrder;
}

ComGoogleCommonCollectLexicographicalOrdering *new_ComGoogleCommonCollectLexicographicalOrdering_initWithJavaUtilComparator_(id<JavaUtilComparator> elementOrder) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectLexicographicalOrdering, initWithJavaUtilComparator_, elementOrder)
}

ComGoogleCommonCollectLexicographicalOrdering *create_ComGoogleCommonCollectLexicographicalOrdering_initWithJavaUtilComparator_(id<JavaUtilComparator> elementOrder) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectLexicographicalOrdering, initWithJavaUtilComparator_, elementOrder)
}

IOSObjectArray *ComGoogleCommonCollectLexicographicalOrdering__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectLexicographicalOrdering)
