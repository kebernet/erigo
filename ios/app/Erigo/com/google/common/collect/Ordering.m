//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/Ordering.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/AllEqualOrdering.h"
#include "com/google/common/collect/ByFunctionOrdering.h"
#include "com/google/common/collect/CollectPreconditions.h"
#include "com/google/common/collect/ComparatorOrdering.h"
#include "com/google/common/collect/CompoundOrdering.h"
#include "com/google/common/collect/ExplicitOrdering.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/Iterables.h"
#include "com/google/common/collect/LexicographicalOrdering.h"
#include "com/google/common/collect/Lists.h"
#include "com/google/common/collect/MapMaker.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/NaturalOrdering.h"
#include "com/google/common/collect/NullsFirstOrdering.h"
#include "com/google/common/collect/NullsLastOrdering.h"
#include "com/google/common/collect/Ordering.h"
#include "com/google/common/collect/Platform.h"
#include "com/google/common/collect/ReverseOrdering.h"
#include "com/google/common/collect/TopKSelector.h"
#include "com/google/common/collect/UsingToStringOrdering.h"
#include "java/lang/AssertionError.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/concurrent/ConcurrentMap.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$4();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$5();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$6();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$7();

@interface ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder)

inline ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_get_ARBITRARY_ORDERING();
static ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_ARBITRARY_ORDERING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder, ARBITRARY_ORDERING, ComGoogleCommonCollectOrdering *)

__attribute__((unused)) static void ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *self);

__attribute__((unused)) static ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *new_ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *create_ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder)

@interface ComGoogleCommonCollectOrdering_ArbitraryOrdering () {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *counter_;
  id<JavaUtilConcurrentConcurrentMap> uids_;
}

- (JavaLangInteger *)getUidWithId:(id)obj;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectOrdering_ArbitraryOrdering, counter_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectOrdering_ArbitraryOrdering, uids_, id<JavaUtilConcurrentConcurrentMap>)

__attribute__((unused)) static JavaLangInteger *ComGoogleCommonCollectOrdering_ArbitraryOrdering_getUidWithId_(ComGoogleCommonCollectOrdering_ArbitraryOrdering *self, id obj);

inline jlong ComGoogleCommonCollectOrdering_IncomparableValueException_get_serialVersionUID();
#define ComGoogleCommonCollectOrdering_IncomparableValueException_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectOrdering_IncomparableValueException, serialVersionUID, jlong)

@implementation ComGoogleCommonCollectOrdering

+ (ComGoogleCommonCollectOrdering *)natural {
  return ComGoogleCommonCollectOrdering_natural();
}

+ (ComGoogleCommonCollectOrdering *)fromWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return ComGoogleCommonCollectOrdering_fromWithJavaUtilComparator_(comparator);
}

+ (ComGoogleCommonCollectOrdering *)fromWithComGoogleCommonCollectOrdering:(ComGoogleCommonCollectOrdering *)ordering {
  return ComGoogleCommonCollectOrdering_fromWithComGoogleCommonCollectOrdering_(ordering);
}

+ (ComGoogleCommonCollectOrdering *)explicit__WithJavaUtilList:(id<JavaUtilList>)valuesInOrder {
  return ComGoogleCommonCollectOrdering_explicit__WithJavaUtilList_(valuesInOrder);
}

+ (ComGoogleCommonCollectOrdering *)explicit__WithId:(id)leastValue
                                   withNSObjectArray:(IOSObjectArray *)remainingValuesInOrder {
  return ComGoogleCommonCollectOrdering_explicit__WithId_withNSObjectArray_(leastValue, remainingValuesInOrder);
}

+ (ComGoogleCommonCollectOrdering *)allEqual {
  return ComGoogleCommonCollectOrdering_allEqual();
}

+ (ComGoogleCommonCollectOrdering *)usingToString {
  return ComGoogleCommonCollectOrdering_usingToString();
}

+ (ComGoogleCommonCollectOrdering *)arbitrary {
  return ComGoogleCommonCollectOrdering_arbitrary();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectOrdering_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonCollectOrdering *)reverse {
  return new_ComGoogleCommonCollectReverseOrdering_initWithComGoogleCommonCollectOrdering_(self);
}

- (ComGoogleCommonCollectOrdering *)nullsFirst {
  return new_ComGoogleCommonCollectNullsFirstOrdering_initWithComGoogleCommonCollectOrdering_(self);
}

- (ComGoogleCommonCollectOrdering *)nullsLast {
  return new_ComGoogleCommonCollectNullsLastOrdering_initWithComGoogleCommonCollectOrdering_(self);
}

- (ComGoogleCommonCollectOrdering *)onResultOfWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function {
  return new_ComGoogleCommonCollectByFunctionOrdering_initWithComGoogleCommonBaseFunction_withComGoogleCommonCollectOrdering_(function, self);
}

- (ComGoogleCommonCollectOrdering *)onKeys {
  return [self onResultOfWithComGoogleCommonBaseFunction:ComGoogleCommonCollectMaps_keyFunction()];
}

- (ComGoogleCommonCollectOrdering *)compoundWithJavaUtilComparator:(id<JavaUtilComparator>)secondaryComparator {
  return new_ComGoogleCommonCollectCompoundOrdering_initWithJavaUtilComparator_withJavaUtilComparator_(self, ComGoogleCommonBasePreconditions_checkNotNullWithId_(secondaryComparator));
}

+ (ComGoogleCommonCollectOrdering *)compoundWithJavaLangIterable:(id<JavaLangIterable>)comparators {
  return ComGoogleCommonCollectOrdering_compoundWithJavaLangIterable_(comparators);
}

- (ComGoogleCommonCollectOrdering *)lexicographical {
  return new_ComGoogleCommonCollectLexicographicalOrdering_initWithJavaUtilComparator_(self);
}

- (jint)compareWithId:(id)left
               withId:(id)right {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)minWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  id minSoFar = [((id<JavaUtilIterator>) nil_chk(iterator)) next];
  while ([iterator hasNext]) {
    minSoFar = [self minWithId:minSoFar withId:[iterator next]];
  }
  return minSoFar;
}

- (id)minWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  return [self minWithJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(iterable)) iterator]];
}

- (id)minWithId:(id)a
         withId:(id)b {
  return ([self compareWithId:a withId:b] <= 0) ? a : b;
}

- (id)minWithId:(id)a
         withId:(id)b
         withId:(id)c
withNSObjectArray:(IOSObjectArray *)rest {
  id minSoFar = [self minWithId:[self minWithId:a withId:b] withId:c];
  {
    IOSObjectArray *a__ = rest;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id r = *b__++;
      minSoFar = [self minWithId:minSoFar withId:r];
    }
  }
  return minSoFar;
}

- (id)maxWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  id maxSoFar = [((id<JavaUtilIterator>) nil_chk(iterator)) next];
  while ([iterator hasNext]) {
    maxSoFar = [self maxWithId:maxSoFar withId:[iterator next]];
  }
  return maxSoFar;
}

- (id)maxWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  return [self maxWithJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(iterable)) iterator]];
}

- (id)maxWithId:(id)a
         withId:(id)b {
  return ([self compareWithId:a withId:b] >= 0) ? a : b;
}

- (id)maxWithId:(id)a
         withId:(id)b
         withId:(id)c
withNSObjectArray:(IOSObjectArray *)rest {
  id maxSoFar = [self maxWithId:[self maxWithId:a withId:b] withId:c];
  {
    IOSObjectArray *a__ = rest;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id r = *b__++;
      maxSoFar = [self maxWithId:maxSoFar withId:r];
    }
  }
  return maxSoFar;
}

- (id<JavaUtilList>)leastOfWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                        withInt:(jint)k {
  if ([JavaUtilCollection_class_() isInstance:iterable]) {
    id<JavaUtilCollection> collection = (id<JavaUtilCollection>) cast_check(iterable, JavaUtilCollection_class_());
    if ([((id<JavaUtilCollection>) nil_chk(collection)) size] <= 2LL * k) {
      IOSObjectArray *array = [collection toArray];
      JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(array, self);
      if (((IOSObjectArray *) nil_chk(array))->size_ > k) {
        array = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(array, k);
      }
      return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(array));
    }
  }
  return [self leastOfWithJavaUtilIterator:[((id<JavaLangIterable>) nil_chk(iterable)) iterator] withInt:k];
}

- (id<JavaUtilList>)leastOfWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                                        withInt:(jint)k {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(iterator);
  ComGoogleCommonCollectCollectPreconditions_checkNonnegativeWithInt_withNSString_(k, @"k");
  if (k == 0 || ![((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    return ComGoogleCommonCollectImmutableList_of();
  }
  else if (k >= JavaLangInteger_MAX_VALUE / 2) {
    JavaUtilArrayList *list = ComGoogleCommonCollectLists_newArrayListWithJavaUtilIterator_(iterator);
    JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(list, self);
    if ([((JavaUtilArrayList *) nil_chk(list)) size] > k) {
      [((id<JavaUtilList>) nil_chk([list subListWithInt:k withInt:[list size]])) clear];
    }
    [list trimToSize];
    return JavaUtilCollections_unmodifiableListWithJavaUtilList_(list);
  }
  else {
    ComGoogleCommonCollectTopKSelector *selector = ComGoogleCommonCollectTopKSelector_leastWithInt_withJavaUtilComparator_(k, self);
    [((ComGoogleCommonCollectTopKSelector *) nil_chk(selector)) offerAllWithJavaUtilIterator:iterator];
    return [selector topK];
  }
}

- (id<JavaUtilList>)greatestOfWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                           withInt:(jint)k {
  return [((ComGoogleCommonCollectOrdering *) nil_chk([self reverse])) leastOfWithJavaLangIterable:iterable withInt:k];
}

- (id<JavaUtilList>)greatestOfWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                                           withInt:(jint)k {
  return [((ComGoogleCommonCollectOrdering *) nil_chk([self reverse])) leastOfWithJavaUtilIterator:iterator withInt:k];
}

- (id<JavaUtilList>)sortedCopyWithJavaLangIterable:(id<JavaLangIterable>)elements {
  IOSObjectArray *array = ComGoogleCommonCollectIterables_toArrayWithJavaLangIterable_(elements);
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(array, self);
  return ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_(array));
}

- (ComGoogleCommonCollectImmutableList *)immutableSortedCopyWithJavaLangIterable:(id<JavaLangIterable>)elements {
  return ComGoogleCommonCollectImmutableList_sortedCopyOfWithJavaUtilComparator_withJavaLangIterable_(self, elements);
}

- (jboolean)isOrderedWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  id<JavaUtilIterator> it = [((id<JavaLangIterable>) nil_chk(iterable)) iterator];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id prev = [it next];
    while ([it hasNext]) {
      id next = [it next];
      if ([self compareWithId:prev withId:next] > 0) {
        return false;
      }
      prev = next;
    }
  }
  return true;
}

- (jboolean)isStrictlyOrderedWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  id<JavaUtilIterator> it = [((id<JavaLangIterable>) nil_chk(iterable)) iterator];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id prev = [it next];
    while ([it hasNext]) {
      id next = [it next];
      if ([self compareWithId:prev withId:next] >= 0) {
        return false;
      }
      prev = next;
    }
  }
  return true;
}

- (jint)binarySearchWithJavaUtilList:(id<JavaUtilList>)sortedList
                              withId:(id)key {
  return JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(sortedList, key, self);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, 1, 4, -1, 5, 6, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x89, 7, 10, -1, 11, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, -1, -1, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, -1, -1, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, -1, -1, -1, 12, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, -1, -1, -1, 13, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, -1, -1, -1, 13, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, -1, -1, -1, 13, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, 14, 15, -1, 16, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x0, -1, -1, -1, 17, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, 18, 2, -1, 19, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x9, 18, 20, -1, 21, -1, -1 },
    { NULL, "LComGoogleCommonCollectOrdering;", 0x1, -1, -1, -1, 22, -1, -1 },
    { NULL, "I", 0x401, 23, 24, -1, 25, -1, 26 },
    { NULL, "LNSObject;", 0x1, 27, 28, -1, 29, -1, -1 },
    { NULL, "LNSObject;", 0x1, 27, 20, -1, 30, -1, -1 },
    { NULL, "LNSObject;", 0x1, 27, 24, -1, 31, -1, 32 },
    { NULL, "LNSObject;", 0x81, 27, 33, -1, 34, -1, 35 },
    { NULL, "LNSObject;", 0x1, 36, 28, -1, 29, -1, -1 },
    { NULL, "LNSObject;", 0x1, 36, 20, -1, 30, -1, -1 },
    { NULL, "LNSObject;", 0x1, 36, 24, -1, 31, -1, 37 },
    { NULL, "LNSObject;", 0x81, 36, 33, -1, 34, -1, 38 },
    { NULL, "LJavaUtilList;", 0x1, 39, 40, -1, 41, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 39, 42, -1, 43, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 44, 40, -1, 41, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 44, 42, -1, 43, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 45, 20, -1, 46, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x1, 47, 20, -1, 48, -1, -1 },
    { NULL, "Z", 0x1, 49, 20, -1, 50, -1, -1 },
    { NULL, "Z", 0x1, 51, 20, -1, 50, -1, -1 },
    { NULL, "I", 0x1, 52, 53, -1, 54, 55, 56 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(natural);
  methods[1].selector = @selector(fromWithJavaUtilComparator:);
  methods[2].selector = @selector(fromWithComGoogleCommonCollectOrdering:);
  methods[3].selector = @selector(explicit__WithJavaUtilList:);
  methods[4].selector = @selector(explicit__WithId:withNSObjectArray:);
  methods[5].selector = @selector(allEqual);
  methods[6].selector = @selector(usingToString);
  methods[7].selector = @selector(arbitrary);
  methods[8].selector = @selector(init);
  methods[9].selector = @selector(reverse);
  methods[10].selector = @selector(nullsFirst);
  methods[11].selector = @selector(nullsLast);
  methods[12].selector = @selector(onResultOfWithComGoogleCommonBaseFunction:);
  methods[13].selector = @selector(onKeys);
  methods[14].selector = @selector(compoundWithJavaUtilComparator:);
  methods[15].selector = @selector(compoundWithJavaLangIterable:);
  methods[16].selector = @selector(lexicographical);
  methods[17].selector = @selector(compareWithId:withId:);
  methods[18].selector = @selector(minWithJavaUtilIterator:);
  methods[19].selector = @selector(minWithJavaLangIterable:);
  methods[20].selector = @selector(minWithId:withId:);
  methods[21].selector = @selector(minWithId:withId:withId:withNSObjectArray:);
  methods[22].selector = @selector(maxWithJavaUtilIterator:);
  methods[23].selector = @selector(maxWithJavaLangIterable:);
  methods[24].selector = @selector(maxWithId:withId:);
  methods[25].selector = @selector(maxWithId:withId:withId:withNSObjectArray:);
  methods[26].selector = @selector(leastOfWithJavaLangIterable:withInt:);
  methods[27].selector = @selector(leastOfWithJavaUtilIterator:withInt:);
  methods[28].selector = @selector(greatestOfWithJavaLangIterable:withInt:);
  methods[29].selector = @selector(greatestOfWithJavaUtilIterator:withInt:);
  methods[30].selector = @selector(sortedCopyWithJavaLangIterable:);
  methods[31].selector = @selector(immutableSortedCopyWithJavaLangIterable:);
  methods[32].selector = @selector(isOrderedWithJavaLangIterable:);
  methods[33].selector = @selector(isStrictlyOrderedWithJavaLangIterable:);
  methods[34].selector = @selector(binarySearchWithJavaUtilList:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT_IS_GREATER", "I", .constantValue.asInt = ComGoogleCommonCollectOrdering_LEFT_IS_GREATER, 0x18, -1, -1, -1, -1 },
    { "RIGHT_IS_GREATER", "I", .constantValue.asInt = ComGoogleCommonCollectOrdering_RIGHT_IS_GREATER, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "<C::Ljava/lang/Comparable;>()Lcom/google/common/collect/Ordering<TC;>;", "from", "LJavaUtilComparator;", "<T:Ljava/lang/Object;>(Ljava/util/Comparator<TT;>;)Lcom/google/common/collect/Ordering<TT;>;", "LComGoogleCommonCollectOrdering;", "<T:Ljava/lang/Object;>(Lcom/google/common/collect/Ordering<TT;>;)Lcom/google/common/collect/Ordering<TT;>;", (void *)&ComGoogleCommonCollectOrdering__Annotations$0, "explicit", "LJavaUtilList;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;)Lcom/google/common/collect/Ordering<TT;>;", "LNSObject;[LNSObject;", "<T:Ljava/lang/Object;>(TT;[TT;)Lcom/google/common/collect/Ordering<TT;>;", "()Lcom/google/common/collect/Ordering<Ljava/lang/Object;>;", "<S:TT;>()Lcom/google/common/collect/Ordering<TS;>;", "onResultOf", "LComGoogleCommonBaseFunction;", "<F:Ljava/lang/Object;>(Lcom/google/common/base/Function<TF;+TT;>;)Lcom/google/common/collect/Ordering<TF;>;", "<T2:TT;>()Lcom/google/common/collect/Ordering<Ljava/util/Map$Entry<TT2;*>;>;", "compound", "<U:TT;>(Ljava/util/Comparator<-TU;>;)Lcom/google/common/collect/Ordering<TU;>;", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Ljava/util/Comparator<-TT;>;>;)Lcom/google/common/collect/Ordering<TT;>;", "<S:TT;>()Lcom/google/common/collect/Ordering<Ljava/lang/Iterable<TS;>;>;", "compare", "LNSObject;LNSObject;", "(TT;TT;)I", (void *)&ComGoogleCommonCollectOrdering__Annotations$1, "min", "LJavaUtilIterator;", "<E:TT;>(Ljava/util/Iterator<TE;>;)TE;", "<E:TT;>(Ljava/lang/Iterable<TE;>;)TE;", "<E:TT;>(TE;TE;)TE;", (void *)&ComGoogleCommonCollectOrdering__Annotations$2, "LNSObject;LNSObject;LNSObject;[LNSObject;", "<E:TT;>(TE;TE;TE;[TE;)TE;", (void *)&ComGoogleCommonCollectOrdering__Annotations$3, "max", (void *)&ComGoogleCommonCollectOrdering__Annotations$4, (void *)&ComGoogleCommonCollectOrdering__Annotations$5, "leastOf", "LJavaLangIterable;I", "<E:TT;>(Ljava/lang/Iterable<TE;>;I)Ljava/util/List<TE;>;", "LJavaUtilIterator;I", "<E:TT;>(Ljava/util/Iterator<TE;>;I)Ljava/util/List<TE;>;", "greatestOf", "sortedCopy", "<E:TT;>(Ljava/lang/Iterable<TE;>;)Ljava/util/List<TE;>;", "immutableSortedCopy", "<E:TT;>(Ljava/lang/Iterable<TE;>;)Lcom/google/common/collect/ImmutableList<TE;>;", "isOrdered", "(Ljava/lang/Iterable<+TT;>;)Z", "isStrictlyOrdered", "binarySearch", "LJavaUtilList;LNSObject;", "(Ljava/util/List<+TT;>;TT;)I", (void *)&ComGoogleCommonCollectOrdering__Annotations$6, (void *)&ComGoogleCommonCollectOrdering__Annotations$7, "LComGoogleCommonCollectOrdering_ArbitraryOrderingHolder;LComGoogleCommonCollectOrdering_ArbitraryOrdering;LComGoogleCommonCollectOrdering_IncomparableValueException;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Comparator<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectOrdering = { "Ordering", "com.google.common.collect", ptrTable, methods, fields, 7, 0x401, 35, 2, -1, 57, -1, 58, -1 };
  return &_ComGoogleCommonCollectOrdering;
}

@end

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_natural() {
  ComGoogleCommonCollectOrdering_initialize();
  return JreLoadStatic(ComGoogleCommonCollectNaturalOrdering, INSTANCE);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_fromWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  ComGoogleCommonCollectOrdering_initialize();
  return ([comparator isKindOfClass:[ComGoogleCommonCollectOrdering class]]) ? (ComGoogleCommonCollectOrdering *) cast_chk(comparator, [ComGoogleCommonCollectOrdering class]) : new_ComGoogleCommonCollectComparatorOrdering_initWithJavaUtilComparator_(comparator);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_fromWithComGoogleCommonCollectOrdering_(ComGoogleCommonCollectOrdering *ordering) {
  ComGoogleCommonCollectOrdering_initialize();
  return ComGoogleCommonBasePreconditions_checkNotNullWithId_(ordering);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_explicit__WithJavaUtilList_(id<JavaUtilList> valuesInOrder) {
  ComGoogleCommonCollectOrdering_initialize();
  return new_ComGoogleCommonCollectExplicitOrdering_initWithJavaUtilList_(valuesInOrder);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_explicit__WithId_withNSObjectArray_(id leastValue, IOSObjectArray *remainingValuesInOrder) {
  ComGoogleCommonCollectOrdering_initialize();
  return ComGoogleCommonCollectOrdering_explicit__WithJavaUtilList_(ComGoogleCommonCollectLists_asListWithId_withNSObjectArray_(leastValue, remainingValuesInOrder));
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_allEqual() {
  ComGoogleCommonCollectOrdering_initialize();
  return JreLoadStatic(ComGoogleCommonCollectAllEqualOrdering, INSTANCE);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_usingToString() {
  ComGoogleCommonCollectOrdering_initialize();
  return JreLoadStatic(ComGoogleCommonCollectUsingToStringOrdering, INSTANCE);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_arbitrary() {
  ComGoogleCommonCollectOrdering_initialize();
  return JreLoadStatic(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder, ARBITRARY_ORDERING);
}

void ComGoogleCommonCollectOrdering_init(ComGoogleCommonCollectOrdering *self) {
  NSObject_init(self);
}

ComGoogleCommonCollectOrdering *ComGoogleCommonCollectOrdering_compoundWithJavaLangIterable_(id<JavaLangIterable> comparators) {
  ComGoogleCommonCollectOrdering_initialize();
  return new_ComGoogleCommonCollectCompoundOrdering_initWithJavaLangIterable_(comparators);
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:4 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:4 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonCollectOrdering__Annotations$7() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectOrdering)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder)

@implementation ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ARBITRARY_ORDERING", "LComGoogleCommonCollectOrdering;", .constantValue.asLong = 0, 0x18, -1, 0, 1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_ARBITRARY_ORDERING, "Lcom/google/common/collect/Ordering<Ljava/lang/Object;>;", "LComGoogleCommonCollectOrdering;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder = { "ArbitraryOrderingHolder", "com.google.common.collect", ptrTable, methods, fields, 7, 0xa, 1, 1, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder class]) {
    ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_ARBITRARY_ORDERING = new_ComGoogleCommonCollectOrdering_ArbitraryOrdering_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder)
  }
}

@end

void ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *self) {
  NSObject_init(self);
}

ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *new_ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder, init)
}

ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder *create_ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectOrdering_ArbitraryOrderingHolder)

@implementation ComGoogleCommonCollectOrdering_ArbitraryOrdering

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectOrdering_ArbitraryOrdering_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)getUidWithId:(id)obj {
  return ComGoogleCommonCollectOrdering_ArbitraryOrdering_getUidWithId_(self, obj);
}

- (jint)compareWithId:(id)left
               withId:(id)right {
  if (left == right) {
    return 0;
  }
  else if (left == nil) {
    return -1;
  }
  else if (right == nil) {
    return 1;
  }
  jint leftCode = [self identityHashCodeWithId:left];
  jint rightCode = [self identityHashCodeWithId:right];
  if (leftCode != rightCode) {
    return leftCode < rightCode ? -1 : 1;
  }
  jint result = [((JavaLangInteger *) nil_chk(ComGoogleCommonCollectOrdering_ArbitraryOrdering_getUidWithId_(self, left))) compareToWithId:ComGoogleCommonCollectOrdering_ArbitraryOrdering_getUidWithId_(self, right)];
  if (result == 0) {
    @throw new_JavaLangAssertionError_init();
  }
  return result;
}

- (NSString *)description {
  return @"Ordering.arbitrary()";
}

- (jint)identityHashCodeWithId:(id)object {
  return JavaLangSystem_identityHashCodeWithId_(object);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getUidWithId:);
  methods[2].selector = @selector(compareWithId:withId:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(identityHashCodeWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "uids_", "LJavaUtilConcurrentConcurrentMap;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "getUid", "LNSObject;", "compare", "LNSObject;LNSObject;", "toString", "identityHashCode", "Ljava/util/concurrent/ConcurrentMap<Ljava/lang/Object;Ljava/lang/Integer;>;", "LComGoogleCommonCollectOrdering;", "Lcom/google/common/collect/Ordering<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectOrdering_ArbitraryOrdering = { "ArbitraryOrdering", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8, 5, 2, 7, -1, -1, 8, -1 };
  return &_ComGoogleCommonCollectOrdering_ArbitraryOrdering;
}

@end

void ComGoogleCommonCollectOrdering_ArbitraryOrdering_init(ComGoogleCommonCollectOrdering_ArbitraryOrdering *self) {
  ComGoogleCommonCollectOrdering_init(self);
  self->counter_ = new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(0);
  self->uids_ = [((ComGoogleCommonCollectMapMaker *) nil_chk(ComGoogleCommonCollectPlatform_tryWeakKeysWithComGoogleCommonCollectMapMaker_(new_ComGoogleCommonCollectMapMaker_init()))) makeMap];
}

ComGoogleCommonCollectOrdering_ArbitraryOrdering *new_ComGoogleCommonCollectOrdering_ArbitraryOrdering_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectOrdering_ArbitraryOrdering, init)
}

ComGoogleCommonCollectOrdering_ArbitraryOrdering *create_ComGoogleCommonCollectOrdering_ArbitraryOrdering_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectOrdering_ArbitraryOrdering, init)
}

JavaLangInteger *ComGoogleCommonCollectOrdering_ArbitraryOrdering_getUidWithId_(ComGoogleCommonCollectOrdering_ArbitraryOrdering *self, id obj) {
  JavaLangInteger *uid = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(self->uids_)) getWithId:obj];
  if (uid == nil) {
    uid = JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->counter_)) getAndIncrement]);
    JavaLangInteger *alreadySet = [self->uids_ putIfAbsentWithId:obj withId:uid];
    if (alreadySet != nil) {
      uid = alreadySet;
    }
  }
  return uid;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectOrdering_ArbitraryOrdering)

@implementation ComGoogleCommonCollectOrdering_IncomparableValueException

- (instancetype)initWithId:(id)value {
  ComGoogleCommonCollectOrdering_IncomparableValueException_initWithId_(self, value);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonCollectOrdering_IncomparableValueException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "LComGoogleCommonCollectOrdering;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectOrdering_IncomparableValueException = { "IncomparableValueException", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8, 1, 2, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonCollectOrdering_IncomparableValueException;
}

@end

void ComGoogleCommonCollectOrdering_IncomparableValueException_initWithId_(ComGoogleCommonCollectOrdering_IncomparableValueException *self, id value) {
  JavaLangClassCastException_initWithNSString_(self, JreStrcat("$@", @"Cannot compare value: ", value));
  self->value_ = value;
}

ComGoogleCommonCollectOrdering_IncomparableValueException *new_ComGoogleCommonCollectOrdering_IncomparableValueException_initWithId_(id value) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectOrdering_IncomparableValueException, initWithId_, value)
}

ComGoogleCommonCollectOrdering_IncomparableValueException *create_ComGoogleCommonCollectOrdering_IncomparableValueException_initWithId_(id value) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectOrdering_IncomparableValueException, initWithId_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectOrdering_IncomparableValueException)
