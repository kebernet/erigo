//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/RegularImmutableBiMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableBiMap")
#ifdef RESTRICT_ComGoogleCommonCollectRegularImmutableBiMap
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableBiMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableBiMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectRegularImmutableBiMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectRegularImmutableBiMap_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableBiMap || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableBiMap))
#define ComGoogleCommonCollectRegularImmutableBiMap_

#define RESTRICT_ComGoogleCommonCollectImmutableBiMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableBiMap 1
#include "com/google/common/collect/ImmutableBiMap.h"

@class ComGoogleCommonCollectImmutableSet;
@class IOSObjectArray;
@protocol JavaUtilFunctionBiConsumer;

@interface ComGoogleCommonCollectRegularImmutableBiMap : ComGoogleCommonCollectImmutableBiMap

#pragma mark Public

- (ComGoogleCommonCollectImmutableSet *)entrySet;

- (void)forEachWithJavaUtilFunctionBiConsumer:(id<JavaUtilFunctionBiConsumer>)action;

- (id)getWithId:(id)key;

- (NSUInteger)hash;

- (ComGoogleCommonCollectImmutableBiMap *)inverse;

- (ComGoogleCommonCollectImmutableSet *)keySet;

- (jint)size;

#pragma mark Package-Private

- (ComGoogleCommonCollectImmutableSet *)createEntrySet;

- (ComGoogleCommonCollectImmutableSet *)createKeySet;

+ (ComGoogleCommonCollectRegularImmutableBiMap *)fromEntriesWithJavaUtilMap_EntryArray:(IOSObjectArray *)entries;

+ (ComGoogleCommonCollectRegularImmutableBiMap *)fromEntryArrayWithInt:(jint)n
                                            withJavaUtilMap_EntryArray:(IOSObjectArray *)entryArray;

- (jboolean)isHashCodeFast;

- (jboolean)isPartialView;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCollectRegularImmutableBiMap)

inline ComGoogleCommonCollectRegularImmutableBiMap *ComGoogleCommonCollectRegularImmutableBiMap_get_EMPTY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableBiMap *ComGoogleCommonCollectRegularImmutableBiMap_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCollectRegularImmutableBiMap, EMPTY, ComGoogleCommonCollectRegularImmutableBiMap *)

inline jdouble ComGoogleCommonCollectRegularImmutableBiMap_get_MAX_LOAD_FACTOR();
#define ComGoogleCommonCollectRegularImmutableBiMap_MAX_LOAD_FACTOR 1.2
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectRegularImmutableBiMap, MAX_LOAD_FACTOR, jdouble)

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableBiMap *ComGoogleCommonCollectRegularImmutableBiMap_fromEntriesWithJavaUtilMap_EntryArray_(IOSObjectArray *entries);

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableBiMap *ComGoogleCommonCollectRegularImmutableBiMap_fromEntryArrayWithInt_withJavaUtilMap_EntryArray_(jint n, IOSObjectArray *entryArray);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableBiMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableBiMap")
