//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/RegularImmutableList.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/collect/ImmutableCollection.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/Iterators.h"
#include "com/google/common/collect/RegularImmutableList.h"
#include "com/google/common/collect/UnmodifiableListIterator.h"
#include "java/lang/System.h"
#include "java/util/Spliterator.h"
#include "java/util/Spliterators.h"

@interface ComGoogleCommonCollectRegularImmutableList () {
 @public
  IOSObjectArray *array_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRegularImmutableList, array_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCollectRegularImmutableList)

ComGoogleCommonCollectImmutableList *ComGoogleCommonCollectRegularImmutableList_EMPTY;

@implementation ComGoogleCommonCollectRegularImmutableList

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)array {
  ComGoogleCommonCollectRegularImmutableList_initWithNSObjectArray_(self, array);
  return self;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(array_))->size_;
}

- (jboolean)isPartialView {
  return false;
}

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray *)dst
                               withInt:(jint)dstOff {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array_, 0, dst, dstOff, ((IOSObjectArray *) nil_chk(array_))->size_);
  return dstOff + array_->size_;
}

- (id)getWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(array_), index);
}

- (ComGoogleCommonCollectUnmodifiableListIterator *)listIteratorWithInt:(jint)index {
  return ComGoogleCommonCollectIterators_forArrayWithNSObjectArray_withInt_withInt_withInt_(array_, 0, ((IOSObjectArray *) nil_chk(array_))->size_, index);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaUtilSpliterators_spliteratorWithNSObjectArray_withInt_(array_, ComGoogleCommonCollectImmutableCollection_SPLITERATOR_CHARACTERISTICS);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonCollectUnmodifiableListIterator;", 0x1, 6, 4, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSpliterator;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSObjectArray:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(isPartialView);
  methods[3].selector = @selector(copyIntoArrayWithNSObjectArray:withInt:);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(listIteratorWithInt:);
  methods[6].selector = @selector(spliterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x18, -1, 9, 10, -1 },
    { "array_", "[LNSObject;", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "copyIntoArray", "[LNSObject;I", "get", "I", "(I)TE;", "listIterator", "(I)Lcom/google/common/collect/UnmodifiableListIterator<TE;>;", "()Ljava/util/Spliterator<TE;>;", &ComGoogleCommonCollectRegularImmutableList_EMPTY, "Lcom/google/common/collect/ImmutableList<Ljava/lang/Object;>;", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ImmutableList<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableList = { "RegularImmutableList", "com.google.common.collect", ptrTable, methods, fields, 7, 0x0, 7, 2, -1, -1, -1, 11, -1 };
  return &_ComGoogleCommonCollectRegularImmutableList;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCollectRegularImmutableList class]) {
    ComGoogleCommonCollectRegularImmutableList_EMPTY = new_ComGoogleCommonCollectRegularImmutableList_initWithNSObjectArray_([IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCollectRegularImmutableList)
  }
}

@end

void ComGoogleCommonCollectRegularImmutableList_initWithNSObjectArray_(ComGoogleCommonCollectRegularImmutableList *self, IOSObjectArray *array) {
  ComGoogleCommonCollectImmutableList_init(self);
  self->array_ = array;
}

ComGoogleCommonCollectRegularImmutableList *new_ComGoogleCommonCollectRegularImmutableList_initWithNSObjectArray_(IOSObjectArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectRegularImmutableList, initWithNSObjectArray_, array)
}

ComGoogleCommonCollectRegularImmutableList *create_ComGoogleCommonCollectRegularImmutableList_initWithNSObjectArray_(IOSObjectArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectRegularImmutableList, initWithNSObjectArray_, array)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectRegularImmutableList)
