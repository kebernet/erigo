//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/RegularImmutableSortedSet.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableSortedAsList.h"
#include "com/google/common/collect/ImmutableSortedSet.h"
#include "com/google/common/collect/Multiset.h"
#include "com/google/common/collect/Ordering.h"
#include "com/google/common/collect/RegularImmutableSortedSet.h"
#include "com/google/common/collect/SortedIterables.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonCollectRegularImmutableSortedSet () {
 @public
  ComGoogleCommonCollectImmutableList *elements_;
}

- (jint)unsafeBinarySearchWithId:(id)key;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRegularImmutableSortedSet, elements_, ComGoogleCommonCollectImmutableList *)

__attribute__((unused)) static jint ComGoogleCommonCollectRegularImmutableSortedSet_unsafeBinarySearchWithId_(ComGoogleCommonCollectRegularImmutableSortedSet *self, id key);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$2();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonCollectRegularImmutableSortedSet)

ComGoogleCommonCollectRegularImmutableSortedSet *ComGoogleCommonCollectRegularImmutableSortedSet_NATURAL_EMPTY_SET;

@implementation ComGoogleCommonCollectRegularImmutableSortedSet

- (instancetype)initWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)elements
                                     withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_(self, elements, comparator);
  return self;
}

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) iterator];
}

- (ComGoogleCommonCollectUnmodifiableIterator *)descendingIterator {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk([((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) reverse])) iterator];
}

- (id<JavaUtilSpliterator>)spliterator {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk([self asList])) spliterator];
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)action {
  [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) forEachWithJavaUtilFunctionConsumer:action];
}

- (jint)size {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) size];
}

- (jboolean)containsWithId:(id)o {
  @try {
    return o != nil && ComGoogleCommonCollectRegularImmutableSortedSet_unsafeBinarySearchWithId_(self, o) >= 0;
  }
  @catch (JavaLangClassCastException *e) {
    return false;
  }
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)targets {
  if ([ComGoogleCommonCollectMultiset_class_() isInstance:targets]) {
    targets = [((id<ComGoogleCommonCollectMultiset>) nil_chk(((id<ComGoogleCommonCollectMultiset>) cast_check(targets, ComGoogleCommonCollectMultiset_class_())))) elementSet];
  }
  if (!ComGoogleCommonCollectSortedIterables_hasSameComparatorWithJavaUtilComparator_withJavaLangIterable_([self comparator], targets) || ([((id<JavaUtilCollection>) nil_chk(targets)) size] <= 1)) {
    return [super containsAllWithJavaUtilCollection:targets];
  }
  id<JavaUtilIterator> thisIterator = [self iterator];
  id<JavaUtilIterator> thatIterator = [((id<JavaUtilCollection>) nil_chk(targets)) iterator];
  if (![((id<JavaUtilIterator>) nil_chk(thisIterator)) hasNext]) {
    return false;
  }
  id target = [((id<JavaUtilIterator>) nil_chk(thatIterator)) next];
  id current = [thisIterator next];
  @try {
    while (true) {
      jint cmp = [self unsafeCompareWithId:current withId:target];
      if (cmp < 0) {
        if (![thisIterator hasNext]) {
          return false;
        }
        current = [thisIterator next];
      }
      else if (cmp == 0) {
        if (![thatIterator hasNext]) {
          return true;
        }
        target = [thatIterator next];
      }
      else if (cmp > 0) {
        return false;
      }
    }
  }
  @catch (JavaLangNullPointerException *e) {
    return false;
  }
  @catch (JavaLangClassCastException *e) {
    return false;
  }
}

- (jint)unsafeBinarySearchWithId:(id)key {
  return ComGoogleCommonCollectRegularImmutableSortedSet_unsafeBinarySearchWithId_(self, key);
}

- (jboolean)isPartialView {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) isPartialView];
}

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray *)dst
                               withInt:(jint)offset {
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) copyIntoArrayWithNSObjectArray:dst withInt:offset];
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if (!([JavaUtilSet_class_() isInstance:object])) {
    return false;
  }
  id<JavaUtilSet> that = (id<JavaUtilSet>) cast_check(object, JavaUtilSet_class_());
  if ([self size] != [((id<JavaUtilSet>) nil_chk(that)) size]) {
    return false;
  }
  else if ([self isEmpty]) {
    return true;
  }
  if (ComGoogleCommonCollectSortedIterables_hasSameComparatorWithJavaUtilComparator_withJavaLangIterable_(comparator_, that)) {
    id<JavaUtilIterator> otherIterator = [that iterator];
    @try {
      id<JavaUtilIterator> iterator = [self iterator];
      while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
        id element = [iterator next];
        id otherElement = [((id<JavaUtilIterator>) nil_chk(otherIterator)) next];
        if (otherElement == nil || [self unsafeCompareWithId:element withId:otherElement] != 0) {
          return false;
        }
      }
      return true;
    }
    @catch (JavaLangClassCastException *e) {
      return false;
    }
    @catch (JavaUtilNoSuchElementException *e) {
      return false;
    }
  }
  return [self containsAllWithJavaUtilCollection:that];
}

- (id)first {
  if ([self isEmpty]) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:0];
}

- (id)last {
  if ([self isEmpty]) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  return [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:[self size] - 1];
}

- (id)lowerWithId:(id)element {
  jint index = [self headIndexWithId:element withBoolean:false] - 1;
  return (index == -1) ? nil : [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:index];
}

- (id)floorWithId:(id)element {
  jint index = [self headIndexWithId:element withBoolean:true] - 1;
  return (index == -1) ? nil : [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:index];
}

- (id)ceilingWithId:(id)element {
  jint index = [self tailIndexWithId:element withBoolean:true];
  return (index == [self size]) ? nil : [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:index];
}

- (id)higherWithId:(id)element {
  jint index = [self tailIndexWithId:element withBoolean:false];
  return (index == [self size]) ? nil : [((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) getWithInt:index];
}

- (ComGoogleCommonCollectImmutableSortedSet *)headSetImplWithId:(id)toElement
                                                    withBoolean:(jboolean)inclusive {
  return [self getSubSetWithInt:0 withInt:[self headIndexWithId:toElement withBoolean:inclusive]];
}

- (jint)headIndexWithId:(id)toElement
            withBoolean:(jboolean)inclusive {
  jint index = JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(elements_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(toElement), [self comparator]);
  if (index >= 0) {
    return inclusive ? index + 1 : index;
  }
  else {
    return ~index;
  }
}

- (ComGoogleCommonCollectImmutableSortedSet *)subSetImplWithId:(id)fromElement
                                                   withBoolean:(jboolean)fromInclusive
                                                        withId:(id)toElement
                                                   withBoolean:(jboolean)toInclusive {
  return [((ComGoogleCommonCollectImmutableSortedSet *) nil_chk([self tailSetImplWithId:fromElement withBoolean:fromInclusive])) headSetImplWithId:toElement withBoolean:toInclusive];
}

- (ComGoogleCommonCollectImmutableSortedSet *)tailSetImplWithId:(id)fromElement
                                                    withBoolean:(jboolean)inclusive {
  return [self getSubSetWithInt:[self tailIndexWithId:fromElement withBoolean:inclusive] withInt:[self size]];
}

- (jint)tailIndexWithId:(id)fromElement
            withBoolean:(jboolean)inclusive {
  jint index = JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(elements_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(fromElement), [self comparator]);
  if (index >= 0) {
    return inclusive ? index : index + 1;
  }
  else {
    return ~index;
  }
}

- (id<JavaUtilComparator>)unsafeComparator {
  return comparator_;
}

- (ComGoogleCommonCollectRegularImmutableSortedSet *)getSubSetWithInt:(jint)newFromIndex
                                                              withInt:(jint)newToIndex {
  if (newFromIndex == 0 && newToIndex == [self size]) {
    return self;
  }
  else if (newFromIndex < newToIndex) {
    return new_ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_([((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) subListWithInt:newFromIndex withInt:newToIndex], comparator_);
  }
  else {
    return ComGoogleCommonCollectImmutableSortedSet_emptySetWithJavaUtilComparator_(comparator_);
  }
}

- (jint)indexOfWithId:(id)target {
  if (target == nil) {
    return -1;
  }
  jint position;
  @try {
    position = JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(elements_, target, [self unsafeComparator]);
  }
  @catch (JavaLangClassCastException *e) {
    return -1;
  }
  return (position >= 0) ? position : -1;
}

- (ComGoogleCommonCollectImmutableList *)createAsList {
  return ([self size] <= 1) ? elements_ : new_ComGoogleCommonCollectImmutableSortedAsList_initWithComGoogleCommonCollectImmutableSortedSet_withComGoogleCommonCollectImmutableList_(self, elements_);
}

- (ComGoogleCommonCollectImmutableSortedSet *)createDescendingSet {
  id<JavaUtilComparator> reversedOrder = JavaUtilCollections_reverseOrderWithJavaUtilComparator_(comparator_);
  return [self isEmpty] ? ComGoogleCommonCollectImmutableSortedSet_emptySetWithJavaUtilComparator_(reversedOrder) : new_ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_([((ComGoogleCommonCollectImmutableList *) nil_chk(elements_)) reverse], reversedOrder);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonCollectUnmodifiableIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectUnmodifiableIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilSpliterator;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, 9 },
    { NULL, "Z", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "I", 0x2, 13, 8, 14, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 8, -1, -1, -1, 18 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "LNSObject;", 0x1, 20, 8, -1, 21, -1, -1 },
    { NULL, "LNSObject;", 0x1, 22, 8, -1, 21, -1, -1 },
    { NULL, "LNSObject;", 0x1, 23, 8, -1, 21, -1, -1 },
    { NULL, "LNSObject;", 0x1, 24, 8, -1, 21, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSortedSet;", 0x0, 25, 26, -1, 27, -1, -1 },
    { NULL, "I", 0x0, 28, 26, -1, 29, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSortedSet;", 0x0, 30, 31, -1, 32, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSortedSet;", 0x0, 33, 26, -1, 27, -1, -1 },
    { NULL, "I", 0x0, 34, 26, -1, 29, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x0, -1, -1, -1, 35, -1, -1 },
    { NULL, "LComGoogleCommonCollectRegularImmutableSortedSet;", 0x0, 36, 37, -1, 38, -1, -1 },
    { NULL, "I", 0x0, 39, 8, -1, -1, -1, 40 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x0, -1, -1, -1, 41, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSortedSet;", 0x0, -1, -1, -1, 42, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectImmutableList:withJavaUtilComparator:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(descendingIterator);
  methods[3].selector = @selector(spliterator);
  methods[4].selector = @selector(forEachWithJavaUtilFunctionConsumer:);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(containsWithId:);
  methods[7].selector = @selector(containsAllWithJavaUtilCollection:);
  methods[8].selector = @selector(unsafeBinarySearchWithId:);
  methods[9].selector = @selector(isPartialView);
  methods[10].selector = @selector(copyIntoArrayWithNSObjectArray:withInt:);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(first);
  methods[13].selector = @selector(last);
  methods[14].selector = @selector(lowerWithId:);
  methods[15].selector = @selector(floorWithId:);
  methods[16].selector = @selector(ceilingWithId:);
  methods[17].selector = @selector(higherWithId:);
  methods[18].selector = @selector(headSetImplWithId:withBoolean:);
  methods[19].selector = @selector(headIndexWithId:withBoolean:);
  methods[20].selector = @selector(subSetImplWithId:withBoolean:withId:withBoolean:);
  methods[21].selector = @selector(tailSetImplWithId:withBoolean:);
  methods[22].selector = @selector(tailIndexWithId:withBoolean:);
  methods[23].selector = @selector(unsafeComparator);
  methods[24].selector = @selector(getSubSetWithInt:withInt:);
  methods[25].selector = @selector(indexOfWithId:);
  methods[26].selector = @selector(createAsList);
  methods[27].selector = @selector(createDescendingSet);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NATURAL_EMPTY_SET", "LComGoogleCommonCollectRegularImmutableSortedSet;", .constantValue.asLong = 0, 0x18, -1, 43, 44, -1 },
    { "elements_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x92, -1, -1, 45, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableList;LJavaUtilComparator;", "(Lcom/google/common/collect/ImmutableList<TE;>;Ljava/util/Comparator<-TE;>;)V", "()Lcom/google/common/collect/UnmodifiableIterator<TE;>;", "()Ljava/util/Spliterator<TE;>;", "forEach", "LJavaUtilFunctionConsumer;", "(Ljava/util/function/Consumer<-TE;>;)V", "contains", "LNSObject;", (void *)&ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$0, "containsAll", "LJavaUtilCollection;", "(Ljava/util/Collection<*>;)Z", "unsafeBinarySearch", "LJavaLangClassCastException;", "copyIntoArray", "[LNSObject;I", "equals", (void *)&ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$1, "()TE;", "lower", "(TE;)TE;", "floor", "ceiling", "higher", "headSetImpl", "LNSObject;Z", "(TE;Z)Lcom/google/common/collect/ImmutableSortedSet<TE;>;", "headIndex", "(TE;Z)I", "subSetImpl", "LNSObject;ZLNSObject;Z", "(TE;ZTE;Z)Lcom/google/common/collect/ImmutableSortedSet<TE;>;", "tailSetImpl", "tailIndex", "()Ljava/util/Comparator<Ljava/lang/Object;>;", "getSubSet", "II", "(II)Lcom/google/common/collect/RegularImmutableSortedSet<TE;>;", "indexOf", (void *)&ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$2, "()Lcom/google/common/collect/ImmutableList<TE;>;", "()Lcom/google/common/collect/ImmutableSortedSet<TE;>;", &ComGoogleCommonCollectRegularImmutableSortedSet_NATURAL_EMPTY_SET, "Lcom/google/common/collect/RegularImmutableSortedSet<Ljava/lang/Comparable;>;", "Lcom/google/common/collect/ImmutableList<TE;>;", "<E:Ljava/lang/Object;>Lcom/google/common/collect/ImmutableSortedSet<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableSortedSet = { "RegularImmutableSortedSet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 28, 2, -1, -1, -1, 46, -1 };
  return &_ComGoogleCommonCollectRegularImmutableSortedSet;
}

+ (void)initialize {
  if (self == [ComGoogleCommonCollectRegularImmutableSortedSet class]) {
    ComGoogleCommonCollectRegularImmutableSortedSet_NATURAL_EMPTY_SET = new_ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_(ComGoogleCommonCollectImmutableList_of(), ComGoogleCommonCollectOrdering_natural());
    J2OBJC_SET_INITIALIZED(ComGoogleCommonCollectRegularImmutableSortedSet)
  }
}

@end

void ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_(ComGoogleCommonCollectRegularImmutableSortedSet *self, ComGoogleCommonCollectImmutableList *elements, id<JavaUtilComparator> comparator) {
  ComGoogleCommonCollectImmutableSortedSet_initWithJavaUtilComparator_(self, comparator);
  self->elements_ = elements;
}

ComGoogleCommonCollectRegularImmutableSortedSet *new_ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_(ComGoogleCommonCollectImmutableList *elements, id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectRegularImmutableSortedSet, initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_, elements, comparator)
}

ComGoogleCommonCollectRegularImmutableSortedSet *create_ComGoogleCommonCollectRegularImmutableSortedSet_initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_(ComGoogleCommonCollectImmutableList *elements, id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectRegularImmutableSortedSet, initWithComGoogleCommonCollectImmutableList_withJavaUtilComparator_, elements, comparator)
}

jint ComGoogleCommonCollectRegularImmutableSortedSet_unsafeBinarySearchWithId_(ComGoogleCommonCollectRegularImmutableSortedSet *self, id key) {
  return JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(self->elements_, key, [self unsafeComparator]);
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableSortedSet__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectRegularImmutableSortedSet)
