//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/RegularImmutableTable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/DenseImmutableTable.h"
#include "com/google/common/collect/ImmutableCollection.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/ImmutableTable.h"
#include "com/google/common/collect/RegularImmutableTable.h"
#include "com/google/common/collect/SparseImmutableTable.h"
#include "com/google/common/collect/Table.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonCollectRegularImmutableTable ()

+ (ComGoogleCommonCollectRegularImmutableTable *)forCellsInternalWithJavaLangIterable:(id<JavaLangIterable>)cells
                                                               withJavaUtilComparator:(id<JavaUtilComparator>)rowComparator
                                                               withJavaUtilComparator:(id<JavaUtilComparator>)columnComparator;

@end

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable *ComGoogleCommonCollectRegularImmutableTable_forCellsInternalWithJavaLangIterable_withJavaUtilComparator_withJavaUtilComparator_(id<JavaLangIterable> cells, id<JavaUtilComparator> rowComparator, id<JavaUtilComparator> columnComparator);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable__Annotations$1();

@interface ComGoogleCommonCollectRegularImmutableTable_CellSet : ComGoogleCommonCollectImmutableSet_Indexed {
 @public
  __unsafe_unretained ComGoogleCommonCollectRegularImmutableTable *this$0_;
}

- (instancetype)initWithComGoogleCommonCollectRegularImmutableTable:(ComGoogleCommonCollectRegularImmutableTable *)outer$;

- (jint)size;

- (id<ComGoogleCommonCollectTable_Cell>)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)object;

- (jboolean)isPartialView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableTable_CellSet)

__attribute__((unused)) static void ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable_CellSet *self, ComGoogleCommonCollectRegularImmutableTable *outer$);

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_CellSet *new_ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_CellSet *create_ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable_CellSet__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableTable_CellSet)

@interface ComGoogleCommonCollectRegularImmutableTable_Values : ComGoogleCommonCollectImmutableList {
 @public
  __unsafe_unretained ComGoogleCommonCollectRegularImmutableTable *this$0_;
}

- (instancetype)initWithComGoogleCommonCollectRegularImmutableTable:(ComGoogleCommonCollectRegularImmutableTable *)outer$;

- (jint)size;

- (id)getWithInt:(jint)index;

- (jboolean)isPartialView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableTable_Values)

__attribute__((unused)) static void ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable_Values *self, ComGoogleCommonCollectRegularImmutableTable *outer$);

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_Values *new_ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_Values *create_ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableTable_Values)

@interface ComGoogleCommonCollectRegularImmutableTable_1 : NSObject < JavaUtilComparator > {
 @public
  id<JavaUtilComparator> val$rowComparator_;
  id<JavaUtilComparator> val$columnComparator_;
}

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)capture$0
                    withJavaUtilComparator:(id<JavaUtilComparator>)capture$1;

- (jint)compareWithId:(id<ComGoogleCommonCollectTable_Cell>)cell1
               withId:(id<ComGoogleCommonCollectTable_Cell>)cell2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableTable_1)

__attribute__((unused)) static void ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(ComGoogleCommonCollectRegularImmutableTable_1 *self, id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1);

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_1 *new_ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectRegularImmutableTable_1 *create_ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1);

@implementation ComGoogleCommonCollectRegularImmutableTable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonCollectRegularImmutableTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ComGoogleCommonCollectTable_Cell>)getCellWithInt:(jint)iterationIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonCollectImmutableSet *)createCellSet {
  return [self isEmpty] ? ComGoogleCommonCollectImmutableSet_of() : new_ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(self);
}

- (id)getValueWithInt:(jint)iterationIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonCollectImmutableCollection *)createValues {
  return [self isEmpty] ? ComGoogleCommonCollectImmutableList_of() : new_ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(self);
}

+ (ComGoogleCommonCollectRegularImmutableTable *)forCellsWithJavaUtilList:(id<JavaUtilList>)cells
                                                   withJavaUtilComparator:(id<JavaUtilComparator>)rowComparator
                                                   withJavaUtilComparator:(id<JavaUtilComparator>)columnComparator {
  return ComGoogleCommonCollectRegularImmutableTable_forCellsWithJavaUtilList_withJavaUtilComparator_withJavaUtilComparator_(cells, rowComparator, columnComparator);
}

+ (ComGoogleCommonCollectRegularImmutableTable *)forCellsWithJavaLangIterable:(id<JavaLangIterable>)cells {
  return ComGoogleCommonCollectRegularImmutableTable_forCellsWithJavaLangIterable_(cells);
}

+ (ComGoogleCommonCollectRegularImmutableTable *)forCellsInternalWithJavaLangIterable:(id<JavaLangIterable>)cells
                                                               withJavaUtilComparator:(id<JavaUtilComparator>)rowComparator
                                                               withJavaUtilComparator:(id<JavaUtilComparator>)columnComparator {
  return ComGoogleCommonCollectRegularImmutableTable_forCellsInternalWithJavaLangIterable_withJavaUtilComparator_withJavaUtilComparator_(cells, rowComparator, columnComparator);
}

+ (ComGoogleCommonCollectRegularImmutableTable *)forOrderedComponentsWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)cellList
                                                                      withComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)rowSpace
                                                                      withComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)columnSpace {
  return ComGoogleCommonCollectRegularImmutableTable_forOrderedComponentsWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(cellList, rowSpace, columnSpace);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectTable_Cell;", 0x400, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x10, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x400, 4, 1, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableCollection;", 0x10, -1, -1, -1, 6, -1, -1 },
    { NULL, "LComGoogleCommonCollectRegularImmutableTable;", 0x8, 7, 8, -1, 9, -1, 10 },
    { NULL, "LComGoogleCommonCollectRegularImmutableTable;", 0x8, 7, 11, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonCollectRegularImmutableTable;", 0x1a, 13, 14, -1, 15, -1, 16 },
    { NULL, "LComGoogleCommonCollectRegularImmutableTable;", 0x8, 17, 18, -1, 19, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCellWithInt:);
  methods[2].selector = @selector(createCellSet);
  methods[3].selector = @selector(getValueWithInt:);
  methods[4].selector = @selector(createValues);
  methods[5].selector = @selector(forCellsWithJavaUtilList:withJavaUtilComparator:withJavaUtilComparator:);
  methods[6].selector = @selector(forCellsWithJavaLangIterable:);
  methods[7].selector = @selector(forCellsInternalWithJavaLangIterable:withJavaUtilComparator:withJavaUtilComparator:);
  methods[8].selector = @selector(forOrderedComponentsWithComGoogleCommonCollectImmutableList:withComGoogleCommonCollectImmutableSet:withComGoogleCommonCollectImmutableSet:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getCell", "I", "(I)Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;", "()Lcom/google/common/collect/ImmutableSet<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;", "getValue", "(I)TV;", "()Lcom/google/common/collect/ImmutableCollection<TV;>;", "forCells", "LJavaUtilList;LJavaUtilComparator;LJavaUtilComparator;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/List<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;Ljava/util/Comparator<-TR;>;Ljava/util/Comparator<-TC;>;)Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", (void *)&ComGoogleCommonCollectRegularImmutableTable__Annotations$0, "LJavaLangIterable;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/lang/Iterable<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;)Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", "forCellsInternal", "LJavaLangIterable;LJavaUtilComparator;LJavaUtilComparator;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/lang/Iterable<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;Ljava/util/Comparator<-TR;>;Ljava/util/Comparator<-TC;>;)Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", (void *)&ComGoogleCommonCollectRegularImmutableTable__Annotations$1, "forOrderedComponents", "LComGoogleCommonCollectImmutableList;LComGoogleCommonCollectImmutableSet;LComGoogleCommonCollectImmutableSet;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>(Lcom/google/common/collect/ImmutableList<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;Lcom/google/common/collect/ImmutableSet<TR;>;Lcom/google/common/collect/ImmutableSet<TC;>;)Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectRegularImmutableTable_CellSet;LComGoogleCommonCollectRegularImmutableTable_Values;", "<R:Ljava/lang/Object;C:Ljava/lang/Object;V:Ljava/lang/Object;>Lcom/google/common/collect/ImmutableTable<TR;TC;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableTable = { "RegularImmutableTable", "com.google.common.collect", ptrTable, methods, NULL, 7, 0x400, 9, 0, -1, 20, -1, 21, -1 };
  return &_ComGoogleCommonCollectRegularImmutableTable;
}

@end

void ComGoogleCommonCollectRegularImmutableTable_init(ComGoogleCommonCollectRegularImmutableTable *self) {
  ComGoogleCommonCollectImmutableTable_init(self);
}

ComGoogleCommonCollectRegularImmutableTable *ComGoogleCommonCollectRegularImmutableTable_forCellsWithJavaUtilList_withJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilList> cells, id<JavaUtilComparator> rowComparator, id<JavaUtilComparator> columnComparator) {
  ComGoogleCommonCollectRegularImmutableTable_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(cells);
  if (rowComparator != nil || columnComparator != nil) {
    id<JavaUtilComparator> comparator = new_ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(rowComparator, columnComparator);
    JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(cells, comparator);
  }
  return ComGoogleCommonCollectRegularImmutableTable_forCellsInternalWithJavaLangIterable_withJavaUtilComparator_withJavaUtilComparator_(cells, rowComparator, columnComparator);
}

ComGoogleCommonCollectRegularImmutableTable *ComGoogleCommonCollectRegularImmutableTable_forCellsWithJavaLangIterable_(id<JavaLangIterable> cells) {
  ComGoogleCommonCollectRegularImmutableTable_initialize();
  return ComGoogleCommonCollectRegularImmutableTable_forCellsInternalWithJavaLangIterable_withJavaUtilComparator_withJavaUtilComparator_(cells, nil, nil);
}

ComGoogleCommonCollectRegularImmutableTable *ComGoogleCommonCollectRegularImmutableTable_forCellsInternalWithJavaLangIterable_withJavaUtilComparator_withJavaUtilComparator_(id<JavaLangIterable> cells, id<JavaUtilComparator> rowComparator, id<JavaUtilComparator> columnComparator) {
  ComGoogleCommonCollectRegularImmutableTable_initialize();
  id<JavaUtilSet> rowSpaceBuilder = new_JavaUtilLinkedHashSet_init();
  id<JavaUtilSet> columnSpaceBuilder = new_JavaUtilLinkedHashSet_init();
  ComGoogleCommonCollectImmutableList *cellList = ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(cells);
  for (id<ComGoogleCommonCollectTable_Cell> __strong cell in nil_chk(cells)) {
    [rowSpaceBuilder addWithId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell)) getRowKey]];
    [columnSpaceBuilder addWithId:[cell getColumnKey]];
  }
  ComGoogleCommonCollectImmutableSet *rowSpace = (rowComparator == nil) ? ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(rowSpaceBuilder) : ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(ComGoogleCommonCollectImmutableList_sortedCopyOfWithJavaUtilComparator_withJavaLangIterable_(rowComparator, rowSpaceBuilder));
  ComGoogleCommonCollectImmutableSet *columnSpace = (columnComparator == nil) ? ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(columnSpaceBuilder) : ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(ComGoogleCommonCollectImmutableList_sortedCopyOfWithJavaUtilComparator_withJavaLangIterable_(columnComparator, columnSpaceBuilder));
  return ComGoogleCommonCollectRegularImmutableTable_forOrderedComponentsWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(cellList, rowSpace, columnSpace);
}

ComGoogleCommonCollectRegularImmutableTable *ComGoogleCommonCollectRegularImmutableTable_forOrderedComponentsWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableList *cellList, ComGoogleCommonCollectImmutableSet *rowSpace, ComGoogleCommonCollectImmutableSet *columnSpace) {
  ComGoogleCommonCollectRegularImmutableTable_initialize();
  return ([((ComGoogleCommonCollectImmutableList *) nil_chk(cellList)) size] > (((jlong) [((ComGoogleCommonCollectImmutableSet *) nil_chk(rowSpace)) size] * [((ComGoogleCommonCollectImmutableSet *) nil_chk(columnSpace)) size]) / 2)) ? new_ComGoogleCommonCollectDenseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(cellList, rowSpace, columnSpace) : (id) new_ComGoogleCommonCollectSparseImmutableTable_initWithComGoogleCommonCollectImmutableList_withComGoogleCommonCollectImmutableSet_withComGoogleCommonCollectImmutableSet_(cellList, rowSpace, columnSpace);
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectRegularImmutableTable)

@implementation ComGoogleCommonCollectRegularImmutableTable_CellSet

- (instancetype)initWithComGoogleCommonCollectRegularImmutableTable:(ComGoogleCommonCollectRegularImmutableTable *)outer$ {
  ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(self, outer$);
  return self;
}

- (jint)size {
  return [this$0_ size];
}

- (id<ComGoogleCommonCollectTable_Cell>)getWithInt:(jint)index {
  return [this$0_ getCellWithInt:index];
}

- (jboolean)containsWithId:(id)object {
  if ([ComGoogleCommonCollectTable_Cell_class_() isInstance:object]) {
    id<ComGoogleCommonCollectTable_Cell> cell = (id<ComGoogleCommonCollectTable_Cell>) cast_check(object, ComGoogleCommonCollectTable_Cell_class_());
    id value = [this$0_ getWithId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell)) getRowKey] withId:[cell getColumnKey]];
    return value != nil && [value isEqual:[cell getValue]];
  }
  return false;
}

- (jboolean)isPartialView {
  return false;
}

- (void)__javaClone:(ComGoogleCommonCollectRegularImmutableTable_CellSet *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectTable_Cell;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, 5 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectRegularImmutableTable:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectRegularImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "(I)Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;", "contains", "LNSObject;", (void *)&ComGoogleCommonCollectRegularImmutableTable_CellSet__Annotations$0, "Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectRegularImmutableTable;", "Lcom/google/common/collect/ImmutableSet$Indexed<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableTable_CellSet = { "CellSet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 5, 1, 7, -1, -1, 8, -1 };
  return &_ComGoogleCommonCollectRegularImmutableTable_CellSet;
}

@end

void ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable_CellSet *self, ComGoogleCommonCollectRegularImmutableTable *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectImmutableSet_Indexed_init(self);
}

ComGoogleCommonCollectRegularImmutableTable_CellSet *new_ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectRegularImmutableTable_CellSet, initWithComGoogleCommonCollectRegularImmutableTable_, outer$)
}

ComGoogleCommonCollectRegularImmutableTable_CellSet *create_ComGoogleCommonCollectRegularImmutableTable_CellSet_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectRegularImmutableTable_CellSet, initWithComGoogleCommonCollectRegularImmutableTable_, outer$)
}

IOSObjectArray *ComGoogleCommonCollectRegularImmutableTable_CellSet__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectRegularImmutableTable_CellSet)

@implementation ComGoogleCommonCollectRegularImmutableTable_Values

- (instancetype)initWithComGoogleCommonCollectRegularImmutableTable:(ComGoogleCommonCollectRegularImmutableTable *)outer$ {
  ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(self, outer$);
  return self;
}

- (jint)size {
  return [this$0_ size];
}

- (id)getWithInt:(jint)index {
  return [this$0_ getValueWithInt:index];
}

- (jboolean)isPartialView {
  return true;
}

- (void)__javaClone:(ComGoogleCommonCollectRegularImmutableTable_Values *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectRegularImmutableTable:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(isPartialView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonCollectRegularImmutableTable;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "(I)TV;", "Lcom/google/common/collect/RegularImmutableTable<TR;TC;TV;>;", "LComGoogleCommonCollectRegularImmutableTable;", "Lcom/google/common/collect/ImmutableList<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableTable_Values = { "Values", "com.google.common.collect", ptrTable, methods, fields, 7, 0x12, 4, 1, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonCollectRegularImmutableTable_Values;
}

@end

void ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable_Values *self, ComGoogleCommonCollectRegularImmutableTable *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectImmutableList_init(self);
}

ComGoogleCommonCollectRegularImmutableTable_Values *new_ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectRegularImmutableTable_Values, initWithComGoogleCommonCollectRegularImmutableTable_, outer$)
}

ComGoogleCommonCollectRegularImmutableTable_Values *create_ComGoogleCommonCollectRegularImmutableTable_Values_initWithComGoogleCommonCollectRegularImmutableTable_(ComGoogleCommonCollectRegularImmutableTable *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectRegularImmutableTable_Values, initWithComGoogleCommonCollectRegularImmutableTable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectRegularImmutableTable_Values)

@implementation ComGoogleCommonCollectRegularImmutableTable_1

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)capture$0
                    withJavaUtilComparator:(id<JavaUtilComparator>)capture$1 {
  ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(self, capture$0, capture$1);
  return self;
}

- (jint)compareWithId:(id<ComGoogleCommonCollectTable_Cell>)cell1
               withId:(id<ComGoogleCommonCollectTable_Cell>)cell2 {
  jint rowCompare = (val$rowComparator_ == nil) ? 0 : [((id<JavaUtilComparator>) nil_chk(val$rowComparator_)) compareWithId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell1)) getRowKey] withId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell2)) getRowKey]];
  if (rowCompare != 0) {
    return rowCompare;
  }
  return (val$columnComparator_ == nil) ? 0 : [((id<JavaUtilComparator>) nil_chk(val$columnComparator_)) compareWithId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell1)) getColumnKey] withId:[((id<ComGoogleCommonCollectTable_Cell>) nil_chk(cell2)) getColumnKey]];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilComparator:withJavaUtilComparator:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rowComparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$columnComparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "compare", "LComGoogleCommonCollectTable_Cell;LComGoogleCommonCollectTable_Cell;", "(Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;)I", "Ljava/util/Comparator<-TR;>;", "Ljava/util/Comparator<-TC;>;", "LComGoogleCommonCollectRegularImmutableTable;", "forCellsWithJavaUtilList:withJavaUtilComparator:withJavaUtilComparator:", "Ljava/lang/Object;Ljava/util/Comparator<Lcom/google/common/collect/Table$Cell<TR;TC;TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectRegularImmutableTable_1 = { "", "com.google.common.collect", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, 7, -1 };
  return &_ComGoogleCommonCollectRegularImmutableTable_1;
}

@end

void ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(ComGoogleCommonCollectRegularImmutableTable_1 *self, id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  self->val$rowComparator_ = capture$0;
  self->val$columnComparator_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonCollectRegularImmutableTable_1 *new_ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectRegularImmutableTable_1, initWithJavaUtilComparator_withJavaUtilComparator_, capture$0, capture$1)
}

ComGoogleCommonCollectRegularImmutableTable_1 *create_ComGoogleCommonCollectRegularImmutableTable_1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectRegularImmutableTable_1, initWithJavaUtilComparator_withJavaUtilComparator_, capture$0, capture$1)
}
