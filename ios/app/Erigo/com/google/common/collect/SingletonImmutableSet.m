//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/collect/SingletonImmutableSet.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/Iterators.h"
#include "com/google/common/collect/SingletonImmutableSet.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "com/google/errorprone/annotations/concurrent/LazyInit.h"
#include "java/lang/annotation/Annotation.h"

@interface ComGoogleCommonCollectSingletonImmutableSet () {
 @public
  jint cachedHashCode_;
}

@end

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonCollectSingletonImmutableSet__Annotations$0();

@implementation ComGoogleCommonCollectSingletonImmutableSet

- (instancetype)initWithId:(id)element {
  ComGoogleCommonCollectSingletonImmutableSet_initWithId_(self, element);
  return self;
}

- (instancetype)initWithId:(id)element
                   withInt:(jint)hashCode {
  ComGoogleCommonCollectSingletonImmutableSet_initWithId_withInt_(self, element, hashCode);
  return self;
}

- (jint)size {
  return 1;
}

- (jboolean)containsWithId:(id)target {
  return [nil_chk(element_) isEqual:target];
}

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator {
  return ComGoogleCommonCollectIterators_singletonIteratorWithId_(element_);
}

- (ComGoogleCommonCollectImmutableList *)createAsList {
  return ComGoogleCommonCollectImmutableList_ofWithId_(element_);
}

- (jboolean)isPartialView {
  return false;
}

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray *)dst
                               withInt:(jint)offset {
  (void) IOSObjectArray_Set(nil_chk(dst), offset, element_);
  return offset + 1;
}

- (NSUInteger)hash {
  jint code = cachedHashCode_;
  if (code == 0) {
    cachedHashCode_ = code = ((jint) [nil_chk(element_) hash]);
  }
  return code;
}

- (jboolean)isHashCodeFast {
  return cachedHashCode_ != 0;
}

- (NSString *)description {
  return JreStrcat("C$C", '[', [nil_chk(element_) description], ']');
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectUnmodifiableIterator;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x0, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(initWithId:withInt:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(iterator);
  methods[5].selector = @selector(createAsList);
  methods[6].selector = @selector(isPartialView);
  methods[7].selector = @selector(copyIntoArrayWithNSObjectArray:withInt:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(isHashCodeFast);
  methods[10].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "element_", "LNSObject;", .constantValue.asLong = 0, 0x90, -1, -1, 11, -1 },
    { "cachedHashCode_", "I", .constantValue.asLong = 0, 0x82, -1, -1, -1, 12 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TE;)V", "LNSObject;I", "(TE;I)V", "contains", "()Lcom/google/common/collect/UnmodifiableIterator<TE;>;", "()Lcom/google/common/collect/ImmutableList<TE;>;", "copyIntoArray", "[LNSObject;I", "hashCode", "toString", "TE;", (void *)&ComGoogleCommonCollectSingletonImmutableSet__Annotations$0, "<E:Ljava/lang/Object;>Lcom/google/common/collect/ImmutableSet<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonCollectSingletonImmutableSet = { "SingletonImmutableSet", "com.google.common.collect", ptrTable, methods, fields, 7, 0x10, 11, 2, -1, -1, -1, 13, -1 };
  return &_ComGoogleCommonCollectSingletonImmutableSet;
}

@end

void ComGoogleCommonCollectSingletonImmutableSet_initWithId_(ComGoogleCommonCollectSingletonImmutableSet *self, id element) {
  ComGoogleCommonCollectImmutableSet_init(self);
  self->element_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(element);
}

ComGoogleCommonCollectSingletonImmutableSet *new_ComGoogleCommonCollectSingletonImmutableSet_initWithId_(id element) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectSingletonImmutableSet, initWithId_, element)
}

ComGoogleCommonCollectSingletonImmutableSet *create_ComGoogleCommonCollectSingletonImmutableSet_initWithId_(id element) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectSingletonImmutableSet, initWithId_, element)
}

void ComGoogleCommonCollectSingletonImmutableSet_initWithId_withInt_(ComGoogleCommonCollectSingletonImmutableSet *self, id element, jint hashCode) {
  ComGoogleCommonCollectImmutableSet_init(self);
  self->element_ = element;
  self->cachedHashCode_ = hashCode;
}

ComGoogleCommonCollectSingletonImmutableSet *new_ComGoogleCommonCollectSingletonImmutableSet_initWithId_withInt_(id element, jint hashCode) {
  J2OBJC_NEW_IMPL(ComGoogleCommonCollectSingletonImmutableSet, initWithId_withInt_, element, hashCode)
}

ComGoogleCommonCollectSingletonImmutableSet *create_ComGoogleCommonCollectSingletonImmutableSet_initWithId_withInt_(id element, jint hashCode) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonCollectSingletonImmutableSet, initWithId_withInt_, element, hashCode)
}

IOSObjectArray *ComGoogleCommonCollectSingletonImmutableSet__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonCollectSingletonImmutableSet)
