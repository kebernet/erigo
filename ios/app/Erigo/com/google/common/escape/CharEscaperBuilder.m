//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/escape/CharEscaperBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/escape/CharEscaper.h"
#include "com/google/common/escape/CharEscaperBuilder.h"
#include "com/google/common/escape/Escaper.h"
#include "java/lang/Character.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComGoogleCommonEscapeCharEscaperBuilder () {
 @public
  id<JavaUtilMap> map_;
  jint max_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonEscapeCharEscaperBuilder, map_, id<JavaUtilMap>)

@interface ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator : ComGoogleCommonEscapeCharEscaper {
 @public
  IOSObjectArray *replacements_;
  jint replaceLength_;
}

- (instancetype)initWithCharArray2:(IOSObjectArray *)replacements;

- (NSString *)escapeWithNSString:(NSString *)s;

- (IOSCharArray *)escapeWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator)

J2OBJC_FIELD_SETTER(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator, replacements_, IOSObjectArray *)

__attribute__((unused)) static void ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *self, IOSObjectArray *replacements);

__attribute__((unused)) static ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *new_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(IOSObjectArray *replacements) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *create_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(IOSObjectArray *replacements);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator)

@implementation ComGoogleCommonEscapeCharEscaperBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEscapeCharEscaperBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonEscapeCharEscaperBuilder *)addEscapeWithChar:(jchar)c
                                                  withNSString:(NSString *)r {
  (void) [((id<JavaUtilMap>) nil_chk(map_)) putWithId:JavaLangCharacter_valueOfWithChar_(c) withId:ComGoogleCommonBasePreconditions_checkNotNullWithId_(r)];
  if (c > max_) {
    max_ = c;
  }
  return self;
}

- (ComGoogleCommonEscapeCharEscaperBuilder *)addEscapesWithCharArray:(IOSCharArray *)cs
                                                        withNSString:(NSString *)r {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(r);
  {
    IOSCharArray *a__ = cs;
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      (void) [self addEscapeWithChar:c withNSString:r];
    }
  }
  return self;
}

- (IOSObjectArray *)toArray {
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:max_ + 1 type:IOSClass_charArray(1)];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map_)) entrySet])) {
    (void) IOSObjectArray_Set(result, [((JavaLangCharacter *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey])) charValue], [((NSString *) nil_chk([entry_ getValue])) java_toCharArray]);
  }
  return result;
}

- (ComGoogleCommonEscapeEscaper *)toEscaper {
  return new_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_([self toArray]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeCharEscaperBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeCharEscaperBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "[[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscaper;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addEscapeWithChar:withNSString:);
  methods[2].selector = @selector(addEscapesWithCharArray:withNSString:);
  methods[3].selector = @selector(toArray);
  methods[4].selector = @selector(toEscaper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "max_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addEscape", "CLNSString;", "addEscapes", "[CLNSString;", "Ljava/util/Map<Ljava/lang/Character;Ljava/lang/String;>;", "LComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator;" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeCharEscaperBuilder = { "CharEscaperBuilder", "com.google.common.escape", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, 5, -1, -1, -1 };
  return &_ComGoogleCommonEscapeCharEscaperBuilder;
}

@end

void ComGoogleCommonEscapeCharEscaperBuilder_init(ComGoogleCommonEscapeCharEscaperBuilder *self) {
  NSObject_init(self);
  self->max_ = -1;
  self->map_ = new_JavaUtilHashMap_init();
}

ComGoogleCommonEscapeCharEscaperBuilder *new_ComGoogleCommonEscapeCharEscaperBuilder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeCharEscaperBuilder, init)
}

ComGoogleCommonEscapeCharEscaperBuilder *create_ComGoogleCommonEscapeCharEscaperBuilder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeCharEscaperBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEscapeCharEscaperBuilder)

@implementation ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator

- (instancetype)initWithCharArray2:(IOSObjectArray *)replacements {
  ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(self, replacements);
  return self;
}

- (NSString *)escapeWithNSString:(NSString *)s {
  jint slen = [((NSString *) nil_chk(s)) java_length];
  for (jint index = 0; index < slen; index++) {
    jchar c = [s charAtWithInt:index];
    if (c < ((IOSObjectArray *) nil_chk(replacements_))->size_ && IOSObjectArray_Get(replacements_, c) != nil) {
      return [self escapeSlowWithNSString:s withInt:index];
    }
  }
  return s;
}

- (IOSCharArray *)escapeWithChar:(jchar)c {
  return c < replaceLength_ ? IOSObjectArray_Get(nil_chk(replacements_), c) : nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[C", 0x4, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCharArray2:);
  methods[1].selector = @selector(escapeWithNSString:);
  methods[2].selector = @selector(escapeWithChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "replacements_", "[[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "replaceLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[[C", "escape", "LNSString;", "C", "LComGoogleCommonEscapeCharEscaperBuilder;" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator = { "CharArrayDecorator", "com.google.common.escape", ptrTable, methods, fields, 7, 0xa, 3, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator;
}

@end

void ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *self, IOSObjectArray *replacements) {
  ComGoogleCommonEscapeCharEscaper_init(self);
  self->replacements_ = replacements;
  self->replaceLength_ = ((IOSObjectArray *) nil_chk(replacements))->size_;
}

ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *new_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(IOSObjectArray *replacements) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator, initWithCharArray2_, replacements)
}

ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator *create_ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator_initWithCharArray2_(IOSObjectArray *replacements) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator, initWithCharArray2_, replacements)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEscapeCharEscaperBuilder_CharArrayDecorator)
