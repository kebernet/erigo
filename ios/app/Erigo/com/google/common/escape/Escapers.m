//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/escape/Escapers.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/escape/ArrayBasedCharEscaper.h"
#include "com/google/common/escape/CharEscaper.h"
#include "com/google/common/escape/Escaper.h"
#include "com/google/common/escape/Escapers.h"
#include "com/google/common/escape/UnicodeEscaper.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonEscapeEscapers ()

- (instancetype)init;

+ (NSString *)stringOrNullWithCharArray:(IOSCharArray *)inArg;

+ (ComGoogleCommonEscapeUnicodeEscaper *)wrapWithComGoogleCommonEscapeCharEscaper:(ComGoogleCommonEscapeCharEscaper *)escaper;

@end

inline ComGoogleCommonEscapeEscaper *ComGoogleCommonEscapeEscapers_get_NULL_ESCAPER();
static ComGoogleCommonEscapeEscaper *ComGoogleCommonEscapeEscapers_NULL_ESCAPER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonEscapeEscapers, NULL_ESCAPER, ComGoogleCommonEscapeEscaper *)

__attribute__((unused)) static void ComGoogleCommonEscapeEscapers_init(ComGoogleCommonEscapeEscapers *self);

__attribute__((unused)) static ComGoogleCommonEscapeEscapers *new_ComGoogleCommonEscapeEscapers_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeEscapers *create_ComGoogleCommonEscapeEscapers_init();

__attribute__((unused)) static NSString *ComGoogleCommonEscapeEscapers_stringOrNullWithCharArray_(IOSCharArray *inArg);

__attribute__((unused)) static ComGoogleCommonEscapeUnicodeEscaper *ComGoogleCommonEscapeEscapers_wrapWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *escaper);

@interface ComGoogleCommonEscapeEscapers_1 : ComGoogleCommonEscapeCharEscaper

- (instancetype)init;

- (NSString *)escapeWithNSString:(NSString *)string;

- (IOSCharArray *)escapeWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeEscapers_1)

__attribute__((unused)) static void ComGoogleCommonEscapeEscapers_1_init(ComGoogleCommonEscapeEscapers_1 *self);

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_1 *new_ComGoogleCommonEscapeEscapers_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_1 *create_ComGoogleCommonEscapeEscapers_1_init();

@interface ComGoogleCommonEscapeEscapers_Builder () {
 @public
  id<JavaUtilMap> replacementMap_;
  jchar safeMin_;
  jchar safeMax_;
  NSString *unsafeReplacement_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonEscapeEscapers_Builder, replacementMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonEscapeEscapers_Builder, unsafeReplacement_, NSString *)

__attribute__((unused)) static void ComGoogleCommonEscapeEscapers_Builder_init(ComGoogleCommonEscapeEscapers_Builder *self);

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_Builder *new_ComGoogleCommonEscapeEscapers_Builder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_Builder *create_ComGoogleCommonEscapeEscapers_Builder_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonEscapeEscapers_Builder__Annotations$0();

@interface ComGoogleCommonEscapeEscapers_Builder_1 : ComGoogleCommonEscapeArrayBasedCharEscaper {
 @public
  IOSCharArray *replacementChars_;
}

- (instancetype)initWithComGoogleCommonEscapeEscapers_Builder:(ComGoogleCommonEscapeEscapers_Builder *)outer$
                                              withJavaUtilMap:(id<JavaUtilMap>)replacementMap
                                                     withChar:(jchar)safeMin
                                                     withChar:(jchar)safeMax;

- (IOSCharArray *)escapeUnsafeWithChar:(jchar)c;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeEscapers_Builder_1)

J2OBJC_FIELD_SETTER(ComGoogleCommonEscapeEscapers_Builder_1, replacementChars_, IOSCharArray *)

__attribute__((unused)) static void ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder_1 *self, ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax);

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_Builder_1 *new_ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_Builder_1 *create_ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax);

@interface ComGoogleCommonEscapeEscapers_2 : ComGoogleCommonEscapeUnicodeEscaper {
 @public
  ComGoogleCommonEscapeCharEscaper *val$escaper_;
}

- (instancetype)initWithComGoogleCommonEscapeCharEscaper:(ComGoogleCommonEscapeCharEscaper *)capture$0;

- (IOSCharArray *)escapeWithInt:(jint)cp;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonEscapeEscapers_2)

__attribute__((unused)) static void ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeEscapers_2 *self, ComGoogleCommonEscapeCharEscaper *capture$0);

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_2 *new_ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonEscapeEscapers_2 *create_ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *capture$0);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonEscapeEscapers)

@implementation ComGoogleCommonEscapeEscapers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEscapeEscapers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComGoogleCommonEscapeEscaper *)nullEscaper {
  return ComGoogleCommonEscapeEscapers_nullEscaper();
}

+ (ComGoogleCommonEscapeEscapers_Builder *)builder {
  return ComGoogleCommonEscapeEscapers_builder();
}

+ (ComGoogleCommonEscapeUnicodeEscaper *)asUnicodeEscaperWithComGoogleCommonEscapeEscaper:(ComGoogleCommonEscapeEscaper *)escaper {
  return ComGoogleCommonEscapeEscapers_asUnicodeEscaperWithComGoogleCommonEscapeEscaper_(escaper);
}

+ (NSString *)computeReplacementWithComGoogleCommonEscapeCharEscaper:(ComGoogleCommonEscapeCharEscaper *)escaper
                                                            withChar:(jchar)c {
  return ComGoogleCommonEscapeEscapers_computeReplacementWithComGoogleCommonEscapeCharEscaper_withChar_(escaper, c);
}

+ (NSString *)computeReplacementWithComGoogleCommonEscapeUnicodeEscaper:(ComGoogleCommonEscapeUnicodeEscaper *)escaper
                                                                withInt:(jint)cp {
  return ComGoogleCommonEscapeEscapers_computeReplacementWithComGoogleCommonEscapeUnicodeEscaper_withInt_(escaper, cp);
}

+ (NSString *)stringOrNullWithCharArray:(IOSCharArray *)inArg {
  return ComGoogleCommonEscapeEscapers_stringOrNullWithCharArray_(inArg);
}

+ (ComGoogleCommonEscapeUnicodeEscaper *)wrapWithComGoogleCommonEscapeCharEscaper:(ComGoogleCommonEscapeCharEscaper *)escaper {
  return ComGoogleCommonEscapeEscapers_wrapWithComGoogleCommonEscapeCharEscaper_(escaper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscaper;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscapers_Builder;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeUnicodeEscaper;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeUnicodeEscaper;", 0xa, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nullEscaper);
  methods[2].selector = @selector(builder);
  methods[3].selector = @selector(asUnicodeEscaperWithComGoogleCommonEscapeEscaper:);
  methods[4].selector = @selector(computeReplacementWithComGoogleCommonEscapeCharEscaper:withChar:);
  methods[5].selector = @selector(computeReplacementWithComGoogleCommonEscapeUnicodeEscaper:withInt:);
  methods[6].selector = @selector(stringOrNullWithCharArray:);
  methods[7].selector = @selector(wrapWithComGoogleCommonEscapeCharEscaper:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL_ESCAPER", "LComGoogleCommonEscapeEscaper;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "asUnicodeEscaper", "LComGoogleCommonEscapeEscaper;", "computeReplacement", "LComGoogleCommonEscapeCharEscaper;C", "LComGoogleCommonEscapeUnicodeEscaper;I", "stringOrNull", "[C", "wrap", "LComGoogleCommonEscapeCharEscaper;", &ComGoogleCommonEscapeEscapers_NULL_ESCAPER, "LComGoogleCommonEscapeEscapers_Builder;" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeEscapers = { "Escapers", "com.google.common.escape", ptrTable, methods, fields, 7, 0x11, 8, 1, -1, 10, -1, -1, -1 };
  return &_ComGoogleCommonEscapeEscapers;
}

+ (void)initialize {
  if (self == [ComGoogleCommonEscapeEscapers class]) {
    ComGoogleCommonEscapeEscapers_NULL_ESCAPER = new_ComGoogleCommonEscapeEscapers_1_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonEscapeEscapers)
  }
}

@end

void ComGoogleCommonEscapeEscapers_init(ComGoogleCommonEscapeEscapers *self) {
  NSObject_init(self);
}

ComGoogleCommonEscapeEscapers *new_ComGoogleCommonEscapeEscapers_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeEscapers, init)
}

ComGoogleCommonEscapeEscapers *create_ComGoogleCommonEscapeEscapers_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeEscapers, init)
}

ComGoogleCommonEscapeEscaper *ComGoogleCommonEscapeEscapers_nullEscaper() {
  ComGoogleCommonEscapeEscapers_initialize();
  return ComGoogleCommonEscapeEscapers_NULL_ESCAPER;
}

ComGoogleCommonEscapeEscapers_Builder *ComGoogleCommonEscapeEscapers_builder() {
  ComGoogleCommonEscapeEscapers_initialize();
  return new_ComGoogleCommonEscapeEscapers_Builder_init();
}

ComGoogleCommonEscapeUnicodeEscaper *ComGoogleCommonEscapeEscapers_asUnicodeEscaperWithComGoogleCommonEscapeEscaper_(ComGoogleCommonEscapeEscaper *escaper) {
  ComGoogleCommonEscapeEscapers_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(escaper);
  if ([escaper isKindOfClass:[ComGoogleCommonEscapeUnicodeEscaper class]]) {
    return (ComGoogleCommonEscapeUnicodeEscaper *) cast_chk(escaper, [ComGoogleCommonEscapeUnicodeEscaper class]);
  }
  else if ([escaper isKindOfClass:[ComGoogleCommonEscapeCharEscaper class]]) {
    return ComGoogleCommonEscapeEscapers_wrapWithComGoogleCommonEscapeCharEscaper_((ComGoogleCommonEscapeCharEscaper *) cast_chk(escaper, [ComGoogleCommonEscapeCharEscaper class]));
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Cannot create a UnicodeEscaper from: ", [[((ComGoogleCommonEscapeEscaper *) nil_chk(escaper)) java_getClass] getName]));
}

NSString *ComGoogleCommonEscapeEscapers_computeReplacementWithComGoogleCommonEscapeCharEscaper_withChar_(ComGoogleCommonEscapeCharEscaper *escaper, jchar c) {
  ComGoogleCommonEscapeEscapers_initialize();
  return ComGoogleCommonEscapeEscapers_stringOrNullWithCharArray_([((ComGoogleCommonEscapeCharEscaper *) nil_chk(escaper)) escapeWithChar:c]);
}

NSString *ComGoogleCommonEscapeEscapers_computeReplacementWithComGoogleCommonEscapeUnicodeEscaper_withInt_(ComGoogleCommonEscapeUnicodeEscaper *escaper, jint cp) {
  ComGoogleCommonEscapeEscapers_initialize();
  return ComGoogleCommonEscapeEscapers_stringOrNullWithCharArray_([((ComGoogleCommonEscapeUnicodeEscaper *) nil_chk(escaper)) escapeWithInt:cp]);
}

NSString *ComGoogleCommonEscapeEscapers_stringOrNullWithCharArray_(IOSCharArray *inArg) {
  ComGoogleCommonEscapeEscapers_initialize();
  return (inArg == nil) ? nil : [NSString java_stringWithCharacters:inArg];
}

ComGoogleCommonEscapeUnicodeEscaper *ComGoogleCommonEscapeEscapers_wrapWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *escaper) {
  ComGoogleCommonEscapeEscapers_initialize();
  return new_ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(escaper);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEscapeEscapers)

@implementation ComGoogleCommonEscapeEscapers_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEscapeEscapers_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)escapeWithNSString:(NSString *)string {
  return ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
}

- (IOSCharArray *)escapeWithChar:(jchar)c {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[C", 0x4, 0, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(escapeWithNSString:);
  methods[2].selector = @selector(escapeWithChar:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "escape", "LNSString;", "C", "LComGoogleCommonEscapeEscapers;" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeEscapers_1 = { "", "com.google.common.escape", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonEscapeEscapers_1;
}

@end

void ComGoogleCommonEscapeEscapers_1_init(ComGoogleCommonEscapeEscapers_1 *self) {
  ComGoogleCommonEscapeCharEscaper_init(self);
}

ComGoogleCommonEscapeEscapers_1 *new_ComGoogleCommonEscapeEscapers_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeEscapers_1, init)
}

ComGoogleCommonEscapeEscapers_1 *create_ComGoogleCommonEscapeEscapers_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeEscapers_1, init)
}

@implementation ComGoogleCommonEscapeEscapers_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonEscapeEscapers_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonEscapeEscapers_Builder *)setSafeRangeWithChar:(jchar)safeMin
                                                       withChar:(jchar)safeMax {
  self->safeMin_ = safeMin;
  self->safeMax_ = safeMax;
  return self;
}

- (ComGoogleCommonEscapeEscapers_Builder *)setUnsafeReplacementWithNSString:(NSString *)unsafeReplacement {
  self->unsafeReplacement_ = unsafeReplacement;
  return self;
}

- (ComGoogleCommonEscapeEscapers_Builder *)addEscapeWithChar:(jchar)c
                                                withNSString:(NSString *)replacement {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(replacement);
  (void) [((id<JavaUtilMap>) nil_chk(replacementMap_)) putWithId:JavaLangCharacter_valueOfWithChar_(c) withId:replacement];
  return self;
}

- (ComGoogleCommonEscapeEscaper *)build {
  return new_ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(self, replacementMap_, safeMin_, safeMax_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscapers_Builder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscapers_Builder;", 0x1, 2, 3, -1, -1, -1, 4 },
    { NULL, "LComGoogleCommonEscapeEscapers_Builder;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEscapeEscaper;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setSafeRangeWithChar:withChar:);
  methods[2].selector = @selector(setUnsafeReplacementWithNSString:);
  methods[3].selector = @selector(addEscapeWithChar:withNSString:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "replacementMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "safeMin_", "C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "safeMax_", "C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "unsafeReplacement_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSafeRange", "CC", "setUnsafeReplacement", "LNSString;", (void *)&ComGoogleCommonEscapeEscapers_Builder__Annotations$0, "addEscape", "CLNSString;", "Ljava/util/Map<Ljava/lang/Character;Ljava/lang/String;>;", "LComGoogleCommonEscapeEscapers;" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeEscapers_Builder = { "Builder", "com.google.common.escape", ptrTable, methods, fields, 7, 0x19, 5, 4, 8, -1, -1, -1, -1 };
  return &_ComGoogleCommonEscapeEscapers_Builder;
}

@end

void ComGoogleCommonEscapeEscapers_Builder_init(ComGoogleCommonEscapeEscapers_Builder *self) {
  NSObject_init(self);
  self->replacementMap_ = new_JavaUtilHashMap_init();
  self->safeMin_ = JavaLangCharacter_MIN_VALUE;
  self->safeMax_ = JavaLangCharacter_MAX_VALUE;
  self->unsafeReplacement_ = nil;
}

ComGoogleCommonEscapeEscapers_Builder *new_ComGoogleCommonEscapeEscapers_Builder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeEscapers_Builder, init)
}

ComGoogleCommonEscapeEscapers_Builder *create_ComGoogleCommonEscapeEscapers_Builder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeEscapers_Builder, init)
}

IOSObjectArray *ComGoogleCommonEscapeEscapers_Builder__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEscapeEscapers_Builder)

@implementation ComGoogleCommonEscapeEscapers_Builder_1

- (instancetype)initWithComGoogleCommonEscapeEscapers_Builder:(ComGoogleCommonEscapeEscapers_Builder *)outer$
                                              withJavaUtilMap:(id<JavaUtilMap>)replacementMap
                                                     withChar:(jchar)safeMin
                                                     withChar:(jchar)safeMax {
  ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(self, outer$, replacementMap, safeMin, safeMax);
  return self;
}

- (IOSCharArray *)escapeUnsafeWithChar:(jchar)c {
  return replacementChars_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "[C", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonEscapeEscapers_Builder:withJavaUtilMap:withChar:withChar:);
  methods[1].selector = @selector(escapeUnsafeWithChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "replacementChars_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;CC", "(Ljava/util/Map<Ljava/lang/Character;Ljava/lang/String;>;CC)V", "escapeUnsafe", "C", "LComGoogleCommonEscapeEscapers_Builder;", "build" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeEscapers_Builder_1 = { "", "com.google.common.escape", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, 5, -1, -1 };
  return &_ComGoogleCommonEscapeEscapers_Builder_1;
}

@end

void ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder_1 *self, ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax) {
  ComGoogleCommonEscapeArrayBasedCharEscaper_initWithJavaUtilMap_withChar_withChar_(self, replacementMap, safeMin, safeMax);
  self->replacementChars_ = outer$->unsafeReplacement_ != nil ? [outer$->unsafeReplacement_ java_toCharArray] : nil;
}

ComGoogleCommonEscapeEscapers_Builder_1 *new_ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeEscapers_Builder_1, initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_, outer$, replacementMap, safeMin, safeMax)
}

ComGoogleCommonEscapeEscapers_Builder_1 *create_ComGoogleCommonEscapeEscapers_Builder_1_initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_(ComGoogleCommonEscapeEscapers_Builder *outer$, id<JavaUtilMap> replacementMap, jchar safeMin, jchar safeMax) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeEscapers_Builder_1, initWithComGoogleCommonEscapeEscapers_Builder_withJavaUtilMap_withChar_withChar_, outer$, replacementMap, safeMin, safeMax)
}

@implementation ComGoogleCommonEscapeEscapers_2

- (instancetype)initWithComGoogleCommonEscapeCharEscaper:(ComGoogleCommonEscapeCharEscaper *)capture$0 {
  ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(self, capture$0);
  return self;
}

- (IOSCharArray *)escapeWithInt:(jint)cp {
  if (cp < JavaLangCharacter_MIN_SUPPLEMENTARY_CODE_POINT) {
    return [((ComGoogleCommonEscapeCharEscaper *) nil_chk(val$escaper_)) escapeWithChar:(jchar) cp];
  }
  IOSCharArray *surrogateChars = [IOSCharArray newArrayWithLength:2];
  JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(cp, surrogateChars, 0);
  IOSCharArray *hiChars = [((ComGoogleCommonEscapeCharEscaper *) nil_chk(val$escaper_)) escapeWithChar:IOSCharArray_Get(surrogateChars, 0)];
  IOSCharArray *loChars = [val$escaper_ escapeWithChar:IOSCharArray_Get(surrogateChars, 1)];
  if (hiChars == nil && loChars == nil) {
    return nil;
  }
  jint hiCount = hiChars != nil ? hiChars->size_ : 1;
  jint loCount = loChars != nil ? loChars->size_ : 1;
  IOSCharArray *output = [IOSCharArray newArrayWithLength:hiCount + loCount];
  if (hiChars != nil) {
    for (jint n = 0; n < hiChars->size_; ++n) {
      *IOSCharArray_GetRef(output, n) = IOSCharArray_Get(hiChars, n);
    }
  }
  else {
    *IOSCharArray_GetRef(output, 0) = IOSCharArray_Get(surrogateChars, 0);
  }
  if (loChars != nil) {
    for (jint n = 0; n < loChars->size_; ++n) {
      *IOSCharArray_GetRef(output, hiCount + n) = IOSCharArray_Get(loChars, n);
    }
  }
  else {
    *IOSCharArray_GetRef(output, hiCount) = IOSCharArray_Get(surrogateChars, 1);
  }
  return output;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonEscapeCharEscaper:);
  methods[1].selector = @selector(escapeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$escaper_", "LComGoogleCommonEscapeCharEscaper;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "escape", "I", "LComGoogleCommonEscapeEscapers;", "wrapWithComGoogleCommonEscapeCharEscaper:" };
  static const J2ObjcClassInfo _ComGoogleCommonEscapeEscapers_2 = { "", "com.google.common.escape", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_ComGoogleCommonEscapeEscapers_2;
}

@end

void ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeEscapers_2 *self, ComGoogleCommonEscapeCharEscaper *capture$0) {
  self->val$escaper_ = capture$0;
  ComGoogleCommonEscapeUnicodeEscaper_init(self);
}

ComGoogleCommonEscapeEscapers_2 *new_ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEscapeEscapers_2, initWithComGoogleCommonEscapeCharEscaper_, capture$0)
}

ComGoogleCommonEscapeEscapers_2 *create_ComGoogleCommonEscapeEscapers_2_initWithComGoogleCommonEscapeCharEscaper_(ComGoogleCommonEscapeCharEscaper *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEscapeEscapers_2, initWithComGoogleCommonEscapeCharEscaper_, capture$0)
}
