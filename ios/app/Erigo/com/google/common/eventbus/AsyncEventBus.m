//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/eventbus/AsyncEventBus.java
//

#include "J2ObjC_source.h"
#include "com/google/common/eventbus/AsyncEventBus.h"
#include "com/google/common/eventbus/Dispatcher.h"
#include "com/google/common/eventbus/EventBus.h"
#include "com/google/common/eventbus/SubscriberExceptionHandler.h"
#include "java/util/concurrent/Executor.h"

@implementation ComGoogleCommonEventbusAsyncEventBus

- (instancetype)initWithNSString:(NSString *)identifier
  withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(self, identifier, executor);
  return self;
}

- (instancetype)initWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor
withComGoogleCommonEventbusSubscriberExceptionHandler:(id<ComGoogleCommonEventbusSubscriberExceptionHandler>)subscriberExceptionHandler {
  ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_(self, executor, subscriberExceptionHandler);
  return self;
}

- (instancetype)initWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(self, executor);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaUtilConcurrentExecutor:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentExecutor:withComGoogleCommonEventbusSubscriberExceptionHandler:);
  methods[2].selector = @selector(initWithJavaUtilConcurrentExecutor:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LJavaUtilConcurrentExecutor;", "LJavaUtilConcurrentExecutor;LComGoogleCommonEventbusSubscriberExceptionHandler;", "LJavaUtilConcurrentExecutor;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusAsyncEventBus = { "AsyncEventBus", "com.google.common.eventbus", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonEventbusAsyncEventBus;
}

@end

void ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(ComGoogleCommonEventbusAsyncEventBus *self, NSString *identifier, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonEventbusEventBus_initWithNSString_withJavaUtilConcurrentExecutor_withComGoogleCommonEventbusDispatcher_withComGoogleCommonEventbusSubscriberExceptionHandler_(self, identifier, executor, ComGoogleCommonEventbusDispatcher_legacyAsync(), JreLoadStatic(ComGoogleCommonEventbusEventBus_LoggingHandler, INSTANCE));
}

ComGoogleCommonEventbusAsyncEventBus *new_ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(NSString *identifier, id<JavaUtilConcurrentExecutor> executor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithNSString_withJavaUtilConcurrentExecutor_, identifier, executor)
}

ComGoogleCommonEventbusAsyncEventBus *create_ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(NSString *identifier, id<JavaUtilConcurrentExecutor> executor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithNSString_withJavaUtilConcurrentExecutor_, identifier, executor)
}

void ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_(ComGoogleCommonEventbusAsyncEventBus *self, id<JavaUtilConcurrentExecutor> executor, id<ComGoogleCommonEventbusSubscriberExceptionHandler> subscriberExceptionHandler) {
  ComGoogleCommonEventbusEventBus_initWithNSString_withJavaUtilConcurrentExecutor_withComGoogleCommonEventbusDispatcher_withComGoogleCommonEventbusSubscriberExceptionHandler_(self, @"default", executor, ComGoogleCommonEventbusDispatcher_legacyAsync(), subscriberExceptionHandler);
}

ComGoogleCommonEventbusAsyncEventBus *new_ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_(id<JavaUtilConcurrentExecutor> executor, id<ComGoogleCommonEventbusSubscriberExceptionHandler> subscriberExceptionHandler) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_, executor, subscriberExceptionHandler)
}

ComGoogleCommonEventbusAsyncEventBus *create_ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_(id<JavaUtilConcurrentExecutor> executor, id<ComGoogleCommonEventbusSubscriberExceptionHandler> subscriberExceptionHandler) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithJavaUtilConcurrentExecutor_withComGoogleCommonEventbusSubscriberExceptionHandler_, executor, subscriberExceptionHandler)
}

void ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(ComGoogleCommonEventbusAsyncEventBus *self, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonEventbusEventBus_initWithNSString_withJavaUtilConcurrentExecutor_withComGoogleCommonEventbusDispatcher_withComGoogleCommonEventbusSubscriberExceptionHandler_(self, @"default", executor, ComGoogleCommonEventbusDispatcher_legacyAsync(), JreLoadStatic(ComGoogleCommonEventbusEventBus_LoggingHandler, INSTANCE));
}

ComGoogleCommonEventbusAsyncEventBus *new_ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentExecutor> executor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithJavaUtilConcurrentExecutor_, executor)
}

ComGoogleCommonEventbusAsyncEventBus *create_ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentExecutor> executor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusAsyncEventBus, initWithJavaUtilConcurrentExecutor_, executor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEventbusAsyncEventBus)
