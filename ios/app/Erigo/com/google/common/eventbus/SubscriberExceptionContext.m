//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/eventbus/SubscriberExceptionContext.java
//

#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/eventbus/EventBus.h"
#include "com/google/common/eventbus/SubscriberExceptionContext.h"
#include "java/lang/reflect/Method.h"

@interface ComGoogleCommonEventbusSubscriberExceptionContext () {
 @public
  ComGoogleCommonEventbusEventBus *eventBus_;
  id event_;
  id subscriber_;
  JavaLangReflectMethod *subscriberMethod_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusSubscriberExceptionContext, eventBus_, ComGoogleCommonEventbusEventBus *)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusSubscriberExceptionContext, event_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusSubscriberExceptionContext, subscriber_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonEventbusSubscriberExceptionContext, subscriberMethod_, JavaLangReflectMethod *)

@implementation ComGoogleCommonEventbusSubscriberExceptionContext

- (instancetype)initWithComGoogleCommonEventbusEventBus:(ComGoogleCommonEventbusEventBus *)eventBus
                                                 withId:(id)event
                                                 withId:(id)subscriber
                              withJavaLangReflectMethod:(JavaLangReflectMethod *)subscriberMethod {
  ComGoogleCommonEventbusSubscriberExceptionContext_initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_(self, eventBus, event, subscriber, subscriberMethod);
  return self;
}

- (ComGoogleCommonEventbusEventBus *)getEventBus {
  return eventBus_;
}

- (id)getEvent {
  return event_;
}

- (id)getSubscriber {
  return subscriber_;
}

- (JavaLangReflectMethod *)getSubscriberMethod {
  return subscriberMethod_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonEventbusEventBus;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectMethod;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonEventbusEventBus:withId:withId:withJavaLangReflectMethod:);
  methods[1].selector = @selector(getEventBus);
  methods[2].selector = @selector(getEvent);
  methods[3].selector = @selector(getSubscriber);
  methods[4].selector = @selector(getSubscriberMethod);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventBus_", "LComGoogleCommonEventbusEventBus;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "event_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subscriber_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subscriberMethod_", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonEventbusEventBus;LNSObject;LNSObject;LJavaLangReflectMethod;" };
  static const J2ObjcClassInfo _ComGoogleCommonEventbusSubscriberExceptionContext = { "SubscriberExceptionContext", "com.google.common.eventbus", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonEventbusSubscriberExceptionContext;
}

@end

void ComGoogleCommonEventbusSubscriberExceptionContext_initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_(ComGoogleCommonEventbusSubscriberExceptionContext *self, ComGoogleCommonEventbusEventBus *eventBus, id event, id subscriber, JavaLangReflectMethod *subscriberMethod) {
  NSObject_init(self);
  self->eventBus_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(eventBus);
  self->event_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(event);
  self->subscriber_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(subscriber);
  self->subscriberMethod_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(subscriberMethod);
}

ComGoogleCommonEventbusSubscriberExceptionContext *new_ComGoogleCommonEventbusSubscriberExceptionContext_initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_(ComGoogleCommonEventbusEventBus *eventBus, id event, id subscriber, JavaLangReflectMethod *subscriberMethod) {
  J2OBJC_NEW_IMPL(ComGoogleCommonEventbusSubscriberExceptionContext, initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_, eventBus, event, subscriber, subscriberMethod)
}

ComGoogleCommonEventbusSubscriberExceptionContext *create_ComGoogleCommonEventbusSubscriberExceptionContext_initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_(ComGoogleCommonEventbusEventBus *eventBus, id event, id subscriber, JavaLangReflectMethod *subscriberMethod) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonEventbusSubscriberExceptionContext, initWithComGoogleCommonEventbusEventBus_withId_withId_withJavaLangReflectMethod_, eventBus, event, subscriber, subscriberMethod)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonEventbusSubscriberExceptionContext)
