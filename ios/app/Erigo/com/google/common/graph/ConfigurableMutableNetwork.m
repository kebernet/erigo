//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/graph/ConfigurableMutableNetwork.java
//

#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/graph/ConfigurableMutableNetwork.h"
#include "com/google/common/graph/ConfigurableNetwork.h"
#include "com/google/common/graph/DirectedMultiNetworkConnections.h"
#include "com/google/common/graph/DirectedNetworkConnections.h"
#include "com/google/common/graph/EndpointPair.h"
#include "com/google/common/graph/GraphConstants.h"
#include "com/google/common/graph/MapIteratorCache.h"
#include "com/google/common/graph/NetworkBuilder.h"
#include "com/google/common/graph/NetworkConnections.h"
#include "com/google/common/graph/UndirectedMultiNetworkConnections.h"
#include "com/google/common/graph/UndirectedNetworkConnections.h"
#include "java/util/Set.h"

@interface ComGoogleCommonGraphConfigurableMutableNetwork ()

- (id<ComGoogleCommonGraphNetworkConnections>)addNodeInternalWithId:(id)node;

- (id<ComGoogleCommonGraphNetworkConnections>)newConnections OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static id<ComGoogleCommonGraphNetworkConnections> ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(ComGoogleCommonGraphConfigurableMutableNetwork *self, id node);

__attribute__((unused)) static id<ComGoogleCommonGraphNetworkConnections> ComGoogleCommonGraphConfigurableMutableNetwork_newConnections(ComGoogleCommonGraphConfigurableMutableNetwork *self);

@implementation ComGoogleCommonGraphConfigurableMutableNetwork

- (instancetype)initWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder *)builder {
  ComGoogleCommonGraphConfigurableMutableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(self, builder);
  return self;
}

- (jboolean)addNodeWithId:(id)node {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(node, @"node");
  if ([self containsNodeWithId:node]) {
    return false;
  }
  (void) ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(self, node);
  return true;
}

- (id<ComGoogleCommonGraphNetworkConnections>)addNodeInternalWithId:(id)node {
  return ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(self, node);
}

- (jboolean)addEdgeWithId:(id)nodeU
                   withId:(id)nodeV
                   withId:(id)edge {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(nodeU, @"nodeU");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(nodeV, @"nodeV");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(edge, @"edge");
  if ([self containsEdgeWithId:edge]) {
    ComGoogleCommonGraphEndpointPair *existingIncidentNodes = [self incidentNodesWithId:edge];
    ComGoogleCommonGraphEndpointPair *newIncidentNodes = ComGoogleCommonGraphEndpointPair_ofWithComGoogleCommonGraphNetwork_withId_withId_(self, nodeU, nodeV);
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_withId_([((ComGoogleCommonGraphEndpointPair *) nil_chk(existingIncidentNodes)) isEqual:newIncidentNodes], ComGoogleCommonGraphGraphConstants_REUSING_EDGE, edge, existingIncidentNodes, newIncidentNodes);
    return false;
  }
  id<ComGoogleCommonGraphNetworkConnections> connectionsU = [((ComGoogleCommonGraphMapIteratorCache *) nil_chk(nodeConnections_)) getWithId:nodeU];
  if (![self allowsParallelEdges]) {
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(!(connectionsU != nil && [((id<JavaUtilSet>) nil_chk([connectionsU successors])) containsWithId:nodeV]), ComGoogleCommonGraphGraphConstants_PARALLEL_EDGES_NOT_ALLOWED, nodeU, nodeV);
  }
  jboolean isSelfLoop = [nil_chk(nodeU) isEqual:nodeV];
  if (![self allowsSelfLoops]) {
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_(!isSelfLoop, ComGoogleCommonGraphGraphConstants_SELF_LOOPS_NOT_ALLOWED, nodeU);
  }
  if (connectionsU == nil) {
    connectionsU = ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(self, nodeU);
  }
  [((id<ComGoogleCommonGraphNetworkConnections>) nil_chk(connectionsU)) addOutEdgeWithId:edge withId:nodeV];
  id<ComGoogleCommonGraphNetworkConnections> connectionsV = [nodeConnections_ getWithId:nodeV];
  if (connectionsV == nil) {
    connectionsV = ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(self, nodeV);
  }
  [((id<ComGoogleCommonGraphNetworkConnections>) nil_chk(connectionsV)) addInEdgeWithId:edge withId:nodeU withBoolean:isSelfLoop];
  (void) [((ComGoogleCommonGraphMapIteratorCache *) nil_chk(edgeToReferenceNode_)) putWithId:edge withId:nodeU];
  return true;
}

- (jboolean)removeNodeWithId:(id)node {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(node, @"node");
  id<ComGoogleCommonGraphNetworkConnections> connections = [((ComGoogleCommonGraphMapIteratorCache *) nil_chk(nodeConnections_)) getWithId:node];
  if (connections == nil) {
    return false;
  }
  for (id __strong edge in nil_chk(ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilCollection_([connections incidentEdges]))) {
    [self removeEdgeWithId:edge];
  }
  (void) [nodeConnections_ removeWithId:node];
  return true;
}

- (jboolean)removeEdgeWithId:(id)edge {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(edge, @"edge");
  id nodeU = [((ComGoogleCommonGraphMapIteratorCache *) nil_chk(edgeToReferenceNode_)) getWithId:edge];
  if (nodeU == nil) {
    return false;
  }
  id<ComGoogleCommonGraphNetworkConnections> connectionsU = [((ComGoogleCommonGraphMapIteratorCache *) nil_chk(nodeConnections_)) getWithId:nodeU];
  id nodeV = [((id<ComGoogleCommonGraphNetworkConnections>) nil_chk(connectionsU)) oppositeNodeWithId:edge];
  id<ComGoogleCommonGraphNetworkConnections> connectionsV = [nodeConnections_ getWithId:nodeV];
  (void) [connectionsU removeOutEdgeWithId:edge];
  (void) [((id<ComGoogleCommonGraphNetworkConnections>) nil_chk(connectionsV)) removeInEdgeWithId:edge withBoolean:[self allowsSelfLoops] && [nodeU isEqual:nodeV]];
  (void) [edgeToReferenceNode_ removeWithId:edge];
  return true;
}

- (id<ComGoogleCommonGraphNetworkConnections>)newConnections {
  return ComGoogleCommonGraphConfigurableMutableNetwork_newConnections(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonGraphNetworkConnections;", 0x2, 5, 3, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "Z", 0x1, 10, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 11, 3, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonGraphNetworkConnections;", 0x2, -1, -1, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonGraphNetworkBuilder:);
  methods[1].selector = @selector(addNodeWithId:);
  methods[2].selector = @selector(addNodeInternalWithId:);
  methods[3].selector = @selector(addEdgeWithId:withId:withId:);
  methods[4].selector = @selector(removeNodeWithId:);
  methods[5].selector = @selector(removeEdgeWithId:);
  methods[6].selector = @selector(newConnections);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonGraphNetworkBuilder;", "(Lcom/google/common/graph/NetworkBuilder<-TN;-TE;>;)V", "addNode", "LNSObject;", "(TN;)Z", "addNodeInternal", "(TN;)Lcom/google/common/graph/NetworkConnections<TN;TE;>;", "addEdge", "LNSObject;LNSObject;LNSObject;", "(TN;TN;TE;)Z", "removeNode", "removeEdge", "(TE;)Z", "()Lcom/google/common/graph/NetworkConnections<TN;TE;>;", "<N:Ljava/lang/Object;E:Ljava/lang/Object;>Lcom/google/common/graph/ConfigurableNetwork<TN;TE;>;Lcom/google/common/graph/MutableNetwork<TN;TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonGraphConfigurableMutableNetwork = { "ConfigurableMutableNetwork", "com.google.common.graph", ptrTable, methods, NULL, 7, 0x10, 7, 0, -1, -1, -1, 14, -1 };
  return &_ComGoogleCommonGraphConfigurableMutableNetwork;
}

@end

void ComGoogleCommonGraphConfigurableMutableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphConfigurableMutableNetwork *self, ComGoogleCommonGraphNetworkBuilder *builder) {
  ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(self, builder);
}

ComGoogleCommonGraphConfigurableMutableNetwork *new_ComGoogleCommonGraphConfigurableMutableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *builder) {
  J2OBJC_NEW_IMPL(ComGoogleCommonGraphConfigurableMutableNetwork, initWithComGoogleCommonGraphNetworkBuilder_, builder)
}

ComGoogleCommonGraphConfigurableMutableNetwork *create_ComGoogleCommonGraphConfigurableMutableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *builder) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonGraphConfigurableMutableNetwork, initWithComGoogleCommonGraphNetworkBuilder_, builder)
}

id<ComGoogleCommonGraphNetworkConnections> ComGoogleCommonGraphConfigurableMutableNetwork_addNodeInternalWithId_(ComGoogleCommonGraphConfigurableMutableNetwork *self, id node) {
  id<ComGoogleCommonGraphNetworkConnections> connections = ComGoogleCommonGraphConfigurableMutableNetwork_newConnections(self);
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([((ComGoogleCommonGraphMapIteratorCache *) nil_chk(self->nodeConnections_)) putWithId:node withId:connections] == nil);
  return connections;
}

id<ComGoogleCommonGraphNetworkConnections> ComGoogleCommonGraphConfigurableMutableNetwork_newConnections(ComGoogleCommonGraphConfigurableMutableNetwork *self) {
  return [self isDirected] ? [self allowsParallelEdges] ? ComGoogleCommonGraphDirectedMultiNetworkConnections_of() : (id) ComGoogleCommonGraphDirectedNetworkConnections_of() : [self allowsParallelEdges] ? ComGoogleCommonGraphUndirectedMultiNetworkConnections_of() : (id) ComGoogleCommonGraphUndirectedNetworkConnections_of();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonGraphConfigurableMutableNetwork)
