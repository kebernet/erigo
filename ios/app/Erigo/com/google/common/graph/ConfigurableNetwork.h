//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/graph/ConfigurableNetwork.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphConfigurableNetwork")
#ifdef RESTRICT_ComGoogleCommonGraphConfigurableNetwork
#define INCLUDE_ALL_ComGoogleCommonGraphConfigurableNetwork 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphConfigurableNetwork 1
#endif
#undef RESTRICT_ComGoogleCommonGraphConfigurableNetwork

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphConfigurableNetwork_) && (INCLUDE_ALL_ComGoogleCommonGraphConfigurableNetwork || defined(INCLUDE_ComGoogleCommonGraphConfigurableNetwork))
#define ComGoogleCommonGraphConfigurableNetwork_

#define RESTRICT_ComGoogleCommonGraphAbstractNetwork 1
#define INCLUDE_ComGoogleCommonGraphAbstractNetwork 1
#include "com/google/common/graph/AbstractNetwork.h"

@class ComGoogleCommonGraphElementOrder;
@class ComGoogleCommonGraphEndpointPair;
@class ComGoogleCommonGraphMapIteratorCache;
@class ComGoogleCommonGraphNetworkBuilder;
@protocol ComGoogleCommonGraphNetworkConnections;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonGraphConfigurableNetwork : ComGoogleCommonGraphAbstractNetwork {
 @public
  ComGoogleCommonGraphMapIteratorCache *nodeConnections_;
  ComGoogleCommonGraphMapIteratorCache *edgeToReferenceNode_;
}

#pragma mark Public

- (id<JavaUtilSet>)adjacentNodesWithId:(id)node;

- (jboolean)allowsParallelEdges;

- (jboolean)allowsSelfLoops;

- (ComGoogleCommonGraphElementOrder *)edgeOrder;

- (id<JavaUtilSet>)edges;

- (id<JavaUtilSet>)edgesConnectingWithId:(id)nodeU
                                  withId:(id)nodeV;

- (id<JavaUtilSet>)incidentEdgesWithId:(id)node;

- (ComGoogleCommonGraphEndpointPair *)incidentNodesWithId:(id)edge;

- (id<JavaUtilSet>)inEdgesWithId:(id)node;

- (jboolean)isDirected;

- (ComGoogleCommonGraphElementOrder *)nodeOrder;

- (id<JavaUtilSet>)nodes;

- (id<JavaUtilSet>)outEdgesWithId:(id)node;

- (id<JavaUtilSet>)predecessorsWithId:(id)node;

- (id<JavaUtilSet>)successorsWithId:(id)node;

#pragma mark Protected

- (id<ComGoogleCommonGraphNetworkConnections>)checkedConnectionsWithId:(id)node;

- (id)checkedReferenceNodeWithId:(id)edge;

- (jboolean)containsEdgeWithId:(id)edge;

- (jboolean)containsNodeWithId:(id)node;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder *)builder;

- (instancetype)initWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder *)builder
                                           withJavaUtilMap:(id<JavaUtilMap>)nodeConnections
                                           withJavaUtilMap:(id<JavaUtilMap>)edgeToReferenceNode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphConfigurableNetwork)

J2OBJC_FIELD_SETTER(ComGoogleCommonGraphConfigurableNetwork, nodeConnections_, ComGoogleCommonGraphMapIteratorCache *)
J2OBJC_FIELD_SETTER(ComGoogleCommonGraphConfigurableNetwork, edgeToReferenceNode_, ComGoogleCommonGraphMapIteratorCache *)

FOUNDATION_EXPORT void ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphConfigurableNetwork *self, ComGoogleCommonGraphNetworkBuilder *builder);

FOUNDATION_EXPORT ComGoogleCommonGraphConfigurableNetwork *new_ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphConfigurableNetwork *create_ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *builder);

FOUNDATION_EXPORT void ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_withJavaUtilMap_withJavaUtilMap_(ComGoogleCommonGraphConfigurableNetwork *self, ComGoogleCommonGraphNetworkBuilder *builder, id<JavaUtilMap> nodeConnections, id<JavaUtilMap> edgeToReferenceNode);

FOUNDATION_EXPORT ComGoogleCommonGraphConfigurableNetwork *new_ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_withJavaUtilMap_withJavaUtilMap_(ComGoogleCommonGraphNetworkBuilder *builder, id<JavaUtilMap> nodeConnections, id<JavaUtilMap> edgeToReferenceNode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphConfigurableNetwork *create_ComGoogleCommonGraphConfigurableNetwork_initWithComGoogleCommonGraphNetworkBuilder_withJavaUtilMap_withJavaUtilMap_(ComGoogleCommonGraphNetworkBuilder *builder, id<JavaUtilMap> nodeConnections, id<JavaUtilMap> edgeToReferenceNode);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphConfigurableNetwork)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphConfigurableNetwork")
