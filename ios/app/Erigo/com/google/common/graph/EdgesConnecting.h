//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/graph/EdgesConnecting.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphEdgesConnecting")
#ifdef RESTRICT_ComGoogleCommonGraphEdgesConnecting
#define INCLUDE_ALL_ComGoogleCommonGraphEdgesConnecting 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphEdgesConnecting 1
#endif
#undef RESTRICT_ComGoogleCommonGraphEdgesConnecting

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphEdgesConnecting_) && (INCLUDE_ALL_ComGoogleCommonGraphEdgesConnecting || defined(INCLUDE_ComGoogleCommonGraphEdgesConnecting))
#define ComGoogleCommonGraphEdgesConnecting_

#define RESTRICT_JavaUtilAbstractSet 1
#define INCLUDE_JavaUtilAbstractSet 1
#include "java/util/AbstractSet.h"

@class ComGoogleCommonCollectUnmodifiableIterator;
@protocol JavaUtilMap;

@interface ComGoogleCommonGraphEdgesConnecting : JavaUtilAbstractSet

#pragma mark Public

- (jboolean)containsWithId:(id)edge;

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)nodeToEdgeMap
                             withId:(id)targetNode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphEdgesConnecting)

FOUNDATION_EXPORT void ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(ComGoogleCommonGraphEdgesConnecting *self, id<JavaUtilMap> nodeToEdgeMap, id targetNode);

FOUNDATION_EXPORT ComGoogleCommonGraphEdgesConnecting *new_ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(id<JavaUtilMap> nodeToEdgeMap, id targetNode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphEdgesConnecting *create_ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(id<JavaUtilMap> nodeToEdgeMap, id targetNode);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphEdgesConnecting)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphEdgesConnecting")
