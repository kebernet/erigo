//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/graph/EdgesConnecting.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/Iterators.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "com/google/common/graph/EdgesConnecting.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractSet.h"
#include "java/util/Map.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonGraphEdgesConnecting () {
 @public
  id<JavaUtilMap> nodeToOutEdge_;
  id targetNode_;
}

- (id)getConnectingEdge;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonGraphEdgesConnecting, nodeToOutEdge_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleCommonGraphEdgesConnecting, targetNode_, id)

__attribute__((unused)) static id ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(ComGoogleCommonGraphEdgesConnecting *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonGraphEdgesConnecting__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonGraphEdgesConnecting__Annotations$1();

@implementation ComGoogleCommonGraphEdgesConnecting

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)nodeToEdgeMap
                             withId:(id)targetNode {
  ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(self, nodeToEdgeMap, targetNode);
  return self;
}

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator {
  id connectingEdge = ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(self);
  return (connectingEdge == nil) ? [((ComGoogleCommonCollectImmutableSet *) nil_chk(ComGoogleCommonCollectImmutableSet_of())) iterator] : ComGoogleCommonCollectIterators_singletonIteratorWithId_(connectingEdge);
}

- (jint)size {
  return ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(self) == nil ? 0 : 1;
}

- (jboolean)containsWithId:(id)edge {
  id connectingEdge = ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(self);
  return (connectingEdge != nil && [connectingEdge isEqual:edge]);
}

- (id)getConnectingEdge {
  return ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonCollectUnmodifiableIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, 5 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, 6, 7, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:withId:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(getConnectingEdge);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nodeToOutEdge_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "targetNode_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;LNSObject;", "(Ljava/util/Map<*TE;>;Ljava/lang/Object;)V", "()Lcom/google/common/collect/UnmodifiableIterator<TE;>;", "contains", "LNSObject;", (void *)&ComGoogleCommonGraphEdgesConnecting__Annotations$0, "()TE;", (void *)&ComGoogleCommonGraphEdgesConnecting__Annotations$1, "Ljava/util/Map<*TE;>;", "<E:Ljava/lang/Object;>Ljava/util/AbstractSet<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonGraphEdgesConnecting = { "EdgesConnecting", "com.google.common.graph", ptrTable, methods, fields, 7, 0x10, 5, 2, -1, -1, -1, 9, -1 };
  return &_ComGoogleCommonGraphEdgesConnecting;
}

@end

void ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(ComGoogleCommonGraphEdgesConnecting *self, id<JavaUtilMap> nodeToEdgeMap, id targetNode) {
  JavaUtilAbstractSet_init(self);
  self->nodeToOutEdge_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(nodeToEdgeMap);
  self->targetNode_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(targetNode);
}

ComGoogleCommonGraphEdgesConnecting *new_ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(id<JavaUtilMap> nodeToEdgeMap, id targetNode) {
  J2OBJC_NEW_IMPL(ComGoogleCommonGraphEdgesConnecting, initWithJavaUtilMap_withId_, nodeToEdgeMap, targetNode)
}

ComGoogleCommonGraphEdgesConnecting *create_ComGoogleCommonGraphEdgesConnecting_initWithJavaUtilMap_withId_(id<JavaUtilMap> nodeToEdgeMap, id targetNode) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonGraphEdgesConnecting, initWithJavaUtilMap_withId_, nodeToEdgeMap, targetNode)
}

id ComGoogleCommonGraphEdgesConnecting_getConnectingEdge(ComGoogleCommonGraphEdgesConnecting *self) {
  return [((id<JavaUtilMap>) nil_chk(self->nodeToOutEdge_)) getWithId:self->targetNode_];
}

IOSObjectArray *ComGoogleCommonGraphEdgesConnecting__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonGraphEdgesConnecting__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonGraphEdgesConnecting)
