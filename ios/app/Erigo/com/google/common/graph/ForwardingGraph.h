//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/graph/ForwardingGraph.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphForwardingGraph")
#ifdef RESTRICT_ComGoogleCommonGraphForwardingGraph
#define INCLUDE_ALL_ComGoogleCommonGraphForwardingGraph 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphForwardingGraph 1
#endif
#undef RESTRICT_ComGoogleCommonGraphForwardingGraph

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphForwardingGraph_) && (INCLUDE_ALL_ComGoogleCommonGraphForwardingGraph || defined(INCLUDE_ComGoogleCommonGraphForwardingGraph))
#define ComGoogleCommonGraphForwardingGraph_

#define RESTRICT_ComGoogleCommonGraphAbstractGraph 1
#define INCLUDE_ComGoogleCommonGraphAbstractGraph 1
#include "com/google/common/graph/AbstractGraph.h"

@class ComGoogleCommonGraphElementOrder;
@protocol ComGoogleCommonGraphBaseGraph;
@protocol JavaUtilSet;

@interface ComGoogleCommonGraphForwardingGraph : ComGoogleCommonGraphAbstractGraph

#pragma mark Public

- (id<JavaUtilSet>)adjacentNodesWithId:(id)node;

- (jboolean)allowsSelfLoops;

- (jint)degreeWithId:(id)node;

- (id<JavaUtilSet>)edges;

- (jint)inDegreeWithId:(id)node;

- (jboolean)isDirected;

- (ComGoogleCommonGraphElementOrder *)nodeOrder;

- (id<JavaUtilSet>)nodes;

- (jint)outDegreeWithId:(id)node;

- (id<JavaUtilSet>)predecessorsWithId:(id)node;

- (id<JavaUtilSet>)successorsWithId:(id)node;

#pragma mark Protected

- (id<ComGoogleCommonGraphBaseGraph>)delegate;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphForwardingGraph)

FOUNDATION_EXPORT void ComGoogleCommonGraphForwardingGraph_init(ComGoogleCommonGraphForwardingGraph *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphForwardingGraph)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphForwardingGraph")
