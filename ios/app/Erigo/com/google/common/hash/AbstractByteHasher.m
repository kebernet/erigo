//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/AbstractByteHasher.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/AbstractByteHasher.h"
#include "com/google/common/hash/AbstractHasher.h"
#include "com/google/common/hash/Funnel.h"
#include "com/google/common/hash/Hasher.h"
#include "com/google/common/primitives/Chars.h"
#include "com/google/common/primitives/Ints.h"
#include "com/google/common/primitives/Longs.h"
#include "com/google/common/primitives/Shorts.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/ByteOrder.h"

@interface ComGoogleCommonHashAbstractByteHasher () {
 @public
  JavaNioByteBuffer *scratch_;
}

- (id<ComGoogleCommonHashHasher>)updateWithInt:(jint)bytes;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonHashAbstractByteHasher, scratch_, JavaNioByteBuffer *)

__attribute__((unused)) static id<ComGoogleCommonHashHasher> ComGoogleCommonHashAbstractByteHasher_updateWithInt_(ComGoogleCommonHashAbstractByteHasher *self, jint bytes);

@implementation ComGoogleCommonHashAbstractByteHasher

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashAbstractByteHasher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)updateWithByte:(jbyte)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateWithByteArray:(IOSByteArray *)b {
  [self updateWithByteArray:b withInt:0 withInt:((IOSByteArray *) nil_chk(b))->size_];
}

- (void)updateWithByteArray:(IOSByteArray *)b
                    withInt:(jint)off
                    withInt:(jint)len {
  for (jint i = off; i < off + len; i++) {
    [self updateWithByte:IOSByteArray_Get(nil_chk(b), i)];
  }
}

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b {
  [self updateWithByte:b];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(bytes);
  [self updateWithByteArray:bytes];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len {
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  [self updateWithByteArray:bytes withInt:off withInt:len];
  return self;
}

- (id<ComGoogleCommonHashHasher>)updateWithInt:(jint)bytes {
  return ComGoogleCommonHashAbstractByteHasher_updateWithInt_(self, bytes);
}

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s {
  (void) [((JavaNioByteBuffer *) nil_chk(scratch_)) putShortWithShort:s];
  return ComGoogleCommonHashAbstractByteHasher_updateWithInt_(self, ComGoogleCommonPrimitivesShorts_BYTES);
}

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i {
  (void) [((JavaNioByteBuffer *) nil_chk(scratch_)) putIntWithInt:i];
  return ComGoogleCommonHashAbstractByteHasher_updateWithInt_(self, ComGoogleCommonPrimitivesInts_BYTES);
}

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l {
  (void) [((JavaNioByteBuffer *) nil_chk(scratch_)) putLongWithLong:l];
  return ComGoogleCommonHashAbstractByteHasher_updateWithInt_(self, ComGoogleCommonPrimitivesLongs_BYTES);
}

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c {
  (void) [((JavaNioByteBuffer *) nil_chk(scratch_)) putCharWithChar:c];
  return ComGoogleCommonHashAbstractByteHasher_updateWithInt_(self, ComGoogleCommonPrimitivesChars_BYTES);
}

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel {
  [((id<ComGoogleCommonHashFunnel>) nil_chk(funnel)) funnelWithId:instance withComGoogleCommonHashPrimitiveSink:self];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x2, 0, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 14, 15, -1, 16, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(updateWithByte:);
  methods[2].selector = @selector(updateWithByteArray:);
  methods[3].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(putByteWithByte:);
  methods[5].selector = @selector(putBytesWithByteArray:);
  methods[6].selector = @selector(putBytesWithByteArray:withInt:withInt:);
  methods[7].selector = @selector(updateWithInt:);
  methods[8].selector = @selector(putShortWithShort:);
  methods[9].selector = @selector(putIntWithInt:);
  methods[10].selector = @selector(putLongWithLong:);
  methods[11].selector = @selector(putCharWithChar:);
  methods[12].selector = @selector(putObjectWithId:withComGoogleCommonHashFunnel:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scratch_", "LJavaNioByteBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "update", "B", "[B", "[BII", "putByte", "putBytes", "I", "putShort", "S", "putInt", "putLong", "J", "putChar", "C", "putObject", "LNSObject;LComGoogleCommonHashFunnel;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;)Lcom/google/common/hash/Hasher;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractByteHasher = { "AbstractByteHasher", "com.google.common.hash", ptrTable, methods, fields, 7, 0x400, 13, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashAbstractByteHasher;
}

@end

void ComGoogleCommonHashAbstractByteHasher_init(ComGoogleCommonHashAbstractByteHasher *self) {
  ComGoogleCommonHashAbstractHasher_init(self);
  self->scratch_ = [((JavaNioByteBuffer *) nil_chk(JavaNioByteBuffer_allocateWithInt_(8))) orderWithJavaNioByteOrder:JreLoadStatic(JavaNioByteOrder, LITTLE_ENDIAN)];
}

id<ComGoogleCommonHashHasher> ComGoogleCommonHashAbstractByteHasher_updateWithInt_(ComGoogleCommonHashAbstractByteHasher *self, jint bytes) {
  @try {
    [self updateWithByteArray:[((JavaNioByteBuffer *) nil_chk(self->scratch_)) array] withInt:0 withInt:bytes];
  }
  @finally {
    (void) [self->scratch_ clear];
  }
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashAbstractByteHasher)
