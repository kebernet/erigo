//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/AbstractCompositeHashFunction.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/AbstractCompositeHashFunction.h"
#include "com/google/common/hash/AbstractStreamingHashFunction.h"
#include "com/google/common/hash/Funnel.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/hash/Hasher.h"
#include "java/lang/CharSequence.h"
#include "java/nio/charset/Charset.h"

#pragma clang diagnostic ignored "-Wprotocol"

inline jlong ComGoogleCommonHashAbstractCompositeHashFunction_get_serialVersionUID();
#define ComGoogleCommonHashAbstractCompositeHashFunction_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonHashAbstractCompositeHashFunction, serialVersionUID, jlong)

@interface ComGoogleCommonHashAbstractCompositeHashFunction_1 : NSObject < ComGoogleCommonHashHasher > {
 @public
  ComGoogleCommonHashAbstractCompositeHashFunction *this$0_;
  IOSObjectArray *val$hashers_;
}

- (instancetype)initWithComGoogleCommonHashAbstractCompositeHashFunction:(ComGoogleCommonHashAbstractCompositeHashFunction *)outer$
                                      withComGoogleCommonHashHasherArray:(IOSObjectArray *)capture$0;

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s;

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i;

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l;

- (id<ComGoogleCommonHashHasher>)putFloatWithFloat:(jfloat)f;

- (id<ComGoogleCommonHashHasher>)putDoubleWithDouble:(jdouble)d;

- (id<ComGoogleCommonHashHasher>)putBooleanWithBoolean:(jboolean)b;

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c;

- (id<ComGoogleCommonHashHasher>)putUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars;

- (id<ComGoogleCommonHashHasher>)putStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars
                                         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (ComGoogleCommonHashHashCode *)hash__;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractCompositeHashFunction_1)

__attribute__((unused)) static void ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction_1 *self, ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0);

__attribute__((unused)) static ComGoogleCommonHashAbstractCompositeHashFunction_1 *new_ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashAbstractCompositeHashFunction_1 *create_ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0);

@implementation ComGoogleCommonHashAbstractCompositeHashFunction

- (instancetype)initWithComGoogleCommonHashHashFunctionArray:(IOSObjectArray *)functions {
  ComGoogleCommonHashAbstractCompositeHashFunction_initWithComGoogleCommonHashHashFunctionArray_(self, functions);
  return self;
}

- (ComGoogleCommonHashHashCode *)makeHashWithComGoogleCommonHashHasherArray:(IOSObjectArray *)hashers {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComGoogleCommonHashHasher>)newHasher {
  IOSObjectArray *hashers = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(functions_))->size_ type:ComGoogleCommonHashHasher_class_()];
  for (jint i = 0; i < hashers->size_; i++) {
    (void) IOSObjectArray_Set(hashers, i, [((id<ComGoogleCommonHashHashFunction>) nil_chk(IOSObjectArray_Get(functions_, i))) newHasher]);
  }
  return new_ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(self, hashers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x400, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashHashFunctionArray:);
  methods[1].selector = @selector(makeHashWithComGoogleCommonHashHasherArray:);
  methods[2].selector = @selector(newHasher);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "functions_", "[LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonHashAbstractCompositeHashFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LComGoogleCommonHashHashFunction;", "makeHash", "[LComGoogleCommonHashHasher;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractCompositeHashFunction = { "AbstractCompositeHashFunction", "com.google.common.hash", ptrTable, methods, fields, 7, 0x400, 3, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashAbstractCompositeHashFunction;
}

@end

void ComGoogleCommonHashAbstractCompositeHashFunction_initWithComGoogleCommonHashHashFunctionArray_(ComGoogleCommonHashAbstractCompositeHashFunction *self, IOSObjectArray *functions) {
  ComGoogleCommonHashAbstractStreamingHashFunction_init(self);
  {
    IOSObjectArray *a__ = functions;
    id<ComGoogleCommonHashHashFunction> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHashFunction> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHashFunction> function = *b__++;
      (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(function);
    }
  }
  self->functions_ = functions;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashAbstractCompositeHashFunction)

@implementation ComGoogleCommonHashAbstractCompositeHashFunction_1

- (instancetype)initWithComGoogleCommonHashAbstractCompositeHashFunction:(ComGoogleCommonHashAbstractCompositeHashFunction *)outer$
                                      withComGoogleCommonHashHasherArray:(IOSObjectArray *)capture$0 {
  ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(self, outer$, capture$0);
  return self;
}

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putByteWithByte:b];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putBytesWithByteArray:bytes];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putBytesWithByteArray:bytes withInt:off withInt:len];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putShortWithShort:s];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putIntWithInt:i];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putLongWithLong:l];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putFloatWithFloat:(jfloat)f {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putFloatWithFloat:f];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putDoubleWithDouble:(jdouble)d {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putDoubleWithDouble:d];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBooleanWithBoolean:(jboolean)b {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putBooleanWithBoolean:b];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putCharWithChar:c];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putUnencodedCharsWithJavaLangCharSequence:chars];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars
                                         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putStringWithJavaLangCharSequence:chars withJavaNioCharsetCharset:charset];
    }
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel {
  {
    IOSObjectArray *a__ = val$hashers_;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putObjectWithId:instance withComGoogleCommonHashFunnel:funnel];
    }
  }
  return self;
}

- (ComGoogleCommonHashHashCode *)hash__ {
  return [this$0_ makeHashWithComGoogleCommonHashHasherArray:val$hashers_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 23, 24, -1, 25, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 26, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashAbstractCompositeHashFunction:withComGoogleCommonHashHasherArray:);
  methods[1].selector = @selector(putByteWithByte:);
  methods[2].selector = @selector(putBytesWithByteArray:);
  methods[3].selector = @selector(putBytesWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(putShortWithShort:);
  methods[5].selector = @selector(putIntWithInt:);
  methods[6].selector = @selector(putLongWithLong:);
  methods[7].selector = @selector(putFloatWithFloat:);
  methods[8].selector = @selector(putDoubleWithDouble:);
  methods[9].selector = @selector(putBooleanWithBoolean:);
  methods[10].selector = @selector(putCharWithChar:);
  methods[11].selector = @selector(putUnencodedCharsWithJavaLangCharSequence:);
  methods[12].selector = @selector(putStringWithJavaLangCharSequence:withJavaNioCharsetCharset:);
  methods[13].selector = @selector(putObjectWithId:withComGoogleCommonHashFunnel:);
  methods[14].selector = @selector(hash__);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonHashAbstractCompositeHashFunction;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$hashers_", "[LComGoogleCommonHashHasher;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "putByte", "B", "putBytes", "[B", "[BII", "putShort", "S", "putInt", "I", "putLong", "J", "putFloat", "F", "putDouble", "D", "putBoolean", "Z", "putChar", "C", "putUnencodedChars", "LJavaLangCharSequence;", "putString", "LJavaLangCharSequence;LJavaNioCharsetCharset;", "putObject", "LNSObject;LComGoogleCommonHashFunnel;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;)Lcom/google/common/hash/Hasher;", "hash", "LComGoogleCommonHashAbstractCompositeHashFunction;", "newHasher" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractCompositeHashFunction_1 = { "", "com.google.common.hash", ptrTable, methods, fields, 7, 0x8018, 15, 2, 27, -1, 28, -1, -1 };
  return &_ComGoogleCommonHashAbstractCompositeHashFunction_1;
}

@end

void ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction_1 *self, ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0) {
  self->this$0_ = outer$;
  self->val$hashers_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonHashAbstractCompositeHashFunction_1 *new_ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashAbstractCompositeHashFunction_1, initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_, outer$, capture$0)
}

ComGoogleCommonHashAbstractCompositeHashFunction_1 *create_ComGoogleCommonHashAbstractCompositeHashFunction_1_initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_(ComGoogleCommonHashAbstractCompositeHashFunction *outer$, IOSObjectArray *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashAbstractCompositeHashFunction_1, initWithComGoogleCommonHashAbstractCompositeHashFunction_withComGoogleCommonHashHasherArray_, outer$, capture$0)
}
