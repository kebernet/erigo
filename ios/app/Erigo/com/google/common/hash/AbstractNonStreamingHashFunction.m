//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/AbstractNonStreamingHashFunction.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/AbstractHasher.h"
#include "com/google/common/hash/AbstractNonStreamingHashFunction.h"
#include "com/google/common/hash/Funnel.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/Hasher.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/charset/Charset.h"

@class ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream;

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher : ComGoogleCommonHashAbstractHasher {
 @public
  ComGoogleCommonHashAbstractNonStreamingHashFunction *this$0_;
  ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *stream_;
}

- (instancetype)initWithComGoogleCommonHashAbstractNonStreamingHashFunction:(ComGoogleCommonHashAbstractNonStreamingHashFunction *)outer$
                                                                    withInt:(jint)expectedInputSize;

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s;

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i;

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l;

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c;

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (ComGoogleCommonHashHashCode *)hash__;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher, stream_, ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *)

inline jint ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_get_BOTTOM_BYTE();
#define ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE 255
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher, BOTTOM_BYTE, jint)

__attribute__((unused)) static void ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *self, ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize);

__attribute__((unused)) static ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *new_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *create_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher)

@interface ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream : JavaIoByteArrayOutputStream

- (instancetype)initWithInt:(jint)expectedInputSize;

- (IOSByteArray *)byteArray;

- (jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream)

__attribute__((unused)) static void ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *self, jint expectedInputSize);

__attribute__((unused)) static ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *new_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(jint expectedInputSize) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *create_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(jint expectedInputSize);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream)

@implementation ComGoogleCommonHashAbstractNonStreamingHashFunction

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashAbstractNonStreamingHashFunction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ComGoogleCommonHashHasher>)newHasher {
  return new_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(self, 32);
}

- (id<ComGoogleCommonHashHasher>)newHasherWithInt:(jint)expectedInputSize {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(expectedInputSize >= 0);
  return new_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(self, expectedInputSize);
}

- (ComGoogleCommonHashHashCode *)hashObjectWithId:(id)instance
                    withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel {
  return [((id<ComGoogleCommonHashHasher>) nil_chk([((id<ComGoogleCommonHashHasher>) nil_chk([self newHasher])) putObjectWithId:instance withComGoogleCommonHashFunnel:funnel])) hash__];
}

- (ComGoogleCommonHashHashCode *)hashUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)input {
  jint len = [((id<JavaLangCharSequence>) nil_chk(input)) java_length];
  id<ComGoogleCommonHashHasher> hasher = [self newHasherWithInt:len * 2];
  for (jint i = 0; i < len; i++) {
    (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) putCharWithChar:[input charAtWithInt:i]];
  }
  return [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) hash__];
}

- (ComGoogleCommonHashHashCode *)hashStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return [self hashBytesWithByteArray:[((NSString *) nil_chk([((id<JavaLangCharSequence>) nil_chk(input)) description])) java_getBytesWithCharset:charset]];
}

- (ComGoogleCommonHashHashCode *)hashIntWithInt:(jint)input {
  return [((id<ComGoogleCommonHashHasher>) nil_chk([((id<ComGoogleCommonHashHasher>) nil_chk([self newHasherWithInt:4])) putIntWithInt:input])) hash__];
}

- (ComGoogleCommonHashHashCode *)hashLongWithLong:(jlong)input {
  return [((id<ComGoogleCommonHashHasher>) nil_chk([((id<ComGoogleCommonHashHasher>) nil_chk([self newHasherWithInt:8])) putLongWithLong:input])) hash__];
}

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input {
  return [self hashBytesWithByteArray:input withInt:0 withInt:((IOSByteArray *) nil_chk(input))->size_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 9, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newHasher);
  methods[2].selector = @selector(newHasherWithInt:);
  methods[3].selector = @selector(hashObjectWithId:withComGoogleCommonHashFunnel:);
  methods[4].selector = @selector(hashUnencodedCharsWithJavaLangCharSequence:);
  methods[5].selector = @selector(hashStringWithJavaLangCharSequence:withJavaNioCharsetCharset:);
  methods[6].selector = @selector(hashIntWithInt:);
  methods[7].selector = @selector(hashLongWithLong:);
  methods[8].selector = @selector(hashBytesWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newHasher", "I", "hashObject", "LNSObject;LComGoogleCommonHashFunnel;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;)Lcom/google/common/hash/HashCode;", "hashUnencodedChars", "LJavaLangCharSequence;", "hashString", "LJavaLangCharSequence;LJavaNioCharsetCharset;", "hashInt", "hashLong", "J", "hashBytes", "[B", "LComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher;LComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractNonStreamingHashFunction = { "AbstractNonStreamingHashFunction", "com.google.common.hash", ptrTable, methods, NULL, 7, 0x400, 9, 0, -1, 14, -1, -1, -1 };
  return &_ComGoogleCommonHashAbstractNonStreamingHashFunction;
}

@end

void ComGoogleCommonHashAbstractNonStreamingHashFunction_init(ComGoogleCommonHashAbstractNonStreamingHashFunction *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashAbstractNonStreamingHashFunction)

@implementation ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher

- (instancetype)initWithComGoogleCommonHashAbstractNonStreamingHashFunction:(ComGoogleCommonHashAbstractNonStreamingHashFunction *)outer$
                                                                    withInt:(jint)expectedInputSize {
  ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(self, outer$, expectedInputSize);
  return self;
}

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b {
  [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithInt:b];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes {
  @try {
    [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithByteArray:bytes];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len {
  [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithByteArray:bytes withInt:off withInt:len];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s {
  [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithInt:s & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  [stream_ writeWithInt:(JreURShift32(s, 8)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i {
  [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithInt:i & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  [stream_ writeWithInt:(JreURShift32(i, 8)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  [stream_ writeWithInt:(JreURShift32(i, 16)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  [stream_ writeWithInt:(JreURShift32(i, 24)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l {
  for (jint i = 0; i < 64; i += 8) {
    [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithInt:(jbyte) ((JreURShift64(l, i)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE)];
  }
  return self;
}

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c {
  [((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) writeWithInt:c & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  [stream_ writeWithInt:(JreURShift32(c, 8)) & ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE];
  return self;
}

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel {
  [((id<ComGoogleCommonHashFunnel>) nil_chk(funnel)) funnelWithId:instance withComGoogleCommonHashPrimitiveSink:self];
  return self;
}

- (ComGoogleCommonHashHashCode *)hash__ {
  return [this$0_ hashBytesWithByteArray:[((ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *) nil_chk(stream_)) byteArray] withInt:0 withInt:[stream_ length]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 8, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, 13, 14, -1, 15, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 16, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashAbstractNonStreamingHashFunction:withInt:);
  methods[1].selector = @selector(putByteWithByte:);
  methods[2].selector = @selector(putBytesWithByteArray:);
  methods[3].selector = @selector(putBytesWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(putShortWithShort:);
  methods[5].selector = @selector(putIntWithInt:);
  methods[6].selector = @selector(putLongWithLong:);
  methods[7].selector = @selector(putCharWithChar:);
  methods[8].selector = @selector(putObjectWithId:withComGoogleCommonHashFunnel:);
  methods[9].selector = @selector(hash__);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonHashAbstractNonStreamingHashFunction;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "stream_", "LComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "BOTTOM_BYTE", "I", .constantValue.asInt = ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_BOTTOM_BYTE, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "putByte", "B", "putBytes", "[B", "[BII", "putShort", "S", "putInt", "putLong", "J", "putChar", "C", "putObject", "LNSObject;LComGoogleCommonHashFunnel;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;)Lcom/google/common/hash/Hasher;", "hash", "LComGoogleCommonHashAbstractNonStreamingHashFunction;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher = { "BufferingHasher", "com.google.common.hash", ptrTable, methods, fields, 7, 0x12, 10, 3, 17, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher;
}

@end

void ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *self, ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize) {
  self->this$0_ = outer$;
  ComGoogleCommonHashAbstractHasher_init(self);
  self->stream_ = new_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(expectedInputSize);
}

ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *new_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher, initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_, outer$, expectedInputSize)
}

ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher *create_ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher_initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction *outer$, jint expectedInputSize) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher, initWithComGoogleCommonHashAbstractNonStreamingHashFunction_withInt_, outer$, expectedInputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashAbstractNonStreamingHashFunction_BufferingHasher)

@implementation ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream

- (instancetype)initWithInt:(jint)expectedInputSize {
  ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(self, expectedInputSize);
  return self;
}

- (IOSByteArray *)byteArray {
  return buf_;
}

- (jint)length {
  return count_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(byteArray);
  methods[2].selector = @selector(length);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LComGoogleCommonHashAbstractNonStreamingHashFunction;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream = { "ExposedByteArrayOutputStream", "com.google.common.hash", ptrTable, methods, NULL, 7, 0x1a, 3, 0, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream;
}

@end

void ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *self, jint expectedInputSize) {
  JavaIoByteArrayOutputStream_initWithInt_(self, expectedInputSize);
}

ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *new_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(jint expectedInputSize) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream, initWithInt_, expectedInputSize)
}

ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream *create_ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream_initWithInt_(jint expectedInputSize) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream, initWithInt_, expectedInputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashAbstractNonStreamingHashFunction_ExposedByteArrayOutputStream)
