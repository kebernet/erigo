//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/BloomFilterStrategies.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/BloomFilterStrategies.h"
#include "com/google/common/hash/Funnel.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/hash/Hashing.h"
#include "com/google/common/math/LongMath.h"
#include "com/google/common/primitives/Ints.h"
#include "com/google/common/primitives/Longs.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/RoundingMode.h"
#include "java/util/Arrays.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static void ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashBloomFilterStrategies *new_ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonHashBloomFilterStrategies_1 : ComGoogleCommonHashBloomFilterStrategies < NSCopying >

- (jboolean)putWithId:(id)object
withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
              withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

- (jboolean)mightContainWithId:(id)object
 withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                       withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashBloomFilterStrategies_1)

__attribute__((unused)) static void ComGoogleCommonHashBloomFilterStrategies_1_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashBloomFilterStrategies_1 *new_ComGoogleCommonHashBloomFilterStrategies_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonHashBloomFilterStrategies_2 : ComGoogleCommonHashBloomFilterStrategies < NSCopying >

- (jboolean)putWithId:(id)object
withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
              withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

- (jboolean)mightContainWithId:(id)object
 withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                       withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits;

- (jlong)lowerEightWithByteArray:(IOSByteArray *)bytes;

- (jlong)upperEightWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashBloomFilterStrategies_2)

__attribute__((unused)) static void ComGoogleCommonHashBloomFilterStrategies_2_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashBloomFilterStrategies_2 *new_ComGoogleCommonHashBloomFilterStrategies_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static jlong ComGoogleCommonHashBloomFilterStrategies_2_lowerEightWithByteArray_(ComGoogleCommonHashBloomFilterStrategies_2 *self, IOSByteArray *bytes);

__attribute__((unused)) static jlong ComGoogleCommonHashBloomFilterStrategies_2_upperEightWithByteArray_(ComGoogleCommonHashBloomFilterStrategies_2 *self, IOSByteArray *bytes);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashBloomFilterStrategies_BitArray__Annotations$0();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashBloomFilterStrategies)

ComGoogleCommonHashBloomFilterStrategies *ComGoogleCommonHashBloomFilterStrategies_values_[2];

@implementation ComGoogleCommonHashBloomFilterStrategies

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashBloomFilterStrategies_values();
}

+ (ComGoogleCommonHashBloomFilterStrategies *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashBloomFilterStrategies_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComGoogleCommonHashBloomFilterStrategies;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashBloomFilterStrategies;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MURMUR128_MITZ_32", "LComGoogleCommonHashBloomFilterStrategies;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "MURMUR128_MITZ_64", "LComGoogleCommonHashBloomFilterStrategies;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashBloomFilterStrategies, MURMUR128_MITZ_32), &JreEnum(ComGoogleCommonHashBloomFilterStrategies, MURMUR128_MITZ_64), "LComGoogleCommonHashBloomFilterStrategies_BitArray;", "Ljava/lang/Enum<Lcom/google/common/hash/BloomFilterStrategies;>;Lcom/google/common/hash/BloomFilter$Strategy;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashBloomFilterStrategies = { "BloomFilterStrategies", "com.google.common.hash", ptrTable, methods, fields, 7, 0x4400, 2, 2, -1, 4, -1, 5, -1 };
  return &_ComGoogleCommonHashBloomFilterStrategies;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashBloomFilterStrategies class]) {
    JreEnum(ComGoogleCommonHashBloomFilterStrategies, MURMUR128_MITZ_32) = new_ComGoogleCommonHashBloomFilterStrategies_1_initWithNSString_withInt_(@"MURMUR128_MITZ_32", 0);
    JreEnum(ComGoogleCommonHashBloomFilterStrategies, MURMUR128_MITZ_64) = new_ComGoogleCommonHashBloomFilterStrategies_2_initWithNSString_withInt_(@"MURMUR128_MITZ_64", 1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashBloomFilterStrategies)
  }
}

@end

void ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashBloomFilterStrategies *new_ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashBloomFilterStrategies, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashBloomFilterStrategies_values() {
  ComGoogleCommonHashBloomFilterStrategies_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashBloomFilterStrategies_values_ count:2 type:ComGoogleCommonHashBloomFilterStrategies_class_()];
}

ComGoogleCommonHashBloomFilterStrategies *ComGoogleCommonHashBloomFilterStrategies_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashBloomFilterStrategies_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonHashBloomFilterStrategies *e = ComGoogleCommonHashBloomFilterStrategies_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashBloomFilterStrategies *ComGoogleCommonHashBloomFilterStrategies_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashBloomFilterStrategies_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonHashBloomFilterStrategies_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashBloomFilterStrategies)

@implementation ComGoogleCommonHashBloomFilterStrategies_1

- (jboolean)putWithId:(id)object
withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
              withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits {
  jlong bitSize = [((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(bits)) bitSize];
  jlong hash64 = [((ComGoogleCommonHashHashCode *) nil_chk([((id<ComGoogleCommonHashHashFunction>) nil_chk(ComGoogleCommonHashHashing_murmur3_128())) hashObjectWithId:object withComGoogleCommonHashFunnel:funnel])) asLong];
  jint hash1 = (jint) hash64;
  jint hash2 = (jint) (JreURShift64(hash64, 32));
  jboolean bitsChanged = false;
  for (jint i = 1; i <= numHashFunctions; i++) {
    jint combinedHash = hash1 + (i * hash2);
    if (combinedHash < 0) {
      combinedHash = ~combinedHash;
    }
    bitsChanged |= [bits setWithLong:combinedHash % bitSize];
  }
  return bitsChanged;
}

- (jboolean)mightContainWithId:(id)object
 withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                       withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits {
  jlong bitSize = [((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(bits)) bitSize];
  jlong hash64 = [((ComGoogleCommonHashHashCode *) nil_chk([((id<ComGoogleCommonHashHashFunction>) nil_chk(ComGoogleCommonHashHashing_murmur3_128())) hashObjectWithId:object withComGoogleCommonHashFunnel:funnel])) asLong];
  jint hash1 = (jint) hash64;
  jint hash2 = (jint) (JreURShift64(hash64, 32));
  for (jint i = 1; i <= numHashFunctions; i++) {
    jint combinedHash = hash1 + (i * hash2);
    if (combinedHash < 0) {
      combinedHash = ~combinedHash;
    }
    if (![bits getWithLong:combinedHash % bitSize]) {
      return false;
    }
  }
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonHashBloomFilterStrategies_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x1, 3, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(putWithId:withComGoogleCommonHashFunnel:withInt:withComGoogleCommonHashBloomFilterStrategies_BitArray:);
  methods[1].selector = @selector(mightContainWithId:withComGoogleCommonHashFunnel:withInt:withComGoogleCommonHashBloomFilterStrategies_BitArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "put", "LNSObject;LComGoogleCommonHashFunnel;ILComGoogleCommonHashBloomFilterStrategies_BitArray;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;ILcom/google/common/hash/BloomFilterStrategies$BitArray;)Z", "mightContain", "LComGoogleCommonHashBloomFilterStrategies;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashBloomFilterStrategies_1 = { "", "com.google.common.hash", ptrTable, methods, NULL, 7, 0xc018, 2, 0, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashBloomFilterStrategies_1;
}

@end

void ComGoogleCommonHashBloomFilterStrategies_1_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashBloomFilterStrategies_1 *new_ComGoogleCommonHashBloomFilterStrategies_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashBloomFilterStrategies_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonHashBloomFilterStrategies_2

- (jboolean)putWithId:(id)object
withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
              withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits {
  jlong bitSize = [((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(bits)) bitSize];
  IOSByteArray *bytes = [((ComGoogleCommonHashHashCode *) nil_chk([((id<ComGoogleCommonHashHashFunction>) nil_chk(ComGoogleCommonHashHashing_murmur3_128())) hashObjectWithId:object withComGoogleCommonHashFunnel:funnel])) getBytesInternal];
  jlong hash1 = ComGoogleCommonHashBloomFilterStrategies_2_lowerEightWithByteArray_(self, bytes);
  jlong hash2 = ComGoogleCommonHashBloomFilterStrategies_2_upperEightWithByteArray_(self, bytes);
  jboolean bitsChanged = false;
  jlong combinedHash = hash1;
  for (jint i = 0; i < numHashFunctions; i++) {
    bitsChanged |= [bits setWithLong:(combinedHash & JavaLangLong_MAX_VALUE) % bitSize];
    combinedHash += hash2;
  }
  return bitsChanged;
}

- (jboolean)mightContainWithId:(id)object
 withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel
                       withInt:(jint)numHashFunctions
withComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)bits {
  jlong bitSize = [((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(bits)) bitSize];
  IOSByteArray *bytes = [((ComGoogleCommonHashHashCode *) nil_chk([((id<ComGoogleCommonHashHashFunction>) nil_chk(ComGoogleCommonHashHashing_murmur3_128())) hashObjectWithId:object withComGoogleCommonHashFunnel:funnel])) getBytesInternal];
  jlong hash1 = ComGoogleCommonHashBloomFilterStrategies_2_lowerEightWithByteArray_(self, bytes);
  jlong hash2 = ComGoogleCommonHashBloomFilterStrategies_2_upperEightWithByteArray_(self, bytes);
  jlong combinedHash = hash1;
  for (jint i = 0; i < numHashFunctions; i++) {
    if (![bits getWithLong:(combinedHash & JavaLangLong_MAX_VALUE) % bitSize]) {
      return false;
    }
    combinedHash += hash2;
  }
  return true;
}

- (jlong)lowerEightWithByteArray:(IOSByteArray *)bytes {
  return ComGoogleCommonHashBloomFilterStrategies_2_lowerEightWithByteArray_(self, bytes);
}

- (jlong)upperEightWithByteArray:(IOSByteArray *)bytes {
  return ComGoogleCommonHashBloomFilterStrategies_2_upperEightWithByteArray_(self, bytes);
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonHashBloomFilterStrategies_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x1, 3, 1, -1, 2, -1, -1 },
    { NULL, "J", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(putWithId:withComGoogleCommonHashFunnel:withInt:withComGoogleCommonHashBloomFilterStrategies_BitArray:);
  methods[1].selector = @selector(mightContainWithId:withComGoogleCommonHashFunnel:withInt:withComGoogleCommonHashBloomFilterStrategies_BitArray:);
  methods[2].selector = @selector(lowerEightWithByteArray:);
  methods[3].selector = @selector(upperEightWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "put", "LNSObject;LComGoogleCommonHashFunnel;ILComGoogleCommonHashBloomFilterStrategies_BitArray;", "<T:Ljava/lang/Object;>(TT;Lcom/google/common/hash/Funnel<-TT;>;ILcom/google/common/hash/BloomFilterStrategies$BitArray;)Z", "mightContain", "lowerEight", "[B", "upperEight", "LComGoogleCommonHashBloomFilterStrategies;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashBloomFilterStrategies_2 = { "", "com.google.common.hash", ptrTable, methods, NULL, 7, 0xc018, 4, 0, 7, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashBloomFilterStrategies_2;
}

@end

void ComGoogleCommonHashBloomFilterStrategies_2_initWithNSString_withInt_(ComGoogleCommonHashBloomFilterStrategies_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonHashBloomFilterStrategies_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashBloomFilterStrategies_2 *new_ComGoogleCommonHashBloomFilterStrategies_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashBloomFilterStrategies_2, initWithNSString_withInt_, __name, __ordinal)
}

jlong ComGoogleCommonHashBloomFilterStrategies_2_lowerEightWithByteArray_(ComGoogleCommonHashBloomFilterStrategies_2 *self, IOSByteArray *bytes) {
  return ComGoogleCommonPrimitivesLongs_fromBytesWithByte_withByte_withByte_withByte_withByte_withByte_withByte_withByte_(IOSByteArray_Get(nil_chk(bytes), 7), IOSByteArray_Get(bytes, 6), IOSByteArray_Get(bytes, 5), IOSByteArray_Get(bytes, 4), IOSByteArray_Get(bytes, 3), IOSByteArray_Get(bytes, 2), IOSByteArray_Get(bytes, 1), IOSByteArray_Get(bytes, 0));
}

jlong ComGoogleCommonHashBloomFilterStrategies_2_upperEightWithByteArray_(ComGoogleCommonHashBloomFilterStrategies_2 *self, IOSByteArray *bytes) {
  return ComGoogleCommonPrimitivesLongs_fromBytesWithByte_withByte_withByte_withByte_withByte_withByte_withByte_withByte_(IOSByteArray_Get(nil_chk(bytes), 15), IOSByteArray_Get(bytes, 14), IOSByteArray_Get(bytes, 13), IOSByteArray_Get(bytes, 12), IOSByteArray_Get(bytes, 11), IOSByteArray_Get(bytes, 10), IOSByteArray_Get(bytes, 9), IOSByteArray_Get(bytes, 8));
}

@implementation ComGoogleCommonHashBloomFilterStrategies_BitArray

- (instancetype)initWithLong:(jlong)bits {
  ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLong_(self, bits);
  return self;
}

- (instancetype)initWithLongArray:(IOSLongArray *)data {
  ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_(self, data);
  return self;
}

- (jboolean)setWithLong:(jlong)index {
  if (![self getWithLong:index]) {
    *IOSLongArray_GetRef(nil_chk(data_), (jint) (JreURShift64(index, 6))) |= (JreLShift64(1LL, index));
    bitCount_++;
    return true;
  }
  return false;
}

- (jboolean)getWithLong:(jlong)index {
  return (IOSLongArray_Get(nil_chk(data_), (jint) (JreURShift64(index, 6))) & (JreLShift64(1LL, index))) != 0;
}

- (jlong)bitSize {
  return (jlong) ((IOSLongArray *) nil_chk(data_))->size_ * JavaLangLong_SIZE;
}

- (jlong)bitCount {
  return bitCount_;
}

- (ComGoogleCommonHashBloomFilterStrategies_BitArray *)copy__ {
  return new_ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_([((IOSLongArray *) nil_chk(data_)) java_clone]);
}

- (void)putAllWithComGoogleCommonHashBloomFilterStrategies_BitArray:(ComGoogleCommonHashBloomFilterStrategies_BitArray *)array {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_withInt_(((IOSLongArray *) nil_chk(data_))->size_ == ((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(array))->data_->size_, @"BitArrays must be of equal length (%s != %s)", data_->size_, array->data_->size_);
  bitCount_ = 0;
  for (jint i = 0; i < data_->size_; i++) {
    *IOSLongArray_GetRef(data_, i) |= IOSLongArray_Get(array->data_, i);
    bitCount_ += JavaLangLong_bitCountWithLong_(IOSLongArray_Get(data_, i));
  }
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[ComGoogleCommonHashBloomFilterStrategies_BitArray class]]) {
    ComGoogleCommonHashBloomFilterStrategies_BitArray *bitArray = (ComGoogleCommonHashBloomFilterStrategies_BitArray *) cast_chk(o, [ComGoogleCommonHashBloomFilterStrategies_BitArray class]);
    return JavaUtilArrays_equalsWithLongArray_withLongArray_(data_, ((ComGoogleCommonHashBloomFilterStrategies_BitArray *) nil_chk(bitArray))->data_);
  }
  return false;
}

- (NSUInteger)hash {
  return JavaUtilArrays_hashCodeWithLongArray_(data_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 2, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 3, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashBloomFilterStrategies_BitArray;", 0x0, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, 9 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(initWithLongArray:);
  methods[2].selector = @selector(setWithLong:);
  methods[3].selector = @selector(getWithLong:);
  methods[4].selector = @selector(bitSize);
  methods[5].selector = @selector(bitCount);
  methods[6].selector = @selector(copy__);
  methods[7].selector = @selector(putAllWithComGoogleCommonHashBloomFilterStrategies_BitArray:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "[J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "bitCount_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "[J", "set", "get", "copy", "putAll", "LComGoogleCommonHashBloomFilterStrategies_BitArray;", "equals", "LNSObject;", (void *)&ComGoogleCommonHashBloomFilterStrategies_BitArray__Annotations$0, "hashCode", "LComGoogleCommonHashBloomFilterStrategies;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashBloomFilterStrategies_BitArray = { "BitArray", "com.google.common.hash", ptrTable, methods, fields, 7, 0x18, 10, 2, 11, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashBloomFilterStrategies_BitArray;
}

@end

void ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLong_(ComGoogleCommonHashBloomFilterStrategies_BitArray *self, jlong bits) {
  ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_(self, [IOSLongArray newArrayWithLength:ComGoogleCommonPrimitivesInts_checkedCastWithLong_(ComGoogleCommonMathLongMath_divideWithLong_withLong_withJavaMathRoundingMode_(bits, 64, JreLoadEnum(JavaMathRoundingMode, CEILING)))]);
}

ComGoogleCommonHashBloomFilterStrategies_BitArray *new_ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLong_(jlong bits) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashBloomFilterStrategies_BitArray, initWithLong_, bits)
}

ComGoogleCommonHashBloomFilterStrategies_BitArray *create_ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLong_(jlong bits) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashBloomFilterStrategies_BitArray, initWithLong_, bits)
}

void ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_(ComGoogleCommonHashBloomFilterStrategies_BitArray *self, IOSLongArray *data) {
  NSObject_init(self);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(((IOSLongArray *) nil_chk(data))->size_ > 0, @"data length is zero!");
  self->data_ = data;
  jlong bitCount = 0;
  {
    IOSLongArray *a__ = data;
    jlong const *b__ = a__->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong value = *b__++;
      bitCount += JavaLangLong_bitCountWithLong_(value);
    }
  }
  self->bitCount_ = bitCount;
}

ComGoogleCommonHashBloomFilterStrategies_BitArray *new_ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_(IOSLongArray *data) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashBloomFilterStrategies_BitArray, initWithLongArray_, data)
}

ComGoogleCommonHashBloomFilterStrategies_BitArray *create_ComGoogleCommonHashBloomFilterStrategies_BitArray_initWithLongArray_(IOSLongArray *data) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashBloomFilterStrategies_BitArray, initWithLongArray_, data)
}

IOSObjectArray *ComGoogleCommonHashBloomFilterStrategies_BitArray__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashBloomFilterStrategies_BitArray)
