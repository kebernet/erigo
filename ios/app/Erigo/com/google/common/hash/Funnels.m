//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/Funnels.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/Funnel.h"
#include "com/google/common/hash/Funnels.h"
#include "com/google/common/hash/PrimitiveSink.h"
#include "java/io/OutputStream.h"
#include "java/io/Serializable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/charset/Charset.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonHashFunnels ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonHashFunnels_init(ComGoogleCommonHashFunnels *self);

__attribute__((unused)) static ComGoogleCommonHashFunnels *new_ComGoogleCommonHashFunnels_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashFunnels *create_ComGoogleCommonHashFunnels_init();

typedef NS_ENUM(NSUInteger, ComGoogleCommonHashFunnels_ByteArrayFunnel_Enum) {
  ComGoogleCommonHashFunnels_ByteArrayFunnel_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonHashFunnels_ByteArrayFunnel : JavaLangEnum < NSCopying, ComGoogleCommonHashFunnel >

- (void)funnelWithId:(IOSByteArray *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonHashFunnels_ByteArrayFunnel *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashFunnels_ByteArrayFunnel)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_values_[];

inline ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonHashFunnels_ByteArrayFunnel, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_ByteArrayFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_ByteArrayFunnel *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashFunnels_ByteArrayFunnel *new_ComGoogleCommonHashFunnels_ByteArrayFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_ByteArrayFunnel_values();

__attribute__((unused)) static ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_ByteArrayFunnel)

typedef NS_ENUM(NSUInteger, ComGoogleCommonHashFunnels_UnencodedCharsFunnel_Enum) {
  ComGoogleCommonHashFunnels_UnencodedCharsFunnel_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonHashFunnels_UnencodedCharsFunnel : JavaLangEnum < NSCopying, ComGoogleCommonHashFunnel >

- (void)funnelWithId:(id<JavaLangCharSequence>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonHashFunnels_UnencodedCharsFunnel *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashFunnels_UnencodedCharsFunnel)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values_[];

inline ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonHashFunnels_UnencodedCharsFunnel, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_UnencodedCharsFunnel *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashFunnels_UnencodedCharsFunnel *new_ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values();

__attribute__((unused)) static ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_UnencodedCharsFunnel)

@interface ComGoogleCommonHashFunnels_StringCharsetFunnel : NSObject < ComGoogleCommonHashFunnel, JavaIoSerializable > {
 @public
  JavaNioCharsetCharset *charset_;
}

- (instancetype)initWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (void)funnelWithId:(id<JavaLangCharSequence>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (id)writeReplace;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashFunnels_StringCharsetFunnel)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashFunnels_StringCharsetFunnel, charset_, JavaNioCharsetCharset *)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(ComGoogleCommonHashFunnels_StringCharsetFunnel *self, JavaNioCharsetCharset *charset);

__attribute__((unused)) static ComGoogleCommonHashFunnels_StringCharsetFunnel *new_ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashFunnels_StringCharsetFunnel *create_ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_StringCharsetFunnel__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_StringCharsetFunnel)

@interface ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm : NSObject < JavaIoSerializable > {
 @public
  NSString *charsetCanonicalName_;
}

- (instancetype)initWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm, charsetCanonicalName_, NSString *)

inline jlong ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_get_serialVersionUID();
#define ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *self, JavaNioCharsetCharset *charset);

__attribute__((unused)) static ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *new_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *create_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm)

typedef NS_ENUM(NSUInteger, ComGoogleCommonHashFunnels_IntegerFunnel_Enum) {
  ComGoogleCommonHashFunnels_IntegerFunnel_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonHashFunnels_IntegerFunnel : JavaLangEnum < NSCopying, ComGoogleCommonHashFunnel >

- (void)funnelWithId:(JavaLangInteger *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonHashFunnels_IntegerFunnel *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashFunnels_IntegerFunnel)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_values_[];

inline ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonHashFunnels_IntegerFunnel, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_IntegerFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_IntegerFunnel *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashFunnels_IntegerFunnel *new_ComGoogleCommonHashFunnels_IntegerFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_IntegerFunnel_values();

__attribute__((unused)) static ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_IntegerFunnel)

@interface ComGoogleCommonHashFunnels_SequentialFunnel : NSObject < ComGoogleCommonHashFunnel, JavaIoSerializable > {
 @public
  id<ComGoogleCommonHashFunnel> elementFunnel_;
}

- (instancetype)initWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)elementFunnel;

- (void)funnelWithId:(id<JavaLangIterable>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashFunnels_SequentialFunnel)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashFunnels_SequentialFunnel, elementFunnel_, id<ComGoogleCommonHashFunnel>)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(ComGoogleCommonHashFunnels_SequentialFunnel *self, id<ComGoogleCommonHashFunnel> elementFunnel);

__attribute__((unused)) static ComGoogleCommonHashFunnels_SequentialFunnel *new_ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(id<ComGoogleCommonHashFunnel> elementFunnel) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashFunnels_SequentialFunnel *create_ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(id<ComGoogleCommonHashFunnel> elementFunnel);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_SequentialFunnel__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_SequentialFunnel)

typedef NS_ENUM(NSUInteger, ComGoogleCommonHashFunnels_LongFunnel_Enum) {
  ComGoogleCommonHashFunnels_LongFunnel_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonHashFunnels_LongFunnel : JavaLangEnum < NSCopying, ComGoogleCommonHashFunnel >

- (void)funnelWithId:(JavaLangLong *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonHashFunnels_LongFunnel *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashFunnels_LongFunnel)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_values_[];

inline ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonHashFunnels_LongFunnel, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_LongFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_LongFunnel *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashFunnels_LongFunnel *new_ComGoogleCommonHashFunnels_LongFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashFunnels_LongFunnel_values();

__attribute__((unused)) static ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_LongFunnel)

@interface ComGoogleCommonHashFunnels_SinkAsStream : JavaIoOutputStream {
 @public
  id<ComGoogleCommonHashPrimitiveSink> sink_;
}

- (instancetype)initWithComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)sink;

- (void)writeWithInt:(jint)b;

- (void)writeWithByteArray:(IOSByteArray *)bytes;

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashFunnels_SinkAsStream)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashFunnels_SinkAsStream, sink_, id<ComGoogleCommonHashPrimitiveSink>)

__attribute__((unused)) static void ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(ComGoogleCommonHashFunnels_SinkAsStream *self, id<ComGoogleCommonHashPrimitiveSink> sink);

__attribute__((unused)) static ComGoogleCommonHashFunnels_SinkAsStream *new_ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(id<ComGoogleCommonHashPrimitiveSink> sink) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashFunnels_SinkAsStream *create_ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(id<ComGoogleCommonHashPrimitiveSink> sink);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashFunnels_SinkAsStream)

@implementation ComGoogleCommonHashFunnels

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashFunnels_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<ComGoogleCommonHashFunnel>)byteArrayFunnel {
  return ComGoogleCommonHashFunnels_byteArrayFunnel();
}

+ (id<ComGoogleCommonHashFunnel>)unencodedCharsFunnel {
  return ComGoogleCommonHashFunnels_unencodedCharsFunnel();
}

+ (id<ComGoogleCommonHashFunnel>)stringFunnelWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonHashFunnels_stringFunnelWithJavaNioCharsetCharset_(charset);
}

+ (id<ComGoogleCommonHashFunnel>)integerFunnel {
  return ComGoogleCommonHashFunnels_integerFunnel();
}

+ (id<ComGoogleCommonHashFunnel>)sequentialFunnelWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)elementFunnel {
  return ComGoogleCommonHashFunnels_sequentialFunnelWithComGoogleCommonHashFunnel_(elementFunnel);
}

+ (id<ComGoogleCommonHashFunnel>)longFunnel {
  return ComGoogleCommonHashFunnels_longFunnel();
}

+ (JavaIoOutputStream *)asOutputStreamWithComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)sink {
  return ComGoogleCommonHashFunnels_asOutputStreamWithComGoogleCommonHashPrimitiveSink_(sink);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, -1, -1, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, -1, -1, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnel;", 0x9, -1, -1, -1, 9, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x9, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(byteArrayFunnel);
  methods[2].selector = @selector(unencodedCharsFunnel);
  methods[3].selector = @selector(stringFunnelWithJavaNioCharsetCharset:);
  methods[4].selector = @selector(integerFunnel);
  methods[5].selector = @selector(sequentialFunnelWithComGoogleCommonHashFunnel:);
  methods[6].selector = @selector(longFunnel);
  methods[7].selector = @selector(asOutputStreamWithComGoogleCommonHashPrimitiveSink:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lcom/google/common/hash/Funnel<[B>;", "()Lcom/google/common/hash/Funnel<Ljava/lang/CharSequence;>;", "stringFunnel", "LJavaNioCharsetCharset;", "(Ljava/nio/charset/Charset;)Lcom/google/common/hash/Funnel<Ljava/lang/CharSequence;>;", "()Lcom/google/common/hash/Funnel<Ljava/lang/Integer;>;", "sequentialFunnel", "LComGoogleCommonHashFunnel;", "<E:Ljava/lang/Object;>(Lcom/google/common/hash/Funnel<TE;>;)Lcom/google/common/hash/Funnel<Ljava/lang/Iterable<+TE;>;>;", "()Lcom/google/common/hash/Funnel<Ljava/lang/Long;>;", "asOutputStream", "LComGoogleCommonHashPrimitiveSink;", "LComGoogleCommonHashFunnels_ByteArrayFunnel;LComGoogleCommonHashFunnels_UnencodedCharsFunnel;LComGoogleCommonHashFunnels_StringCharsetFunnel;LComGoogleCommonHashFunnels_IntegerFunnel;LComGoogleCommonHashFunnels_SequentialFunnel;LComGoogleCommonHashFunnels_LongFunnel;LComGoogleCommonHashFunnels_SinkAsStream;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels = { "Funnels", "com.google.common.hash", ptrTable, methods, NULL, 7, 0x11, 8, 0, -1, 12, -1, -1, -1 };
  return &_ComGoogleCommonHashFunnels;
}

@end

void ComGoogleCommonHashFunnels_init(ComGoogleCommonHashFunnels *self) {
  NSObject_init(self);
}

ComGoogleCommonHashFunnels *new_ComGoogleCommonHashFunnels_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels, init)
}

ComGoogleCommonHashFunnels *create_ComGoogleCommonHashFunnels_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashFunnels, init)
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_byteArrayFunnel() {
  ComGoogleCommonHashFunnels_initialize();
  return JreLoadEnum(ComGoogleCommonHashFunnels_ByteArrayFunnel, INSTANCE);
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_unencodedCharsFunnel() {
  ComGoogleCommonHashFunnels_initialize();
  return JreLoadEnum(ComGoogleCommonHashFunnels_UnencodedCharsFunnel, INSTANCE);
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_stringFunnelWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  ComGoogleCommonHashFunnels_initialize();
  return new_ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(charset);
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_integerFunnel() {
  ComGoogleCommonHashFunnels_initialize();
  return JreLoadEnum(ComGoogleCommonHashFunnels_IntegerFunnel, INSTANCE);
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_sequentialFunnelWithComGoogleCommonHashFunnel_(id<ComGoogleCommonHashFunnel> elementFunnel) {
  ComGoogleCommonHashFunnels_initialize();
  return new_ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(elementFunnel);
}

id<ComGoogleCommonHashFunnel> ComGoogleCommonHashFunnels_longFunnel() {
  ComGoogleCommonHashFunnels_initialize();
  return JreLoadEnum(ComGoogleCommonHashFunnels_LongFunnel, INSTANCE);
}

JavaIoOutputStream *ComGoogleCommonHashFunnels_asOutputStreamWithComGoogleCommonHashPrimitiveSink_(id<ComGoogleCommonHashPrimitiveSink> sink) {
  ComGoogleCommonHashFunnels_initialize();
  return new_ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(sink);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashFunnels_ByteArrayFunnel)

ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_values_[1];

@implementation ComGoogleCommonHashFunnels_ByteArrayFunnel

- (void)funnelWithId:(IOSByteArray *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(into)) putBytesWithByteArray:from];
}

- (NSString *)description {
  return @"Funnels.byteArrayFunnel()";
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashFunnels_ByteArrayFunnel_values();
}

+ (ComGoogleCommonHashFunnels_ByteArrayFunnel *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashFunnels_ByteArrayFunnel_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonHashFunnels_ByteArrayFunnel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnels_ByteArrayFunnel;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonHashFunnels_ByteArrayFunnel;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "funnel", "[BLComGoogleCommonHashPrimitiveSink;", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashFunnels_ByteArrayFunnel, INSTANCE), "LComGoogleCommonHashFunnels;", "Ljava/lang/Enum<Lcom/google/common/hash/Funnels$ByteArrayFunnel;>;Lcom/google/common/hash/Funnel<[B>;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_ByteArrayFunnel = { "ByteArrayFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonHashFunnels_ByteArrayFunnel;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashFunnels_ByteArrayFunnel class]) {
    JreEnum(ComGoogleCommonHashFunnels_ByteArrayFunnel, INSTANCE) = new_ComGoogleCommonHashFunnels_ByteArrayFunnel_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashFunnels_ByteArrayFunnel)
  }
}

@end

void ComGoogleCommonHashFunnels_ByteArrayFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_ByteArrayFunnel *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashFunnels_ByteArrayFunnel *new_ComGoogleCommonHashFunnels_ByteArrayFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_ByteArrayFunnel, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashFunnels_ByteArrayFunnel_values() {
  ComGoogleCommonHashFunnels_ByteArrayFunnel_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashFunnels_ByteArrayFunnel_values_ count:1 type:ComGoogleCommonHashFunnels_ByteArrayFunnel_class_()];
}

ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashFunnels_ByteArrayFunnel_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonHashFunnels_ByteArrayFunnel *e = ComGoogleCommonHashFunnels_ByteArrayFunnel_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashFunnels_ByteArrayFunnel *ComGoogleCommonHashFunnels_ByteArrayFunnel_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashFunnels_ByteArrayFunnel_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonHashFunnels_ByteArrayFunnel_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_ByteArrayFunnel)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashFunnels_UnencodedCharsFunnel)

ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values_[1];

@implementation ComGoogleCommonHashFunnels_UnencodedCharsFunnel

- (void)funnelWithId:(id<JavaLangCharSequence>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(into)) putUnencodedCharsWithJavaLangCharSequence:from];
}

- (NSString *)description {
  return @"Funnels.unencodedCharsFunnel()";
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values();
}

+ (ComGoogleCommonHashFunnels_UnencodedCharsFunnel *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashFunnels_UnencodedCharsFunnel_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonHashFunnels_UnencodedCharsFunnel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnels_UnencodedCharsFunnel;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonHashFunnels_UnencodedCharsFunnel;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "funnel", "LJavaLangCharSequence;LComGoogleCommonHashPrimitiveSink;", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashFunnels_UnencodedCharsFunnel, INSTANCE), "LComGoogleCommonHashFunnels;", "Ljava/lang/Enum<Lcom/google/common/hash/Funnels$UnencodedCharsFunnel;>;Lcom/google/common/hash/Funnel<Ljava/lang/CharSequence;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_UnencodedCharsFunnel = { "UnencodedCharsFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonHashFunnels_UnencodedCharsFunnel;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashFunnels_UnencodedCharsFunnel class]) {
    JreEnum(ComGoogleCommonHashFunnels_UnencodedCharsFunnel, INSTANCE) = new_ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashFunnels_UnencodedCharsFunnel)
  }
}

@end

void ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_UnencodedCharsFunnel *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashFunnels_UnencodedCharsFunnel *new_ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_UnencodedCharsFunnel, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values() {
  ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values_ count:1 type:ComGoogleCommonHashFunnels_UnencodedCharsFunnel_class_()];
}

ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonHashFunnels_UnencodedCharsFunnel *e = ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashFunnels_UnencodedCharsFunnel *ComGoogleCommonHashFunnels_UnencodedCharsFunnel_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashFunnels_UnencodedCharsFunnel_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonHashFunnels_UnencodedCharsFunnel_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_UnencodedCharsFunnel)

@implementation ComGoogleCommonHashFunnels_StringCharsetFunnel

- (instancetype)initWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(self, charset);
  return self;
}

- (void)funnelWithId:(id<JavaLangCharSequence>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(into)) putStringWithJavaLangCharSequence:from withJavaNioCharsetCharset:charset_];
}

- (NSString *)description {
  return JreStrcat("$$C", @"Funnels.stringFunnel(", [((JavaNioCharsetCharset *) nil_chk(charset_)) name], ')');
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[ComGoogleCommonHashFunnels_StringCharsetFunnel class]]) {
    ComGoogleCommonHashFunnels_StringCharsetFunnel *funnel = (ComGoogleCommonHashFunnels_StringCharsetFunnel *) cast_chk(o, [ComGoogleCommonHashFunnels_StringCharsetFunnel class]);
    return [((JavaNioCharsetCharset *) nil_chk(self->charset_)) isEqual:((ComGoogleCommonHashFunnels_StringCharsetFunnel *) nil_chk(funnel))->charset_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [ComGoogleCommonHashFunnels_StringCharsetFunnel_class_() hash]) ^ ((jint) [((JavaNioCharsetCharset *) nil_chk(charset_)) hash]);
}

- (id)writeReplace {
  return new_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(charset_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, 6 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaNioCharsetCharset:);
  methods[1].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "charset_", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioCharsetCharset;", "funnel", "LJavaLangCharSequence;LComGoogleCommonHashPrimitiveSink;", "toString", "equals", "LNSObject;", (void *)&ComGoogleCommonHashFunnels_StringCharsetFunnel__Annotations$0, "hashCode", "LComGoogleCommonHashFunnels;", "LComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm;", "Ljava/lang/Object;Lcom/google/common/hash/Funnel<Ljava/lang/CharSequence;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_StringCharsetFunnel = { "StringCharsetFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 6, 1, 8, 9, -1, 10, -1 };
  return &_ComGoogleCommonHashFunnels_StringCharsetFunnel;
}

@end

void ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(ComGoogleCommonHashFunnels_StringCharsetFunnel *self, JavaNioCharsetCharset *charset) {
  NSObject_init(self);
  self->charset_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
}

ComGoogleCommonHashFunnels_StringCharsetFunnel *new_ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_StringCharsetFunnel, initWithJavaNioCharsetCharset_, charset)
}

ComGoogleCommonHashFunnels_StringCharsetFunnel *create_ComGoogleCommonHashFunnels_StringCharsetFunnel_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashFunnels_StringCharsetFunnel, initWithJavaNioCharsetCharset_, charset)
}

IOSObjectArray *ComGoogleCommonHashFunnels_StringCharsetFunnel__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_StringCharsetFunnel)

@implementation ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm

- (instancetype)initWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(self, charset);
  return self;
}

- (id)readResolve {
  return ComGoogleCommonHashFunnels_stringFunnelWithJavaNioCharsetCharset_(JavaNioCharsetCharset_forNameWithNSString_(charsetCanonicalName_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaNioCharsetCharset:);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "charsetCanonicalName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioCharsetCharset;", "LComGoogleCommonHashFunnels_StringCharsetFunnel;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm = { "SerializedForm", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 2, 2, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm;
}

@end

void ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *self, JavaNioCharsetCharset *charset) {
  NSObject_init(self);
  self->charsetCanonicalName_ = [((JavaNioCharsetCharset *) nil_chk(charset)) name];
}

ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *new_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm, initWithJavaNioCharsetCharset_, charset)
}

ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm *create_ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm_initWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm, initWithJavaNioCharsetCharset_, charset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_StringCharsetFunnel_SerializedForm)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashFunnels_IntegerFunnel)

ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_values_[1];

@implementation ComGoogleCommonHashFunnels_IntegerFunnel

- (void)funnelWithId:(JavaLangInteger *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(into)) putIntWithInt:[((JavaLangInteger *) nil_chk(from)) intValue]];
}

- (NSString *)description {
  return @"Funnels.integerFunnel()";
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashFunnels_IntegerFunnel_values();
}

+ (ComGoogleCommonHashFunnels_IntegerFunnel *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashFunnels_IntegerFunnel_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonHashFunnels_IntegerFunnel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnels_IntegerFunnel;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonHashFunnels_IntegerFunnel;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "funnel", "LJavaLangInteger;LComGoogleCommonHashPrimitiveSink;", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashFunnels_IntegerFunnel, INSTANCE), "LComGoogleCommonHashFunnels;", "Ljava/lang/Enum<Lcom/google/common/hash/Funnels$IntegerFunnel;>;Lcom/google/common/hash/Funnel<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_IntegerFunnel = { "IntegerFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonHashFunnels_IntegerFunnel;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashFunnels_IntegerFunnel class]) {
    JreEnum(ComGoogleCommonHashFunnels_IntegerFunnel, INSTANCE) = new_ComGoogleCommonHashFunnels_IntegerFunnel_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashFunnels_IntegerFunnel)
  }
}

@end

void ComGoogleCommonHashFunnels_IntegerFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_IntegerFunnel *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashFunnels_IntegerFunnel *new_ComGoogleCommonHashFunnels_IntegerFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_IntegerFunnel, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashFunnels_IntegerFunnel_values() {
  ComGoogleCommonHashFunnels_IntegerFunnel_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashFunnels_IntegerFunnel_values_ count:1 type:ComGoogleCommonHashFunnels_IntegerFunnel_class_()];
}

ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashFunnels_IntegerFunnel_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonHashFunnels_IntegerFunnel *e = ComGoogleCommonHashFunnels_IntegerFunnel_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashFunnels_IntegerFunnel *ComGoogleCommonHashFunnels_IntegerFunnel_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashFunnels_IntegerFunnel_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonHashFunnels_IntegerFunnel_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_IntegerFunnel)

@implementation ComGoogleCommonHashFunnels_SequentialFunnel

- (instancetype)initWithComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)elementFunnel {
  ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(self, elementFunnel);
  return self;
}

- (void)funnelWithId:(id<JavaLangIterable>)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  for (id __strong e in nil_chk(from)) {
    [((id<ComGoogleCommonHashFunnel>) nil_chk(elementFunnel_)) funnelWithId:e withComGoogleCommonHashPrimitiveSink:into];
  }
}

- (NSString *)description {
  return JreStrcat("$@C", @"Funnels.sequentialFunnel(", elementFunnel_, ')');
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[ComGoogleCommonHashFunnels_SequentialFunnel class]]) {
    ComGoogleCommonHashFunnels_SequentialFunnel *funnel = (ComGoogleCommonHashFunnels_SequentialFunnel *) cast_chk(o, [ComGoogleCommonHashFunnels_SequentialFunnel class]);
    return [((id<ComGoogleCommonHashFunnel>) nil_chk(elementFunnel_)) isEqual:((ComGoogleCommonHashFunnels_SequentialFunnel *) nil_chk(funnel))->elementFunnel_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [ComGoogleCommonHashFunnels_SequentialFunnel_class_() hash]) ^ ((jint) [((id<ComGoogleCommonHashFunnel>) nil_chk(elementFunnel_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, 8 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashFunnel:);
  methods[1].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elementFunnel_", "LComGoogleCommonHashFunnel;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonHashFunnel;", "(Lcom/google/common/hash/Funnel<TE;>;)V", "funnel", "LJavaLangIterable;LComGoogleCommonHashPrimitiveSink;", "(Ljava/lang/Iterable<+TE;>;Lcom/google/common/hash/PrimitiveSink;)V", "toString", "equals", "LNSObject;", (void *)&ComGoogleCommonHashFunnels_SequentialFunnel__Annotations$0, "hashCode", "Lcom/google/common/hash/Funnel<TE;>;", "LComGoogleCommonHashFunnels;", "<E:Ljava/lang/Object;>Ljava/lang/Object;Lcom/google/common/hash/Funnel<Ljava/lang/Iterable<+TE;>;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_SequentialFunnel = { "SequentialFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 5, 1, 11, -1, -1, 12, -1 };
  return &_ComGoogleCommonHashFunnels_SequentialFunnel;
}

@end

void ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(ComGoogleCommonHashFunnels_SequentialFunnel *self, id<ComGoogleCommonHashFunnel> elementFunnel) {
  NSObject_init(self);
  self->elementFunnel_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(elementFunnel);
}

ComGoogleCommonHashFunnels_SequentialFunnel *new_ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(id<ComGoogleCommonHashFunnel> elementFunnel) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_SequentialFunnel, initWithComGoogleCommonHashFunnel_, elementFunnel)
}

ComGoogleCommonHashFunnels_SequentialFunnel *create_ComGoogleCommonHashFunnels_SequentialFunnel_initWithComGoogleCommonHashFunnel_(id<ComGoogleCommonHashFunnel> elementFunnel) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashFunnels_SequentialFunnel, initWithComGoogleCommonHashFunnel_, elementFunnel)
}

IOSObjectArray *ComGoogleCommonHashFunnels_SequentialFunnel__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_SequentialFunnel)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashFunnels_LongFunnel)

ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_values_[1];

@implementation ComGoogleCommonHashFunnels_LongFunnel

- (void)funnelWithId:(JavaLangLong *)from
withComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)into {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(into)) putLongWithLong:[((JavaLangLong *) nil_chk(from)) longLongValue]];
}

- (NSString *)description {
  return @"Funnels.longFunnel()";
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashFunnels_LongFunnel_values();
}

+ (ComGoogleCommonHashFunnels_LongFunnel *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashFunnels_LongFunnel_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonHashFunnels_LongFunnel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashFunnels_LongFunnel;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(funnelWithId:withComGoogleCommonHashPrimitiveSink:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonHashFunnels_LongFunnel;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "funnel", "LJavaLangLong;LComGoogleCommonHashPrimitiveSink;", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashFunnels_LongFunnel, INSTANCE), "LComGoogleCommonHashFunnels;", "Ljava/lang/Enum<Lcom/google/common/hash/Funnels$LongFunnel;>;Lcom/google/common/hash/Funnel<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_LongFunnel = { "LongFunnel", "com.google.common.hash", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonHashFunnels_LongFunnel;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashFunnels_LongFunnel class]) {
    JreEnum(ComGoogleCommonHashFunnels_LongFunnel, INSTANCE) = new_ComGoogleCommonHashFunnels_LongFunnel_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashFunnels_LongFunnel)
  }
}

@end

void ComGoogleCommonHashFunnels_LongFunnel_initWithNSString_withInt_(ComGoogleCommonHashFunnels_LongFunnel *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonHashFunnels_LongFunnel *new_ComGoogleCommonHashFunnels_LongFunnel_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_LongFunnel, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashFunnels_LongFunnel_values() {
  ComGoogleCommonHashFunnels_LongFunnel_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashFunnels_LongFunnel_values_ count:1 type:ComGoogleCommonHashFunnels_LongFunnel_class_()];
}

ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashFunnels_LongFunnel_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonHashFunnels_LongFunnel *e = ComGoogleCommonHashFunnels_LongFunnel_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashFunnels_LongFunnel *ComGoogleCommonHashFunnels_LongFunnel_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashFunnels_LongFunnel_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonHashFunnels_LongFunnel_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_LongFunnel)

@implementation ComGoogleCommonHashFunnels_SinkAsStream

- (instancetype)initWithComGoogleCommonHashPrimitiveSink:(id<ComGoogleCommonHashPrimitiveSink>)sink {
  ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(self, sink);
  return self;
}

- (void)writeWithInt:(jint)b {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(sink_)) putByteWithByte:(jbyte) b];
}

- (void)writeWithByteArray:(IOSByteArray *)bytes {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(sink_)) putBytesWithByteArray:bytes];
}

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len {
  (void) [((id<ComGoogleCommonHashPrimitiveSink>) nil_chk(sink_)) putBytesWithByteArray:bytes withInt:off withInt:len];
}

- (NSString *)description {
  return JreStrcat("$@C", @"Funnels.asOutputStream(", sink_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashPrimitiveSink:);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(writeWithByteArray:);
  methods[3].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sink_", "LComGoogleCommonHashPrimitiveSink;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonHashPrimitiveSink;", "write", "I", "[B", "[BII", "toString", "LComGoogleCommonHashFunnels;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashFunnels_SinkAsStream = { "SinkAsStream", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 5, 1, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashFunnels_SinkAsStream;
}

@end

void ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(ComGoogleCommonHashFunnels_SinkAsStream *self, id<ComGoogleCommonHashPrimitiveSink> sink) {
  JavaIoOutputStream_init(self);
  self->sink_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(sink);
}

ComGoogleCommonHashFunnels_SinkAsStream *new_ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(id<ComGoogleCommonHashPrimitiveSink> sink) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashFunnels_SinkAsStream, initWithComGoogleCommonHashPrimitiveSink_, sink)
}

ComGoogleCommonHashFunnels_SinkAsStream *create_ComGoogleCommonHashFunnels_SinkAsStream_initWithComGoogleCommonHashPrimitiveSink_(id<ComGoogleCommonHashPrimitiveSink> sink) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashFunnels_SinkAsStream, initWithComGoogleCommonHashPrimitiveSink_, sink)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashFunnels_SinkAsStream)
