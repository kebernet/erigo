//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/Hashing.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/AbstractCompositeHashFunction.h"
#include "com/google/common/hash/ChecksumHashFunction.h"
#include "com/google/common/hash/Crc32cHashFunction.h"
#include "com/google/common/hash/FarmHashFingerprint64.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/hash/Hasher.h"
#include "com/google/common/hash/Hashing.h"
#include "com/google/common/hash/MacHashFunction.h"
#include "com/google/common/hash/MessageDigestHashFunction.h"
#include "com/google/common/hash/Murmur3_128HashFunction.h"
#include "com/google/common/hash/Murmur3_32HashFunction.h"
#include "com/google/common/hash/SipHashFunction.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/security/Key.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/zip/Adler32.h"
#include "java/util/zip/CRC32.h"
#include "java/util/zip/Checksum.h"
#include "javax/annotation/Nullable.h"
#include "javax/crypto/spec/SecretKeySpec.h"

@interface ComGoogleCommonHashHashing ()

+ (NSString *)hmacToStringWithNSString:(NSString *)methodName
                   withJavaSecurityKey:(id<JavaSecurityKey>)key;

+ (id<ComGoogleCommonHashHashFunction>)checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType:(ComGoogleCommonHashHashing_ChecksumType *)type
                                                                                          withNSString:(NSString *)toString;

- (instancetype)init;

@end

inline jint ComGoogleCommonHashHashing_get_GOOD_FAST_HASH_SEED();
static jint ComGoogleCommonHashHashing_GOOD_FAST_HASH_SEED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonHashHashing, GOOD_FAST_HASH_SEED, jint)

__attribute__((unused)) static NSString *ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(NSString *methodName, id<JavaSecurityKey> key);

__attribute__((unused)) static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType_withNSString_(ComGoogleCommonHashHashing_ChecksumType *type, NSString *toString);

__attribute__((unused)) static void ComGoogleCommonHashHashing_init(ComGoogleCommonHashHashing *self);

__attribute__((unused)) static ComGoogleCommonHashHashing *new_ComGoogleCommonHashHashing_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing *create_ComGoogleCommonHashHashing_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashHashing__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashHashing__Annotations$1();

@interface ComGoogleCommonHashHashing_Murmur3_32Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Murmur3_32Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_32Holder_get_MURMUR3_32();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_32Holder_MURMUR3_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Murmur3_32Holder, MURMUR3_32, id<ComGoogleCommonHashHashFunction>)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_32Holder_get_GOOD_FAST_HASH_FUNCTION_32();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_32Holder_GOOD_FAST_HASH_FUNCTION_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Murmur3_32Holder, GOOD_FAST_HASH_FUNCTION_32, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Murmur3_32Holder_init(ComGoogleCommonHashHashing_Murmur3_32Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Murmur3_32Holder *new_ComGoogleCommonHashHashing_Murmur3_32Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Murmur3_32Holder *create_ComGoogleCommonHashHashing_Murmur3_32Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Murmur3_32Holder)

@interface ComGoogleCommonHashHashing_Murmur3_128Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Murmur3_128Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_128Holder_get_MURMUR3_128();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_128Holder_MURMUR3_128;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Murmur3_128Holder, MURMUR3_128, id<ComGoogleCommonHashHashFunction>)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_128Holder_get_GOOD_FAST_HASH_FUNCTION_128();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Murmur3_128Holder_GOOD_FAST_HASH_FUNCTION_128;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Murmur3_128Holder, GOOD_FAST_HASH_FUNCTION_128, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Murmur3_128Holder_init(ComGoogleCommonHashHashing_Murmur3_128Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Murmur3_128Holder *new_ComGoogleCommonHashHashing_Murmur3_128Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Murmur3_128Holder *create_ComGoogleCommonHashHashing_Murmur3_128Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Murmur3_128Holder)

@interface ComGoogleCommonHashHashing_SipHash24Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_SipHash24Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_SipHash24Holder_get_SIP_HASH_24();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_SipHash24Holder_SIP_HASH_24;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_SipHash24Holder, SIP_HASH_24, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_SipHash24Holder_init(ComGoogleCommonHashHashing_SipHash24Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_SipHash24Holder *new_ComGoogleCommonHashHashing_SipHash24Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_SipHash24Holder *create_ComGoogleCommonHashHashing_SipHash24Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_SipHash24Holder)

@interface ComGoogleCommonHashHashing_Md5Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Md5Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Md5Holder_get_MD5();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Md5Holder_MD5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Md5Holder, MD5, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Md5Holder_init(ComGoogleCommonHashHashing_Md5Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Md5Holder *new_ComGoogleCommonHashHashing_Md5Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Md5Holder *create_ComGoogleCommonHashHashing_Md5Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Md5Holder)

@interface ComGoogleCommonHashHashing_Sha1Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Sha1Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha1Holder_get_SHA_1();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha1Holder_SHA_1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Sha1Holder, SHA_1, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Sha1Holder_init(ComGoogleCommonHashHashing_Sha1Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha1Holder *new_ComGoogleCommonHashHashing_Sha1Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha1Holder *create_ComGoogleCommonHashHashing_Sha1Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Sha1Holder)

@interface ComGoogleCommonHashHashing_Sha256Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Sha256Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha256Holder_get_SHA_256();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha256Holder_SHA_256;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Sha256Holder, SHA_256, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Sha256Holder_init(ComGoogleCommonHashHashing_Sha256Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha256Holder *new_ComGoogleCommonHashHashing_Sha256Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha256Holder *create_ComGoogleCommonHashHashing_Sha256Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Sha256Holder)

@interface ComGoogleCommonHashHashing_Sha384Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Sha384Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha384Holder_get_SHA_384();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha384Holder_SHA_384;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Sha384Holder, SHA_384, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Sha384Holder_init(ComGoogleCommonHashHashing_Sha384Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha384Holder *new_ComGoogleCommonHashHashing_Sha384Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha384Holder *create_ComGoogleCommonHashHashing_Sha384Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Sha384Holder)

@interface ComGoogleCommonHashHashing_Sha512Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Sha512Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha512Holder_get_SHA_512();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Sha512Holder_SHA_512;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Sha512Holder, SHA_512, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Sha512Holder_init(ComGoogleCommonHashHashing_Sha512Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha512Holder *new_ComGoogleCommonHashHashing_Sha512Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Sha512Holder *create_ComGoogleCommonHashHashing_Sha512Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Sha512Holder)

@interface ComGoogleCommonHashHashing_Crc32cHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Crc32cHolder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Crc32cHolder_get_CRC_32_C();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Crc32cHolder_CRC_32_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Crc32cHolder, CRC_32_C, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Crc32cHolder_init(ComGoogleCommonHashHashing_Crc32cHolder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Crc32cHolder *new_ComGoogleCommonHashHashing_Crc32cHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Crc32cHolder *create_ComGoogleCommonHashHashing_Crc32cHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Crc32cHolder)

@interface ComGoogleCommonHashHashing_Crc32Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Crc32Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Crc32Holder_get_CRC_32();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Crc32Holder_CRC_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Crc32Holder, CRC_32, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Crc32Holder_init(ComGoogleCommonHashHashing_Crc32Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Crc32Holder *new_ComGoogleCommonHashHashing_Crc32Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Crc32Holder *create_ComGoogleCommonHashHashing_Crc32Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Crc32Holder)

@interface ComGoogleCommonHashHashing_Adler32Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_Adler32Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Adler32Holder_get_ADLER_32();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_Adler32Holder_ADLER_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_Adler32Holder, ADLER_32, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_Adler32Holder_init(ComGoogleCommonHashHashing_Adler32Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_Adler32Holder *new_ComGoogleCommonHashHashing_Adler32Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_Adler32Holder *create_ComGoogleCommonHashHashing_Adler32Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_Adler32Holder)

@interface ComGoogleCommonHashHashing_ChecksumType () {
 @public
  jint bits_;
}

@end

__attribute__((unused)) static void ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType *self, jint bits, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashHashing_ChecksumType *new_ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonHashHashing_ChecksumType_1 : ComGoogleCommonHashHashing_ChecksumType < NSCopying >

- (id<JavaUtilZipChecksum>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashHashing_ChecksumType_1)

__attribute__((unused)) static void ComGoogleCommonHashHashing_ChecksumType_1_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType_1 *self, jint bits, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashHashing_ChecksumType_1 *new_ComGoogleCommonHashHashing_ChecksumType_1_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonHashHashing_ChecksumType_2 : ComGoogleCommonHashHashing_ChecksumType < NSCopying >

- (id<JavaUtilZipChecksum>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashHashing_ChecksumType_2)

__attribute__((unused)) static void ComGoogleCommonHashHashing_ChecksumType_2_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType_2 *self, jint bits, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonHashHashing_ChecksumType_2 *new_ComGoogleCommonHashHashing_ChecksumType_2_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonHashHashing_FarmHashFingerprint64Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_get_FARMHASH_FINGERPRINT_64();
static id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_FARMHASH_FINGERPRINT_64;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder, FARMHASH_FINGERPRINT_64, id<ComGoogleCommonHashHashFunction>)

__attribute__((unused)) static void ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *self);

__attribute__((unused)) static ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *new_ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *create_ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder)

@interface ComGoogleCommonHashHashing_ConcatenatedHashFunction : ComGoogleCommonHashAbstractCompositeHashFunction {
 @public
  jint bits_;
}

- (instancetype)initWithComGoogleCommonHashHashFunctionArray:(IOSObjectArray *)functions;

- (ComGoogleCommonHashHashCode *)makeHashWithComGoogleCommonHashHasherArray:(IOSObjectArray *)hashers;

- (jint)bits;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashHashing_ConcatenatedHashFunction)

__attribute__((unused)) static void ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(ComGoogleCommonHashHashing_ConcatenatedHashFunction *self, IOSObjectArray *functions);

__attribute__((unused)) static ComGoogleCommonHashHashing_ConcatenatedHashFunction *new_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(IOSObjectArray *functions) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_ConcatenatedHashFunction *create_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(IOSObjectArray *functions);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonHashHashing_ConcatenatedHashFunction__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_ConcatenatedHashFunction)

@interface ComGoogleCommonHashHashing_LinearCongruentialGenerator : NSObject {
 @public
  jlong state_;
}

- (instancetype)initWithLong:(jlong)seed;

- (jdouble)nextDouble;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashHashing_LinearCongruentialGenerator)

__attribute__((unused)) static void ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(ComGoogleCommonHashHashing_LinearCongruentialGenerator *self, jlong seed);

__attribute__((unused)) static ComGoogleCommonHashHashing_LinearCongruentialGenerator *new_ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(jlong seed) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashHashing_LinearCongruentialGenerator *create_ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(jlong seed);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashing_LinearCongruentialGenerator)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing)

@implementation ComGoogleCommonHashHashing

+ (id<ComGoogleCommonHashHashFunction>)goodFastHashWithInt:(jint)minimumBits {
  return ComGoogleCommonHashHashing_goodFastHashWithInt_(minimumBits);
}

+ (id<ComGoogleCommonHashHashFunction>)murmur3_32WithInt:(jint)seed {
  return ComGoogleCommonHashHashing_murmur3_32WithInt_(seed);
}

+ (id<ComGoogleCommonHashHashFunction>)murmur3_32 {
  return ComGoogleCommonHashHashing_murmur3_32();
}

+ (id<ComGoogleCommonHashHashFunction>)murmur3_128WithInt:(jint)seed {
  return ComGoogleCommonHashHashing_murmur3_128WithInt_(seed);
}

+ (id<ComGoogleCommonHashHashFunction>)murmur3_128 {
  return ComGoogleCommonHashHashing_murmur3_128();
}

+ (id<ComGoogleCommonHashHashFunction>)sipHash24 {
  return ComGoogleCommonHashHashing_sipHash24();
}

+ (id<ComGoogleCommonHashHashFunction>)sipHash24WithLong:(jlong)k0
                                                withLong:(jlong)k1 {
  return ComGoogleCommonHashHashing_sipHash24WithLong_withLong_(k0, k1);
}

+ (id<ComGoogleCommonHashHashFunction>)md5 {
  return ComGoogleCommonHashHashing_md5();
}

+ (id<ComGoogleCommonHashHashFunction>)sha1 {
  return ComGoogleCommonHashHashing_sha1();
}

+ (id<ComGoogleCommonHashHashFunction>)sha256 {
  return ComGoogleCommonHashHashing_sha256();
}

+ (id<ComGoogleCommonHashHashFunction>)sha384 {
  return ComGoogleCommonHashHashing_sha384();
}

+ (id<ComGoogleCommonHashHashFunction>)sha512 {
  return ComGoogleCommonHashHashing_sha512();
}

+ (id<ComGoogleCommonHashHashFunction>)hmacMd5WithJavaSecurityKey:(id<JavaSecurityKey>)key {
  return ComGoogleCommonHashHashing_hmacMd5WithJavaSecurityKey_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacMd5WithByteArray:(IOSByteArray *)key {
  return ComGoogleCommonHashHashing_hmacMd5WithByteArray_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha1WithJavaSecurityKey:(id<JavaSecurityKey>)key {
  return ComGoogleCommonHashHashing_hmacSha1WithJavaSecurityKey_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha1WithByteArray:(IOSByteArray *)key {
  return ComGoogleCommonHashHashing_hmacSha1WithByteArray_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha256WithJavaSecurityKey:(id<JavaSecurityKey>)key {
  return ComGoogleCommonHashHashing_hmacSha256WithJavaSecurityKey_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha256WithByteArray:(IOSByteArray *)key {
  return ComGoogleCommonHashHashing_hmacSha256WithByteArray_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha512WithJavaSecurityKey:(id<JavaSecurityKey>)key {
  return ComGoogleCommonHashHashing_hmacSha512WithJavaSecurityKey_(key);
}

+ (id<ComGoogleCommonHashHashFunction>)hmacSha512WithByteArray:(IOSByteArray *)key {
  return ComGoogleCommonHashHashing_hmacSha512WithByteArray_(key);
}

+ (NSString *)hmacToStringWithNSString:(NSString *)methodName
                   withJavaSecurityKey:(id<JavaSecurityKey>)key {
  return ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(methodName, key);
}

+ (id<ComGoogleCommonHashHashFunction>)crc32c {
  return ComGoogleCommonHashHashing_crc32c();
}

+ (id<ComGoogleCommonHashHashFunction>)crc32 {
  return ComGoogleCommonHashHashing_crc32();
}

+ (id<ComGoogleCommonHashHashFunction>)adler32 {
  return ComGoogleCommonHashHashing_adler32();
}

+ (id<ComGoogleCommonHashHashFunction>)checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType:(ComGoogleCommonHashHashing_ChecksumType *)type
                                                                                          withNSString:(NSString *)toString {
  return ComGoogleCommonHashHashing_checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType_withNSString_(type, toString);
}

+ (id<ComGoogleCommonHashHashFunction>)farmHashFingerprint64 {
  return ComGoogleCommonHashHashing_farmHashFingerprint64();
}

+ (jint)consistentHashWithComGoogleCommonHashHashCode:(ComGoogleCommonHashHashCode *)hashCode
                                              withInt:(jint)buckets {
  return ComGoogleCommonHashHashing_consistentHashWithComGoogleCommonHashHashCode_withInt_(hashCode, buckets);
}

+ (jint)consistentHashWithLong:(jlong)input
                       withInt:(jint)buckets {
  return ComGoogleCommonHashHashing_consistentHashWithLong_withInt_(input, buckets);
}

+ (ComGoogleCommonHashHashCode *)combineOrderedWithJavaLangIterable:(id<JavaLangIterable>)hashCodes {
  return ComGoogleCommonHashHashing_combineOrderedWithJavaLangIterable_(hashCodes);
}

+ (ComGoogleCommonHashHashCode *)combineUnorderedWithJavaLangIterable:(id<JavaLangIterable>)hashCodes {
  return ComGoogleCommonHashHashing_combineUnorderedWithJavaLangIterable_(hashCodes);
}

+ (jint)checkPositiveAndMakeMultipleOf32WithInt:(jint)bits {
  return ComGoogleCommonHashHashing_checkPositiveAndMakeMultipleOf32WithInt_(bits);
}

+ (id<ComGoogleCommonHashHashFunction>)concatenatingWithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)first
                                                    withComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)second
                                               withComGoogleCommonHashHashFunctionArray:(IOSObjectArray *)rest {
  return ComGoogleCommonHashHashing_concatenatingWithComGoogleCommonHashHashFunction_withComGoogleCommonHashHashFunction_withComGoogleCommonHashHashFunctionArray_(first, second, rest);
}

+ (id<ComGoogleCommonHashHashFunction>)concatenatingWithJavaLangIterable:(id<JavaLangIterable>)hashFunctions {
  return ComGoogleCommonHashHashing_concatenatingWithJavaLangIterable_(hashFunctions);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, 6, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, 7, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 11, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 11, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 12, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 12, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 13, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 13, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 14, 15, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0xa, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 18, 20, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x9, 21, 22, -1, 23, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x9, 24, 22, -1, 23, -1, -1 },
    { NULL, "I", 0x8, 25, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x89, 26, 27, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashFunction;", 0x9, 26, 22, -1, 28, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(goodFastHashWithInt:);
  methods[1].selector = @selector(murmur3_32WithInt:);
  methods[2].selector = @selector(murmur3_32);
  methods[3].selector = @selector(murmur3_128WithInt:);
  methods[4].selector = @selector(murmur3_128);
  methods[5].selector = @selector(sipHash24);
  methods[6].selector = @selector(sipHash24WithLong:withLong:);
  methods[7].selector = @selector(md5);
  methods[8].selector = @selector(sha1);
  methods[9].selector = @selector(sha256);
  methods[10].selector = @selector(sha384);
  methods[11].selector = @selector(sha512);
  methods[12].selector = @selector(hmacMd5WithJavaSecurityKey:);
  methods[13].selector = @selector(hmacMd5WithByteArray:);
  methods[14].selector = @selector(hmacSha1WithJavaSecurityKey:);
  methods[15].selector = @selector(hmacSha1WithByteArray:);
  methods[16].selector = @selector(hmacSha256WithJavaSecurityKey:);
  methods[17].selector = @selector(hmacSha256WithByteArray:);
  methods[18].selector = @selector(hmacSha512WithJavaSecurityKey:);
  methods[19].selector = @selector(hmacSha512WithByteArray:);
  methods[20].selector = @selector(hmacToStringWithNSString:withJavaSecurityKey:);
  methods[21].selector = @selector(crc32c);
  methods[22].selector = @selector(crc32);
  methods[23].selector = @selector(adler32);
  methods[24].selector = @selector(checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType:withNSString:);
  methods[25].selector = @selector(farmHashFingerprint64);
  methods[26].selector = @selector(consistentHashWithComGoogleCommonHashHashCode:withInt:);
  methods[27].selector = @selector(consistentHashWithLong:withInt:);
  methods[28].selector = @selector(combineOrderedWithJavaLangIterable:);
  methods[29].selector = @selector(combineUnorderedWithJavaLangIterable:);
  methods[30].selector = @selector(checkPositiveAndMakeMultipleOf32WithInt:);
  methods[31].selector = @selector(concatenatingWithComGoogleCommonHashHashFunction:withComGoogleCommonHashHashFunction:withComGoogleCommonHashHashFunctionArray:);
  methods[32].selector = @selector(concatenatingWithJavaLangIterable:);
  methods[33].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GOOD_FAST_HASH_SEED", "I", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
  };
  static const void *ptrTable[] = { "goodFastHash", "I", "murmur3_32", "murmur3_128", "sipHash24", "JJ", (void *)&ComGoogleCommonHashHashing__Annotations$0, (void *)&ComGoogleCommonHashHashing__Annotations$1, "hmacMd5", "LJavaSecurityKey;", "[B", "hmacSha1", "hmacSha256", "hmacSha512", "hmacToString", "LNSString;LJavaSecurityKey;", "checksumHashFunction", "LComGoogleCommonHashHashing_ChecksumType;LNSString;", "consistentHash", "LComGoogleCommonHashHashCode;I", "JI", "combineOrdered", "LJavaLangIterable;", "(Ljava/lang/Iterable<Lcom/google/common/hash/HashCode;>;)Lcom/google/common/hash/HashCode;", "combineUnordered", "checkPositiveAndMakeMultipleOf32", "concatenating", "LComGoogleCommonHashHashFunction;LComGoogleCommonHashHashFunction;[LComGoogleCommonHashHashFunction;", "(Ljava/lang/Iterable<Lcom/google/common/hash/HashFunction;>;)Lcom/google/common/hash/HashFunction;", &ComGoogleCommonHashHashing_GOOD_FAST_HASH_SEED, "LComGoogleCommonHashHashing_Murmur3_32Holder;LComGoogleCommonHashHashing_Murmur3_128Holder;LComGoogleCommonHashHashing_SipHash24Holder;LComGoogleCommonHashHashing_Md5Holder;LComGoogleCommonHashHashing_Sha1Holder;LComGoogleCommonHashHashing_Sha256Holder;LComGoogleCommonHashHashing_Sha384Holder;LComGoogleCommonHashHashing_Sha512Holder;LComGoogleCommonHashHashing_Crc32cHolder;LComGoogleCommonHashHashing_Crc32Holder;LComGoogleCommonHashHashing_Adler32Holder;LComGoogleCommonHashHashing_ChecksumType;LComGoogleCommonHashHashing_FarmHashFingerprint64Holder;LComGoogleCommonHashHashing_ConcatenatedHashFunction;LComGoogleCommonHashHashing_LinearCongruentialGenerator;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing = { "Hashing", "com.google.common.hash", ptrTable, methods, fields, 7, 0x11, 34, 1, -1, 30, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing class]) {
    ComGoogleCommonHashHashing_GOOD_FAST_HASH_SEED = (jint) JavaLangSystem_currentTimeMillis();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing)
  }
}

@end

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_goodFastHashWithInt_(jint minimumBits) {
  ComGoogleCommonHashHashing_initialize();
  jint bits = ComGoogleCommonHashHashing_checkPositiveAndMakeMultipleOf32WithInt_(minimumBits);
  if (bits == 32) {
    return JreLoadStatic(ComGoogleCommonHashHashing_Murmur3_32Holder, GOOD_FAST_HASH_FUNCTION_32);
  }
  if (bits <= 128) {
    return JreLoadStatic(ComGoogleCommonHashHashing_Murmur3_128Holder, GOOD_FAST_HASH_FUNCTION_128);
  }
  jint hashFunctionsNeeded = (bits + 127) / 128;
  IOSObjectArray *hashFunctions = [IOSObjectArray newArrayWithLength:hashFunctionsNeeded type:ComGoogleCommonHashHashFunction_class_()];
  (void) IOSObjectArray_Set(hashFunctions, 0, JreLoadStatic(ComGoogleCommonHashHashing_Murmur3_128Holder, GOOD_FAST_HASH_FUNCTION_128));
  jint seed = ComGoogleCommonHashHashing_GOOD_FAST_HASH_SEED;
  for (jint i = 1; i < hashFunctionsNeeded; i++) {
    seed += 1500450271;
    (void) IOSObjectArray_Set(hashFunctions, i, ComGoogleCommonHashHashing_murmur3_128WithInt_(seed));
  }
  return new_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(hashFunctions);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_murmur3_32WithInt_(jint seed) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMurmur3_32HashFunction_initWithInt_(seed);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_murmur3_32() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Murmur3_32Holder, MURMUR3_32);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_murmur3_128WithInt_(jint seed) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMurmur3_128HashFunction_initWithInt_(seed);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_murmur3_128() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Murmur3_128Holder, MURMUR3_128);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sipHash24() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_SipHash24Holder, SIP_HASH_24);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sipHash24WithLong_withLong_(jlong k0, jlong k1) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashSipHashFunction_initWithInt_withInt_withLong_withLong_(2, 4, k0, k1);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_md5() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Md5Holder, MD5);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sha1() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Sha1Holder, SHA_1);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sha256() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Sha256Holder, SHA_256);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sha384() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Sha384Holder, SHA_384);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_sha512() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Sha512Holder, SHA_512);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacMd5WithJavaSecurityKey_(id<JavaSecurityKey> key) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMacHashFunction_initWithNSString_withJavaSecurityKey_withNSString_(@"HmacMD5", key, ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(@"hmacMd5", key));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacMd5WithByteArray_(IOSByteArray *key) {
  ComGoogleCommonHashHashing_initialize();
  return ComGoogleCommonHashHashing_hmacMd5WithJavaSecurityKey_(new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(key), @"HmacMD5"));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha1WithJavaSecurityKey_(id<JavaSecurityKey> key) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMacHashFunction_initWithNSString_withJavaSecurityKey_withNSString_(@"HmacSHA1", key, ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(@"hmacSha1", key));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha1WithByteArray_(IOSByteArray *key) {
  ComGoogleCommonHashHashing_initialize();
  return ComGoogleCommonHashHashing_hmacSha1WithJavaSecurityKey_(new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(key), @"HmacSHA1"));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha256WithJavaSecurityKey_(id<JavaSecurityKey> key) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMacHashFunction_initWithNSString_withJavaSecurityKey_withNSString_(@"HmacSHA256", key, ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(@"hmacSha256", key));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha256WithByteArray_(IOSByteArray *key) {
  ComGoogleCommonHashHashing_initialize();
  return ComGoogleCommonHashHashing_hmacSha256WithJavaSecurityKey_(new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(key), @"HmacSHA256"));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha512WithJavaSecurityKey_(id<JavaSecurityKey> key) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashMacHashFunction_initWithNSString_withJavaSecurityKey_withNSString_(@"HmacSHA512", key, ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(@"hmacSha512", key));
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_hmacSha512WithByteArray_(IOSByteArray *key) {
  ComGoogleCommonHashHashing_initialize();
  return ComGoogleCommonHashHashing_hmacSha512WithJavaSecurityKey_(new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(key), @"HmacSHA512"));
}

NSString *ComGoogleCommonHashHashing_hmacToStringWithNSString_withJavaSecurityKey_(NSString *methodName, id<JavaSecurityKey> key) {
  ComGoogleCommonHashHashing_initialize();
  return NSString_java_formatWithNSString_withNSObjectArray_(@"Hashing.%s(Key[algorithm=%s, format=%s])", [IOSObjectArray newArrayWithObjects:(id[]){ methodName, [((id<JavaSecurityKey>) nil_chk(key)) getAlgorithm], [key getFormat] } count:3 type:NSObject_class_()]);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_crc32c() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Crc32cHolder, CRC_32_C);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_crc32() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Crc32Holder, CRC_32);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_adler32() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_Adler32Holder, ADLER_32);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType_withNSString_(ComGoogleCommonHashHashing_ChecksumType *type, NSString *toString) {
  ComGoogleCommonHashHashing_initialize();
  return new_ComGoogleCommonHashChecksumHashFunction_initWithComGoogleCommonBaseSupplier_withInt_withNSString_(type, ((ComGoogleCommonHashHashing_ChecksumType *) nil_chk(type))->bits_, toString);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_farmHashFingerprint64() {
  ComGoogleCommonHashHashing_initialize();
  return JreLoadStatic(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder, FARMHASH_FINGERPRINT_64);
}

jint ComGoogleCommonHashHashing_consistentHashWithComGoogleCommonHashHashCode_withInt_(ComGoogleCommonHashHashCode *hashCode, jint buckets) {
  ComGoogleCommonHashHashing_initialize();
  return ComGoogleCommonHashHashing_consistentHashWithLong_withInt_([((ComGoogleCommonHashHashCode *) nil_chk(hashCode)) padToLong], buckets);
}

jint ComGoogleCommonHashHashing_consistentHashWithLong_withInt_(jlong input, jint buckets) {
  ComGoogleCommonHashHashing_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(buckets > 0, @"buckets must be positive: %s", buckets);
  ComGoogleCommonHashHashing_LinearCongruentialGenerator *generator = new_ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(input);
  jint candidate = 0;
  jint next;
  while (true) {
    next = JreFpToInt(((candidate + 1) / [generator nextDouble]));
    if (next >= 0 && next < buckets) {
      candidate = next;
    }
    else {
      return candidate;
    }
  }
}

ComGoogleCommonHashHashCode *ComGoogleCommonHashHashing_combineOrderedWithJavaLangIterable_(id<JavaLangIterable> hashCodes) {
  ComGoogleCommonHashHashing_initialize();
  id<JavaUtilIterator> iterator = [((id<JavaLangIterable>) nil_chk(hashCodes)) iterator];
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext], @"Must be at least 1 hash code to combine.");
  jint bits = [((ComGoogleCommonHashHashCode *) nil_chk([iterator next])) bits];
  IOSByteArray *resultBytes = [IOSByteArray newArrayWithLength:bits / 8];
  for (ComGoogleCommonHashHashCode * __strong hashCode in hashCodes) {
    IOSByteArray *nextBytes = [((ComGoogleCommonHashHashCode *) nil_chk(hashCode)) asBytes];
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(((IOSByteArray *) nil_chk(nextBytes))->size_ == resultBytes->size_, @"All hashcodes must have the same bit length.");
    for (jint i = 0; i < nextBytes->size_; i++) {
      *IOSByteArray_GetRef(resultBytes, i) = (jbyte) (IOSByteArray_Get(resultBytes, i) * 37 ^ IOSByteArray_Get(nextBytes, i));
    }
  }
  return ComGoogleCommonHashHashCode_fromBytesNoCopyWithByteArray_(resultBytes);
}

ComGoogleCommonHashHashCode *ComGoogleCommonHashHashing_combineUnorderedWithJavaLangIterable_(id<JavaLangIterable> hashCodes) {
  ComGoogleCommonHashHashing_initialize();
  id<JavaUtilIterator> iterator = [((id<JavaLangIterable>) nil_chk(hashCodes)) iterator];
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext], @"Must be at least 1 hash code to combine.");
  IOSByteArray *resultBytes = [IOSByteArray newArrayWithLength:[((ComGoogleCommonHashHashCode *) nil_chk([iterator next])) bits] / 8];
  for (ComGoogleCommonHashHashCode * __strong hashCode in hashCodes) {
    IOSByteArray *nextBytes = [((ComGoogleCommonHashHashCode *) nil_chk(hashCode)) asBytes];
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(((IOSByteArray *) nil_chk(nextBytes))->size_ == resultBytes->size_, @"All hashcodes must have the same bit length.");
    for (jint i = 0; i < nextBytes->size_; i++) {
      *IOSByteArray_GetRef(resultBytes, i) += IOSByteArray_Get(nextBytes, i);
    }
  }
  return ComGoogleCommonHashHashCode_fromBytesNoCopyWithByteArray_(resultBytes);
}

jint ComGoogleCommonHashHashing_checkPositiveAndMakeMultipleOf32WithInt_(jint bits) {
  ComGoogleCommonHashHashing_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(bits > 0, @"Number of bits must be positive");
  return (bits + 31) & ~31;
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_concatenatingWithComGoogleCommonHashHashFunction_withComGoogleCommonHashHashFunction_withComGoogleCommonHashHashFunctionArray_(id<ComGoogleCommonHashHashFunction> first, id<ComGoogleCommonHashHashFunction> second, IOSObjectArray *rest) {
  ComGoogleCommonHashHashing_initialize();
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [list addWithId:first];
  [list addWithId:second];
  {
    IOSObjectArray *a__ = rest;
    id<ComGoogleCommonHashHashFunction> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHashFunction> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHashFunction> hashFunc = *b__++;
      [list addWithId:hashFunc];
    }
  }
  return new_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_([list toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:ComGoogleCommonHashHashFunction_class_()]]);
}

id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashHashing_concatenatingWithJavaLangIterable_(id<JavaLangIterable> hashFunctions) {
  ComGoogleCommonHashHashing_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(hashFunctions);
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  for (id<ComGoogleCommonHashHashFunction> __strong hashFunction in nil_chk(hashFunctions)) {
    [list addWithId:hashFunction];
  }
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_([list size] > 0, @"number of hash functions (%s) must be > 0", [list size]);
  return new_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_([list toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:ComGoogleCommonHashHashFunction_class_()]]);
}

void ComGoogleCommonHashHashing_init(ComGoogleCommonHashHashing *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing *new_ComGoogleCommonHashHashing_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing, init)
}

ComGoogleCommonHashHashing *create_ComGoogleCommonHashHashing_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing, init)
}

IOSObjectArray *ComGoogleCommonHashHashing__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonHashHashing__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Murmur3_32Holder)

@implementation ComGoogleCommonHashHashing_Murmur3_32Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Murmur3_32Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MURMUR3_32", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
    { "GOOD_FAST_HASH_FUNCTION_32", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Murmur3_32Holder_MURMUR3_32, &ComGoogleCommonHashHashing_Murmur3_32Holder_GOOD_FAST_HASH_FUNCTION_32, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Murmur3_32Holder = { "Murmur3_32Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Murmur3_32Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Murmur3_32Holder class]) {
    ComGoogleCommonHashHashing_Murmur3_32Holder_MURMUR3_32 = new_ComGoogleCommonHashMurmur3_32HashFunction_initWithInt_(0);
    ComGoogleCommonHashHashing_Murmur3_32Holder_GOOD_FAST_HASH_FUNCTION_32 = ComGoogleCommonHashHashing_murmur3_32WithInt_(JreLoadStatic(ComGoogleCommonHashHashing, GOOD_FAST_HASH_SEED));
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Murmur3_32Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Murmur3_32Holder_init(ComGoogleCommonHashHashing_Murmur3_32Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Murmur3_32Holder *new_ComGoogleCommonHashHashing_Murmur3_32Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Murmur3_32Holder, init)
}

ComGoogleCommonHashHashing_Murmur3_32Holder *create_ComGoogleCommonHashHashing_Murmur3_32Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Murmur3_32Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Murmur3_32Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Murmur3_128Holder)

@implementation ComGoogleCommonHashHashing_Murmur3_128Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Murmur3_128Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MURMUR3_128", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
    { "GOOD_FAST_HASH_FUNCTION_128", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Murmur3_128Holder_MURMUR3_128, &ComGoogleCommonHashHashing_Murmur3_128Holder_GOOD_FAST_HASH_FUNCTION_128, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Murmur3_128Holder = { "Murmur3_128Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Murmur3_128Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Murmur3_128Holder class]) {
    ComGoogleCommonHashHashing_Murmur3_128Holder_MURMUR3_128 = new_ComGoogleCommonHashMurmur3_128HashFunction_initWithInt_(0);
    ComGoogleCommonHashHashing_Murmur3_128Holder_GOOD_FAST_HASH_FUNCTION_128 = ComGoogleCommonHashHashing_murmur3_128WithInt_(JreLoadStatic(ComGoogleCommonHashHashing, GOOD_FAST_HASH_SEED));
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Murmur3_128Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Murmur3_128Holder_init(ComGoogleCommonHashHashing_Murmur3_128Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Murmur3_128Holder *new_ComGoogleCommonHashHashing_Murmur3_128Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Murmur3_128Holder, init)
}

ComGoogleCommonHashHashing_Murmur3_128Holder *create_ComGoogleCommonHashHashing_Murmur3_128Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Murmur3_128Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Murmur3_128Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_SipHash24Holder)

@implementation ComGoogleCommonHashHashing_SipHash24Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_SipHash24Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SIP_HASH_24", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_SipHash24Holder_SIP_HASH_24, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_SipHash24Holder = { "SipHash24Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_SipHash24Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_SipHash24Holder class]) {
    ComGoogleCommonHashHashing_SipHash24Holder_SIP_HASH_24 = new_ComGoogleCommonHashSipHashFunction_initWithInt_withInt_withLong_withLong_(2, 4, (jlong) 0x0706050403020100LL, (jlong) 0x0f0e0d0c0b0a0908LL);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_SipHash24Holder)
  }
}

@end

void ComGoogleCommonHashHashing_SipHash24Holder_init(ComGoogleCommonHashHashing_SipHash24Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_SipHash24Holder *new_ComGoogleCommonHashHashing_SipHash24Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_SipHash24Holder, init)
}

ComGoogleCommonHashHashing_SipHash24Holder *create_ComGoogleCommonHashHashing_SipHash24Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_SipHash24Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_SipHash24Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Md5Holder)

@implementation ComGoogleCommonHashHashing_Md5Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Md5Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MD5", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Md5Holder_MD5, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Md5Holder = { "Md5Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Md5Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Md5Holder class]) {
    ComGoogleCommonHashHashing_Md5Holder_MD5 = new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(@"MD5", @"Hashing.md5()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Md5Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Md5Holder_init(ComGoogleCommonHashHashing_Md5Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Md5Holder *new_ComGoogleCommonHashHashing_Md5Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Md5Holder, init)
}

ComGoogleCommonHashHashing_Md5Holder *create_ComGoogleCommonHashHashing_Md5Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Md5Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Md5Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Sha1Holder)

@implementation ComGoogleCommonHashHashing_Sha1Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Sha1Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA_1", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Sha1Holder_SHA_1, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Sha1Holder = { "Sha1Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Sha1Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Sha1Holder class]) {
    ComGoogleCommonHashHashing_Sha1Holder_SHA_1 = new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(@"SHA-1", @"Hashing.sha1()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Sha1Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Sha1Holder_init(ComGoogleCommonHashHashing_Sha1Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Sha1Holder *new_ComGoogleCommonHashHashing_Sha1Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Sha1Holder, init)
}

ComGoogleCommonHashHashing_Sha1Holder *create_ComGoogleCommonHashHashing_Sha1Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Sha1Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Sha1Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Sha256Holder)

@implementation ComGoogleCommonHashHashing_Sha256Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Sha256Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA_256", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Sha256Holder_SHA_256, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Sha256Holder = { "Sha256Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Sha256Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Sha256Holder class]) {
    ComGoogleCommonHashHashing_Sha256Holder_SHA_256 = new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(@"SHA-256", @"Hashing.sha256()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Sha256Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Sha256Holder_init(ComGoogleCommonHashHashing_Sha256Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Sha256Holder *new_ComGoogleCommonHashHashing_Sha256Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Sha256Holder, init)
}

ComGoogleCommonHashHashing_Sha256Holder *create_ComGoogleCommonHashHashing_Sha256Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Sha256Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Sha256Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Sha384Holder)

@implementation ComGoogleCommonHashHashing_Sha384Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Sha384Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA_384", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Sha384Holder_SHA_384, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Sha384Holder = { "Sha384Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Sha384Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Sha384Holder class]) {
    ComGoogleCommonHashHashing_Sha384Holder_SHA_384 = new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(@"SHA-384", @"Hashing.sha384()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Sha384Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Sha384Holder_init(ComGoogleCommonHashHashing_Sha384Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Sha384Holder *new_ComGoogleCommonHashHashing_Sha384Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Sha384Holder, init)
}

ComGoogleCommonHashHashing_Sha384Holder *create_ComGoogleCommonHashHashing_Sha384Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Sha384Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Sha384Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Sha512Holder)

@implementation ComGoogleCommonHashHashing_Sha512Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Sha512Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA_512", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Sha512Holder_SHA_512, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Sha512Holder = { "Sha512Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Sha512Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Sha512Holder class]) {
    ComGoogleCommonHashHashing_Sha512Holder_SHA_512 = new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(@"SHA-512", @"Hashing.sha512()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Sha512Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Sha512Holder_init(ComGoogleCommonHashHashing_Sha512Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Sha512Holder *new_ComGoogleCommonHashHashing_Sha512Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Sha512Holder, init)
}

ComGoogleCommonHashHashing_Sha512Holder *create_ComGoogleCommonHashHashing_Sha512Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Sha512Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Sha512Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Crc32cHolder)

@implementation ComGoogleCommonHashHashing_Crc32cHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Crc32cHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CRC_32_C", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Crc32cHolder_CRC_32_C, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Crc32cHolder = { "Crc32cHolder", "com.google.common.hash", ptrTable, methods, fields, 7, 0x1a, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Crc32cHolder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Crc32cHolder class]) {
    ComGoogleCommonHashHashing_Crc32cHolder_CRC_32_C = new_ComGoogleCommonHashCrc32cHashFunction_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Crc32cHolder)
  }
}

@end

void ComGoogleCommonHashHashing_Crc32cHolder_init(ComGoogleCommonHashHashing_Crc32cHolder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Crc32cHolder *new_ComGoogleCommonHashHashing_Crc32cHolder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Crc32cHolder, init)
}

ComGoogleCommonHashHashing_Crc32cHolder *create_ComGoogleCommonHashHashing_Crc32cHolder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Crc32cHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Crc32cHolder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Crc32Holder)

@implementation ComGoogleCommonHashHashing_Crc32Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Crc32Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CRC_32", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Crc32Holder_CRC_32, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Crc32Holder = { "Crc32Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Crc32Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Crc32Holder class]) {
    ComGoogleCommonHashHashing_Crc32Holder_CRC_32 = ComGoogleCommonHashHashing_checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType_withNSString_(JreLoadEnum(ComGoogleCommonHashHashing_ChecksumType, CRC_32), @"Hashing.crc32()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Crc32Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Crc32Holder_init(ComGoogleCommonHashHashing_Crc32Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Crc32Holder *new_ComGoogleCommonHashHashing_Crc32Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Crc32Holder, init)
}

ComGoogleCommonHashHashing_Crc32Holder *create_ComGoogleCommonHashHashing_Crc32Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Crc32Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Crc32Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_Adler32Holder)

@implementation ComGoogleCommonHashHashing_Adler32Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_Adler32Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ADLER_32", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_Adler32Holder_ADLER_32, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_Adler32Holder = { "Adler32Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_Adler32Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_Adler32Holder class]) {
    ComGoogleCommonHashHashing_Adler32Holder_ADLER_32 = ComGoogleCommonHashHashing_checksumHashFunctionWithComGoogleCommonHashHashing_ChecksumType_withNSString_(JreLoadEnum(ComGoogleCommonHashHashing_ChecksumType, ADLER_32), @"Hashing.adler32()");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_Adler32Holder)
  }
}

@end

void ComGoogleCommonHashHashing_Adler32Holder_init(ComGoogleCommonHashHashing_Adler32Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_Adler32Holder *new_ComGoogleCommonHashHashing_Adler32Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_Adler32Holder, init)
}

ComGoogleCommonHashHashing_Adler32Holder *create_ComGoogleCommonHashHashing_Adler32Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_Adler32Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_Adler32Holder)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_ChecksumType)

ComGoogleCommonHashHashing_ChecksumType *ComGoogleCommonHashHashing_ChecksumType_values_[2];

@implementation ComGoogleCommonHashHashing_ChecksumType

- (id<JavaUtilZipChecksum>)get {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonHashHashing_ChecksumType_values();
}

+ (ComGoogleCommonHashHashing_ChecksumType *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonHashHashing_ChecksumType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilZipChecksum;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonHashHashing_ChecksumType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashing_ChecksumType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(get);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CRC_32", "LComGoogleCommonHashHashing_ChecksumType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "ADLER_32", "LComGoogleCommonHashHashing_ChecksumType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "bits_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleCommonHashHashing_ChecksumType, CRC_32), &JreEnum(ComGoogleCommonHashHashing_ChecksumType, ADLER_32), "LComGoogleCommonHashHashing;", "Ljava/lang/Enum<Lcom/google/common/hash/Hashing$ChecksumType;>;Lcom/google/common/base/Supplier<Ljava/util/zip/Checksum;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_ChecksumType = { "ChecksumType", "com.google.common.hash", ptrTable, methods, fields, 7, 0x4408, 3, 3, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonHashHashing_ChecksumType;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_ChecksumType class]) {
    JreEnum(ComGoogleCommonHashHashing_ChecksumType, CRC_32) = new_ComGoogleCommonHashHashing_ChecksumType_1_initWithInt_withNSString_withInt_(32, @"CRC_32", 0);
    JreEnum(ComGoogleCommonHashHashing_ChecksumType, ADLER_32) = new_ComGoogleCommonHashHashing_ChecksumType_2_initWithInt_withNSString_withInt_(32, @"ADLER_32", 1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_ChecksumType)
  }
}

@end

void ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType *self, jint bits, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->bits_ = bits;
}

ComGoogleCommonHashHashing_ChecksumType *new_ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_ChecksumType, initWithInt_withNSString_withInt_, bits, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonHashHashing_ChecksumType_values() {
  ComGoogleCommonHashHashing_ChecksumType_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonHashHashing_ChecksumType_values_ count:2 type:ComGoogleCommonHashHashing_ChecksumType_class_()];
}

ComGoogleCommonHashHashing_ChecksumType *ComGoogleCommonHashHashing_ChecksumType_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonHashHashing_ChecksumType_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonHashHashing_ChecksumType *e = ComGoogleCommonHashHashing_ChecksumType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonHashHashing_ChecksumType *ComGoogleCommonHashHashing_ChecksumType_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonHashHashing_ChecksumType_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonHashHashing_ChecksumType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_ChecksumType)

@implementation ComGoogleCommonHashHashing_ChecksumType_1

- (id<JavaUtilZipChecksum>)get {
  return new_JavaUtilZipCRC32_init();
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonHashHashing_ChecksumType_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilZipChecksum;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonHashHashing_ChecksumType;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_ChecksumType_1 = { "", "com.google.common.hash", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_ChecksumType_1;
}

@end

void ComGoogleCommonHashHashing_ChecksumType_1_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType_1 *self, jint bits, NSString *__name, jint __ordinal) {
  ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(self, bits, __name, __ordinal);
}

ComGoogleCommonHashHashing_ChecksumType_1 *new_ComGoogleCommonHashHashing_ChecksumType_1_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_ChecksumType_1, initWithInt_withNSString_withInt_, bits, __name, __ordinal)
}

@implementation ComGoogleCommonHashHashing_ChecksumType_2

- (id<JavaUtilZipChecksum>)get {
  return new_JavaUtilZipAdler32_init();
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonHashHashing_ChecksumType_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilZipChecksum;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonHashHashing_ChecksumType;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_ChecksumType_2 = { "", "com.google.common.hash", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_ChecksumType_2;
}

@end

void ComGoogleCommonHashHashing_ChecksumType_2_initWithInt_withNSString_withInt_(ComGoogleCommonHashHashing_ChecksumType_2 *self, jint bits, NSString *__name, jint __ordinal) {
  ComGoogleCommonHashHashing_ChecksumType_initWithInt_withNSString_withInt_(self, bits, __name, __ordinal);
}

ComGoogleCommonHashHashing_ChecksumType_2 *new_ComGoogleCommonHashHashing_ChecksumType_2_initWithInt_withNSString_withInt_(jint bits, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_ChecksumType_2, initWithInt_withNSString_withInt_, bits, __name, __ordinal)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder)

@implementation ComGoogleCommonHashHashing_FarmHashFingerprint64Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FARMHASH_FINGERPRINT_64", "LComGoogleCommonHashHashFunction;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_FARMHASH_FINGERPRINT_64, "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_FarmHashFingerprint64Holder = { "FarmHashFingerprint64Holder", "com.google.common.hash", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_FarmHashFingerprint64Holder;
}

+ (void)initialize {
  if (self == [ComGoogleCommonHashHashing_FarmHashFingerprint64Holder class]) {
    ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_FARMHASH_FINGERPRINT_64 = new_ComGoogleCommonHashFarmHashFingerprint64_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder)
  }
}

@end

void ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *self) {
  NSObject_init(self);
}

ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *new_ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder, init)
}

ComGoogleCommonHashHashing_FarmHashFingerprint64Holder *create_ComGoogleCommonHashHashing_FarmHashFingerprint64Holder_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_FarmHashFingerprint64Holder)

@implementation ComGoogleCommonHashHashing_ConcatenatedHashFunction

- (instancetype)initWithComGoogleCommonHashHashFunctionArray:(IOSObjectArray *)functions {
  ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(self, functions);
  return self;
}

- (ComGoogleCommonHashHashCode *)makeHashWithComGoogleCommonHashHasherArray:(IOSObjectArray *)hashers {
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:bits_ / 8];
  jint i = 0;
  {
    IOSObjectArray *a__ = hashers;
    id<ComGoogleCommonHashHasher> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHasher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHasher> hasher = *b__++;
      ComGoogleCommonHashHashCode *newHash = [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) hash__];
      i += [((ComGoogleCommonHashHashCode *) nil_chk(newHash)) writeBytesToWithByteArray:bytes withInt:i withInt:[newHash bits] / 8];
    }
  }
  return ComGoogleCommonHashHashCode_fromBytesNoCopyWithByteArray_(bytes);
}

- (jint)bits {
  return bits_;
}

- (jboolean)isEqual:(id)object {
  if ([object isKindOfClass:[ComGoogleCommonHashHashing_ConcatenatedHashFunction class]]) {
    ComGoogleCommonHashHashing_ConcatenatedHashFunction *other = (ComGoogleCommonHashHashing_ConcatenatedHashFunction *) cast_chk(object, [ComGoogleCommonHashHashing_ConcatenatedHashFunction class]);
    return JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(functions_, ((ComGoogleCommonHashHashing_ConcatenatedHashFunction *) nil_chk(other))->functions_);
  }
  return false;
}

- (NSUInteger)hash {
  return JavaUtilArrays_hashCodeWithNSObjectArray_(functions_) * 31 + bits_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x82, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, 5 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashHashFunctionArray:);
  methods[1].selector = @selector(makeHashWithComGoogleCommonHashHasherArray:);
  methods[2].selector = @selector(bits);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bits_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LComGoogleCommonHashHashFunction;", "makeHash", "[LComGoogleCommonHashHasher;", "equals", "LNSObject;", (void *)&ComGoogleCommonHashHashing_ConcatenatedHashFunction__Annotations$0, "hashCode", "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_ConcatenatedHashFunction = { "ConcatenatedHashFunction", "com.google.common.hash", ptrTable, methods, fields, 7, 0x1a, 5, 1, 7, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_ConcatenatedHashFunction;
}

@end

void ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(ComGoogleCommonHashHashing_ConcatenatedHashFunction *self, IOSObjectArray *functions) {
  ComGoogleCommonHashAbstractCompositeHashFunction_initWithComGoogleCommonHashHashFunctionArray_(self, functions);
  jint bitSum = 0;
  {
    IOSObjectArray *a__ = functions;
    id<ComGoogleCommonHashHashFunction> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ComGoogleCommonHashHashFunction> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ComGoogleCommonHashHashFunction> function = *b__++;
      bitSum += [((id<ComGoogleCommonHashHashFunction>) nil_chk(function)) bits];
      ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_withId_([function bits] % 8 == 0, @"the number of bits (%s) in hashFunction (%s) must be divisible by 8", [function bits], function);
    }
  }
  self->bits_ = bitSum;
}

ComGoogleCommonHashHashing_ConcatenatedHashFunction *new_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(IOSObjectArray *functions) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_ConcatenatedHashFunction, initWithComGoogleCommonHashHashFunctionArray_, functions)
}

ComGoogleCommonHashHashing_ConcatenatedHashFunction *create_ComGoogleCommonHashHashing_ConcatenatedHashFunction_initWithComGoogleCommonHashHashFunctionArray_(IOSObjectArray *functions) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_ConcatenatedHashFunction, initWithComGoogleCommonHashHashFunctionArray_, functions)
}

IOSObjectArray *ComGoogleCommonHashHashing_ConcatenatedHashFunction__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_ConcatenatedHashFunction)

@implementation ComGoogleCommonHashHashing_LinearCongruentialGenerator

- (instancetype)initWithLong:(jlong)seed {
  ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(self, seed);
  return self;
}

- (jdouble)nextDouble {
  state_ = 2862933555777941757LL * state_ + 1;
  return ((jdouble) ((jint) (JreURShift64(state_, 33)) + 1)) / (2.147483648E9);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(nextDouble);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "state_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "LComGoogleCommonHashHashing;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashing_LinearCongruentialGenerator = { "LinearCongruentialGenerator", "com.google.common.hash", ptrTable, methods, fields, 7, 0x1a, 2, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashing_LinearCongruentialGenerator;
}

@end

void ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(ComGoogleCommonHashHashing_LinearCongruentialGenerator *self, jlong seed) {
  NSObject_init(self);
  self->state_ = seed;
}

ComGoogleCommonHashHashing_LinearCongruentialGenerator *new_ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(jlong seed) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashing_LinearCongruentialGenerator, initWithLong_, seed)
}

ComGoogleCommonHashHashing_LinearCongruentialGenerator *create_ComGoogleCommonHashHashing_LinearCongruentialGenerator_initWithLong_(jlong seed) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashing_LinearCongruentialGenerator, initWithLong_, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashing_LinearCongruentialGenerator)
