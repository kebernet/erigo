//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/HashingOutputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/hash/Hasher.h"
#include "com/google/common/hash/HashingOutputStream.h"
#include "java/io/FilterOutputStream.h"
#include "java/io/OutputStream.h"

@interface ComGoogleCommonHashHashingOutputStream () {
 @public
  id<ComGoogleCommonHashHasher> hasher_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonHashHashingOutputStream, hasher_, id<ComGoogleCommonHashHasher>)

@implementation ComGoogleCommonHashHashingOutputStream

- (instancetype)initWithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)hashFunction
                                 withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  ComGoogleCommonHashHashingOutputStream_initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_(self, hashFunction, outArg);
  return self;
}

- (void)writeWithInt:(jint)b {
  (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher_)) putByteWithByte:(jbyte) b];
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:b];
}

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len {
  (void) [((id<ComGoogleCommonHashHasher>) nil_chk(hasher_)) putBytesWithByteArray:bytes withInt:off withInt:len];
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithByteArray:bytes withInt:off withInt:len];
}

- (ComGoogleCommonHashHashCode *)hash__ {
  return [((id<ComGoogleCommonHashHasher>) nil_chk(hasher_)) hash__];
}

- (void)close {
  [((JavaIoOutputStream *) nil_chk(out_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonHashHashFunction:withJavaIoOutputStream:);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(hash__);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hasher_", "LComGoogleCommonHashHasher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonHashHashFunction;LJavaIoOutputStream;", "write", "I", "LJavaIoIOException;", "[BII", "hash" };
  static const J2ObjcClassInfo _ComGoogleCommonHashHashingOutputStream = { "HashingOutputStream", "com.google.common.hash", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashHashingOutputStream;
}

@end

void ComGoogleCommonHashHashingOutputStream_initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_(ComGoogleCommonHashHashingOutputStream *self, id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoOutputStream *outArg) {
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_(self, ComGoogleCommonBasePreconditions_checkNotNullWithId_(outArg));
  self->hasher_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_([((id<ComGoogleCommonHashHashFunction>) nil_chk(hashFunction)) newHasher]);
}

ComGoogleCommonHashHashingOutputStream *new_ComGoogleCommonHashHashingOutputStream_initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_(id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashHashingOutputStream, initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_, hashFunction, outArg)
}

ComGoogleCommonHashHashingOutputStream *create_ComGoogleCommonHashHashingOutputStream_initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_(id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashHashingOutputStream, initWithComGoogleCommonHashHashFunction_withJavaIoOutputStream_, hashFunction, outArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashHashingOutputStream)
