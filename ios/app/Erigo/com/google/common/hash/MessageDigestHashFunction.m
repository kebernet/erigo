//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/hash/MessageDigestHashFunction.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/hash/AbstractByteHasher.h"
#include "com/google/common/hash/AbstractStreamingHashFunction.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/Hasher.h"
#include "com/google/common/hash/MessageDigestHashFunction.h"
#include "java/io/Serializable.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Byte.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/Arrays.h"

@interface ComGoogleCommonHashMessageDigestHashFunction () {
 @public
  JavaSecurityMessageDigest *prototype_;
  jint bytes_;
  jboolean supportsClone_;
  NSString *toString_;
}

+ (jboolean)supportsCloneWithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest;

+ (JavaSecurityMessageDigest *)getMessageDigestWithNSString:(NSString *)algorithmName;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonHashMessageDigestHashFunction, prototype_, JavaSecurityMessageDigest *)
J2OBJC_FIELD_SETTER(ComGoogleCommonHashMessageDigestHashFunction, toString_, NSString *)

__attribute__((unused)) static jboolean ComGoogleCommonHashMessageDigestHashFunction_supportsCloneWithJavaSecurityMessageDigest_(JavaSecurityMessageDigest *digest);

__attribute__((unused)) static JavaSecurityMessageDigest *ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_(NSString *algorithmName);

@interface ComGoogleCommonHashMessageDigestHashFunction_SerializedForm : NSObject < JavaIoSerializable > {
 @public
  NSString *algorithmName_;
  jint bytes_;
  NSString *toString_;
}

- (instancetype)initWithNSString:(NSString *)algorithmName
                         withInt:(jint)bytes
                    withNSString:(NSString *)toString;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm, algorithmName_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm, toString_, NSString *)

inline jlong ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_get_serialVersionUID();
#define ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *self, NSString *algorithmName, jint bytes, NSString *toString);

__attribute__((unused)) static ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *new_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *create_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm)

@interface ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher : ComGoogleCommonHashAbstractByteHasher {
 @public
  JavaSecurityMessageDigest *digest_;
  jint bytes_;
  jboolean done_;
}

- (instancetype)initWithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest
                                          withInt:(jint)bytes;

- (void)updateWithByte:(jbyte)b;

- (void)updateWithByteArray:(IOSByteArray *)b;

- (void)updateWithByteArray:(IOSByteArray *)b
                    withInt:(jint)off
                    withInt:(jint)len;

- (void)checkNotDone;

- (ComGoogleCommonHashHashCode *)hash__;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher)

J2OBJC_FIELD_SETTER(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher, digest_, JavaSecurityMessageDigest *)

__attribute__((unused)) static void ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *self, JavaSecurityMessageDigest *digest, jint bytes);

__attribute__((unused)) static ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *new_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(JavaSecurityMessageDigest *digest, jint bytes) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *create_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(JavaSecurityMessageDigest *digest, jint bytes);

__attribute__((unused)) static void ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher)

@implementation ComGoogleCommonHashMessageDigestHashFunction

- (instancetype)initWithNSString:(NSString *)algorithmName
                    withNSString:(NSString *)toString {
  ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(self, algorithmName, toString);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithmName
                         withInt:(jint)bytes
                    withNSString:(NSString *)toString {
  ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withInt_withNSString_(self, algorithmName, bytes, toString);
  return self;
}

+ (jboolean)supportsCloneWithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest {
  return ComGoogleCommonHashMessageDigestHashFunction_supportsCloneWithJavaSecurityMessageDigest_(digest);
}

- (jint)bits {
  return bytes_ * JavaLangByte_SIZE;
}

- (NSString *)description {
  return toString_;
}

+ (JavaSecurityMessageDigest *)getMessageDigestWithNSString:(NSString *)algorithmName {
  return ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_(algorithmName);
}

- (id<ComGoogleCommonHashHasher>)newHasher {
  if (supportsClone_) {
    @try {
      return new_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_((JavaSecurityMessageDigest *) cast_chk([((JavaSecurityMessageDigest *) nil_chk(prototype_)) java_clone], [JavaSecurityMessageDigest class]), bytes_);
    }
    @catch (JavaLangCloneNotSupportedException *e) {
    }
  }
  return new_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_([((JavaSecurityMessageDigest *) nil_chk(prototype_)) getAlgorithm]), bytes_);
}

- (id)writeReplace {
  return new_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_([((JavaSecurityMessageDigest *) nil_chk(prototype_)) getAlgorithm], bytes_, toString_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0xa, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHasher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(initWithNSString:withInt:withNSString:);
  methods[2].selector = @selector(supportsCloneWithJavaSecurityMessageDigest:);
  methods[3].selector = @selector(bits);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getMessageDigestWithNSString:);
  methods[6].selector = @selector(newHasher);
  methods[7].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "prototype_", "LJavaSecurityMessageDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytes_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "supportsClone_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "toString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "LNSString;ILNSString;", "supportsClone", "LJavaSecurityMessageDigest;", "toString", "getMessageDigest", "LNSString;", "LComGoogleCommonHashMessageDigestHashFunction_SerializedForm;LComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashMessageDigestHashFunction = { "MessageDigestHashFunction", "com.google.common.hash", ptrTable, methods, fields, 7, 0x10, 8, 4, -1, 7, -1, -1, -1 };
  return &_ComGoogleCommonHashMessageDigestHashFunction;
}

@end

void ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(ComGoogleCommonHashMessageDigestHashFunction *self, NSString *algorithmName, NSString *toString) {
  ComGoogleCommonHashAbstractStreamingHashFunction_init(self);
  self->prototype_ = ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_(algorithmName);
  self->bytes_ = [((JavaSecurityMessageDigest *) nil_chk(self->prototype_)) getDigestLength];
  self->toString_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(toString);
  self->supportsClone_ = ComGoogleCommonHashMessageDigestHashFunction_supportsCloneWithJavaSecurityMessageDigest_(self->prototype_);
}

ComGoogleCommonHashMessageDigestHashFunction *new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(NSString *algorithmName, NSString *toString) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashMessageDigestHashFunction, initWithNSString_withNSString_, algorithmName, toString)
}

ComGoogleCommonHashMessageDigestHashFunction *create_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withNSString_(NSString *algorithmName, NSString *toString) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashMessageDigestHashFunction, initWithNSString_withNSString_, algorithmName, toString)
}

void ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withInt_withNSString_(ComGoogleCommonHashMessageDigestHashFunction *self, NSString *algorithmName, jint bytes, NSString *toString) {
  ComGoogleCommonHashAbstractStreamingHashFunction_init(self);
  self->toString_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(toString);
  self->prototype_ = ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_(algorithmName);
  jint maxLength = [((JavaSecurityMessageDigest *) nil_chk(self->prototype_)) getDigestLength];
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_withInt_(bytes >= 4 && bytes <= maxLength, @"bytes (%s) must be >= 4 and < %s", bytes, maxLength);
  self->bytes_ = bytes;
  self->supportsClone_ = ComGoogleCommonHashMessageDigestHashFunction_supportsCloneWithJavaSecurityMessageDigest_(self->prototype_);
}

ComGoogleCommonHashMessageDigestHashFunction *new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashMessageDigestHashFunction, initWithNSString_withInt_withNSString_, algorithmName, bytes, toString)
}

ComGoogleCommonHashMessageDigestHashFunction *create_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashMessageDigestHashFunction, initWithNSString_withInt_withNSString_, algorithmName, bytes, toString)
}

jboolean ComGoogleCommonHashMessageDigestHashFunction_supportsCloneWithJavaSecurityMessageDigest_(JavaSecurityMessageDigest *digest) {
  ComGoogleCommonHashMessageDigestHashFunction_initialize();
  @try {
    (void) [((JavaSecurityMessageDigest *) nil_chk(digest)) java_clone];
    return true;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    return false;
  }
}

JavaSecurityMessageDigest *ComGoogleCommonHashMessageDigestHashFunction_getMessageDigestWithNSString_(NSString *algorithmName) {
  ComGoogleCommonHashMessageDigestHashFunction_initialize();
  @try {
    return JavaSecurityMessageDigest_getInstanceWithNSString_(algorithmName);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashMessageDigestHashFunction)

@implementation ComGoogleCommonHashMessageDigestHashFunction_SerializedForm

- (instancetype)initWithNSString:(NSString *)algorithmName
                         withInt:(jint)bytes
                    withNSString:(NSString *)toString {
  ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(self, algorithmName, bytes, toString);
  return self;
}

- (id)readResolve {
  return new_ComGoogleCommonHashMessageDigestHashFunction_initWithNSString_withInt_withNSString_(algorithmName_, bytes_, toString_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:withNSString:);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "algorithmName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytes_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "toString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ILNSString;", "LComGoogleCommonHashMessageDigestHashFunction;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashMessageDigestHashFunction_SerializedForm = { "SerializedForm", "com.google.common.hash", ptrTable, methods, fields, 7, 0x1a, 2, 4, 1, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm;
}

@end

void ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *self, NSString *algorithmName, jint bytes, NSString *toString) {
  NSObject_init(self);
  self->algorithmName_ = algorithmName;
  self->bytes_ = bytes;
  self->toString_ = toString;
}

ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *new_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm, initWithNSString_withInt_withNSString_, algorithmName, bytes, toString)
}

ComGoogleCommonHashMessageDigestHashFunction_SerializedForm *create_ComGoogleCommonHashMessageDigestHashFunction_SerializedForm_initWithNSString_withInt_withNSString_(NSString *algorithmName, jint bytes, NSString *toString) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm, initWithNSString_withInt_withNSString_, algorithmName, bytes, toString)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashMessageDigestHashFunction_SerializedForm)

@implementation ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher

- (instancetype)initWithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)digest
                                          withInt:(jint)bytes {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(self, digest, bytes);
  return self;
}

- (void)updateWithByte:(jbyte)b {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(self);
  [((JavaSecurityMessageDigest *) nil_chk(digest_)) updateWithByte:b];
}

- (void)updateWithByteArray:(IOSByteArray *)b {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(self);
  [((JavaSecurityMessageDigest *) nil_chk(digest_)) updateWithByteArray:b];
}

- (void)updateWithByteArray:(IOSByteArray *)b
                    withInt:(jint)off
                    withInt:(jint)len {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(self);
  [((JavaSecurityMessageDigest *) nil_chk(digest_)) updateWithByteArray:b withInt:off withInt:len];
}

- (void)checkNotDone {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(self);
}

- (ComGoogleCommonHashHashCode *)hash__ {
  ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(self);
  done_ = true;
  return (bytes_ == [((JavaSecurityMessageDigest *) nil_chk(digest_)) getDigestLength]) ? ComGoogleCommonHashHashCode_fromBytesNoCopyWithByteArray_([digest_ digest]) : ComGoogleCommonHashHashCode_fromBytesNoCopyWithByteArray_(JavaUtilArrays_copyOfWithByteArray_withInt_([digest_ digest], bytes_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaSecurityMessageDigest:withInt:);
  methods[1].selector = @selector(updateWithByte:);
  methods[2].selector = @selector(updateWithByteArray:);
  methods[3].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(checkNotDone);
  methods[5].selector = @selector(hash__);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LJavaSecurityMessageDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytes_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityMessageDigest;I", "update", "B", "[B", "[BII", "hash", "LComGoogleCommonHashMessageDigestHashFunction;" };
  static const J2ObjcClassInfo _ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher = { "MessageDigestHasher", "com.google.common.hash", ptrTable, methods, fields, 7, 0x1a, 6, 3, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher;
}

@end

void ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *self, JavaSecurityMessageDigest *digest, jint bytes) {
  ComGoogleCommonHashAbstractByteHasher_init(self);
  self->digest_ = digest;
  self->bytes_ = bytes;
}

ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *new_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(JavaSecurityMessageDigest *digest, jint bytes) {
  J2OBJC_NEW_IMPL(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher, initWithJavaSecurityMessageDigest_withInt_, digest, bytes)
}

ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *create_ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_initWithJavaSecurityMessageDigest_withInt_(JavaSecurityMessageDigest *digest, jint bytes) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher, initWithJavaSecurityMessageDigest_withInt_, digest, bytes)
}

void ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher_checkNotDone(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher *self) {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_(!self->done_, @"Cannot re-use a Hasher after calling hash() on it");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonHashMessageDigestHashFunction_MessageDigestHasher)
