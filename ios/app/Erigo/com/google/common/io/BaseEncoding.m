//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/BaseEncoding.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Ascii.h"
#include "com/google/common/base/CharMatcher.h"
#include "com/google/common/base/Objects.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/BaseEncoding.h"
#include "com/google/common/io/ByteSink.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/CharSink.h"
#include "com/google/common/io/CharSource.h"
#include "com/google/common/math/IntMath.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/io/Serializable.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/RoundingMode.h"
#include "java/util/Arrays.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonIoBaseEncoding ()

+ (IOSByteArray *)extractWithByteArray:(IOSByteArray *)result
                               withInt:(jint)length;

@end

inline ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_get_BASE64();
static ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_BASE64;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoBaseEncoding, BASE64, ComGoogleCommonIoBaseEncoding *)

inline ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_get_BASE64_URL();
static ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_BASE64_URL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoBaseEncoding, BASE64_URL, ComGoogleCommonIoBaseEncoding *)

inline ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_get_BASE32();
static ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_BASE32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoBaseEncoding, BASE32, ComGoogleCommonIoBaseEncoding *)

inline ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_get_BASE32_HEX();
static ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_BASE32_HEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoBaseEncoding, BASE32_HEX, ComGoogleCommonIoBaseEncoding *)

inline ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_get_BASE16();
static ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_BASE16;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoBaseEncoding, BASE16, ComGoogleCommonIoBaseEncoding *)

__attribute__((unused)) static NSString *ComGoogleCommonIoBaseEncoding_encodeWithByteArray_withInt_withInt_(ComGoogleCommonIoBaseEncoding *self, IOSByteArray *bytes, jint off, jint len);

__attribute__((unused)) static IOSByteArray *ComGoogleCommonIoBaseEncoding_extractWithByteArray_withInt_(IOSByteArray *result, jint length);

__attribute__((unused)) static IOSByteArray *ComGoogleCommonIoBaseEncoding_decodeCheckedWithJavaLangCharSequence_(ComGoogleCommonIoBaseEncoding *self, id<JavaLangCharSequence> chars);

@interface ComGoogleCommonIoBaseEncoding_1 : ComGoogleCommonIoByteSink {
 @public
  ComGoogleCommonIoBaseEncoding *this$0_;
  ComGoogleCommonIoCharSink *val$encodedSink_;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding:(ComGoogleCommonIoBaseEncoding *)outer$
                        withComGoogleCommonIoCharSink:(ComGoogleCommonIoCharSink *)capture$0;

- (JavaIoOutputStream *)openStream;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_1)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding_1 *self, ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_1 *new_ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_1 *create_ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0);

@interface ComGoogleCommonIoBaseEncoding_2 : ComGoogleCommonIoByteSource {
 @public
  ComGoogleCommonIoBaseEncoding *this$0_;
  ComGoogleCommonIoCharSource *val$encodedSource_;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding:(ComGoogleCommonIoBaseEncoding *)outer$
                      withComGoogleCommonIoCharSource:(ComGoogleCommonIoCharSource *)capture$0;

- (JavaIoInputStream *)openStream;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_2)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding_2 *self, ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_2 *new_ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_2 *create_ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0);

@interface ComGoogleCommonIoBaseEncoding_Alphabet () {
 @public
  NSString *name_;
  IOSCharArray *chars_;
  IOSByteArray *decodabet_;
  IOSBooleanArray *validPadding_;
}

- (jboolean)hasLowerCase;

- (jboolean)hasUpperCase;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_Alphabet, name_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_Alphabet, chars_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_Alphabet, decodabet_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_Alphabet, validPadding_, IOSBooleanArray *)

__attribute__((unused)) static jboolean ComGoogleCommonIoBaseEncoding_Alphabet_hasLowerCase(ComGoogleCommonIoBaseEncoding_Alphabet *self);

__attribute__((unused)) static jboolean ComGoogleCommonIoBaseEncoding_Alphabet_hasUpperCase(ComGoogleCommonIoBaseEncoding_Alphabet *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_Alphabet__Annotations$0();

@interface ComGoogleCommonIoBaseEncoding_StandardBaseEncoding () {
 @public
  ComGoogleCommonIoBaseEncoding *upperCase_;
  ComGoogleCommonIoBaseEncoding *lowerCase_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, upperCase_, ComGoogleCommonIoBaseEncoding *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, lowerCase_, ComGoogleCommonIoBaseEncoding *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$4();

@interface ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 : JavaIoOutputStream {
 @public
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *this$0_;
  JavaIoWriter *val$out_;
  jint bitBuffer_;
  jint bitBufferLength_;
  jint writtenChars_;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *)outer$
                                                          withJavaIoWriter:(JavaIoWriter *)capture$0;

- (void)writeWithInt:(jint)b;

- (void)flush;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *self, ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0);

@interface ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 : JavaIoInputStream {
 @public
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *this$0_;
  JavaIoReader *val$reader_;
  jint bitBuffer_;
  jint bitBufferLength_;
  jint readChars_;
  jboolean hitPadding_;
  ComGoogleCommonBaseCharMatcher *paddingMatcher_;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *)outer$
                                                          withJavaIoReader:(JavaIoReader *)capture$0;

- (jint)read;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2, paddingMatcher_, ComGoogleCommonBaseCharMatcher *)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *self, ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0);

@interface ComGoogleCommonIoBaseEncoding_Base16Encoding ()

- (instancetype)initWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet;

@end

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Base16Encoding *self, ComGoogleCommonIoBaseEncoding_Alphabet *alphabet);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_Base16Encoding *new_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_Base16Encoding *create_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base16Encoding__Annotations$0();

@interface ComGoogleCommonIoBaseEncoding_Base64Encoding ()

- (instancetype)initWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                         withJavaLangCharacter:(JavaLangCharacter *)paddingChar;

@end

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Base64Encoding *self, ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_Base64Encoding *new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_Base64Encoding *create_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$2();

@interface ComGoogleCommonIoBaseEncoding_3 : JavaIoReader {
 @public
  ComGoogleCommonBaseCharMatcher *val$toIgnore_;
  JavaIoReader *val$delegate_;
}

- (instancetype)initWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)capture$0
                                      withJavaIoReader:(JavaIoReader *)capture$1;

- (jint)read;

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_3)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_3 *self, ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_3 *new_ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_3 *create_ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1);

@interface ComGoogleCommonIoBaseEncoding_4 : NSObject < JavaLangAppendable > {
 @public
  jint val$afterEveryChars_;
  id<JavaLangAppendable> val$delegate_;
  NSString *val$separator_;
  jint charsUntilSeparator_;
}

- (instancetype)initWithInt:(jint)capture$0
     withJavaLangAppendable:(id<JavaLangAppendable>)capture$1
               withNSString:(NSString *)capture$2;

- (id<JavaLangAppendable>)appendWithChar:(jchar)c;

- (id<JavaLangAppendable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars
                                                 withInt:(jint)off
                                                 withInt:(jint)len;

- (id<JavaLangAppendable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_4)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(ComGoogleCommonIoBaseEncoding_4 *self, jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_4 *new_ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_4 *create_ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2);

@interface ComGoogleCommonIoBaseEncoding_5 : JavaIoWriter {
 @public
  id<JavaLangAppendable> val$seperatingAppendable_;
  JavaIoWriter *val$delegate_;
}

- (instancetype)initWithJavaLangAppendable:(id<JavaLangAppendable>)capture$0
                          withJavaIoWriter:(JavaIoWriter *)capture$1;

- (void)writeWithInt:(jint)c;

- (void)writeWithCharArray:(IOSCharArray *)chars
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)flush;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoBaseEncoding_5)

__attribute__((unused)) static void ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_5 *self, id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1);

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_5 *new_ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoBaseEncoding_5 *create_ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1);

@interface ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding () {
 @public
  ComGoogleCommonIoBaseEncoding *delegate_;
  NSString *separator_;
  jint afterEveryChars_;
  ComGoogleCommonBaseCharMatcher *separatorChars_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding, delegate_, ComGoogleCommonIoBaseEncoding *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding, separator_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding, separatorChars_, ComGoogleCommonBaseCharMatcher *)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoBaseEncoding)

@implementation ComGoogleCommonIoBaseEncoding

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoBaseEncoding_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)encodeWithByteArray:(IOSByteArray *)bytes {
  return ComGoogleCommonIoBaseEncoding_encodeWithByteArray_withInt_withInt_(self, bytes, 0, ((IOSByteArray *) nil_chk(bytes))->size_);
}

- (NSString *)encodeWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)off
                          withInt:(jint)len {
  return ComGoogleCommonIoBaseEncoding_encodeWithByteArray_withInt_withInt_(self, bytes, off, len);
}

- (JavaIoOutputStream *)encodingStreamWithJavaIoWriter:(JavaIoWriter *)writer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoByteSink *)encodingSinkWithComGoogleCommonIoCharSink:(ComGoogleCommonIoCharSink *)encodedSink {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(encodedSink);
  return new_ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(self, encodedSink);
}

+ (IOSByteArray *)extractWithByteArray:(IOSByteArray *)result
                               withInt:(jint)length {
  return ComGoogleCommonIoBaseEncoding_extractWithByteArray_withInt_(result, length);
}

- (jboolean)canDecodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSByteArray *)decodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  @try {
    return ComGoogleCommonIoBaseEncoding_decodeCheckedWithJavaLangCharSequence_(self, chars);
  }
  @catch (ComGoogleCommonIoBaseEncoding_DecodingException *badInput) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(badInput);
  }
}

- (IOSByteArray *)decodeCheckedWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  return ComGoogleCommonIoBaseEncoding_decodeCheckedWithJavaLangCharSequence_(self, chars);
}

- (JavaIoInputStream *)decodingStreamWithJavaIoReader:(JavaIoReader *)reader {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoByteSource *)decodingSourceWithComGoogleCommonIoCharSource:(ComGoogleCommonIoCharSource *)encodedSource {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(encodedSource);
  return new_ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(self, encodedSource);
}

- (jint)maxEncodedSizeWithInt:(jint)bytes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)encodeToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                         withByteArray:(IOSByteArray *)bytes
                               withInt:(jint)off
                               withInt:(jint)len {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)maxDecodedSizeWithInt:(jint)chars {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)decodeToWithByteArray:(IOSByteArray *)target
     withJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonBaseCharMatcher *)padding {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoBaseEncoding *)omitPadding {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoBaseEncoding *)withPadCharWithChar:(jchar)padChar {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoBaseEncoding *)withSeparatorWithNSString:(NSString *)separator
                                                     withInt:(jint)n {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoBaseEncoding *)upperCase {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonIoBaseEncoding *)lowerCase {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (ComGoogleCommonIoBaseEncoding *)base64 {
  return ComGoogleCommonIoBaseEncoding_base64();
}

+ (ComGoogleCommonIoBaseEncoding *)base64Url {
  return ComGoogleCommonIoBaseEncoding_base64Url();
}

+ (ComGoogleCommonIoBaseEncoding *)base32 {
  return ComGoogleCommonIoBaseEncoding_base32();
}

+ (ComGoogleCommonIoBaseEncoding *)base32Hex {
  return ComGoogleCommonIoBaseEncoding_base32Hex();
}

+ (ComGoogleCommonIoBaseEncoding *)base16 {
  return ComGoogleCommonIoBaseEncoding_base16();
}

+ (JavaIoReader *)ignoringReaderWithJavaIoReader:(JavaIoReader *)delegate
              withComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)toIgnore {
  return ComGoogleCommonIoBaseEncoding_ignoringReaderWithJavaIoReader_withComGoogleCommonBaseCharMatcher_(delegate, toIgnore);
}

+ (id<JavaLangAppendable>)separatingAppendableWithJavaLangAppendable:(id<JavaLangAppendable>)delegate
                                                        withNSString:(NSString *)separator
                                                             withInt:(jint)afterEveryChars {
  return ComGoogleCommonIoBaseEncoding_separatingAppendableWithJavaLangAppendable_withNSString_withInt_(delegate, separator, afterEveryChars);
}

+ (JavaIoWriter *)separatingWriterWithJavaIoWriter:(JavaIoWriter *)delegate
                                      withNSString:(NSString *)separator
                                           withInt:(jint)afterEveryChars {
  return ComGoogleCommonIoBaseEncoding_separatingWriterWithJavaIoWriter_withNSString_withInt_(delegate, separator, afterEveryChars);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 0, 2, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSink;", 0x11, 5, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, 11, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x10, 12, 10, 13, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x401, 14, 15, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x11, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x400, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x400, 20, 21, 22, -1, -1, -1 },
    { NULL, "I", 0x400, 23, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x400, 24, 25, 13, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseCharMatcher;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x401, 26, 27, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x401, 28, 29, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x8, 30, 31, -1, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x8, 32, 33, -1, -1, -1, -1 },
    { NULL, "LJavaIoWriter;", 0x8, 34, 35, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeWithByteArray:);
  methods[2].selector = @selector(encodeWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(encodingStreamWithJavaIoWriter:);
  methods[4].selector = @selector(encodingSinkWithComGoogleCommonIoCharSink:);
  methods[5].selector = @selector(extractWithByteArray:withInt:);
  methods[6].selector = @selector(canDecodeWithJavaLangCharSequence:);
  methods[7].selector = @selector(decodeWithJavaLangCharSequence:);
  methods[8].selector = @selector(decodeCheckedWithJavaLangCharSequence:);
  methods[9].selector = @selector(decodingStreamWithJavaIoReader:);
  methods[10].selector = @selector(decodingSourceWithComGoogleCommonIoCharSource:);
  methods[11].selector = @selector(maxEncodedSizeWithInt:);
  methods[12].selector = @selector(encodeToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[13].selector = @selector(maxDecodedSizeWithInt:);
  methods[14].selector = @selector(decodeToWithByteArray:withJavaLangCharSequence:);
  methods[15].selector = @selector(padding);
  methods[16].selector = @selector(omitPadding);
  methods[17].selector = @selector(withPadCharWithChar:);
  methods[18].selector = @selector(withSeparatorWithNSString:withInt:);
  methods[19].selector = @selector(upperCase);
  methods[20].selector = @selector(lowerCase);
  methods[21].selector = @selector(base64);
  methods[22].selector = @selector(base64Url);
  methods[23].selector = @selector(base32);
  methods[24].selector = @selector(base32Hex);
  methods[25].selector = @selector(base16);
  methods[26].selector = @selector(ignoringReaderWithJavaIoReader:withComGoogleCommonBaseCharMatcher:);
  methods[27].selector = @selector(separatingAppendableWithJavaLangAppendable:withNSString:withInt:);
  methods[28].selector = @selector(separatingWriterWithJavaIoWriter:withNSString:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE64", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "BASE64_URL", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "BASE32", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "BASE32_HEX", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "BASE16", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
  };
  static const void *ptrTable[] = { "encode", "[B", "[BII", "encodingStream", "LJavaIoWriter;", "encodingSink", "LComGoogleCommonIoCharSink;", "extract", "[BI", "canDecode", "LJavaLangCharSequence;", "decode", "decodeChecked", "LComGoogleCommonIoBaseEncoding_DecodingException;", "decodingStream", "LJavaIoReader;", "decodingSource", "LComGoogleCommonIoCharSource;", "maxEncodedSize", "I", "encodeTo", "LJavaLangAppendable;[BII", "LJavaIoIOException;", "maxDecodedSize", "decodeTo", "[BLJavaLangCharSequence;", "withPadChar", "C", "withSeparator", "LNSString;I", "ignoringReader", "LJavaIoReader;LComGoogleCommonBaseCharMatcher;", "separatingAppendable", "LJavaLangAppendable;LNSString;I", "separatingWriter", "LJavaIoWriter;LNSString;I", &ComGoogleCommonIoBaseEncoding_BASE64, &ComGoogleCommonIoBaseEncoding_BASE64_URL, &ComGoogleCommonIoBaseEncoding_BASE32, &ComGoogleCommonIoBaseEncoding_BASE32_HEX, &ComGoogleCommonIoBaseEncoding_BASE16, "LComGoogleCommonIoBaseEncoding_DecodingException;LComGoogleCommonIoBaseEncoding_Alphabet;LComGoogleCommonIoBaseEncoding_StandardBaseEncoding;LComGoogleCommonIoBaseEncoding_Base16Encoding;LComGoogleCommonIoBaseEncoding_Base64Encoding;LComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding = { "BaseEncoding", "com.google.common.io", ptrTable, methods, fields, 7, 0x401, 29, 5, -1, 41, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoBaseEncoding class]) {
    ComGoogleCommonIoBaseEncoding_BASE64 = new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(@"base64()", @"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", JavaLangCharacter_valueOfWithChar_('='));
    ComGoogleCommonIoBaseEncoding_BASE64_URL = new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(@"base64Url()", @"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", JavaLangCharacter_valueOfWithChar_('='));
    ComGoogleCommonIoBaseEncoding_BASE32 = new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(@"base32()", @"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", JavaLangCharacter_valueOfWithChar_('='));
    ComGoogleCommonIoBaseEncoding_BASE32_HEX = new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(@"base32Hex()", @"0123456789ABCDEFGHIJKLMNOPQRSTUV", JavaLangCharacter_valueOfWithChar_('='));
    ComGoogleCommonIoBaseEncoding_BASE16 = new_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithNSString_withNSString_(@"base16()", @"0123456789ABCDEF");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoBaseEncoding)
  }
}

@end

void ComGoogleCommonIoBaseEncoding_init(ComGoogleCommonIoBaseEncoding *self) {
  NSObject_init(self);
}

NSString *ComGoogleCommonIoBaseEncoding_encodeWithByteArray_withInt_withInt_(ComGoogleCommonIoBaseEncoding *self, IOSByteArray *bytes, jint off, jint len) {
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_initWithInt_([self maxEncodedSizeWithInt:len]);
  @try {
    [self encodeToWithJavaLangAppendable:result withByteArray:bytes withInt:off withInt:len];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
  return [result description];
}

IOSByteArray *ComGoogleCommonIoBaseEncoding_extractWithByteArray_withInt_(IOSByteArray *result, jint length) {
  ComGoogleCommonIoBaseEncoding_initialize();
  if (length == ((IOSByteArray *) nil_chk(result))->size_) {
    return result;
  }
  else {
    IOSByteArray *trunc = [IOSByteArray newArrayWithLength:length];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(result, 0, trunc, 0, length);
    return trunc;
  }
}

IOSByteArray *ComGoogleCommonIoBaseEncoding_decodeCheckedWithJavaLangCharSequence_(ComGoogleCommonIoBaseEncoding *self, id<JavaLangCharSequence> chars) {
  chars = [((ComGoogleCommonBaseCharMatcher *) nil_chk([self padding])) trimTrailingFromWithJavaLangCharSequence:chars];
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:[self maxDecodedSizeWithInt:[((id<JavaLangCharSequence>) nil_chk(chars)) java_length]]];
  jint len = [self decodeToWithByteArray:tmp withJavaLangCharSequence:chars];
  return ComGoogleCommonIoBaseEncoding_extractWithByteArray_withInt_(tmp, len);
}

ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_base64() {
  ComGoogleCommonIoBaseEncoding_initialize();
  return ComGoogleCommonIoBaseEncoding_BASE64;
}

ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_base64Url() {
  ComGoogleCommonIoBaseEncoding_initialize();
  return ComGoogleCommonIoBaseEncoding_BASE64_URL;
}

ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_base32() {
  ComGoogleCommonIoBaseEncoding_initialize();
  return ComGoogleCommonIoBaseEncoding_BASE32;
}

ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_base32Hex() {
  ComGoogleCommonIoBaseEncoding_initialize();
  return ComGoogleCommonIoBaseEncoding_BASE32_HEX;
}

ComGoogleCommonIoBaseEncoding *ComGoogleCommonIoBaseEncoding_base16() {
  ComGoogleCommonIoBaseEncoding_initialize();
  return ComGoogleCommonIoBaseEncoding_BASE16;
}

JavaIoReader *ComGoogleCommonIoBaseEncoding_ignoringReaderWithJavaIoReader_withComGoogleCommonBaseCharMatcher_(JavaIoReader *delegate, ComGoogleCommonBaseCharMatcher *toIgnore) {
  ComGoogleCommonIoBaseEncoding_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(toIgnore);
  return new_ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(toIgnore, delegate);
}

id<JavaLangAppendable> ComGoogleCommonIoBaseEncoding_separatingAppendableWithJavaLangAppendable_withNSString_withInt_(id<JavaLangAppendable> delegate, NSString *separator, jint afterEveryChars) {
  ComGoogleCommonIoBaseEncoding_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(afterEveryChars > 0);
  return new_ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(afterEveryChars, delegate, separator);
}

JavaIoWriter *ComGoogleCommonIoBaseEncoding_separatingWriterWithJavaIoWriter_withNSString_withInt_(JavaIoWriter *delegate, NSString *separator, jint afterEveryChars) {
  ComGoogleCommonIoBaseEncoding_initialize();
  id<JavaLangAppendable> seperatingAppendable = ComGoogleCommonIoBaseEncoding_separatingAppendableWithJavaLangAppendable_withNSString_withInt_(delegate, separator, afterEveryChars);
  return new_ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(seperatingAppendable, delegate);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding)

@implementation ComGoogleCommonIoBaseEncoding_DecodingException

- (instancetype)initWithNSString:(NSString *)message {
  ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSException;", "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_DecodingException = { "DecodingException", "com.google.common.io", ptrTable, methods, NULL, 7, 0x19, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_DecodingException;
}

@end

void ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(ComGoogleCommonIoBaseEncoding_DecodingException *self, NSString *message) {
  JavaIoIOException_initWithNSString_(self, message);
}

ComGoogleCommonIoBaseEncoding_DecodingException *new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_DecodingException, initWithNSString_, message)
}

ComGoogleCommonIoBaseEncoding_DecodingException *create_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_DecodingException, initWithNSString_, message)
}

void ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSException_(ComGoogleCommonIoBaseEncoding_DecodingException *self, NSException *cause) {
  JavaIoIOException_initWithNSException_(self, cause);
}

ComGoogleCommonIoBaseEncoding_DecodingException *new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_DecodingException, initWithNSException_, cause)
}

ComGoogleCommonIoBaseEncoding_DecodingException *create_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_DecodingException, initWithNSException_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_DecodingException)

@implementation ComGoogleCommonIoBaseEncoding_1

- (instancetype)initWithComGoogleCommonIoBaseEncoding:(ComGoogleCommonIoBaseEncoding *)outer$
                        withComGoogleCommonIoCharSink:(ComGoogleCommonIoCharSink *)capture$0 {
  ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(self, outer$, capture$0);
  return self;
}

- (JavaIoOutputStream *)openStream {
  return [this$0_ encodingStreamWithJavaIoWriter:[((ComGoogleCommonIoCharSink *) nil_chk(val$encodedSink_)) openStream]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoBaseEncoding:withComGoogleCommonIoCharSink:);
  methods[1].selector = @selector(openStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$encodedSink_", "LComGoogleCommonIoCharSink;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "LComGoogleCommonIoBaseEncoding;", "encodingSinkWithComGoogleCommonIoCharSink:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_1 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_1;
}

@end

void ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding_1 *self, ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0) {
  self->this$0_ = outer$;
  self->val$encodedSink_ = capture$0;
  ComGoogleCommonIoByteSink_init(self);
}

ComGoogleCommonIoBaseEncoding_1 *new_ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_1, initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_, outer$, capture$0)
}

ComGoogleCommonIoBaseEncoding_1 *create_ComGoogleCommonIoBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSink *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_1, initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSink_, outer$, capture$0)
}

@implementation ComGoogleCommonIoBaseEncoding_2

- (instancetype)initWithComGoogleCommonIoBaseEncoding:(ComGoogleCommonIoBaseEncoding *)outer$
                      withComGoogleCommonIoCharSource:(ComGoogleCommonIoCharSource *)capture$0 {
  ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(self, outer$, capture$0);
  return self;
}

- (JavaIoInputStream *)openStream {
  return [this$0_ decodingStreamWithJavaIoReader:[((ComGoogleCommonIoCharSource *) nil_chk(val$encodedSource_)) openStream]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoBaseEncoding:withComGoogleCommonIoCharSource:);
  methods[1].selector = @selector(openStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$encodedSource_", "LComGoogleCommonIoCharSource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "LComGoogleCommonIoBaseEncoding;", "decodingSourceWithComGoogleCommonIoCharSource:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_2 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_2;
}

@end

void ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding_2 *self, ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0) {
  self->this$0_ = outer$;
  self->val$encodedSource_ = capture$0;
  ComGoogleCommonIoByteSource_init(self);
}

ComGoogleCommonIoBaseEncoding_2 *new_ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_2, initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_, outer$, capture$0)
}

ComGoogleCommonIoBaseEncoding_2 *create_ComGoogleCommonIoBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_(ComGoogleCommonIoBaseEncoding *outer$, ComGoogleCommonIoCharSource *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_2, initWithComGoogleCommonIoBaseEncoding_withComGoogleCommonIoCharSource_, outer$, capture$0)
}

@implementation ComGoogleCommonIoBaseEncoding_Alphabet

- (instancetype)initWithNSString:(NSString *)name
                   withCharArray:(IOSCharArray *)chars {
  ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(self, name, chars);
  return self;
}

- (jchar)encodeWithInt:(jint)bits {
  return IOSCharArray_Get(nil_chk(chars_), bits);
}

- (jboolean)isValidPaddingStartPositionWithInt:(jint)index {
  return IOSBooleanArray_Get(nil_chk(validPadding_), index % charsPerChunk_);
}

- (jboolean)canDecodeWithChar:(jchar)ch {
  return ch <= ComGoogleCommonBaseAscii_MAX && IOSByteArray_Get(nil_chk(decodabet_), ch) != -1;
}

- (jint)decodeWithChar:(jchar)ch {
  if (ch > ComGoogleCommonBaseAscii_MAX || IOSByteArray_Get(nil_chk(decodabet_), ch) == -1) {
    @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$@", @"Unrecognized character: ", ([((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_invisible())) matchesWithChar:ch] ? JreStrcat("$$", @"0x", JavaLangInteger_toHexStringWithInt_(ch)) : (id) JavaLangCharacter_valueOfWithChar_(ch))));
  }
  return IOSByteArray_Get(nil_chk(decodabet_), ch);
}

- (jboolean)hasLowerCase {
  return ComGoogleCommonIoBaseEncoding_Alphabet_hasLowerCase(self);
}

- (jboolean)hasUpperCase {
  return ComGoogleCommonIoBaseEncoding_Alphabet_hasUpperCase(self);
}

- (ComGoogleCommonIoBaseEncoding_Alphabet *)upperCase {
  if (!ComGoogleCommonIoBaseEncoding_Alphabet_hasLowerCase(self)) {
    return self;
  }
  else {
    ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_(!ComGoogleCommonIoBaseEncoding_Alphabet_hasUpperCase(self), @"Cannot call upperCase() on a mixed-case alphabet");
    IOSCharArray *upperCased = [IOSCharArray newArrayWithLength:((IOSCharArray *) nil_chk(chars_))->size_];
    for (jint i = 0; i < chars_->size_; i++) {
      *IOSCharArray_GetRef(upperCased, i) = ComGoogleCommonBaseAscii_toUpperCaseWithChar_(IOSCharArray_Get(chars_, i));
    }
    return new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(JreStrcat("$$", name_, @".upperCase()"), upperCased);
  }
}

- (ComGoogleCommonIoBaseEncoding_Alphabet *)lowerCase {
  if (!ComGoogleCommonIoBaseEncoding_Alphabet_hasUpperCase(self)) {
    return self;
  }
  else {
    ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_(!ComGoogleCommonIoBaseEncoding_Alphabet_hasLowerCase(self), @"Cannot call lowerCase() on a mixed-case alphabet");
    IOSCharArray *lowerCased = [IOSCharArray newArrayWithLength:((IOSCharArray *) nil_chk(chars_))->size_];
    for (jint i = 0; i < chars_->size_; i++) {
      *IOSCharArray_GetRef(lowerCased, i) = ComGoogleCommonBaseAscii_toLowerCaseWithChar_(IOSCharArray_Get(chars_, i));
    }
    return new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(JreStrcat("$$", name_, @".lowerCase()"), lowerCased);
  }
}

- (jboolean)matchesWithChar:(jchar)c {
  return [((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_ascii())) matchesWithChar:c] && IOSByteArray_Get(nil_chk(decodabet_), c) != -1;
}

- (NSString *)description {
  return name_;
}

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[ComGoogleCommonIoBaseEncoding_Alphabet class]]) {
    ComGoogleCommonIoBaseEncoding_Alphabet *that = (ComGoogleCommonIoBaseEncoding_Alphabet *) cast_chk(other, [ComGoogleCommonIoBaseEncoding_Alphabet class]);
    return JavaUtilArrays_equalsWithCharArray_withCharArray_(self->chars_, ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(that))->chars_);
  }
  return false;
}

- (NSUInteger)hash {
  return JavaUtilArrays_hashCodeWithCharArray_(chars_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "C", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 3, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 6, 5, 7, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding_Alphabet;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding_Alphabet;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, 12 },
    { NULL, "I", 0x1, 13, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withCharArray:);
  methods[1].selector = @selector(encodeWithInt:);
  methods[2].selector = @selector(isValidPaddingStartPositionWithInt:);
  methods[3].selector = @selector(canDecodeWithChar:);
  methods[4].selector = @selector(decodeWithChar:);
  methods[5].selector = @selector(hasLowerCase);
  methods[6].selector = @selector(hasUpperCase);
  methods[7].selector = @selector(upperCase);
  methods[8].selector = @selector(lowerCase);
  methods[9].selector = @selector(matchesWithChar:);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "chars_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mask_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "bitsPerChar_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "charsPerChunk_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "bytesPerChunk_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "decodabet_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "validPadding_", "[Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[C", "encode", "I", "isValidPaddingStartPosition", "canDecode", "C", "decode", "LComGoogleCommonIoBaseEncoding_DecodingException;", "matches", "toString", "equals", "LNSObject;", (void *)&ComGoogleCommonIoBaseEncoding_Alphabet__Annotations$0, "hashCode", "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_Alphabet = { "Alphabet", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 13, 8, 14, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_Alphabet;
}

@end

void ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(ComGoogleCommonIoBaseEncoding_Alphabet *self, NSString *name, IOSCharArray *chars) {
  ComGoogleCommonBaseCharMatcher_init(self);
  self->name_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(name);
  self->chars_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(chars);
  @try {
    self->bitsPerChar_ = ComGoogleCommonMathIntMath_log2WithInt_withJavaMathRoundingMode_(((IOSCharArray *) nil_chk(chars))->size_, JreLoadEnum(JavaMathRoundingMode, UNNECESSARY));
  }
  @catch (JavaLangArithmeticException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_withNSException_(JreStrcat("$I", @"Illegal alphabet length ", chars->size_), e);
  }
  jint gcd = JavaLangMath_minWithInt_withInt_(8, JavaLangInteger_lowestOneBitWithInt_(self->bitsPerChar_));
  @try {
    self->charsPerChunk_ = 8 / gcd;
    self->bytesPerChunk_ = self->bitsPerChar_ / gcd;
  }
  @catch (JavaLangArithmeticException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_withNSException_(JreStrcat("$$", @"Illegal alphabet ", [NSString java_stringWithCharacters:chars]), e);
  }
  self->mask_ = chars->size_ - 1;
  IOSByteArray *decodabet = [IOSByteArray newArrayWithLength:ComGoogleCommonBaseAscii_MAX + 1];
  JavaUtilArrays_fillWithByteArray_withByte_(decodabet, (jbyte) -1);
  for (jint i = 0; i < chars->size_; i++) {
    jchar c = IOSCharArray_Get(chars, i);
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withChar_([((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_ascii())) matchesWithChar:c], @"Non-ASCII character: %s", c);
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withChar_(IOSByteArray_Get(decodabet, c) == -1, @"Duplicate character: %s", c);
    *IOSByteArray_GetRef(decodabet, c) = (jbyte) i;
  }
  self->decodabet_ = decodabet;
  IOSBooleanArray *validPadding = [IOSBooleanArray newArrayWithLength:self->charsPerChunk_];
  for (jint i = 0; i < self->bytesPerChunk_; i++) {
    *IOSBooleanArray_GetRef(validPadding, ComGoogleCommonMathIntMath_divideWithInt_withInt_withJavaMathRoundingMode_(i * 8, self->bitsPerChar_, JreLoadEnum(JavaMathRoundingMode, CEILING))) = true;
  }
  self->validPadding_ = validPadding;
}

ComGoogleCommonIoBaseEncoding_Alphabet *new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(NSString *name, IOSCharArray *chars) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_Alphabet, initWithNSString_withCharArray_, name, chars)
}

ComGoogleCommonIoBaseEncoding_Alphabet *create_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(NSString *name, IOSCharArray *chars) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_Alphabet, initWithNSString_withCharArray_, name, chars)
}

jboolean ComGoogleCommonIoBaseEncoding_Alphabet_hasLowerCase(ComGoogleCommonIoBaseEncoding_Alphabet *self) {
  {
    IOSCharArray *a__ = self->chars_;
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      if (ComGoogleCommonBaseAscii_isLowerCaseWithChar_(c)) {
        return true;
      }
    }
  }
  return false;
}

jboolean ComGoogleCommonIoBaseEncoding_Alphabet_hasUpperCase(ComGoogleCommonIoBaseEncoding_Alphabet *self) {
  {
    IOSCharArray *a__ = self->chars_;
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      if (ComGoogleCommonBaseAscii_isUpperCaseWithChar_(c)) {
        return true;
      }
    }
  }
  return false;
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_Alphabet__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_Alphabet)

@implementation ComGoogleCommonIoBaseEncoding_StandardBaseEncoding

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)alphabetChars
           withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(self, name, alphabetChars, paddingChar);
  return self;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                         withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, alphabet, paddingChar);
  return self;
}

- (ComGoogleCommonBaseCharMatcher *)padding {
  return (paddingChar_ == nil) ? ComGoogleCommonBaseCharMatcher_none() : ComGoogleCommonBaseCharMatcher_isWithChar_([((JavaLangCharacter *) nil_chk(paddingChar_)) charValue]);
}

- (jint)maxEncodedSizeWithInt:(jint)bytes {
  return ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_))->charsPerChunk_ * ComGoogleCommonMathIntMath_divideWithInt_withInt_withJavaMathRoundingMode_(bytes, alphabet_->bytesPerChunk_, JreLoadEnum(JavaMathRoundingMode, CEILING));
}

- (JavaIoOutputStream *)encodingStreamWithJavaIoWriter:(JavaIoWriter *)outArg {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(outArg);
  return new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(self, outArg);
}

- (void)encodeToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                         withByteArray:(IOSByteArray *)bytes
                               withInt:(jint)off
                               withInt:(jint)len {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  for (jint i = 0; i < len; i += alphabet_->bytesPerChunk_) {
    [self encodeChunkToWithJavaLangAppendable:target withByteArray:bytes withInt:off + i withInt:JavaLangMath_minWithInt_withInt_(((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_))->bytesPerChunk_, len - i)];
  }
}

- (void)encodeChunkToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                              withByteArray:(IOSByteArray *)bytes
                                    withInt:(jint)off
                                    withInt:(jint)len {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(len <= ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_))->bytesPerChunk_);
  jlong bitBuffer = 0;
  for (jint i = 0; i < len; ++i) {
    bitBuffer |= IOSByteArray_Get(bytes, off + i) & (jint) 0xFF;
    JreLShiftAssignLong(&bitBuffer, 8);
  }
  jint bitOffset = (len + 1) * 8 - alphabet_->bitsPerChar_;
  jint bitsProcessed = 0;
  while (bitsProcessed < len * 8) {
    jint charIndex = (jint) (JreURShift64(bitBuffer, (bitOffset - bitsProcessed))) & alphabet_->mask_;
    (void) [((id<JavaLangAppendable>) nil_chk(target)) appendWithChar:[alphabet_ encodeWithInt:charIndex]];
    bitsProcessed += alphabet_->bitsPerChar_;
  }
  if (paddingChar_ != nil) {
    while (bitsProcessed < alphabet_->bytesPerChunk_ * 8) {
      (void) [((id<JavaLangAppendable>) nil_chk(target)) appendWithChar:[paddingChar_ charValue]];
      bitsProcessed += alphabet_->bitsPerChar_;
    }
  }
}

- (jint)maxDecodedSizeWithInt:(jint)chars {
  return (jint) ((((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_))->bitsPerChar_ * (jlong) chars + 7LL) / 8LL);
}

- (jboolean)canDecodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  chars = [((ComGoogleCommonBaseCharMatcher *) nil_chk([self padding])) trimTrailingFromWithJavaLangCharSequence:chars];
  if (![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) isValidPaddingStartPositionWithInt:[((id<JavaLangCharSequence>) nil_chk(chars)) java_length]]) {
    return false;
  }
  for (jint i = 0; i < [chars java_length]; i++) {
    if (![alphabet_ canDecodeWithChar:[chars charAtWithInt:i]]) {
      return false;
    }
  }
  return true;
}

- (jint)decodeToWithByteArray:(IOSByteArray *)target
     withJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  chars = [((ComGoogleCommonBaseCharMatcher *) nil_chk([self padding])) trimTrailingFromWithJavaLangCharSequence:chars];
  if (![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) isValidPaddingStartPositionWithInt:[((id<JavaLangCharSequence>) nil_chk(chars)) java_length]]) {
    @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$I", @"Invalid input length ", [chars java_length]));
  }
  jint bytesWritten = 0;
  for (jint charIdx = 0; charIdx < [chars java_length]; charIdx += alphabet_->charsPerChunk_) {
    jlong chunk = 0;
    jint charsProcessed = 0;
    for (jint i = 0; i < alphabet_->charsPerChunk_; i++) {
      JreLShiftAssignLong(&chunk, alphabet_->bitsPerChar_);
      if (charIdx + i < [chars java_length]) {
        chunk |= [alphabet_ decodeWithChar:[chars charAtWithInt:charIdx + charsProcessed++]];
      }
    }
    jint minOffset = alphabet_->bytesPerChunk_ * 8 - charsProcessed * alphabet_->bitsPerChar_;
    for (jint offset = (alphabet_->bytesPerChunk_ - 1) * 8; offset >= minOffset; offset -= 8) {
      *IOSByteArray_GetRef(nil_chk(target), bytesWritten++) = (jbyte) ((JreURShift64(chunk, offset)) & (jint) 0xFF);
    }
  }
  return bytesWritten;
}

- (JavaIoInputStream *)decodingStreamWithJavaIoReader:(JavaIoReader *)reader {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(reader);
  return new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(self, reader);
}

- (ComGoogleCommonIoBaseEncoding *)omitPadding {
  return (paddingChar_ == nil) ? self : [self newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:alphabet_ withJavaLangCharacter:nil];
}

- (ComGoogleCommonIoBaseEncoding *)withPadCharWithChar:(jchar)padChar {
  if (8 % ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_))->bitsPerChar_ == 0 || (paddingChar_ != nil && [paddingChar_ charValue] == padChar)) {
    return self;
  }
  else {
    return [self newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:alphabet_ withJavaLangCharacter:JavaLangCharacter_valueOfWithChar_(padChar)];
  }
}

- (ComGoogleCommonIoBaseEncoding *)withSeparatorWithNSString:(NSString *)separator
                                                     withInt:(jint)afterEveryChars {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_([((ComGoogleCommonBaseCharMatcher *) nil_chk([((ComGoogleCommonBaseCharMatcher *) nil_chk([self padding])) or__WithComGoogleCommonBaseCharMatcher:alphabet_])) matchesNoneOfWithJavaLangCharSequence:separator], @"Separator (%s) cannot contain alphabet or padding characters", separator);
  return new_ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding_initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_(self, separator, afterEveryChars);
}

- (ComGoogleCommonIoBaseEncoding *)upperCase {
  ComGoogleCommonIoBaseEncoding *result = upperCase_;
  if (result == nil) {
    ComGoogleCommonIoBaseEncoding_Alphabet *upper = [((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) upperCase];
    result = upperCase_ = (upper == alphabet_) ? self : [self newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:upper withJavaLangCharacter:paddingChar_];
  }
  return result;
}

- (ComGoogleCommonIoBaseEncoding *)lowerCase {
  ComGoogleCommonIoBaseEncoding *result = lowerCase_;
  if (result == nil) {
    ComGoogleCommonIoBaseEncoding_Alphabet *lower = [((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) lowerCase];
    result = lowerCase_ = (lower == alphabet_) ? self : [self newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:lower withJavaLangCharacter:paddingChar_];
  }
  return result;
}

- (ComGoogleCommonIoBaseEncoding *)newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                                                   withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  return new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(alphabet, paddingChar);
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithNSString_(@"BaseEncoding.");
  (void) [builder appendWithNSString:[((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) description]];
  if (8 % alphabet_->bitsPerChar_ != 0) {
    if (paddingChar_ == nil) {
      (void) [builder appendWithNSString:@".omitPadding()"];
    }
    else {
      (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@".withPadChar('"])) appendWithId:paddingChar_])) appendWithNSString:@"')"];
    }
  }
  return [builder description];
}

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[ComGoogleCommonIoBaseEncoding_StandardBaseEncoding class]]) {
    ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *that = (ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *) cast_chk(other, [ComGoogleCommonIoBaseEncoding_StandardBaseEncoding class]);
    return [((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(self->alphabet_)) isEqual:((ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *) nil_chk(that))->alphabet_] && ComGoogleCommonBaseObjects_equalWithId_withId_(self->paddingChar_, that->paddingChar_);
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) hash]) ^ ComGoogleCommonBaseObjects_hashCodeWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ paddingChar_ } count:1 type:NSObject_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, 3 },
    { NULL, "LComGoogleCommonBaseCharMatcher;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 9, 10, -1, -1, -1 },
    { NULL, "I", 0x0, 12, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 15, 16, 17, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x0, 24, 2, -1, -1, -1, 25 },
    { NULL, "LNSString;", 0x1, 26, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 27, 28, -1, -1, -1, 29 },
    { NULL, "I", 0x1, 30, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withJavaLangCharacter:);
  methods[1].selector = @selector(initWithComGoogleCommonIoBaseEncoding_Alphabet:withJavaLangCharacter:);
  methods[2].selector = @selector(padding);
  methods[3].selector = @selector(maxEncodedSizeWithInt:);
  methods[4].selector = @selector(encodingStreamWithJavaIoWriter:);
  methods[5].selector = @selector(encodeToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[6].selector = @selector(encodeChunkToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[7].selector = @selector(maxDecodedSizeWithInt:);
  methods[8].selector = @selector(canDecodeWithJavaLangCharSequence:);
  methods[9].selector = @selector(decodeToWithByteArray:withJavaLangCharSequence:);
  methods[10].selector = @selector(decodingStreamWithJavaIoReader:);
  methods[11].selector = @selector(omitPadding);
  methods[12].selector = @selector(withPadCharWithChar:);
  methods[13].selector = @selector(withSeparatorWithNSString:withInt:);
  methods[14].selector = @selector(upperCase);
  methods[15].selector = @selector(lowerCase);
  methods[16].selector = @selector(newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:withJavaLangCharacter:);
  methods[17].selector = @selector(description);
  methods[18].selector = @selector(isEqual:);
  methods[19].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alphabet_", "LComGoogleCommonIoBaseEncoding_Alphabet;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "paddingChar_", "LJavaLangCharacter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, 31 },
    { "upperCase_", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "lowerCase_", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LJavaLangCharacter;", (void *)&ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$0, "LComGoogleCommonIoBaseEncoding_Alphabet;LJavaLangCharacter;", (void *)&ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$1, "maxEncodedSize", "I", "encodingStream", "LJavaIoWriter;", "encodeTo", "LJavaLangAppendable;[BII", "LJavaIoIOException;", "encodeChunkTo", "maxDecodedSize", "canDecode", "LJavaLangCharSequence;", "decodeTo", "[BLJavaLangCharSequence;", "LComGoogleCommonIoBaseEncoding_DecodingException;", "decodingStream", "LJavaIoReader;", "withPadChar", "C", "withSeparator", "LNSString;I", "newInstance", (void *)&ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$2, "toString", "equals", "LNSObject;", (void *)&ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$3, "hashCode", (void *)&ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$4, "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_StandardBaseEncoding = { "StandardBaseEncoding", "com.google.common.io", ptrTable, methods, fields, 7, 0x8, 20, 4, 32, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding;
}

@end

void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *self, NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(name, [((NSString *) nil_chk(alphabetChars)) java_toCharArray]), paddingChar);
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, initWithNSString_withNSString_withJavaLangCharacter_, name, alphabetChars, paddingChar)
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithNSString_withNSString_withJavaLangCharacter_(NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, initWithNSString_withNSString_withJavaLangCharacter_, name, alphabetChars, paddingChar)
}

void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *self, ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  ComGoogleCommonIoBaseEncoding_init(self);
  self->alphabet_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(alphabet);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_(paddingChar == nil || ![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet)) matchesWithChar:[paddingChar charValue]], @"Padding character %s was already in alphabet", paddingChar);
  self->paddingChar_ = paddingChar;
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_, alphabet, paddingChar)
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_, alphabet, paddingChar)
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_StandardBaseEncoding__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding)

@implementation ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1

- (instancetype)initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *)outer$
                                                          withJavaIoWriter:(JavaIoWriter *)capture$0 {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(self, outer$, capture$0);
  return self;
}

- (void)writeWithInt:(jint)b {
  JreLShiftAssignInt(&bitBuffer_, 8);
  bitBuffer_ |= b & (jint) 0xFF;
  bitBufferLength_ += 8;
  while (bitBufferLength_ >= ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(this$0_->alphabet_))->bitsPerChar_) {
    jint charIndex = (JreRShift32(bitBuffer_, (bitBufferLength_ - this$0_->alphabet_->bitsPerChar_))) & this$0_->alphabet_->mask_;
    [((JavaIoWriter *) nil_chk(val$out_)) writeWithInt:[this$0_->alphabet_ encodeWithInt:charIndex]];
    writtenChars_++;
    bitBufferLength_ -= this$0_->alphabet_->bitsPerChar_;
  }
}

- (void)flush {
  [((JavaIoWriter *) nil_chk(val$out_)) flush];
}

- (void)close {
  if (bitBufferLength_ > 0) {
    jint charIndex = (JreLShift32(bitBuffer_, (((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(this$0_->alphabet_))->bitsPerChar_ - bitBufferLength_))) & this$0_->alphabet_->mask_;
    [((JavaIoWriter *) nil_chk(val$out_)) writeWithInt:[this$0_->alphabet_ encodeWithInt:charIndex]];
    writtenChars_++;
    if (this$0_->paddingChar_ != nil) {
      while (writtenChars_ % this$0_->alphabet_->charsPerChunk_ != 0) {
        [val$out_ writeWithInt:[this$0_->paddingChar_ charValue]];
        writtenChars_++;
      }
    }
  }
  [((JavaIoWriter *) nil_chk(val$out_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:withJavaIoWriter:);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(flush);
  methods[3].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoBaseEncoding_StandardBaseEncoding;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$out_", "LJavaIoWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "bitBuffer_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bitBufferLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "writtenChars_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "write", "I", "LJavaIoIOException;", "LComGoogleCommonIoBaseEncoding_StandardBaseEncoding;", "encodingStreamWithJavaIoWriter:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 4, 5, 3, -1, 4, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1;
}

@end

void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *self, ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0) {
  self->this$0_ = outer$;
  self->val$out_ = capture$0;
  JavaIoOutputStream_init(self);
  self->bitBuffer_ = 0;
  self->bitBufferLength_ = 0;
  self->writtenChars_ = 0;
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1, initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_, outer$, capture$0)
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1 *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoWriter *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_1, initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoWriter_, outer$, capture$0)
}

@implementation ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2

- (instancetype)initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *)outer$
                                                          withJavaIoReader:(JavaIoReader *)capture$0 {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(self, outer$, capture$0);
  return self;
}

- (jint)read {
  while (true) {
    jint readChar = [((JavaIoReader *) nil_chk(val$reader_)) read];
    if (readChar == -1) {
      if (!hitPadding_ && ![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(this$0_->alphabet_)) isValidPaddingStartPositionWithInt:readChars_]) {
        @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$I", @"Invalid input length ", readChars_));
      }
      return -1;
    }
    readChars_++;
    jchar ch = (jchar) readChar;
    if ([((ComGoogleCommonBaseCharMatcher *) nil_chk(paddingMatcher_)) matchesWithChar:ch]) {
      if (!hitPadding_ && (readChars_ == 1 || ![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(this$0_->alphabet_)) isValidPaddingStartPositionWithInt:readChars_ - 1])) {
        @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$I", @"Padding cannot start at index ", readChars_));
      }
      hitPadding_ = true;
    }
    else if (hitPadding_) {
      @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$C$I", @"Expected padding character but found '", ch, @"' at index ", readChars_));
    }
    else {
      JreLShiftAssignInt(&bitBuffer_, ((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(this$0_->alphabet_))->bitsPerChar_);
      bitBuffer_ |= [this$0_->alphabet_ decodeWithChar:ch];
      bitBufferLength_ += this$0_->alphabet_->bitsPerChar_;
      if (bitBufferLength_ >= 8) {
        bitBufferLength_ -= 8;
        return (JreRShift32(bitBuffer_, bitBufferLength_)) & (jint) 0xFF;
      }
    }
  }
}

- (void)close {
  [((JavaIoReader *) nil_chk(val$reader_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding:withJavaIoReader:);
  methods[1].selector = @selector(read);
  methods[2].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoBaseEncoding_StandardBaseEncoding;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$reader_", "LJavaIoReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "bitBuffer_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bitBufferLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "readChars_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hitPadding_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "paddingMatcher_", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "LComGoogleCommonIoBaseEncoding_StandardBaseEncoding;", "decodingStreamWithJavaIoReader:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 3, 7, 1, -1, 2, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2;
}

@end

void ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *self, ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0) {
  self->this$0_ = outer$;
  self->val$reader_ = capture$0;
  JavaIoInputStream_init(self);
  self->bitBuffer_ = 0;
  self->bitBufferLength_ = 0;
  self->readChars_ = 0;
  self->hitPadding_ = false;
  self->paddingMatcher_ = [outer$ padding];
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *new_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2, initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_, outer$, capture$0)
}

ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2 *create_ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2_initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding *outer$, JavaIoReader *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_2, initWithComGoogleCommonIoBaseEncoding_StandardBaseEncoding_withJavaIoReader_, outer$, capture$0)
}

@implementation ComGoogleCommonIoBaseEncoding_Base16Encoding

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)alphabetChars {
  ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithNSString_withNSString_(self, name, alphabetChars);
  return self;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet {
  ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(self, alphabet);
  return self;
}

- (void)encodeToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                         withByteArray:(IOSByteArray *)bytes
                               withInt:(jint)off
                               withInt:(jint)len {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  for (jint i = 0; i < len; ++i) {
    jint b = IOSByteArray_Get(bytes, off + i) & (jint) 0xFF;
    (void) [((id<JavaLangAppendable>) nil_chk(target)) appendWithChar:IOSCharArray_Get(nil_chk(encoding_), b)];
    (void) [target appendWithChar:IOSCharArray_Get(encoding_, b | (jint) 0x100)];
  }
}

- (jint)decodeToWithByteArray:(IOSByteArray *)target
     withJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  if ([((id<JavaLangCharSequence>) nil_chk(chars)) java_length] % 2 == 1) {
    @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$I", @"Invalid input length ", [chars java_length]));
  }
  jint bytesWritten = 0;
  for (jint i = 0; i < [chars java_length]; i += 2) {
    jint decoded = (JreLShift32([((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) decodeWithChar:[chars charAtWithInt:i]], 4)) | [alphabet_ decodeWithChar:[chars charAtWithInt:i + 1]];
    *IOSByteArray_GetRef(nil_chk(target), bytesWritten++) = (jbyte) decoded;
  }
  return bytesWritten;
}

- (ComGoogleCommonIoBaseEncoding *)newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                                                   withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  return new_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(alphabet);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, -1, -1, -1 },
    { NULL, "I", 0x0, 5, 6, 7, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x0, 8, 9, -1, -1, -1, 10 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(initWithComGoogleCommonIoBaseEncoding_Alphabet:);
  methods[2].selector = @selector(encodeToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[3].selector = @selector(decodeToWithByteArray:withJavaLangCharSequence:);
  methods[4].selector = @selector(newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:withJavaLangCharacter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encoding_", "[C", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "LComGoogleCommonIoBaseEncoding_Alphabet;", "encodeTo", "LJavaLangAppendable;[BII", "LJavaIoIOException;", "decodeTo", "[BLJavaLangCharSequence;", "LComGoogleCommonIoBaseEncoding_DecodingException;", "newInstance", "LComGoogleCommonIoBaseEncoding_Alphabet;LJavaLangCharacter;", (void *)&ComGoogleCommonIoBaseEncoding_Base16Encoding__Annotations$0, "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_Base16Encoding = { "Base16Encoding", "com.google.common.io", ptrTable, methods, fields, 7, 0x18, 5, 1, 11, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_Base16Encoding;
}

@end

void ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithNSString_withNSString_(ComGoogleCommonIoBaseEncoding_Base16Encoding *self, NSString *name, NSString *alphabetChars) {
  ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(self, new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(name, [((NSString *) nil_chk(alphabetChars)) java_toCharArray]));
}

ComGoogleCommonIoBaseEncoding_Base16Encoding *new_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithNSString_withNSString_(NSString *name, NSString *alphabetChars) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_Base16Encoding, initWithNSString_withNSString_, name, alphabetChars)
}

ComGoogleCommonIoBaseEncoding_Base16Encoding *create_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithNSString_withNSString_(NSString *name, NSString *alphabetChars) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_Base16Encoding, initWithNSString_withNSString_, name, alphabetChars)
}

void ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Base16Encoding *self, ComGoogleCommonIoBaseEncoding_Alphabet *alphabet) {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, alphabet, nil);
  self->encoding_ = [IOSCharArray newArrayWithLength:512];
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSCharArray *) nil_chk(((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet))->chars_))->size_ == 16);
  for (jint i = 0; i < 256; ++i) {
    *IOSCharArray_GetRef(self->encoding_, i) = [alphabet encodeWithInt:JreURShift32(i, 4)];
    *IOSCharArray_GetRef(self->encoding_, i | (jint) 0x100) = [alphabet encodeWithInt:i & (jint) 0xF];
  }
}

ComGoogleCommonIoBaseEncoding_Base16Encoding *new_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_Base16Encoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_, alphabet)
}

ComGoogleCommonIoBaseEncoding_Base16Encoding *create_ComGoogleCommonIoBaseEncoding_Base16Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_Base16Encoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_, alphabet)
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base16Encoding__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_Base16Encoding)

@implementation ComGoogleCommonIoBaseEncoding_Base64Encoding

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)alphabetChars
           withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(self, name, alphabetChars, paddingChar);
  return self;
}

- (instancetype)initWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                         withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, alphabet, paddingChar);
  return self;
}

- (void)encodeToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                         withByteArray:(IOSByteArray *)bytes
                               withInt:(jint)off
                               withInt:(jint)len {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(off, off + len, ((IOSByteArray *) nil_chk(bytes))->size_);
  jint i = off;
  for (jint remaining = len; remaining >= 3; remaining -= 3) {
    jint unseq$1 = i++;
    jint unseq$2 = i++;
    jint chunk = (JreLShift32((IOSByteArray_Get(bytes, unseq$1) & (jint) 0xFF), 16)) | (JreLShift32((IOSByteArray_Get(bytes, unseq$2) & (jint) 0xFF), 8)) | (IOSByteArray_Get(bytes, i++) & (jint) 0xFF);
    (void) [((id<JavaLangAppendable>) nil_chk(target)) appendWithChar:[((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) encodeWithInt:JreURShift32(chunk, 18)]];
    (void) [target appendWithChar:[alphabet_ encodeWithInt:(JreURShift32(chunk, 12)) & (jint) 0x3F]];
    (void) [target appendWithChar:[alphabet_ encodeWithInt:(JreURShift32(chunk, 6)) & (jint) 0x3F]];
    (void) [target appendWithChar:[alphabet_ encodeWithInt:chunk & (jint) 0x3F]];
  }
  if (i < off + len) {
    [self encodeChunkToWithJavaLangAppendable:target withByteArray:bytes withInt:i withInt:off + len - i];
  }
}

- (jint)decodeToWithByteArray:(IOSByteArray *)target
     withJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(target);
  chars = [((ComGoogleCommonBaseCharMatcher *) nil_chk([self padding])) trimTrailingFromWithJavaLangCharSequence:chars];
  if (![((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet_)) isValidPaddingStartPositionWithInt:[((id<JavaLangCharSequence>) nil_chk(chars)) java_length]]) {
    @throw new_ComGoogleCommonIoBaseEncoding_DecodingException_initWithNSString_(JreStrcat("$I", @"Invalid input length ", [chars java_length]));
  }
  jint bytesWritten = 0;
  for (jint i = 0; i < [chars java_length]; ) {
    jint chunk = JreLShift32([alphabet_ decodeWithChar:[chars charAtWithInt:i++]], 18);
    chunk |= JreLShift32([alphabet_ decodeWithChar:[chars charAtWithInt:i++]], 12);
    *IOSByteArray_GetRef(nil_chk(target), bytesWritten++) = (jbyte) (JreURShift32(chunk, 16));
    if (i < [chars java_length]) {
      chunk |= JreLShift32([alphabet_ decodeWithChar:[chars charAtWithInt:i++]], 6);
      *IOSByteArray_GetRef(target, bytesWritten++) = (jbyte) ((JreURShift32(chunk, 8)) & (jint) 0xFF);
      if (i < [chars java_length]) {
        chunk |= [alphabet_ decodeWithChar:[chars charAtWithInt:i++]];
        *IOSByteArray_GetRef(target, bytesWritten++) = (jbyte) (chunk & (jint) 0xFF);
      }
    }
  }
  return bytesWritten;
}

- (ComGoogleCommonIoBaseEncoding *)newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:(ComGoogleCommonIoBaseEncoding_Alphabet *)alphabet
                                                                   withJavaLangCharacter:(JavaLangCharacter *)paddingChar {
  return new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(alphabet, paddingChar);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, 3 },
    { NULL, "V", 0x0, 4, 5, 6, -1, -1, -1 },
    { NULL, "I", 0x0, 7, 8, 9, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x0, 10, 2, -1, -1, -1, 11 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withJavaLangCharacter:);
  methods[1].selector = @selector(initWithComGoogleCommonIoBaseEncoding_Alphabet:withJavaLangCharacter:);
  methods[2].selector = @selector(encodeToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[3].selector = @selector(decodeToWithByteArray:withJavaLangCharSequence:);
  methods[4].selector = @selector(newInstanceWithComGoogleCommonIoBaseEncoding_Alphabet:withJavaLangCharacter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LNSString;LJavaLangCharacter;", (void *)&ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$0, "LComGoogleCommonIoBaseEncoding_Alphabet;LJavaLangCharacter;", (void *)&ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$1, "encodeTo", "LJavaLangAppendable;[BII", "LJavaIoIOException;", "decodeTo", "[BLJavaLangCharSequence;", "LComGoogleCommonIoBaseEncoding_DecodingException;", "newInstance", (void *)&ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$2, "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_Base64Encoding = { "Base64Encoding", "com.google.common.io", ptrTable, methods, NULL, 7, 0x18, 5, 0, 12, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_Base64Encoding;
}

@end

void ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Base64Encoding *self, NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, new_ComGoogleCommonIoBaseEncoding_Alphabet_initWithNSString_withCharArray_(name, [((NSString *) nil_chk(alphabetChars)) java_toCharArray]), paddingChar);
}

ComGoogleCommonIoBaseEncoding_Base64Encoding *new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_Base64Encoding, initWithNSString_withNSString_withJavaLangCharacter_, name, alphabetChars, paddingChar)
}

ComGoogleCommonIoBaseEncoding_Base64Encoding *create_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithNSString_withNSString_withJavaLangCharacter_(NSString *name, NSString *alphabetChars, JavaLangCharacter *paddingChar) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_Base64Encoding, initWithNSString_withNSString_withJavaLangCharacter_, name, alphabetChars, paddingChar)
}

void ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Base64Encoding *self, ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  ComGoogleCommonIoBaseEncoding_StandardBaseEncoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(self, alphabet, paddingChar);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSCharArray *) nil_chk(((ComGoogleCommonIoBaseEncoding_Alphabet *) nil_chk(alphabet))->chars_))->size_ == 64);
}

ComGoogleCommonIoBaseEncoding_Base64Encoding *new_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_Base64Encoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_, alphabet, paddingChar)
}

ComGoogleCommonIoBaseEncoding_Base64Encoding *create_ComGoogleCommonIoBaseEncoding_Base64Encoding_initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_(ComGoogleCommonIoBaseEncoding_Alphabet *alphabet, JavaLangCharacter *paddingChar) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_Base64Encoding, initWithComGoogleCommonIoBaseEncoding_Alphabet_withJavaLangCharacter_, alphabet, paddingChar)
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonIoBaseEncoding_Base64Encoding__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_Base64Encoding)

@implementation ComGoogleCommonIoBaseEncoding_3

- (instancetype)initWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)capture$0
                                      withJavaIoReader:(JavaIoReader *)capture$1 {
  ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(self, capture$0, capture$1);
  return self;
}

- (jint)read {
  jint readChar;
  do {
    readChar = [((JavaIoReader *) nil_chk(val$delegate_)) read];
  }
  while (readChar != -1 && [((ComGoogleCommonBaseCharMatcher *) nil_chk(val$toIgnore_)) matchesWithChar:(jchar) readChar]);
  return readChar;
}

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)close {
  [((JavaIoReader *) nil_chk(val$delegate_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonBaseCharMatcher:withJavaIoReader:);
  methods[1].selector = @selector(read);
  methods[2].selector = @selector(readWithCharArray:withInt:withInt:);
  methods[3].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$toIgnore_", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delegate_", "LJavaIoReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "read", "[CII", "LComGoogleCommonIoBaseEncoding;", "ignoringReaderWithJavaIoReader:withComGoogleCommonBaseCharMatcher:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_3 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 4, 2, 3, -1, 4, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_3;
}

@end

void ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonIoBaseEncoding_3 *self, ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1) {
  self->val$toIgnore_ = capture$0;
  self->val$delegate_ = capture$1;
  JavaIoReader_init(self);
}

ComGoogleCommonIoBaseEncoding_3 *new_ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_3, initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_, capture$0, capture$1)
}

ComGoogleCommonIoBaseEncoding_3 *create_ComGoogleCommonIoBaseEncoding_3_initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_(ComGoogleCommonBaseCharMatcher *capture$0, JavaIoReader *capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_3, initWithComGoogleCommonBaseCharMatcher_withJavaIoReader_, capture$0, capture$1)
}

@implementation ComGoogleCommonIoBaseEncoding_4

- (instancetype)initWithInt:(jint)capture$0
     withJavaLangAppendable:(id<JavaLangAppendable>)capture$1
               withNSString:(NSString *)capture$2 {
  ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(self, capture$0, capture$1, capture$2);
  return self;
}

- (id<JavaLangAppendable>)appendWithChar:(jchar)c {
  if (charsUntilSeparator_ == 0) {
    (void) [((id<JavaLangAppendable>) nil_chk(val$delegate_)) appendWithJavaLangCharSequence:val$separator_];
    charsUntilSeparator_ = val$afterEveryChars_;
  }
  (void) [((id<JavaLangAppendable>) nil_chk(val$delegate_)) appendWithChar:c];
  charsUntilSeparator_--;
  return self;
}

- (id<JavaLangAppendable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars
                                                 withInt:(jint)off
                                                 withInt:(jint)len {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<JavaLangAppendable>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  @throw new_JavaLangUnsupportedOperationException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 0, 3, 2, -1, -1, -1 },
    { NULL, "LJavaLangAppendable;", 0x1, 0, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withJavaLangAppendable:withNSString:);
  methods[1].selector = @selector(appendWithChar:);
  methods[2].selector = @selector(appendWithJavaLangCharSequence:withInt:withInt:);
  methods[3].selector = @selector(appendWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$afterEveryChars_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delegate_", "LJavaLangAppendable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$separator_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "charsUntilSeparator_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "append", "C", "LJavaIoIOException;", "LJavaLangCharSequence;II", "LJavaLangCharSequence;", "LComGoogleCommonIoBaseEncoding;", "separatingAppendableWithJavaLangAppendable:withNSString:withInt:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_4 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 4, 4, 5, -1, 6, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_4;
}

@end

void ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(ComGoogleCommonIoBaseEncoding_4 *self, jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2) {
  self->val$afterEveryChars_ = capture$0;
  self->val$delegate_ = capture$1;
  self->val$separator_ = capture$2;
  NSObject_init(self);
  self->charsUntilSeparator_ = capture$0;
}

ComGoogleCommonIoBaseEncoding_4 *new_ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_4, initWithInt_withJavaLangAppendable_withNSString_, capture$0, capture$1, capture$2)
}

ComGoogleCommonIoBaseEncoding_4 *create_ComGoogleCommonIoBaseEncoding_4_initWithInt_withJavaLangAppendable_withNSString_(jint capture$0, id<JavaLangAppendable> capture$1, NSString *capture$2) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_4, initWithInt_withJavaLangAppendable_withNSString_, capture$0, capture$1, capture$2)
}

@implementation ComGoogleCommonIoBaseEncoding_5

- (instancetype)initWithJavaLangAppendable:(id<JavaLangAppendable>)capture$0
                          withJavaIoWriter:(JavaIoWriter *)capture$1 {
  ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(self, capture$0, capture$1);
  return self;
}

- (void)writeWithInt:(jint)c {
  (void) [((id<JavaLangAppendable>) nil_chk(val$seperatingAppendable_)) appendWithChar:(jchar) c];
}

- (void)writeWithCharArray:(IOSCharArray *)chars
                   withInt:(jint)off
                   withInt:(jint)len {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)flush {
  [((JavaIoWriter *) nil_chk(val$delegate_)) flush];
}

- (void)close {
  [((JavaIoWriter *) nil_chk(val$delegate_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangAppendable:withJavaIoWriter:);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(writeWithCharArray:withInt:withInt:);
  methods[3].selector = @selector(flush);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$seperatingAppendable_", "LJavaLangAppendable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delegate_", "LJavaIoWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "write", "I", "LJavaIoIOException;", "[CII", "LComGoogleCommonIoBaseEncoding;", "separatingWriterWithJavaIoWriter:withNSString:withInt:" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_5 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 5, 2, 4, -1, 5, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_5;
}

@end

void ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(ComGoogleCommonIoBaseEncoding_5 *self, id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1) {
  self->val$seperatingAppendable_ = capture$0;
  self->val$delegate_ = capture$1;
  JavaIoWriter_init(self);
}

ComGoogleCommonIoBaseEncoding_5 *new_ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_5, initWithJavaLangAppendable_withJavaIoWriter_, capture$0, capture$1)
}

ComGoogleCommonIoBaseEncoding_5 *create_ComGoogleCommonIoBaseEncoding_5_initWithJavaLangAppendable_withJavaIoWriter_(id<JavaLangAppendable> capture$0, JavaIoWriter *capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_5, initWithJavaLangAppendable_withJavaIoWriter_, capture$0, capture$1)
}

@implementation ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding

- (instancetype)initWithComGoogleCommonIoBaseEncoding:(ComGoogleCommonIoBaseEncoding *)delegate
                                         withNSString:(NSString *)separator
                                              withInt:(jint)afterEveryChars {
  ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding_initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_(self, delegate, separator, afterEveryChars);
  return self;
}

- (ComGoogleCommonBaseCharMatcher *)padding {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) padding];
}

- (jint)maxEncodedSizeWithInt:(jint)bytes {
  jint unseparatedSize = [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) maxEncodedSizeWithInt:bytes];
  return unseparatedSize + [((NSString *) nil_chk(separator_)) java_length] * ComGoogleCommonMathIntMath_divideWithInt_withInt_withJavaMathRoundingMode_(JavaLangMath_maxWithInt_withInt_(0, unseparatedSize - 1), afterEveryChars_, JreLoadEnum(JavaMathRoundingMode, FLOOR));
}

- (JavaIoOutputStream *)encodingStreamWithJavaIoWriter:(JavaIoWriter *)output {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) encodingStreamWithJavaIoWriter:ComGoogleCommonIoBaseEncoding_separatingWriterWithJavaIoWriter_withNSString_withInt_(output, separator_, afterEveryChars_)];
}

- (void)encodeToWithJavaLangAppendable:(id<JavaLangAppendable>)target
                         withByteArray:(IOSByteArray *)bytes
                               withInt:(jint)off
                               withInt:(jint)len {
  [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) encodeToWithJavaLangAppendable:ComGoogleCommonIoBaseEncoding_separatingAppendableWithJavaLangAppendable_withNSString_withInt_(target, separator_, afterEveryChars_) withByteArray:bytes withInt:off withInt:len];
}

- (jint)maxDecodedSizeWithInt:(jint)chars {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) maxDecodedSizeWithInt:chars];
}

- (jboolean)canDecodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) canDecodeWithJavaLangCharSequence:[((ComGoogleCommonBaseCharMatcher *) nil_chk(separatorChars_)) removeFromWithJavaLangCharSequence:chars]];
}

- (jint)decodeToWithByteArray:(IOSByteArray *)target
     withJavaLangCharSequence:(id<JavaLangCharSequence>)chars {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) decodeToWithByteArray:target withJavaLangCharSequence:[((ComGoogleCommonBaseCharMatcher *) nil_chk(separatorChars_)) removeFromWithJavaLangCharSequence:chars]];
}

- (JavaIoInputStream *)decodingStreamWithJavaIoReader:(JavaIoReader *)reader {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) decodingStreamWithJavaIoReader:ComGoogleCommonIoBaseEncoding_ignoringReaderWithJavaIoReader_withComGoogleCommonBaseCharMatcher_(reader, separatorChars_)];
}

- (ComGoogleCommonIoBaseEncoding *)omitPadding {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk([((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) omitPadding])) withSeparatorWithNSString:separator_ withInt:afterEveryChars_];
}

- (ComGoogleCommonIoBaseEncoding *)withPadCharWithChar:(jchar)padChar {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk([((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) withPadCharWithChar:padChar])) withSeparatorWithNSString:separator_ withInt:afterEveryChars_];
}

- (ComGoogleCommonIoBaseEncoding *)withSeparatorWithNSString:(NSString *)separator
                                                     withInt:(jint)afterEveryChars {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Already have a separator");
}

- (ComGoogleCommonIoBaseEncoding *)upperCase {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk([((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) upperCase])) withSeparatorWithNSString:separator_ withInt:afterEveryChars_];
}

- (ComGoogleCommonIoBaseEncoding *)lowerCase {
  return [((ComGoogleCommonIoBaseEncoding *) nil_chk([((ComGoogleCommonIoBaseEncoding *) nil_chk(delegate_)) lowerCase])) withSeparatorWithNSString:separator_ withInt:afterEveryChars_];
}

- (NSString *)description {
  return JreStrcat("@$$$IC", delegate_, @".withSeparator(\"", separator_, @"\", ", afterEveryChars_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseCharMatcher;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, 7, -1, -1, -1 },
    { NULL, "I", 0x0, 8, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 11, 12, 13, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoBaseEncoding;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoBaseEncoding:withNSString:withInt:);
  methods[1].selector = @selector(padding);
  methods[2].selector = @selector(maxEncodedSizeWithInt:);
  methods[3].selector = @selector(encodingStreamWithJavaIoWriter:);
  methods[4].selector = @selector(encodeToWithJavaLangAppendable:withByteArray:withInt:withInt:);
  methods[5].selector = @selector(maxDecodedSizeWithInt:);
  methods[6].selector = @selector(canDecodeWithJavaLangCharSequence:);
  methods[7].selector = @selector(decodeToWithByteArray:withJavaLangCharSequence:);
  methods[8].selector = @selector(decodingStreamWithJavaIoReader:);
  methods[9].selector = @selector(omitPadding);
  methods[10].selector = @selector(withPadCharWithChar:);
  methods[11].selector = @selector(withSeparatorWithNSString:withInt:);
  methods[12].selector = @selector(upperCase);
  methods[13].selector = @selector(lowerCase);
  methods[14].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LComGoogleCommonIoBaseEncoding;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "separator_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "afterEveryChars_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "separatorChars_", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonIoBaseEncoding;LNSString;I", "maxEncodedSize", "I", "encodingStream", "LJavaIoWriter;", "encodeTo", "LJavaLangAppendable;[BII", "LJavaIoIOException;", "maxDecodedSize", "canDecode", "LJavaLangCharSequence;", "decodeTo", "[BLJavaLangCharSequence;", "LComGoogleCommonIoBaseEncoding_DecodingException;", "decodingStream", "LJavaIoReader;", "withPadChar", "C", "withSeparator", "LNSString;I", "toString", "LComGoogleCommonIoBaseEncoding;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding = { "SeparatedBaseEncoding", "com.google.common.io", ptrTable, methods, fields, 7, 0x18, 15, 4, 21, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding;
}

@end

void ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding_initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding *self, ComGoogleCommonIoBaseEncoding *delegate, NSString *separator, jint afterEveryChars) {
  ComGoogleCommonIoBaseEncoding_init(self);
  self->delegate_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate);
  self->separator_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  self->afterEveryChars_ = afterEveryChars;
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(afterEveryChars > 0, @"Cannot add a separator after every %s chars", afterEveryChars);
  self->separatorChars_ = [((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_anyOfWithJavaLangCharSequence_(separator))) precomputed];
}

ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding *new_ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding_initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_(ComGoogleCommonIoBaseEncoding *delegate, NSString *separator, jint afterEveryChars) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding, initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_, delegate, separator, afterEveryChars)
}

ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding *create_ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding_initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_(ComGoogleCommonIoBaseEncoding *delegate, NSString *separator, jint afterEveryChars) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding, initWithComGoogleCommonIoBaseEncoding_withNSString_withInt_, delegate, separator, afterEveryChars)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoBaseEncoding_SeparatedBaseEncoding)
