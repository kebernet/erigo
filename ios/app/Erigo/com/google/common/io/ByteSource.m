//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/ByteSource.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Ascii.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/hash/Funnels.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/hash/Hasher.h"
#include "com/google/common/io/BaseEncoding.h"
#include "com/google/common/io/ByteProcessor.h"
#include "com/google/common/io/ByteSink.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/ByteStreams.h"
#include "com/google/common/io/CharSource.h"
#include "com/google/common/io/Closer.h"
#include "com/google/common/io/MultiInputStream.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStream.h"
#include "java/io/Reader.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"

@interface ComGoogleCommonIoByteSource ()

- (jlong)countBySkippingWithJavaIoInputStream:(JavaIoInputStream *)inArg;

@end

__attribute__((unused)) static jlong ComGoogleCommonIoByteSource_countBySkippingWithJavaIoInputStream_(ComGoogleCommonIoByteSource *self, JavaIoInputStream *inArg);

@interface ComGoogleCommonIoByteSource_AsCharSource () {
 @public
  ComGoogleCommonIoByteSource *this$0_;
}

@end

@interface ComGoogleCommonIoByteSource_SlicedByteSource : ComGoogleCommonIoByteSource {
 @public
  ComGoogleCommonIoByteSource *this$0_;
  jlong offset_;
  jlong length_;
}

- (instancetype)initWithComGoogleCommonIoByteSource:(ComGoogleCommonIoByteSource *)outer$
                                           withLong:(jlong)offset
                                           withLong:(jlong)length;

- (JavaIoInputStream *)openStream;

- (JavaIoInputStream *)openBufferedStream;

- (JavaIoInputStream *)sliceStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (ComGoogleCommonIoByteSource *)sliceWithLong:(jlong)offset
                                      withLong:(jlong)length;

- (jboolean)isEmpty;

- (ComGoogleCommonBaseOptional *)sizeIfKnown;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteSource_SlicedByteSource)

__attribute__((unused)) static void ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource_SlicedByteSource *self, ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length);

__attribute__((unused)) static ComGoogleCommonIoByteSource_SlicedByteSource *new_ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteSource_SlicedByteSource *create_ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length);

__attribute__((unused)) static JavaIoInputStream *ComGoogleCommonIoByteSource_SlicedByteSource_sliceStreamWithJavaIoInputStream_(ComGoogleCommonIoByteSource_SlicedByteSource *self, JavaIoInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteSource_SlicedByteSource)

@interface ComGoogleCommonIoByteSource_ByteArrayByteSource : ComGoogleCommonIoByteSource {
 @public
  IOSByteArray *bytes_;
  jint offset_;
  jint length_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

- (instancetype)initWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)offset
                          withInt:(jint)length;

- (JavaIoInputStream *)openStream;

- (JavaIoInputStream *)openBufferedStream;

- (jboolean)isEmpty;

- (jlong)size;

- (ComGoogleCommonBaseOptional *)sizeIfKnown;

- (IOSByteArray *)read;

- (jlong)copyToWithJavaIoOutputStream:(JavaIoOutputStream *)output OBJC_METHOD_FAMILY_NONE;

- (id)readWithComGoogleCommonIoByteProcessor:(id<ComGoogleCommonIoByteProcessor>)processor;

- (ComGoogleCommonHashHashCode *)hash__WithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)hashFunction;

- (ComGoogleCommonIoByteSource *)sliceWithLong:(jlong)offset
                                      withLong:(jlong)length;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteSource_ByteArrayByteSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoByteSource_ByteArrayByteSource, bytes_, IOSByteArray *)

__attribute__((unused)) static void ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(ComGoogleCommonIoByteSource_ByteArrayByteSource *self, IOSByteArray *bytes);

__attribute__((unused)) static ComGoogleCommonIoByteSource_ByteArrayByteSource *new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteSource_ByteArrayByteSource *create_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(IOSByteArray *bytes);

__attribute__((unused)) static void ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(ComGoogleCommonIoByteSource_ByteArrayByteSource *self, IOSByteArray *bytes, jint offset, jint length);

__attribute__((unused)) static ComGoogleCommonIoByteSource_ByteArrayByteSource *new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteSource_ByteArrayByteSource *create_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteSource_ByteArrayByteSource)

@interface ComGoogleCommonIoByteSource_EmptyByteSource : ComGoogleCommonIoByteSource_ByteArrayByteSource

- (instancetype)init;

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (IOSByteArray *)read;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonIoByteSource_EmptyByteSource)

inline ComGoogleCommonIoByteSource_EmptyByteSource *ComGoogleCommonIoByteSource_EmptyByteSource_get_INSTANCE();
static ComGoogleCommonIoByteSource_EmptyByteSource *ComGoogleCommonIoByteSource_EmptyByteSource_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoByteSource_EmptyByteSource, INSTANCE, ComGoogleCommonIoByteSource_EmptyByteSource *)

__attribute__((unused)) static void ComGoogleCommonIoByteSource_EmptyByteSource_init(ComGoogleCommonIoByteSource_EmptyByteSource *self);

__attribute__((unused)) static ComGoogleCommonIoByteSource_EmptyByteSource *new_ComGoogleCommonIoByteSource_EmptyByteSource_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteSource_EmptyByteSource *create_ComGoogleCommonIoByteSource_EmptyByteSource_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteSource_EmptyByteSource)

@interface ComGoogleCommonIoByteSource_ConcatenatedByteSource : ComGoogleCommonIoByteSource {
 @public
  id<JavaLangIterable> sources_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources;

- (JavaIoInputStream *)openStream;

- (jboolean)isEmpty;

- (ComGoogleCommonBaseOptional *)sizeIfKnown;

- (jlong)size;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteSource_ConcatenatedByteSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoByteSource_ConcatenatedByteSource, sources_, id<JavaLangIterable>)

__attribute__((unused)) static void ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(ComGoogleCommonIoByteSource_ConcatenatedByteSource *self, id<JavaLangIterable> sources);

__attribute__((unused)) static ComGoogleCommonIoByteSource_ConcatenatedByteSource *new_ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteSource_ConcatenatedByteSource *create_ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(id<JavaLangIterable> sources);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteSource_ConcatenatedByteSource)

@implementation ComGoogleCommonIoByteSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoByteSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return new_ComGoogleCommonIoByteSource_AsCharSource_initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_(self, charset);
}

- (JavaIoInputStream *)openStream {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaIoInputStream *)openBufferedStream {
  JavaIoInputStream *in = [self openStream];
  return ([in isKindOfClass:[JavaIoBufferedInputStream class]]) ? (JavaIoBufferedInputStream *) cast_chk(in, [JavaIoBufferedInputStream class]) : new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(in);
}

- (ComGoogleCommonIoByteSource *)sliceWithLong:(jlong)offset
                                      withLong:(jlong)length {
  return new_ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(self, offset, length);
}

- (jboolean)isEmpty {
  ComGoogleCommonBaseOptional *sizeIfKnown = [self sizeIfKnown];
  if ([((ComGoogleCommonBaseOptional *) nil_chk(sizeIfKnown)) isPresent] && [((JavaLangLong *) nil_chk([sizeIfKnown get])) longLongValue] == 0LL) {
    return true;
  }
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return [((JavaIoInputStream *) nil_chk(in)) read] == -1;
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (ComGoogleCommonBaseOptional *)sizeIfKnown {
  return ComGoogleCommonBaseOptional_absent();
}

- (jlong)size {
  ComGoogleCommonBaseOptional *sizeIfKnown = [self sizeIfKnown];
  if ([((ComGoogleCommonBaseOptional *) nil_chk(sizeIfKnown)) isPresent]) {
    return [((JavaLangLong *) nil_chk([sizeIfKnown get])) longLongValue];
  }
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoByteSource_countBySkippingWithJavaIoInputStream_(self, in);
  }
  @catch (JavaIoIOException *e) {
  }
  @finally {
    [closer close];
  }
  closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoByteStreams_exhaustWithJavaIoInputStream_(in);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (jlong)countBySkippingWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return ComGoogleCommonIoByteSource_countBySkippingWithJavaIoInputStream_(self, inArg);
}

- (jlong)copyToWithJavaIoOutputStream:(JavaIoOutputStream *)output {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(output);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(in, output);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (jlong)copyToWithComGoogleCommonIoByteSink:(ComGoogleCommonIoByteSink *)sink {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(sink);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    JavaIoOutputStream *out = ((JavaIoOutputStream *) [closer register__WithJavaIoCloseable:[((ComGoogleCommonIoByteSink *) nil_chk(sink)) openStream]]);
    return ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(in, out);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (IOSByteArray *)read {
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_(in);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (id)readWithComGoogleCommonIoByteProcessor:(id<ComGoogleCommonIoByteProcessor>)processor {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(processor);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoByteStreams_readBytesWithJavaIoInputStream_withComGoogleCommonIoByteProcessor_(in, processor);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (ComGoogleCommonHashHashCode *)hash__WithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)hashFunction {
  id<ComGoogleCommonHashHasher> hasher = [((id<ComGoogleCommonHashHashFunction>) nil_chk(hashFunction)) newHasher];
  [self copyToWithJavaIoOutputStream:ComGoogleCommonHashFunnels_asOutputStreamWithComGoogleCommonHashPrimitiveSink_(hasher)];
  return [((id<ComGoogleCommonHashHasher>) nil_chk(hasher)) hash__];
}

- (jboolean)contentEqualsWithComGoogleCommonIoByteSource:(ComGoogleCommonIoByteSource *)other {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(other);
  IOSByteArray *buf1 = ComGoogleCommonIoByteStreams_createBuffer();
  IOSByteArray *buf2 = ComGoogleCommonIoByteStreams_createBuffer();
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoInputStream *in1 = ((JavaIoInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    JavaIoInputStream *in2 = ((JavaIoInputStream *) [closer register__WithJavaIoCloseable:[((ComGoogleCommonIoByteSource *) nil_chk(other)) openStream]]);
    while (true) {
      jint read1 = ComGoogleCommonIoByteStreams_readWithJavaIoInputStream_withByteArray_withInt_withInt_(in1, buf1, 0, ((IOSByteArray *) nil_chk(buf1))->size_);
      jint read2 = ComGoogleCommonIoByteStreams_readWithJavaIoInputStream_withByteArray_withInt_withInt_(in2, buf2, 0, ((IOSByteArray *) nil_chk(buf2))->size_);
      if (read1 != read2 || !JavaUtilArrays_equalsWithByteArray_withByteArray_(buf1, buf2)) {
        return false;
      }
      else if (read1 != buf1->size_) {
        return true;
      }
    }
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

+ (ComGoogleCommonIoByteSource *)concatWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return ComGoogleCommonIoByteSource_concatWithJavaLangIterable_(sources);
}

+ (ComGoogleCommonIoByteSource *)concatWithJavaUtilIterator:(id<JavaUtilIterator>)sources {
  return ComGoogleCommonIoByteSource_concatWithJavaUtilIterator_(sources);
}

+ (ComGoogleCommonIoByteSource *)concatWithComGoogleCommonIoByteSourceArray:(IOSObjectArray *)sources {
  return ComGoogleCommonIoByteSource_concatWithComGoogleCommonIoByteSourceArray_(sources);
}

+ (ComGoogleCommonIoByteSource *)wrapWithByteArray:(IOSByteArray *)b {
  return ComGoogleCommonIoByteSource_wrapWithByteArray_(b);
}

+ (ComGoogleCommonIoByteSource *)empty {
  return ComGoogleCommonIoByteSource_empty();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "J", 0x2, 6, 7, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 8, 9, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 8, 10, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, 12, 2, 13, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 14, 15, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x9, 18, 19, -1, 20, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x9, 18, 21, -1, 22, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x89, 18, 23, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x9, 24, 25, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(asCharSourceWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(openStream);
  methods[3].selector = @selector(openBufferedStream);
  methods[4].selector = @selector(sliceWithLong:withLong:);
  methods[5].selector = @selector(isEmpty);
  methods[6].selector = @selector(sizeIfKnown);
  methods[7].selector = @selector(size);
  methods[8].selector = @selector(countBySkippingWithJavaIoInputStream:);
  methods[9].selector = @selector(copyToWithJavaIoOutputStream:);
  methods[10].selector = @selector(copyToWithComGoogleCommonIoByteSink:);
  methods[11].selector = @selector(read);
  methods[12].selector = @selector(readWithComGoogleCommonIoByteProcessor:);
  methods[13].selector = @selector(hash__WithComGoogleCommonHashHashFunction:);
  methods[14].selector = @selector(contentEqualsWithComGoogleCommonIoByteSource:);
  methods[15].selector = @selector(concatWithJavaLangIterable:);
  methods[16].selector = @selector(concatWithJavaUtilIterator:);
  methods[17].selector = @selector(concatWithComGoogleCommonIoByteSourceArray:);
  methods[18].selector = @selector(wrapWithByteArray:);
  methods[19].selector = @selector(empty);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "asCharSource", "LJavaNioCharsetCharset;", "LJavaIoIOException;", "slice", "JJ", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "countBySkipping", "LJavaIoInputStream;", "copyTo", "LJavaIoOutputStream;", "LComGoogleCommonIoByteSink;", "read", "LComGoogleCommonIoByteProcessor;", "<T:Ljava/lang/Object;>(Lcom/google/common/io/ByteProcessor<TT;>;)TT;", "hash", "LComGoogleCommonHashHashFunction;", "contentEquals", "LComGoogleCommonIoByteSource;", "concat", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lcom/google/common/io/ByteSource;>;)Lcom/google/common/io/ByteSource;", "LJavaUtilIterator;", "(Ljava/util/Iterator<+Lcom/google/common/io/ByteSource;>;)Lcom/google/common/io/ByteSource;", "[LComGoogleCommonIoByteSource;", "wrap", "[B", "LComGoogleCommonIoByteSource_AsCharSource;LComGoogleCommonIoByteSource_SlicedByteSource;LComGoogleCommonIoByteSource_ByteArrayByteSource;LComGoogleCommonIoByteSource_EmptyByteSource;LComGoogleCommonIoByteSource_ConcatenatedByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource = { "ByteSource", "com.google.common.io", ptrTable, methods, NULL, 7, 0x401, 20, 0, -1, 26, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource;
}

@end

void ComGoogleCommonIoByteSource_init(ComGoogleCommonIoByteSource *self) {
  NSObject_init(self);
}

jlong ComGoogleCommonIoByteSource_countBySkippingWithJavaIoInputStream_(ComGoogleCommonIoByteSource *self, JavaIoInputStream *inArg) {
  jlong count = 0;
  jlong skipped;
  while ((skipped = ComGoogleCommonIoByteStreams_skipUpToWithJavaIoInputStream_withLong_(inArg, JavaLangInteger_MAX_VALUE)) > 0) {
    count += skipped;
  }
  return count;
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoByteSource_concatWithJavaLangIterable_(id<JavaLangIterable> sources) {
  ComGoogleCommonIoByteSource_initialize();
  return new_ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(sources);
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoByteSource_concatWithJavaUtilIterator_(id<JavaUtilIterator> sources) {
  ComGoogleCommonIoByteSource_initialize();
  return ComGoogleCommonIoByteSource_concatWithJavaLangIterable_(ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilIterator_(sources));
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoByteSource_concatWithComGoogleCommonIoByteSourceArray_(IOSObjectArray *sources) {
  ComGoogleCommonIoByteSource_initialize();
  return ComGoogleCommonIoByteSource_concatWithJavaLangIterable_(ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(sources));
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoByteSource_wrapWithByteArray_(IOSByteArray *b) {
  ComGoogleCommonIoByteSource_initialize();
  return new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(b);
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoByteSource_empty() {
  ComGoogleCommonIoByteSource_initialize();
  return JreLoadStatic(ComGoogleCommonIoByteSource_EmptyByteSource, INSTANCE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource)

@implementation ComGoogleCommonIoByteSource_AsCharSource

- (instancetype)initWithComGoogleCommonIoByteSource:(ComGoogleCommonIoByteSource *)outer$
                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonIoByteSource_AsCharSource_initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_(self, outer$, charset);
  return self;
}

- (ComGoogleCommonIoByteSource *)asByteSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  if ([((JavaNioCharsetCharset *) nil_chk(charset)) isEqual:self->charset_]) {
    return this$0_;
  }
  return [super asByteSourceWithJavaNioCharsetCharset:charset];
}

- (JavaIoReader *)openStream {
  return new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_([this$0_ openStream], charset_);
}

- (NSString *)description {
  return JreStrcat("$$@C", [this$0_ description], @".asCharSource(", charset_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoByteSource:withJavaNioCharsetCharset:);
  methods[1].selector = @selector(asByteSourceWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(openStream);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoByteSource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "charset_", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioCharsetCharset;", "asByteSource", "LJavaIoIOException;", "toString", "LComGoogleCommonIoByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource_AsCharSource = { "AsCharSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x0, 4, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource_AsCharSource;
}

@end

void ComGoogleCommonIoByteSource_AsCharSource_initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_(ComGoogleCommonIoByteSource_AsCharSource *self, ComGoogleCommonIoByteSource *outer$, JavaNioCharsetCharset *charset) {
  self->this$0_ = outer$;
  ComGoogleCommonIoCharSource_init(self);
  self->charset_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
}

ComGoogleCommonIoByteSource_AsCharSource *new_ComGoogleCommonIoByteSource_AsCharSource_initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_(ComGoogleCommonIoByteSource *outer$, JavaNioCharsetCharset *charset) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_AsCharSource, initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_, outer$, charset)
}

ComGoogleCommonIoByteSource_AsCharSource *create_ComGoogleCommonIoByteSource_AsCharSource_initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_(ComGoogleCommonIoByteSource *outer$, JavaNioCharsetCharset *charset) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_AsCharSource, initWithComGoogleCommonIoByteSource_withJavaNioCharsetCharset_, outer$, charset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource_AsCharSource)

@implementation ComGoogleCommonIoByteSource_SlicedByteSource

- (instancetype)initWithComGoogleCommonIoByteSource:(ComGoogleCommonIoByteSource *)outer$
                                           withLong:(jlong)offset
                                           withLong:(jlong)length {
  ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(self, outer$, offset, length);
  return self;
}

- (JavaIoInputStream *)openStream {
  return ComGoogleCommonIoByteSource_SlicedByteSource_sliceStreamWithJavaIoInputStream_(self, [this$0_ openStream]);
}

- (JavaIoInputStream *)openBufferedStream {
  return ComGoogleCommonIoByteSource_SlicedByteSource_sliceStreamWithJavaIoInputStream_(self, [this$0_ openBufferedStream]);
}

- (JavaIoInputStream *)sliceStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return ComGoogleCommonIoByteSource_SlicedByteSource_sliceStreamWithJavaIoInputStream_(self, inArg);
}

- (ComGoogleCommonIoByteSource *)sliceWithLong:(jlong)offset
                                      withLong:(jlong)length {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(offset >= 0, @"offset (%s) may not be negative", offset);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(length >= 0, @"length (%s) may not be negative", length);
  jlong maxLength = self->length_ - offset;
  return [this$0_ sliceWithLong:self->offset_ + offset withLong:JavaLangMath_minWithLong_withLong_(length, maxLength)];
}

- (jboolean)isEmpty {
  return length_ == 0 || [super isEmpty];
}

- (ComGoogleCommonBaseOptional *)sizeIfKnown {
  ComGoogleCommonBaseOptional *optionalUnslicedSize = [this$0_ sizeIfKnown];
  if ([((ComGoogleCommonBaseOptional *) nil_chk(optionalUnslicedSize)) isPresent]) {
    jlong unslicedSize = [((JavaLangLong *) nil_chk([optionalUnslicedSize get])) longLongValue];
    jlong off = JavaLangMath_minWithLong_withLong_(offset_, unslicedSize);
    return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_(JavaLangMath_minWithLong_withLong_(length_, unslicedSize - off)));
  }
  return ComGoogleCommonBaseOptional_absent();
}

- (NSString *)description {
  return JreStrcat("$$J$JC", [this$0_ description], @".slice(", offset_, @", ", length_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x2, 2, 3, 1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoByteSource:withLong:withLong:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(openBufferedStream);
  methods[3].selector = @selector(sliceStreamWithJavaIoInputStream:);
  methods[4].selector = @selector(sliceWithLong:withLong:);
  methods[5].selector = @selector(isEmpty);
  methods[6].selector = @selector(sizeIfKnown);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoByteSource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "offset_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "length_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JJ", "LJavaIoIOException;", "sliceStream", "LJavaIoInputStream;", "slice", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "toString", "LComGoogleCommonIoByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource_SlicedByteSource = { "SlicedByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x12, 8, 3, 7, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource_SlicedByteSource;
}

@end

void ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource_SlicedByteSource *self, ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length) {
  self->this$0_ = outer$;
  ComGoogleCommonIoByteSource_init(self);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(offset >= 0, @"offset (%s) may not be negative", offset);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(length >= 0, @"length (%s) may not be negative", length);
  self->offset_ = offset;
  self->length_ = length;
}

ComGoogleCommonIoByteSource_SlicedByteSource *new_ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_SlicedByteSource, initWithComGoogleCommonIoByteSource_withLong_withLong_, outer$, offset, length)
}

ComGoogleCommonIoByteSource_SlicedByteSource *create_ComGoogleCommonIoByteSource_SlicedByteSource_initWithComGoogleCommonIoByteSource_withLong_withLong_(ComGoogleCommonIoByteSource *outer$, jlong offset, jlong length) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_SlicedByteSource, initWithComGoogleCommonIoByteSource_withLong_withLong_, outer$, offset, length)
}

JavaIoInputStream *ComGoogleCommonIoByteSource_SlicedByteSource_sliceStreamWithJavaIoInputStream_(ComGoogleCommonIoByteSource_SlicedByteSource *self, JavaIoInputStream *inArg) {
  if (self->offset_ > 0) {
    jlong skipped;
    @try {
      skipped = ComGoogleCommonIoByteStreams_skipUpToWithJavaIoInputStream_withLong_(inArg, self->offset_);
    }
    @catch (NSException *e) {
      ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
      (void) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:inArg];
      @try {
        @throw nil_chk([closer rethrowWithNSException:e]);
      }
      @finally {
        [closer close];
      }
    }
    if (skipped < self->offset_) {
      [((JavaIoInputStream *) nil_chk(inArg)) close];
      return new_JavaIoByteArrayInputStream_initWithByteArray_([IOSByteArray newArrayWithLength:0]);
    }
  }
  return ComGoogleCommonIoByteStreams_limitWithJavaIoInputStream_withLong_(inArg, self->length_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource_SlicedByteSource)

@implementation ComGoogleCommonIoByteSource_ByteArrayByteSource

- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(self, bytes);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)offset
                          withInt:(jint)length {
  ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(self, bytes, offset, length);
  return self;
}

- (JavaIoInputStream *)openStream {
  return new_JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_(bytes_, offset_, length_);
}

- (JavaIoInputStream *)openBufferedStream {
  return [self openStream];
}

- (jboolean)isEmpty {
  return length_ == 0;
}

- (jlong)size {
  return length_;
}

- (ComGoogleCommonBaseOptional *)sizeIfKnown {
  return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_((jlong) length_));
}

- (IOSByteArray *)read {
  return JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(bytes_, offset_, offset_ + length_);
}

- (jlong)copyToWithJavaIoOutputStream:(JavaIoOutputStream *)output {
  [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:bytes_ withInt:offset_ withInt:length_];
  return length_;
}

- (id)readWithComGoogleCommonIoByteProcessor:(id<ComGoogleCommonIoByteProcessor>)processor {
  [((id<ComGoogleCommonIoByteProcessor>) nil_chk(processor)) processBytesWithByteArray:bytes_ withInt:offset_ withInt:length_];
  return [processor getResult];
}

- (ComGoogleCommonHashHashCode *)hash__WithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)hashFunction {
  return [((id<ComGoogleCommonHashHashFunction>) nil_chk(hashFunction)) hashBytesWithByteArray:bytes_ withInt:offset_ withInt:length_];
}

- (ComGoogleCommonIoByteSource *)sliceWithLong:(jlong)offset
                                      withLong:(jlong)length {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(offset >= 0, @"offset (%s) may not be negative", offset);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(length >= 0, @"length (%s) may not be negative", length);
  offset = JavaLangMath_minWithLong_withLong_(offset, self->length_);
  length = JavaLangMath_minWithLong_withLong_(length, self->length_ - offset);
  jint newOffset = self->offset_ + (jint) offset;
  return new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(bytes_, newOffset, (jint) length);
}

- (NSString *)description {
  return JreStrcat("$$C", @"ByteSource.wrap(", ComGoogleCommonBaseAscii_truncateWithJavaLangCharSequence_withInt_withNSString_([((ComGoogleCommonIoBaseEncoding *) nil_chk(ComGoogleCommonIoBaseEncoding_base16())) encodeWithByteArray:bytes_ withInt:offset_ withInt:length_], 30, @"..."), ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 5, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, 2, 8, -1, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x1, 9, 10, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(openStream);
  methods[3].selector = @selector(openBufferedStream);
  methods[4].selector = @selector(isEmpty);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(sizeIfKnown);
  methods[7].selector = @selector(read);
  methods[8].selector = @selector(copyToWithJavaIoOutputStream:);
  methods[9].selector = @selector(readWithComGoogleCommonIoByteProcessor:);
  methods[10].selector = @selector(hash__WithComGoogleCommonHashHashFunction:);
  methods[11].selector = @selector(sliceWithLong:withLong:);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "[BII", "LJavaIoIOException;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "copyTo", "LJavaIoOutputStream;", "read", "LComGoogleCommonIoByteProcessor;", "<T:Ljava/lang/Object;>(Lcom/google/common/io/ByteProcessor<TT;>;)TT;", "hash", "LComGoogleCommonHashHashFunction;", "slice", "JJ", "toString", "LComGoogleCommonIoByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource_ByteArrayByteSource = { "ByteArrayByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0xa, 13, 3, 14, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource_ByteArrayByteSource;
}

@end

void ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(ComGoogleCommonIoByteSource_ByteArrayByteSource *self, IOSByteArray *bytes) {
  ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(self, bytes, 0, ((IOSByteArray *) nil_chk(bytes))->size_);
}

ComGoogleCommonIoByteSource_ByteArrayByteSource *new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_ByteArrayByteSource, initWithByteArray_, bytes)
}

ComGoogleCommonIoByteSource_ByteArrayByteSource *create_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_ByteArrayByteSource, initWithByteArray_, bytes)
}

void ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(ComGoogleCommonIoByteSource_ByteArrayByteSource *self, IOSByteArray *bytes, jint offset, jint length) {
  ComGoogleCommonIoByteSource_init(self);
  self->bytes_ = bytes;
  self->offset_ = offset;
  self->length_ = length;
}

ComGoogleCommonIoByteSource_ByteArrayByteSource *new_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_ByteArrayByteSource, initWithByteArray_withInt_withInt_, bytes, offset, length)
}

ComGoogleCommonIoByteSource_ByteArrayByteSource *create_ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_ByteArrayByteSource, initWithByteArray_withInt_withInt_, bytes, offset, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource_ByteArrayByteSource)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoByteSource_EmptyByteSource)

@implementation ComGoogleCommonIoByteSource_EmptyByteSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoByteSource_EmptyByteSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
  return ComGoogleCommonIoCharSource_empty();
}

- (IOSByteArray *)read {
  return bytes_;
}

- (NSString *)description {
  return @"ByteSource.empty()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(asCharSourceWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonIoByteSource_EmptyByteSource;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "asCharSource", "LJavaNioCharsetCharset;", "toString", &ComGoogleCommonIoByteSource_EmptyByteSource_INSTANCE, "LComGoogleCommonIoByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource_EmptyByteSource = { "EmptyByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 4, 1, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource_EmptyByteSource;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoByteSource_EmptyByteSource class]) {
    ComGoogleCommonIoByteSource_EmptyByteSource_INSTANCE = new_ComGoogleCommonIoByteSource_EmptyByteSource_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoByteSource_EmptyByteSource)
  }
}

@end

void ComGoogleCommonIoByteSource_EmptyByteSource_init(ComGoogleCommonIoByteSource_EmptyByteSource *self) {
  ComGoogleCommonIoByteSource_ByteArrayByteSource_initWithByteArray_(self, [IOSByteArray newArrayWithLength:0]);
}

ComGoogleCommonIoByteSource_EmptyByteSource *new_ComGoogleCommonIoByteSource_EmptyByteSource_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_EmptyByteSource, init)
}

ComGoogleCommonIoByteSource_EmptyByteSource *create_ComGoogleCommonIoByteSource_EmptyByteSource_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_EmptyByteSource, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource_EmptyByteSource)

@implementation ComGoogleCommonIoByteSource_ConcatenatedByteSource

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources {
  ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(self, sources);
  return self;
}

- (JavaIoInputStream *)openStream {
  return new_ComGoogleCommonIoMultiInputStream_initWithJavaUtilIterator_([((id<JavaLangIterable>) nil_chk(sources_)) iterator]);
}

- (jboolean)isEmpty {
  for (ComGoogleCommonIoByteSource * __strong source in nil_chk(sources_)) {
    if (![((ComGoogleCommonIoByteSource *) nil_chk(source)) isEmpty]) {
      return false;
    }
  }
  return true;
}

- (ComGoogleCommonBaseOptional *)sizeIfKnown {
  jlong result = 0LL;
  for (ComGoogleCommonIoByteSource * __strong source in nil_chk(sources_)) {
    ComGoogleCommonBaseOptional *sizeIfKnown = [((ComGoogleCommonIoByteSource *) nil_chk(source)) sizeIfKnown];
    if (![((ComGoogleCommonBaseOptional *) nil_chk(sizeIfKnown)) isPresent]) {
      return ComGoogleCommonBaseOptional_absent();
    }
    result += [((JavaLangLong *) nil_chk([sizeIfKnown get])) longLongValue];
  }
  return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_(result));
}

- (jlong)size {
  jlong result = 0LL;
  for (ComGoogleCommonIoByteSource * __strong source in nil_chk(sources_)) {
    result += [((ComGoogleCommonIoByteSource *) nil_chk(source)) size];
  }
  return result;
}

- (NSString *)description {
  return JreStrcat("$@C", @"ByteSource.concat(", sources_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangIterable:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(isEmpty);
  methods[3].selector = @selector(sizeIfKnown);
  methods[4].selector = @selector(size);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lcom/google/common/io/ByteSource;>;)V", "LJavaIoIOException;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "toString", "Ljava/lang/Iterable<+Lcom/google/common/io/ByteSource;>;", "LComGoogleCommonIoByteSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteSource_ConcatenatedByteSource = { "ConcatenatedByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 6, 1, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteSource_ConcatenatedByteSource;
}

@end

void ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(ComGoogleCommonIoByteSource_ConcatenatedByteSource *self, id<JavaLangIterable> sources) {
  ComGoogleCommonIoByteSource_init(self);
  self->sources_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(sources);
}

ComGoogleCommonIoByteSource_ConcatenatedByteSource *new_ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteSource_ConcatenatedByteSource, initWithJavaLangIterable_, sources)
}

ComGoogleCommonIoByteSource_ConcatenatedByteSource *create_ComGoogleCommonIoByteSource_ConcatenatedByteSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteSource_ConcatenatedByteSource, initWithJavaLangIterable_, sources)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteSource_ConcatenatedByteSource)
