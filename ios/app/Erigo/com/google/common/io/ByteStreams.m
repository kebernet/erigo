//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/ByteStreams.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/ByteArrayDataInput.h"
#include "com/google/common/io/ByteArrayDataOutput.h"
#include "com/google/common/io/ByteProcessor.h"
#include "com/google/common/io/ByteStreams.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/DataInput.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutput.h"
#include "java/io/DataOutputStream.h"
#include "java/io/EOFException.h"
#include "java/io/FilterInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/channels/ReadableByteChannel.h"
#include "java/nio/channels/WritableByteChannel.h"
#include "java/util/Arrays.h"

@interface ComGoogleCommonIoByteStreams ()

- (instancetype)init;

+ (jlong)skipSafelyWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                withLong:(jlong)n;

@end

inline jint ComGoogleCommonIoByteStreams_get_ZERO_COPY_CHUNK_SIZE();
#define ComGoogleCommonIoByteStreams_ZERO_COPY_CHUNK_SIZE 524288
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonIoByteStreams, ZERO_COPY_CHUNK_SIZE, jint)

inline JavaIoOutputStream *ComGoogleCommonIoByteStreams_get_NULL_OUTPUT_STREAM();
static JavaIoOutputStream *ComGoogleCommonIoByteStreams_NULL_OUTPUT_STREAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoByteStreams, NULL_OUTPUT_STREAM, JavaIoOutputStream *)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_init(ComGoogleCommonIoByteStreams *self);

__attribute__((unused)) static ComGoogleCommonIoByteStreams *new_ComGoogleCommonIoByteStreams_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams *create_ComGoogleCommonIoByteStreams_init();

__attribute__((unused)) static jlong ComGoogleCommonIoByteStreams_skipSafelyWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong n);

@interface ComGoogleCommonIoByteStreams_FastByteArrayOutputStream : JavaIoByteArrayOutputStream

- (instancetype)init;

- (void)writeToWithByteArray:(IOSByteArray *)b
                     withInt:(jint)off;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *self);

__attribute__((unused)) static ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *new_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *create_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream)

@interface ComGoogleCommonIoByteStreams_ByteArrayDataInputStream : NSObject < ComGoogleCommonIoByteArrayDataInput > {
 @public
  id<JavaIoDataInput> input_;
}

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)byteArrayInputStream;

- (void)readFullyWithByteArray:(IOSByteArray *)b;

- (void)readFullyWithByteArray:(IOSByteArray *)b
                       withInt:(jint)off
                       withInt:(jint)len;

- (jint)skipBytesWithInt:(jint)n;

- (jboolean)readBoolean;

- (jbyte)readByte;

- (jint)readUnsignedByte;

- (jshort)readShort;

- (jint)readUnsignedShort;

- (jchar)readChar;

- (jint)readInt;

- (jlong)readLong;

- (jfloat)readFloat;

- (jdouble)readDouble;

- (NSString *)readLine;

- (NSString *)readUTF;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream, input_, id<JavaIoDataInput>)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *self, JavaIoByteArrayInputStream *byteArrayInputStream);

__attribute__((unused)) static ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *new_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *byteArrayInputStream) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *create_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *byteArrayInputStream);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream)

@interface ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream : NSObject < ComGoogleCommonIoByteArrayDataOutput > {
 @public
  id<JavaIoDataOutput> output_;
  JavaIoByteArrayOutputStream *byteArrayOutputSteam_;
}

- (instancetype)initWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)byteArrayOutputSteam;

- (void)writeWithInt:(jint)b;

- (void)writeWithByteArray:(IOSByteArray *)b;

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeBooleanWithBoolean:(jboolean)v;

- (void)writeByteWithInt:(jint)v;

- (void)writeBytesWithNSString:(NSString *)s;

- (void)writeCharWithInt:(jint)v;

- (void)writeCharsWithNSString:(NSString *)s;

- (void)writeDoubleWithDouble:(jdouble)v;

- (void)writeFloatWithFloat:(jfloat)v;

- (void)writeIntWithInt:(jint)v;

- (void)writeLongWithLong:(jlong)v;

- (void)writeShortWithInt:(jint)v;

- (void)writeUTFWithNSString:(NSString *)s;

- (IOSByteArray *)toByteArray;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream, output_, id<JavaIoDataOutput>)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream, byteArrayOutputSteam_, JavaIoByteArrayOutputStream *)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *self, JavaIoByteArrayOutputStream *byteArrayOutputSteam);

__attribute__((unused)) static ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *new_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(JavaIoByteArrayOutputStream *byteArrayOutputSteam) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *create_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(JavaIoByteArrayOutputStream *byteArrayOutputSteam);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream)

@interface ComGoogleCommonIoByteStreams_1 : JavaIoOutputStream

- (instancetype)init;

- (void)writeWithInt:(jint)b;

- (void)writeWithByteArray:(IOSByteArray *)b;

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteStreams_1)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_1_init(ComGoogleCommonIoByteStreams_1 *self);

__attribute__((unused)) static ComGoogleCommonIoByteStreams_1 *new_ComGoogleCommonIoByteStreams_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams_1 *create_ComGoogleCommonIoByteStreams_1_init();

@interface ComGoogleCommonIoByteStreams_LimitedInputStream : JavaIoFilterInputStream {
 @public
  jlong left_;
  jlong mark_;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                 withLong:(jlong)limit;

- (jint)available;

- (void)markWithInt:(jint)readLimit;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)reset;

- (jlong)skipWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteStreams_LimitedInputStream)

__attribute__((unused)) static void ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(ComGoogleCommonIoByteStreams_LimitedInputStream *self, JavaIoInputStream *inArg, jlong limit);

__attribute__((unused)) static ComGoogleCommonIoByteStreams_LimitedInputStream *new_ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong limit) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoByteStreams_LimitedInputStream *create_ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong limit);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteStreams_LimitedInputStream)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoByteStreams)

@implementation ComGoogleCommonIoByteStreams

+ (IOSByteArray *)createBuffer {
  return ComGoogleCommonIoByteStreams_createBuffer();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoByteStreams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jlong)copy__WithJavaIoInputStream:(JavaIoInputStream *)from
              withJavaIoOutputStream:(JavaIoOutputStream *)to {
  return ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(from, to);
}

+ (jlong)copy__WithJavaNioChannelsReadableByteChannel:(id<JavaNioChannelsReadableByteChannel>)from
               withJavaNioChannelsWritableByteChannel:(id<JavaNioChannelsWritableByteChannel>)to {
  return ComGoogleCommonIoByteStreams_copy__WithJavaNioChannelsReadableByteChannel_withJavaNioChannelsWritableByteChannel_(from, to);
}

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_(inArg);
}

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                           withInt:(jint)expectedSize {
  return ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_withInt_(inArg, expectedSize);
}

+ (jlong)exhaustWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return ComGoogleCommonIoByteStreams_exhaustWithJavaIoInputStream_(inArg);
}

+ (id<ComGoogleCommonIoByteArrayDataInput>)newDataInputWithByteArray:(IOSByteArray *)bytes {
  return ComGoogleCommonIoByteStreams_newDataInputWithByteArray_(bytes);
}

+ (id<ComGoogleCommonIoByteArrayDataInput>)newDataInputWithByteArray:(IOSByteArray *)bytes
                                                             withInt:(jint)start {
  return ComGoogleCommonIoByteStreams_newDataInputWithByteArray_withInt_(bytes, start);
}

+ (id<ComGoogleCommonIoByteArrayDataInput>)newDataInputWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)byteArrayInputStream {
  return ComGoogleCommonIoByteStreams_newDataInputWithJavaIoByteArrayInputStream_(byteArrayInputStream);
}

+ (id<ComGoogleCommonIoByteArrayDataOutput>)newDataOutput {
  return ComGoogleCommonIoByteStreams_newDataOutput();
}

+ (id<ComGoogleCommonIoByteArrayDataOutput>)newDataOutputWithInt:(jint)size {
  return ComGoogleCommonIoByteStreams_newDataOutputWithInt_(size);
}

+ (id<ComGoogleCommonIoByteArrayDataOutput>)newDataOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)byteArrayOutputSteam {
  return ComGoogleCommonIoByteStreams_newDataOutputWithJavaIoByteArrayOutputStream_(byteArrayOutputSteam);
}

+ (JavaIoOutputStream *)nullOutputStream {
  return ComGoogleCommonIoByteStreams_nullOutputStream();
}

+ (JavaIoInputStream *)limitWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                         withLong:(jlong)limit {
  return ComGoogleCommonIoByteStreams_limitWithJavaIoInputStream_withLong_(inArg, limit);
}

+ (void)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inArg
                         withByteArray:(IOSByteArray *)b {
  ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_(inArg, b);
}

+ (void)readFullyWithJavaIoInputStream:(JavaIoInputStream *)inArg
                         withByteArray:(IOSByteArray *)b
                               withInt:(jint)off
                               withInt:(jint)len {
  ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(inArg, b, off, len);
}

+ (void)skipFullyWithJavaIoInputStream:(JavaIoInputStream *)inArg
                              withLong:(jlong)n {
  ComGoogleCommonIoByteStreams_skipFullyWithJavaIoInputStream_withLong_(inArg, n);
}

+ (jlong)skipUpToWithJavaIoInputStream:(JavaIoInputStream *)inArg
                              withLong:(jlong)n {
  return ComGoogleCommonIoByteStreams_skipUpToWithJavaIoInputStream_withLong_(inArg, n);
}

+ (jlong)skipSafelyWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                withLong:(jlong)n {
  return ComGoogleCommonIoByteStreams_skipSafelyWithJavaIoInputStream_withLong_(inArg, n);
}

+ (id)readBytesWithJavaIoInputStream:(JavaIoInputStream *)input
  withComGoogleCommonIoByteProcessor:(id<ComGoogleCommonIoByteProcessor>)processor {
  return ComGoogleCommonIoByteStreams_readBytesWithJavaIoInputStream_withComGoogleCommonIoByteProcessor_(input, processor);
}

+ (jint)readWithJavaIoInputStream:(JavaIoInputStream *)inArg
                    withByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  return ComGoogleCommonIoByteStreams_readWithJavaIoInputStream_withByteArray_withInt_withInt_(inArg, b, off, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "J", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "[B", 0x9, 4, 5, 2, -1, -1, -1 },
    { NULL, "[B", 0x8, 4, 6, 2, -1, -1, -1 },
    { NULL, "J", 0x9, 7, 5, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataInput;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataInput;", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataInput;", 0x9, 8, 11, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataOutput;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataOutput;", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteArrayDataOutput;", 0x9, 12, 14, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 18, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 19, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 16, 2, -1, -1, -1 },
    { NULL, "J", 0x8, 21, 16, 2, -1, -1, -1 },
    { NULL, "J", 0xa, 22, 16, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 23, 24, 2, 25, -1, -1 },
    { NULL, "I", 0x9, 26, 19, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createBuffer);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(copy__WithJavaIoInputStream:withJavaIoOutputStream:);
  methods[3].selector = @selector(copy__WithJavaNioChannelsReadableByteChannel:withJavaNioChannelsWritableByteChannel:);
  methods[4].selector = @selector(toByteArrayWithJavaIoInputStream:);
  methods[5].selector = @selector(toByteArrayWithJavaIoInputStream:withInt:);
  methods[6].selector = @selector(exhaustWithJavaIoInputStream:);
  methods[7].selector = @selector(newDataInputWithByteArray:);
  methods[8].selector = @selector(newDataInputWithByteArray:withInt:);
  methods[9].selector = @selector(newDataInputWithJavaIoByteArrayInputStream:);
  methods[10].selector = @selector(newDataOutput);
  methods[11].selector = @selector(newDataOutputWithInt:);
  methods[12].selector = @selector(newDataOutputWithJavaIoByteArrayOutputStream:);
  methods[13].selector = @selector(nullOutputStream);
  methods[14].selector = @selector(limitWithJavaIoInputStream:withLong:);
  methods[15].selector = @selector(readFullyWithJavaIoInputStream:withByteArray:);
  methods[16].selector = @selector(readFullyWithJavaIoInputStream:withByteArray:withInt:withInt:);
  methods[17].selector = @selector(skipFullyWithJavaIoInputStream:withLong:);
  methods[18].selector = @selector(skipUpToWithJavaIoInputStream:withLong:);
  methods[19].selector = @selector(skipSafelyWithJavaIoInputStream:withLong:);
  methods[20].selector = @selector(readBytesWithJavaIoInputStream:withComGoogleCommonIoByteProcessor:);
  methods[21].selector = @selector(readWithJavaIoInputStream:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO_COPY_CHUNK_SIZE", "I", .constantValue.asInt = ComGoogleCommonIoByteStreams_ZERO_COPY_CHUNK_SIZE, 0x1a, -1, -1, -1, -1 },
    { "NULL_OUTPUT_STREAM", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
  };
  static const void *ptrTable[] = { "copy", "LJavaIoInputStream;LJavaIoOutputStream;", "LJavaIoIOException;", "LJavaNioChannelsReadableByteChannel;LJavaNioChannelsWritableByteChannel;", "toByteArray", "LJavaIoInputStream;", "LJavaIoInputStream;I", "exhaust", "newDataInput", "[B", "[BI", "LJavaIoByteArrayInputStream;", "newDataOutput", "I", "LJavaIoByteArrayOutputStream;", "limit", "LJavaIoInputStream;J", "readFully", "LJavaIoInputStream;[B", "LJavaIoInputStream;[BII", "skipFully", "skipUpTo", "skipSafely", "readBytes", "LJavaIoInputStream;LComGoogleCommonIoByteProcessor;", "<T:Ljava/lang/Object;>(Ljava/io/InputStream;Lcom/google/common/io/ByteProcessor<TT;>;)TT;", "read", &ComGoogleCommonIoByteStreams_NULL_OUTPUT_STREAM, "LComGoogleCommonIoByteStreams_FastByteArrayOutputStream;LComGoogleCommonIoByteStreams_ByteArrayDataInputStream;LComGoogleCommonIoByteStreams_ByteArrayDataOutputStream;LComGoogleCommonIoByteStreams_LimitedInputStream;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams = { "ByteStreams", "com.google.common.io", ptrTable, methods, fields, 7, 0x11, 22, 2, -1, 28, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoByteStreams class]) {
    ComGoogleCommonIoByteStreams_NULL_OUTPUT_STREAM = new_ComGoogleCommonIoByteStreams_1_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoByteStreams)
  }
}

@end

IOSByteArray *ComGoogleCommonIoByteStreams_createBuffer() {
  ComGoogleCommonIoByteStreams_initialize();
  return [IOSByteArray newArrayWithLength:8192];
}

void ComGoogleCommonIoByteStreams_init(ComGoogleCommonIoByteStreams *self) {
  NSObject_init(self);
}

ComGoogleCommonIoByteStreams *new_ComGoogleCommonIoByteStreams_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams, init)
}

ComGoogleCommonIoByteStreams *create_ComGoogleCommonIoByteStreams_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams, init)
}

jlong ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *from, JavaIoOutputStream *to) {
  ComGoogleCommonIoByteStreams_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(from);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(to);
  IOSByteArray *buf = ComGoogleCommonIoByteStreams_createBuffer();
  jlong total = 0;
  while (true) {
    jint r = [((JavaIoInputStream *) nil_chk(from)) readWithByteArray:buf];
    if (r == -1) {
      break;
    }
    [((JavaIoOutputStream *) nil_chk(to)) writeWithByteArray:buf withInt:0 withInt:r];
    total += r;
  }
  return total;
}

jlong ComGoogleCommonIoByteStreams_copy__WithJavaNioChannelsReadableByteChannel_withJavaNioChannelsWritableByteChannel_(id<JavaNioChannelsReadableByteChannel> from, id<JavaNioChannelsWritableByteChannel> to) {
  ComGoogleCommonIoByteStreams_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(from);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(to);
  if ([from isKindOfClass:[JavaNioChannelsFileChannel class]]) {
    JavaNioChannelsFileChannel *sourceChannel = (JavaNioChannelsFileChannel *) cast_chk(from, [JavaNioChannelsFileChannel class]);
    jlong oldPosition = [((JavaNioChannelsFileChannel *) nil_chk(sourceChannel)) position];
    jlong position = oldPosition;
    jlong copied;
    do {
      copied = [sourceChannel transferToWithLong:position withLong:ComGoogleCommonIoByteStreams_ZERO_COPY_CHUNK_SIZE withJavaNioChannelsWritableByteChannel:to];
      position += copied;
      (void) [sourceChannel positionWithLong:position];
    }
    while (copied > 0 || position < [sourceChannel size]);
    return position - oldPosition;
  }
  JavaNioByteBuffer *buf = JavaNioByteBuffer_wrapWithByteArray_(ComGoogleCommonIoByteStreams_createBuffer());
  jlong total = 0;
  while ([((id<JavaNioChannelsReadableByteChannel>) nil_chk(from)) readWithJavaNioByteBuffer:buf] != -1) {
    (void) [((JavaNioByteBuffer *) nil_chk(buf)) flip];
    while ([buf hasRemaining]) {
      total += [((id<JavaNioChannelsWritableByteChannel>) nil_chk(to)) writeWithJavaNioByteBuffer:buf];
    }
    (void) [buf clear];
  }
  return total;
}

IOSByteArray *ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  ComGoogleCommonIoByteStreams_initialize();
  JavaIoByteArrayOutputStream *out = new_JavaIoByteArrayOutputStream_initWithInt_(JavaLangMath_maxWithInt_withInt_(32, [((JavaIoInputStream *) nil_chk(inArg)) available]));
  ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(inArg, out);
  return [out toByteArray];
}

IOSByteArray *ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint expectedSize) {
  ComGoogleCommonIoByteStreams_initialize();
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:expectedSize];
  jint remaining = expectedSize;
  while (remaining > 0) {
    jint off = expectedSize - remaining;
    jint read = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:bytes withInt:off withInt:remaining];
    if (read == -1) {
      return JavaUtilArrays_copyOfWithByteArray_withInt_(bytes, off);
    }
    remaining -= read;
  }
  jint b = [((JavaIoInputStream *) nil_chk(inArg)) read];
  if (b == -1) {
    return bytes;
  }
  ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *out = new_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init();
  [out writeWithInt:b];
  ComGoogleCommonIoByteStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(inArg, out);
  IOSByteArray *result = [IOSByteArray newArrayWithLength:bytes->size_ + [out size]];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bytes, 0, result, 0, bytes->size_);
  [out writeToWithByteArray:result withInt:bytes->size_];
  return result;
}

jlong ComGoogleCommonIoByteStreams_exhaustWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  ComGoogleCommonIoByteStreams_initialize();
  jlong total = 0;
  jlong read;
  IOSByteArray *buf = ComGoogleCommonIoByteStreams_createBuffer();
  while ((read = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:buf]) != -1) {
    total += read;
  }
  return total;
}

id<ComGoogleCommonIoByteArrayDataInput> ComGoogleCommonIoByteStreams_newDataInputWithByteArray_(IOSByteArray *bytes) {
  ComGoogleCommonIoByteStreams_initialize();
  return ComGoogleCommonIoByteStreams_newDataInputWithJavaIoByteArrayInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_(bytes));
}

id<ComGoogleCommonIoByteArrayDataInput> ComGoogleCommonIoByteStreams_newDataInputWithByteArray_withInt_(IOSByteArray *bytes, jint start) {
  ComGoogleCommonIoByteStreams_initialize();
  ComGoogleCommonBasePreconditions_checkPositionIndexWithInt_withInt_(start, ((IOSByteArray *) nil_chk(bytes))->size_);
  return ComGoogleCommonIoByteStreams_newDataInputWithJavaIoByteArrayInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_(bytes, start, bytes->size_ - start));
}

id<ComGoogleCommonIoByteArrayDataInput> ComGoogleCommonIoByteStreams_newDataInputWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *byteArrayInputStream) {
  ComGoogleCommonIoByteStreams_initialize();
  return new_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(byteArrayInputStream));
}

id<ComGoogleCommonIoByteArrayDataOutput> ComGoogleCommonIoByteStreams_newDataOutput() {
  ComGoogleCommonIoByteStreams_initialize();
  return ComGoogleCommonIoByteStreams_newDataOutputWithJavaIoByteArrayOutputStream_(new_JavaIoByteArrayOutputStream_init());
}

id<ComGoogleCommonIoByteArrayDataOutput> ComGoogleCommonIoByteStreams_newDataOutputWithInt_(jint size) {
  ComGoogleCommonIoByteStreams_initialize();
  if (size < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Invalid size: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(size) } count:1 type:NSObject_class_()]));
  }
  return ComGoogleCommonIoByteStreams_newDataOutputWithJavaIoByteArrayOutputStream_(new_JavaIoByteArrayOutputStream_initWithInt_(size));
}

id<ComGoogleCommonIoByteArrayDataOutput> ComGoogleCommonIoByteStreams_newDataOutputWithJavaIoByteArrayOutputStream_(JavaIoByteArrayOutputStream *byteArrayOutputSteam) {
  ComGoogleCommonIoByteStreams_initialize();
  return new_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(byteArrayOutputSteam));
}

JavaIoOutputStream *ComGoogleCommonIoByteStreams_nullOutputStream() {
  ComGoogleCommonIoByteStreams_initialize();
  return ComGoogleCommonIoByteStreams_NULL_OUTPUT_STREAM;
}

JavaIoInputStream *ComGoogleCommonIoByteStreams_limitWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong limit) {
  ComGoogleCommonIoByteStreams_initialize();
  return new_ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(inArg, limit);
}

void ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_(JavaIoInputStream *inArg, IOSByteArray *b) {
  ComGoogleCommonIoByteStreams_initialize();
  ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(inArg, b, 0, ((IOSByteArray *) nil_chk(b))->size_);
}

void ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(JavaIoInputStream *inArg, IOSByteArray *b, jint off, jint len) {
  ComGoogleCommonIoByteStreams_initialize();
  jint read = ComGoogleCommonIoByteStreams_readWithJavaIoInputStream_withByteArray_withInt_withInt_(inArg, b, off, len);
  if (read != len) {
    @throw new_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I$", @"reached end of stream after reading ", read, @" bytes; ", len, @" bytes expected"));
  }
}

void ComGoogleCommonIoByteStreams_skipFullyWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong n) {
  ComGoogleCommonIoByteStreams_initialize();
  jlong skipped = ComGoogleCommonIoByteStreams_skipUpToWithJavaIoInputStream_withLong_(inArg, n);
  if (skipped < n) {
    @throw new_JavaIoEOFException_initWithNSString_(JreStrcat("$J$J$", @"reached end of stream after skipping ", skipped, @" bytes; ", n, @" bytes expected"));
  }
}

jlong ComGoogleCommonIoByteStreams_skipUpToWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong n) {
  ComGoogleCommonIoByteStreams_initialize();
  jlong totalSkipped = 0;
  IOSByteArray *buf = ComGoogleCommonIoByteStreams_createBuffer();
  while (totalSkipped < n) {
    jlong remaining = n - totalSkipped;
    jlong skipped = ComGoogleCommonIoByteStreams_skipSafelyWithJavaIoInputStream_withLong_(inArg, remaining);
    if (skipped == 0) {
      jint skip = (jint) JavaLangMath_minWithLong_withLong_(remaining, ((IOSByteArray *) nil_chk(buf))->size_);
      if ((skipped = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:buf withInt:0 withInt:skip]) == -1) {
        break;
      }
    }
    totalSkipped += skipped;
  }
  return totalSkipped;
}

jlong ComGoogleCommonIoByteStreams_skipSafelyWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong n) {
  ComGoogleCommonIoByteStreams_initialize();
  jint available = [((JavaIoInputStream *) nil_chk(inArg)) available];
  return available == 0 ? 0 : [inArg skipWithLong:JavaLangMath_minWithLong_withLong_(available, n)];
}

id ComGoogleCommonIoByteStreams_readBytesWithJavaIoInputStream_withComGoogleCommonIoByteProcessor_(JavaIoInputStream *input, id<ComGoogleCommonIoByteProcessor> processor) {
  ComGoogleCommonIoByteStreams_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(input);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(processor);
  IOSByteArray *buf = ComGoogleCommonIoByteStreams_createBuffer();
  jint read;
  do {
    read = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:buf];
  }
  while (read != -1 && [((id<ComGoogleCommonIoByteProcessor>) nil_chk(processor)) processBytesWithByteArray:buf withInt:0 withInt:read]);
  return [((id<ComGoogleCommonIoByteProcessor>) nil_chk(processor)) getResult];
}

jint ComGoogleCommonIoByteStreams_readWithJavaIoInputStream_withByteArray_withInt_withInt_(JavaIoInputStream *inArg, IOSByteArray *b, jint off, jint len) {
  ComGoogleCommonIoByteStreams_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(inArg);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(b);
  if (len < 0) {
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(@"len is negative");
  }
  jint total = 0;
  while (total < len) {
    jint result = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:b withInt:off + total withInt:len - total];
    if (result == -1) {
      break;
    }
    total += result;
  }
  return total;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteStreams)

@implementation ComGoogleCommonIoByteStreams_FastByteArrayOutputStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeToWithByteArray:(IOSByteArray *)b
                     withInt:(jint)off {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buf_, 0, b, off, count_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeToWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "writeTo", "[BI", "LComGoogleCommonIoByteStreams;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams_FastByteArrayOutputStream = { "FastByteArrayOutputStream", "com.google.common.io", ptrTable, methods, NULL, 7, 0x1a, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream;
}

@end

void ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *self) {
  JavaIoByteArrayOutputStream_init(self);
}

ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *new_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream, init)
}

ComGoogleCommonIoByteStreams_FastByteArrayOutputStream *create_ComGoogleCommonIoByteStreams_FastByteArrayOutputStream_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteStreams_FastByteArrayOutputStream)

@implementation ComGoogleCommonIoByteStreams_ByteArrayDataInputStream

- (instancetype)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)byteArrayInputStream {
  ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(self, byteArrayInputStream);
  return self;
}

- (void)readFullyWithByteArray:(IOSByteArray *)b {
  @try {
    [((id<JavaIoDataInput>) nil_chk(input_)) readFullyWithByteArray:b];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (void)readFullyWithByteArray:(IOSByteArray *)b
                       withInt:(jint)off
                       withInt:(jint)len {
  @try {
    [((id<JavaIoDataInput>) nil_chk(input_)) readFullyWithByteArray:b withInt:off withInt:len];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jint)skipBytesWithInt:(jint)n {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) skipBytesWithInt:n];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jboolean)readBoolean {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readBoolean];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jbyte)readByte {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readByte];
  }
  @catch (JavaIoEOFException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (jint)readUnsignedByte {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readUnsignedByte];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jshort)readShort {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readShort];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jint)readUnsignedShort {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readUnsignedShort];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jchar)readChar {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jint)readInt {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readInt];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jlong)readLong {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readLong];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jfloat)readFloat {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readFloat];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (jdouble)readDouble {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readDouble];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (NSString *)readLine {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readLine];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (NSString *)readUTF {
  @try {
    return [((id<JavaIoDataInput>) nil_chk(input_)) readUTF];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoByteArrayInputStream:);
  methods[1].selector = @selector(readFullyWithByteArray:);
  methods[2].selector = @selector(readFullyWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(skipBytesWithInt:);
  methods[4].selector = @selector(readBoolean);
  methods[5].selector = @selector(readByte);
  methods[6].selector = @selector(readUnsignedByte);
  methods[7].selector = @selector(readShort);
  methods[8].selector = @selector(readUnsignedShort);
  methods[9].selector = @selector(readChar);
  methods[10].selector = @selector(readInt);
  methods[11].selector = @selector(readLong);
  methods[12].selector = @selector(readFloat);
  methods[13].selector = @selector(readDouble);
  methods[14].selector = @selector(readLine);
  methods[15].selector = @selector(readUTF);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "input_", "LJavaIoDataInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoByteArrayInputStream;", "readFully", "[B", "[BII", "skipBytes", "I", "LComGoogleCommonIoByteStreams;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams_ByteArrayDataInputStream = { "ByteArrayDataInputStream", "com.google.common.io", ptrTable, methods, fields, 7, 0xa, 16, 1, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream;
}

@end

void ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *self, JavaIoByteArrayInputStream *byteArrayInputStream) {
  NSObject_init(self);
  self->input_ = new_JavaIoDataInputStream_initWithJavaIoInputStream_(byteArrayInputStream);
}

ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *new_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *byteArrayInputStream) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream, initWithJavaIoByteArrayInputStream_, byteArrayInputStream)
}

ComGoogleCommonIoByteStreams_ByteArrayDataInputStream *create_ComGoogleCommonIoByteStreams_ByteArrayDataInputStream_initWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *byteArrayInputStream) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream, initWithJavaIoByteArrayInputStream_, byteArrayInputStream)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteStreams_ByteArrayDataInputStream)

@implementation ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream

- (instancetype)initWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)byteArrayOutputSteam {
  ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(self, byteArrayOutputSteam);
  return self;
}

- (void)writeWithInt:(jint)b {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeWithInt:b];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeWithByteArray:(IOSByteArray *)b {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeWithByteArray:b];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeWithByteArray:b withInt:off withInt:len];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeBooleanWithBoolean:(jboolean)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeBooleanWithBoolean:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeByteWithInt:(jint)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeByteWithInt:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeBytesWithNSString:(NSString *)s {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeBytesWithNSString:s];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeCharWithInt:(jint)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeCharWithInt:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeCharsWithNSString:(NSString *)s {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeCharsWithNSString:s];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeDoubleWithDouble:(jdouble)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeDoubleWithDouble:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeFloatWithFloat:(jfloat)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeFloatWithFloat:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeIntWithInt:(jint)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeIntWithInt:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeLongWithLong:(jlong)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeLongWithLong:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeShortWithInt:(jint)v {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeShortWithInt:v];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (void)writeUTFWithNSString:(NSString *)s {
  @try {
    [((id<JavaIoDataOutput>) nil_chk(output_)) writeUTFWithNSString:s];
  }
  @catch (JavaIoIOException *impossible) {
    @throw new_JavaLangAssertionError_initWithId_(impossible);
  }
}

- (IOSByteArray *)toByteArray {
  return [((JavaIoByteArrayOutputStream *) nil_chk(byteArrayOutputSteam_)) toByteArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoByteArrayOutputStream:);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(writeWithByteArray:);
  methods[3].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(writeBooleanWithBoolean:);
  methods[5].selector = @selector(writeByteWithInt:);
  methods[6].selector = @selector(writeBytesWithNSString:);
  methods[7].selector = @selector(writeCharWithInt:);
  methods[8].selector = @selector(writeCharsWithNSString:);
  methods[9].selector = @selector(writeDoubleWithDouble:);
  methods[10].selector = @selector(writeFloatWithFloat:);
  methods[11].selector = @selector(writeIntWithInt:);
  methods[12].selector = @selector(writeLongWithLong:);
  methods[13].selector = @selector(writeShortWithInt:);
  methods[14].selector = @selector(writeUTFWithNSString:);
  methods[15].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "output_", "LJavaIoDataOutput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "byteArrayOutputSteam_", "LJavaIoByteArrayOutputStream;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoByteArrayOutputStream;", "write", "I", "[B", "[BII", "writeBoolean", "Z", "writeByte", "writeBytes", "LNSString;", "writeChar", "writeChars", "writeDouble", "D", "writeFloat", "F", "writeInt", "writeLong", "J", "writeShort", "writeUTF", "LComGoogleCommonIoByteStreams;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream = { "ByteArrayDataOutputStream", "com.google.common.io", ptrTable, methods, fields, 7, 0xa, 16, 2, 21, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream;
}

@end

void ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *self, JavaIoByteArrayOutputStream *byteArrayOutputSteam) {
  NSObject_init(self);
  self->byteArrayOutputSteam_ = byteArrayOutputSteam;
  self->output_ = new_JavaIoDataOutputStream_initWithJavaIoOutputStream_(byteArrayOutputSteam);
}

ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *new_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(JavaIoByteArrayOutputStream *byteArrayOutputSteam) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream, initWithJavaIoByteArrayOutputStream_, byteArrayOutputSteam)
}

ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream *create_ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream_initWithJavaIoByteArrayOutputStream_(JavaIoByteArrayOutputStream *byteArrayOutputSteam) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream, initWithJavaIoByteArrayOutputStream_, byteArrayOutputSteam)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteStreams_ByteArrayDataOutputStream)

@implementation ComGoogleCommonIoByteStreams_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoByteStreams_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeWithInt:(jint)b {
}

- (void)writeWithByteArray:(IOSByteArray *)b {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(b);
}

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(b);
}

- (NSString *)description {
  return @"ByteStreams.nullOutputStream()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithInt:);
  methods[2].selector = @selector(writeWithByteArray:);
  methods[3].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "I", "[B", "[BII", "toString", "LComGoogleCommonIoByteStreams;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams_1 = { "", "com.google.common.io", ptrTable, methods, NULL, 7, 0x8018, 5, 0, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams_1;
}

@end

void ComGoogleCommonIoByteStreams_1_init(ComGoogleCommonIoByteStreams_1 *self) {
  JavaIoOutputStream_init(self);
}

ComGoogleCommonIoByteStreams_1 *new_ComGoogleCommonIoByteStreams_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams_1, init)
}

ComGoogleCommonIoByteStreams_1 *create_ComGoogleCommonIoByteStreams_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams_1, init)
}

@implementation ComGoogleCommonIoByteStreams_LimitedInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                 withLong:(jlong)limit {
  ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(self, inArg, limit);
  return self;
}

- (jint)available {
  return (jint) JavaLangMath_minWithLong_withLong_([((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) available], left_);
}

- (void)markWithInt:(jint)readLimit {
  @synchronized(self) {
    [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) markWithInt:readLimit];
    mark_ = left_;
  }
}

- (jint)read {
  if (left_ == 0) {
    return -1;
  }
  jint result = [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) read];
  if (result != -1) {
    --left_;
  }
  return result;
}

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len {
  if (left_ == 0) {
    return -1;
  }
  len = (jint) JavaLangMath_minWithLong_withLong_(len, left_);
  jint result = [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) readWithByteArray:b withInt:off withInt:len];
  if (result != -1) {
    left_ -= result;
  }
  return result;
}

- (void)reset {
  @synchronized(self) {
    if (![((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) markSupported]) {
      @throw new_JavaIoIOException_initWithNSString_(@"Mark not supported");
    }
    if (mark_ == -1) {
      @throw new_JavaIoIOException_initWithNSString_(@"Mark not set");
    }
    [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) reset];
    left_ = mark_;
  }
}

- (jlong)skipWithLong:(jlong)n {
  n = JavaLangMath_minWithLong_withLong_(n, left_);
  jlong skipped = [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) skipWithLong:n];
  left_ -= skipped;
  return skipped;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x21, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 7, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoInputStream:withLong:);
  methods[1].selector = @selector(available);
  methods[2].selector = @selector(markWithInt:);
  methods[3].selector = @selector(read);
  methods[4].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(reset);
  methods[6].selector = @selector(skipWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "left_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mark_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;J", "LJavaIoIOException;", "mark", "I", "read", "[BII", "skip", "J", "LComGoogleCommonIoByteStreams;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoByteStreams_LimitedInputStream = { "LimitedInputStream", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 7, 2, 8, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoByteStreams_LimitedInputStream;
}

@end

void ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(ComGoogleCommonIoByteStreams_LimitedInputStream *self, JavaIoInputStream *inArg, jlong limit) {
  JavaIoFilterInputStream_initWithJavaIoInputStream_(self, inArg);
  self->mark_ = -1;
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(inArg);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(limit >= 0, @"limit must be non-negative");
  self->left_ = limit;
}

ComGoogleCommonIoByteStreams_LimitedInputStream *new_ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong limit) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoByteStreams_LimitedInputStream, initWithJavaIoInputStream_withLong_, inArg, limit)
}

ComGoogleCommonIoByteStreams_LimitedInputStream *create_ComGoogleCommonIoByteStreams_LimitedInputStream_initWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong limit) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoByteStreams_LimitedInputStream, initWithJavaIoInputStream_withLong_, inArg, limit)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoByteStreams_LimitedInputStream)
