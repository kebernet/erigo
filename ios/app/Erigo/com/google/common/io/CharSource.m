//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/CharSource.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Ascii.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Splitter.h"
#include "com/google/common/collect/AbstractIterator.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/Lists.h"
#include "com/google/common/collect/Streams.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/CharSequenceReader.h"
#include "com/google/common/io/CharSink.h"
#include "com/google/common/io/CharSource.h"
#include "com/google/common/io/CharStreams.h"
#include "com/google/common/io/Closer.h"
#include "com/google/common/io/LineProcessor.h"
#include "com/google/common/io/MultiReader.h"
#include "com/google/common/io/ReaderInputStream.h"
#include "java/io/BufferedReader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/UncheckedIOException.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/charset/Charset.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/function/Consumer.h"
#include "java/util/stream/Stream.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonIoCharSource ()

- (jlong)countBySkippingWithJavaIoReader:(JavaIoReader *)reader;

@end

__attribute__((unused)) static jlong ComGoogleCommonIoCharSource_countBySkippingWithJavaIoReader_(ComGoogleCommonIoCharSource *self, JavaIoReader *reader);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoCharSource__Annotations$0();

@interface ComGoogleCommonIoCharSource_AsByteSource : ComGoogleCommonIoByteSource {
 @public
  ComGoogleCommonIoCharSource *this$0_;
  JavaNioCharsetCharset *charset_;
}

- (instancetype)initWithComGoogleCommonIoCharSource:(ComGoogleCommonIoCharSource *)outer$
                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (JavaIoInputStream *)openStream;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoCharSource_AsByteSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoCharSource_AsByteSource, charset_, JavaNioCharsetCharset *)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource_AsByteSource *self, ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset);

__attribute__((unused)) static ComGoogleCommonIoCharSource_AsByteSource *new_ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_AsByteSource *create_ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoCharSource_AsByteSource)

@interface ComGoogleCommonIoCharSource_CharSequenceCharSource : ComGoogleCommonIoCharSource {
 @public
  id<JavaLangCharSequence> seq_;
}

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq;

- (JavaIoReader *)openStream;

- (NSString *)read;

- (jboolean)isEmpty;

- (jlong)length;

- (ComGoogleCommonBaseOptional *)lengthIfKnown;

- (id<JavaUtilIterator>)linesIterator;

- (id<JavaUtilStreamStream>)lines;

- (NSString *)readFirstLine;

- (ComGoogleCommonCollectImmutableList *)readLines;

- (id)readLinesWithComGoogleCommonIoLineProcessor:(id<ComGoogleCommonIoLineProcessor>)processor;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonIoCharSource_CharSequenceCharSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoCharSource_CharSequenceCharSource, seq_, id<JavaLangCharSequence>)

inline ComGoogleCommonBaseSplitter *ComGoogleCommonIoCharSource_CharSequenceCharSource_get_LINE_SPLITTER();
static ComGoogleCommonBaseSplitter *ComGoogleCommonIoCharSource_CharSequenceCharSource_LINE_SPLITTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoCharSource_CharSequenceCharSource, LINE_SPLITTER, ComGoogleCommonBaseSplitter *)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(ComGoogleCommonIoCharSource_CharSequenceCharSource *self, id<JavaLangCharSequence> seq);

__attribute__((unused)) static ComGoogleCommonIoCharSource_CharSequenceCharSource *new_ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(id<JavaLangCharSequence> seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_CharSequenceCharSource *create_ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(id<JavaLangCharSequence> seq);

__attribute__((unused)) static id<JavaUtilIterator> ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(ComGoogleCommonIoCharSource_CharSequenceCharSource *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoCharSource_CharSequenceCharSource)

@interface ComGoogleCommonIoCharSource_CharSequenceCharSource_1 : ComGoogleCommonCollectAbstractIterator {
 @public
  id<JavaUtilIterator> lines_;
}

- (instancetype)initWithComGoogleCommonIoCharSource_CharSequenceCharSource:(ComGoogleCommonIoCharSource_CharSequenceCharSource *)outer$;

- (NSString *)computeNext;

- (NSString *)endOfData;

- (NSString *)next;

- (NSString *)peek;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoCharSource_CharSequenceCharSource_1)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoCharSource_CharSequenceCharSource_1, lines_, id<JavaUtilIterator>)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *self, ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$);

__attribute__((unused)) static ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *new_ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *create_ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$);

@interface ComGoogleCommonIoCharSource_EmptyCharSource : ComGoogleCommonIoCharSource_CharSequenceCharSource

- (instancetype)init;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonIoCharSource_EmptyCharSource)

inline ComGoogleCommonIoCharSource_EmptyCharSource *ComGoogleCommonIoCharSource_EmptyCharSource_get_INSTANCE();
static ComGoogleCommonIoCharSource_EmptyCharSource *ComGoogleCommonIoCharSource_EmptyCharSource_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoCharSource_EmptyCharSource, INSTANCE, ComGoogleCommonIoCharSource_EmptyCharSource *)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_EmptyCharSource_init(ComGoogleCommonIoCharSource_EmptyCharSource *self);

__attribute__((unused)) static ComGoogleCommonIoCharSource_EmptyCharSource *new_ComGoogleCommonIoCharSource_EmptyCharSource_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_EmptyCharSource *create_ComGoogleCommonIoCharSource_EmptyCharSource_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoCharSource_EmptyCharSource)

@interface ComGoogleCommonIoCharSource_ConcatenatedCharSource : ComGoogleCommonIoCharSource {
 @public
  id<JavaLangIterable> sources_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources;

- (JavaIoReader *)openStream;

- (jboolean)isEmpty;

- (ComGoogleCommonBaseOptional *)lengthIfKnown;

- (jlong)length;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoCharSource_ConcatenatedCharSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoCharSource_ConcatenatedCharSource, sources_, id<JavaLangIterable>)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(ComGoogleCommonIoCharSource_ConcatenatedCharSource *self, id<JavaLangIterable> sources);

__attribute__((unused)) static ComGoogleCommonIoCharSource_ConcatenatedCharSource *new_ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_ConcatenatedCharSource *create_ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(id<JavaLangIterable> sources);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoCharSource_ConcatenatedCharSource)

@interface ComGoogleCommonIoCharSource_$Lambda$1 : NSObject < JavaLangRunnable > {
 @public
  JavaIoBufferedReader *val$reader_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoCharSource_$Lambda$1)

__attribute__((unused)) static void ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(ComGoogleCommonIoCharSource_$Lambda$1 *self, JavaIoBufferedReader *capture$0);

__attribute__((unused)) static ComGoogleCommonIoCharSource_$Lambda$1 *new_ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(JavaIoBufferedReader *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoCharSource_$Lambda$1 *create_ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(JavaIoBufferedReader *capture$0);

@implementation ComGoogleCommonIoCharSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoCharSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonIoByteSource *)asByteSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return new_ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(self, charset);
}

- (JavaIoReader *)openStream {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaIoBufferedReader *)openBufferedStream {
  JavaIoReader *reader = [self openStream];
  return ([reader isKindOfClass:[JavaIoBufferedReader class]]) ? (JavaIoBufferedReader *) cast_chk(reader, [JavaIoBufferedReader class]) : new_JavaIoBufferedReader_initWithJavaIoReader_(reader);
}

- (id<JavaUtilStreamStream>)lines {
  JavaIoBufferedReader *reader = [self openBufferedStream];
  return [((id<JavaUtilStreamStream>) nil_chk([((JavaIoBufferedReader *) nil_chk(reader)) lines])) onCloseWithJavaLangRunnable:new_ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(reader)];
}

- (ComGoogleCommonBaseOptional *)lengthIfKnown {
  return ComGoogleCommonBaseOptional_absent();
}

- (jlong)length {
  ComGoogleCommonBaseOptional *lengthIfKnown = [self lengthIfKnown];
  if ([((ComGoogleCommonBaseOptional *) nil_chk(lengthIfKnown)) isPresent]) {
    return [((JavaLangLong *) nil_chk([lengthIfKnown get])) longLongValue];
  }
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoCharSource_countBySkippingWithJavaIoReader_(self, reader);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (jlong)countBySkippingWithJavaIoReader:(JavaIoReader *)reader {
  return ComGoogleCommonIoCharSource_countBySkippingWithJavaIoReader_(self, reader);
}

- (jlong)copyToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(appendable);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoCharStreams_copy__WithJavaLangReadable_withJavaLangAppendable_(reader, appendable);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (jlong)copyToWithComGoogleCommonIoCharSink:(ComGoogleCommonIoCharSink *)sink {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(sink);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    JavaIoWriter *writer = ((JavaIoWriter *) [closer register__WithJavaIoCloseable:[((ComGoogleCommonIoCharSink *) nil_chk(sink)) openStream]]);
    return ComGoogleCommonIoCharStreams_copy__WithJavaLangReadable_withJavaLangAppendable_(reader, writer);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (NSString *)read {
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoCharStreams_toStringWithJavaLangReadable_(reader);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (NSString *)readFirstLine {
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoBufferedReader *reader = ((JavaIoBufferedReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openBufferedStream]]);
    return [((JavaIoBufferedReader *) nil_chk(reader)) readLine];
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (ComGoogleCommonCollectImmutableList *)readLines {
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoBufferedReader *reader = ((JavaIoBufferedReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openBufferedStream]]);
    id<JavaUtilList> result = ComGoogleCommonCollectLists_newArrayList();
    NSString *line;
    while ((line = [((JavaIoBufferedReader *) nil_chk(reader)) readLine]) != nil) {
      [((id<JavaUtilList>) nil_chk(result)) addWithId:line];
    }
    return ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilCollection_(result);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (id)readLinesWithComGoogleCommonIoLineProcessor:(id<ComGoogleCommonIoLineProcessor>)processor {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(processor);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoCharStreams_readLinesWithJavaLangReadable_withComGoogleCommonIoLineProcessor_(reader, processor);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (void)forEachLineWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)action {
  @try {
    id<JavaUtilStreamStream> lines = [self lines];
    NSException *__primaryException1 = nil;
    @try {
      [((id<JavaUtilStreamStream>) nil_chk(lines)) forEachOrderedWithJavaUtilFunctionConsumer:action];
    }
    @catch (NSException *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (lines != nil) {
        if (__primaryException1 != nil) {
          @try {
            [lines close];
          }
          @catch (NSException *e) {
            [__primaryException1 addSuppressedWithNSException:e];
          }
        }
        else {
          [lines close];
        }
      }
    }
  }
  @catch (JavaIoUncheckedIOException *e) {
    @throw nil_chk([e getCause]);
  }
}

- (jboolean)isEmpty {
  ComGoogleCommonBaseOptional *lengthIfKnown = [self lengthIfKnown];
  if ([((ComGoogleCommonBaseOptional *) nil_chk(lengthIfKnown)) isPresent] && [((JavaLangLong *) nil_chk([lengthIfKnown get])) longLongValue] == 0LL) {
    return true;
  }
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoReader *reader = ((JavaIoReader *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return [((JavaIoReader *) nil_chk(reader)) read] == -1;
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

+ (ComGoogleCommonIoCharSource *)concatWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return ComGoogleCommonIoCharSource_concatWithJavaLangIterable_(sources);
}

+ (ComGoogleCommonIoCharSource *)concatWithJavaUtilIterator:(id<JavaUtilIterator>)sources {
  return ComGoogleCommonIoCharSource_concatWithJavaUtilIterator_(sources);
}

+ (ComGoogleCommonIoCharSource *)concatWithComGoogleCommonIoCharSourceArray:(IOSObjectArray *)sources {
  return ComGoogleCommonIoCharSource_concatWithComGoogleCommonIoCharSourceArray_(sources);
}

+ (ComGoogleCommonIoCharSource *)wrapWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence {
  return ComGoogleCommonIoCharSource_wrapWithJavaLangCharSequence_(charSequence);
}

+ (ComGoogleCommonIoCharSource *)empty {
  return ComGoogleCommonIoCharSource_empty();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilStreamStream;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "J", 0x2, 5, 6, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 8, 2, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 9, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 2, -1, 10, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x1, -1, -1, 2, 11, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 13, 2, 14, -1, -1 },
    { NULL, "V", 0x1, 15, 16, 2, 17, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x9, 18, 19, -1, 20, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x9, 18, 21, -1, 22, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x89, 18, 23, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x9, 24, 25, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(asByteSourceWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(openStream);
  methods[3].selector = @selector(openBufferedStream);
  methods[4].selector = @selector(lines);
  methods[5].selector = @selector(lengthIfKnown);
  methods[6].selector = @selector(length);
  methods[7].selector = @selector(countBySkippingWithJavaIoReader:);
  methods[8].selector = @selector(copyToWithJavaLangAppendable:);
  methods[9].selector = @selector(copyToWithComGoogleCommonIoCharSink:);
  methods[10].selector = @selector(read);
  methods[11].selector = @selector(readFirstLine);
  methods[12].selector = @selector(readLines);
  methods[13].selector = @selector(readLinesWithComGoogleCommonIoLineProcessor:);
  methods[14].selector = @selector(forEachLineWithJavaUtilFunctionConsumer:);
  methods[15].selector = @selector(isEmpty);
  methods[16].selector = @selector(concatWithJavaLangIterable:);
  methods[17].selector = @selector(concatWithJavaUtilIterator:);
  methods[18].selector = @selector(concatWithComGoogleCommonIoCharSourceArray:);
  methods[19].selector = @selector(wrapWithJavaLangCharSequence:);
  methods[20].selector = @selector(empty);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "asByteSource", "LJavaNioCharsetCharset;", "LJavaIoIOException;", "()Ljava/util/stream/Stream<Ljava/lang/String;>;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "countBySkipping", "LJavaIoReader;", "copyTo", "LJavaLangAppendable;", "LComGoogleCommonIoCharSink;", (void *)&ComGoogleCommonIoCharSource__Annotations$0, "()Lcom/google/common/collect/ImmutableList<Ljava/lang/String;>;", "readLines", "LComGoogleCommonIoLineProcessor;", "<T:Ljava/lang/Object;>(Lcom/google/common/io/LineProcessor<TT;>;)TT;", "forEachLine", "LJavaUtilFunctionConsumer;", "(Ljava/util/function/Consumer<-Ljava/lang/String;>;)V", "concat", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lcom/google/common/io/CharSource;>;)Lcom/google/common/io/CharSource;", "LJavaUtilIterator;", "(Ljava/util/Iterator<+Lcom/google/common/io/CharSource;>;)Lcom/google/common/io/CharSource;", "[LComGoogleCommonIoCharSource;", "wrap", "LJavaLangCharSequence;", "LComGoogleCommonIoCharSource_AsByteSource;LComGoogleCommonIoCharSource_CharSequenceCharSource;LComGoogleCommonIoCharSource_EmptyCharSource;LComGoogleCommonIoCharSource_ConcatenatedCharSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource = { "CharSource", "com.google.common.io", ptrTable, methods, NULL, 7, 0x401, 21, 0, -1, 26, -1, -1, -1 };
  return &_ComGoogleCommonIoCharSource;
}

@end

void ComGoogleCommonIoCharSource_init(ComGoogleCommonIoCharSource *self) {
  NSObject_init(self);
}

jlong ComGoogleCommonIoCharSource_countBySkippingWithJavaIoReader_(ComGoogleCommonIoCharSource *self, JavaIoReader *reader) {
  jlong count = 0;
  jlong read;
  while ((read = [((JavaIoReader *) nil_chk(reader)) skipWithLong:JavaLangLong_MAX_VALUE]) != 0) {
    count += read;
  }
  return count;
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoCharSource_concatWithJavaLangIterable_(id<JavaLangIterable> sources) {
  ComGoogleCommonIoCharSource_initialize();
  return new_ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(sources);
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoCharSource_concatWithJavaUtilIterator_(id<JavaUtilIterator> sources) {
  ComGoogleCommonIoCharSource_initialize();
  return ComGoogleCommonIoCharSource_concatWithJavaLangIterable_(ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilIterator_(sources));
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoCharSource_concatWithComGoogleCommonIoCharSourceArray_(IOSObjectArray *sources) {
  ComGoogleCommonIoCharSource_initialize();
  return ComGoogleCommonIoCharSource_concatWithJavaLangIterable_(ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(sources));
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoCharSource_wrapWithJavaLangCharSequence_(id<JavaLangCharSequence> charSequence) {
  ComGoogleCommonIoCharSource_initialize();
  return new_ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(charSequence);
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoCharSource_empty() {
  ComGoogleCommonIoCharSource_initialize();
  return JreLoadStatic(ComGoogleCommonIoCharSource_EmptyCharSource, INSTANCE);
}

IOSObjectArray *ComGoogleCommonIoCharSource__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCharSource)

@implementation ComGoogleCommonIoCharSource_AsByteSource

- (instancetype)initWithComGoogleCommonIoCharSource:(ComGoogleCommonIoCharSource *)outer$
                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(self, outer$, charset);
  return self;
}

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  if ([((JavaNioCharsetCharset *) nil_chk(charset)) isEqual:self->charset_]) {
    return this$0_;
  }
  return [super asCharSourceWithJavaNioCharsetCharset:charset];
}

- (JavaIoInputStream *)openStream {
  return new_ComGoogleCommonIoReaderInputStream_initWithJavaIoReader_withJavaNioCharsetCharset_withInt_([this$0_ openStream], charset_, 8192);
}

- (NSString *)description {
  return JreStrcat("$$@C", [this$0_ description], @".asByteSource(", charset_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoCharSource:withJavaNioCharsetCharset:);
  methods[1].selector = @selector(asCharSourceWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(openStream);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoCharSource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "charset_", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioCharsetCharset;", "asCharSource", "LJavaIoIOException;", "toString", "LComGoogleCommonIoCharSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource_AsByteSource = { "AsByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x12, 4, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCharSource_AsByteSource;
}

@end

void ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource_AsByteSource *self, ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset) {
  self->this$0_ = outer$;
  ComGoogleCommonIoByteSource_init(self);
  self->charset_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
}

ComGoogleCommonIoCharSource_AsByteSource *new_ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_AsByteSource, initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_, outer$, charset)
}

ComGoogleCommonIoCharSource_AsByteSource *create_ComGoogleCommonIoCharSource_AsByteSource_initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_(ComGoogleCommonIoCharSource *outer$, JavaNioCharsetCharset *charset) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_AsByteSource, initWithComGoogleCommonIoCharSource_withJavaNioCharsetCharset_, outer$, charset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCharSource_AsByteSource)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoCharSource_CharSequenceCharSource)

@implementation ComGoogleCommonIoCharSource_CharSequenceCharSource

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(self, seq);
  return self;
}

- (JavaIoReader *)openStream {
  return new_ComGoogleCommonIoCharSequenceReader_initWithJavaLangCharSequence_(seq_);
}

- (NSString *)read {
  return [((id<JavaLangCharSequence>) nil_chk(seq_)) description];
}

- (jboolean)isEmpty {
  return [((id<JavaLangCharSequence>) nil_chk(seq_)) java_length] == 0;
}

- (jlong)length {
  return [((id<JavaLangCharSequence>) nil_chk(seq_)) java_length];
}

- (ComGoogleCommonBaseOptional *)lengthIfKnown {
  return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_((jlong) [((id<JavaLangCharSequence>) nil_chk(seq_)) java_length]));
}

- (id<JavaUtilIterator>)linesIterator {
  return ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(self);
}

- (id<JavaUtilStreamStream>)lines {
  return ComGoogleCommonCollectStreams_streamWithJavaUtilIterator_(ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(self));
}

- (NSString *)readFirstLine {
  id<JavaUtilIterator> lines = ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(self);
  return [((id<JavaUtilIterator>) nil_chk(lines)) hasNext] ? [lines next] : nil;
}

- (ComGoogleCommonCollectImmutableList *)readLines {
  return ComGoogleCommonCollectImmutableList_copyOfWithJavaUtilIterator_(ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(self));
}

- (id)readLinesWithComGoogleCommonIoLineProcessor:(id<ComGoogleCommonIoLineProcessor>)processor {
  id<JavaUtilIterator> lines = ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(self);
  while ([((id<JavaUtilIterator>) nil_chk(lines)) hasNext]) {
    if (![((id<ComGoogleCommonIoLineProcessor>) nil_chk(processor)) processLineWithNSString:[lines next]]) {
      break;
    }
  }
  return [((id<ComGoogleCommonIoLineProcessor>) nil_chk(processor)) getResult];
}

- (NSString *)description {
  return JreStrcat("$$C", @"CharSource.wrap(", ComGoogleCommonBaseAscii_truncateWithJavaLangCharSequence_withInt_withNSString_(seq_, 30, @"..."), ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x2, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilStreamStream;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, 7, 8, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangCharSequence:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(length);
  methods[5].selector = @selector(lengthIfKnown);
  methods[6].selector = @selector(linesIterator);
  methods[7].selector = @selector(lines);
  methods[8].selector = @selector(readFirstLine);
  methods[9].selector = @selector(readLines);
  methods[10].selector = @selector(readLinesWithComGoogleCommonIoLineProcessor:);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINE_SPLITTER", "LComGoogleCommonBaseSplitter;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "seq_", "LJavaLangCharSequence;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangCharSequence;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "()Ljava/util/Iterator<Ljava/lang/String;>;", "()Ljava/util/stream/Stream<Ljava/lang/String;>;", "()Lcom/google/common/collect/ImmutableList<Ljava/lang/String;>;", "readLines", "LComGoogleCommonIoLineProcessor;", "LJavaIoIOException;", "<T:Ljava/lang/Object;>(Lcom/google/common/io/LineProcessor<TT;>;)TT;", "toString", &ComGoogleCommonIoCharSource_CharSequenceCharSource_LINE_SPLITTER, "LComGoogleCommonIoCharSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource_CharSequenceCharSource = { "CharSequenceCharSource", "com.google.common.io", ptrTable, methods, fields, 7, 0xa, 12, 2, 11, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCharSource_CharSequenceCharSource;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoCharSource_CharSequenceCharSource class]) {
    ComGoogleCommonIoCharSource_CharSequenceCharSource_LINE_SPLITTER = ComGoogleCommonBaseSplitter_onPatternWithNSString_(@"\x0d\n|\n|\x0d");
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoCharSource_CharSequenceCharSource)
  }
}

@end

void ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(ComGoogleCommonIoCharSource_CharSequenceCharSource *self, id<JavaLangCharSequence> seq) {
  ComGoogleCommonIoCharSource_init(self);
  self->seq_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(seq);
}

ComGoogleCommonIoCharSource_CharSequenceCharSource *new_ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(id<JavaLangCharSequence> seq) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_CharSequenceCharSource, initWithJavaLangCharSequence_, seq)
}

ComGoogleCommonIoCharSource_CharSequenceCharSource *create_ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(id<JavaLangCharSequence> seq) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_CharSequenceCharSource, initWithJavaLangCharSequence_, seq)
}

id<JavaUtilIterator> ComGoogleCommonIoCharSource_CharSequenceCharSource_linesIterator(ComGoogleCommonIoCharSource_CharSequenceCharSource *self) {
  return new_ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCharSource_CharSequenceCharSource)

@implementation ComGoogleCommonIoCharSource_CharSequenceCharSource_1

- (instancetype)initWithComGoogleCommonIoCharSource_CharSequenceCharSource:(ComGoogleCommonIoCharSource_CharSequenceCharSource *)outer$ {
  ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(self, outer$);
  return self;
}

- (NSString *)computeNext {
  if ([((id<JavaUtilIterator>) nil_chk(lines_)) hasNext]) {
    NSString *next = [((id<JavaUtilIterator>) nil_chk(lines_)) next];
    if ([((id<JavaUtilIterator>) nil_chk(lines_)) hasNext] || ![((NSString *) nil_chk(next)) java_isEmpty]) {
      return next;
    }
  }
  return [self endOfData];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoCharSource_CharSequenceCharSource:);
  methods[1].selector = @selector(computeNext);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lines_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Iterator<Ljava/lang/String;>;", "LComGoogleCommonIoCharSource_CharSequenceCharSource;", "linesIterator", "Lcom/google/common/collect/AbstractIterator<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource_CharSequenceCharSource_1 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_ComGoogleCommonIoCharSource_CharSequenceCharSource_1;
}

@end

void ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *self, ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$) {
  ComGoogleCommonCollectAbstractIterator_init(self);
  self->lines_ = [((id<JavaLangIterable>) nil_chk([((ComGoogleCommonBaseSplitter *) nil_chk(JreLoadStatic(ComGoogleCommonIoCharSource_CharSequenceCharSource, LINE_SPLITTER))) splitWithJavaLangCharSequence:outer$->seq_])) iterator];
}

ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *new_ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_CharSequenceCharSource_1, initWithComGoogleCommonIoCharSource_CharSequenceCharSource_, outer$)
}

ComGoogleCommonIoCharSource_CharSequenceCharSource_1 *create_ComGoogleCommonIoCharSource_CharSequenceCharSource_1_initWithComGoogleCommonIoCharSource_CharSequenceCharSource_(ComGoogleCommonIoCharSource_CharSequenceCharSource *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_CharSequenceCharSource_1, initWithComGoogleCommonIoCharSource_CharSequenceCharSource_, outer$)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoCharSource_EmptyCharSource)

@implementation ComGoogleCommonIoCharSource_EmptyCharSource

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoCharSource_EmptyCharSource_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)description {
  return @"CharSource.empty()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonIoCharSource_EmptyCharSource;", .constantValue.asLong = 0, 0x1a, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", &ComGoogleCommonIoCharSource_EmptyCharSource_INSTANCE, "LComGoogleCommonIoCharSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource_EmptyCharSource = { "EmptyCharSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 2, 1, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCharSource_EmptyCharSource;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoCharSource_EmptyCharSource class]) {
    ComGoogleCommonIoCharSource_EmptyCharSource_INSTANCE = new_ComGoogleCommonIoCharSource_EmptyCharSource_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoCharSource_EmptyCharSource)
  }
}

@end

void ComGoogleCommonIoCharSource_EmptyCharSource_init(ComGoogleCommonIoCharSource_EmptyCharSource *self) {
  ComGoogleCommonIoCharSource_CharSequenceCharSource_initWithJavaLangCharSequence_(self, @"");
}

ComGoogleCommonIoCharSource_EmptyCharSource *new_ComGoogleCommonIoCharSource_EmptyCharSource_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_EmptyCharSource, init)
}

ComGoogleCommonIoCharSource_EmptyCharSource *create_ComGoogleCommonIoCharSource_EmptyCharSource_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_EmptyCharSource, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCharSource_EmptyCharSource)

@implementation ComGoogleCommonIoCharSource_ConcatenatedCharSource

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources {
  ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(self, sources);
  return self;
}

- (JavaIoReader *)openStream {
  return new_ComGoogleCommonIoMultiReader_initWithJavaUtilIterator_([((id<JavaLangIterable>) nil_chk(sources_)) iterator]);
}

- (jboolean)isEmpty {
  for (ComGoogleCommonIoCharSource * __strong source in nil_chk(sources_)) {
    if (![((ComGoogleCommonIoCharSource *) nil_chk(source)) isEmpty]) {
      return false;
    }
  }
  return true;
}

- (ComGoogleCommonBaseOptional *)lengthIfKnown {
  jlong result = 0LL;
  for (ComGoogleCommonIoCharSource * __strong source in nil_chk(sources_)) {
    ComGoogleCommonBaseOptional *lengthIfKnown = [((ComGoogleCommonIoCharSource *) nil_chk(source)) lengthIfKnown];
    if (![((ComGoogleCommonBaseOptional *) nil_chk(lengthIfKnown)) isPresent]) {
      return ComGoogleCommonBaseOptional_absent();
    }
    result += [((JavaLangLong *) nil_chk([lengthIfKnown get])) longLongValue];
  }
  return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_(result));
}

- (jlong)length {
  jlong result = 0LL;
  for (ComGoogleCommonIoCharSource * __strong source in nil_chk(sources_)) {
    result += [((ComGoogleCommonIoCharSource *) nil_chk(source)) length];
  }
  return result;
}

- (NSString *)description {
  return JreStrcat("$@C", @"CharSource.concat(", sources_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangIterable:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(isEmpty);
  methods[3].selector = @selector(lengthIfKnown);
  methods[4].selector = @selector(length);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lcom/google/common/io/CharSource;>;)V", "LJavaIoIOException;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "toString", "Ljava/lang/Iterable<+Lcom/google/common/io/CharSource;>;", "LComGoogleCommonIoCharSource;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCharSource_ConcatenatedCharSource = { "ConcatenatedCharSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 6, 1, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCharSource_ConcatenatedCharSource;
}

@end

void ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(ComGoogleCommonIoCharSource_ConcatenatedCharSource *self, id<JavaLangIterable> sources) {
  ComGoogleCommonIoCharSource_init(self);
  self->sources_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(sources);
}

ComGoogleCommonIoCharSource_ConcatenatedCharSource *new_ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_ConcatenatedCharSource, initWithJavaLangIterable_, sources)
}

ComGoogleCommonIoCharSource_ConcatenatedCharSource *create_ComGoogleCommonIoCharSource_ConcatenatedCharSource_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_ConcatenatedCharSource, initWithJavaLangIterable_, sources)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCharSource_ConcatenatedCharSource)

@implementation ComGoogleCommonIoCharSource_$Lambda$1

- (void)run {
  @try {
    [((JavaIoBufferedReader *) nil_chk(val$reader_)) close];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaIoUncheckedIOException_initWithJavaIoIOException_(e);
  }
}

@end

void ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(ComGoogleCommonIoCharSource_$Lambda$1 *self, JavaIoBufferedReader *capture$0) {
  self->val$reader_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonIoCharSource_$Lambda$1 *new_ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(JavaIoBufferedReader *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCharSource_$Lambda$1, initWithJavaIoBufferedReader_, capture$0)
}

ComGoogleCommonIoCharSource_$Lambda$1 *create_ComGoogleCommonIoCharSource_$Lambda$1_initWithJavaIoBufferedReader_(JavaIoBufferedReader *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCharSource_$Lambda$1, initWithJavaIoBufferedReader_, capture$0)
}
