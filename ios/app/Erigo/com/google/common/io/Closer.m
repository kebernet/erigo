//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/Closer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Throwables.h"
#include "com/google/common/io/Closeables.h"
#include "com/google/common/io/Closer.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Method.h"
#include "java/util/ArrayDeque.h"
#include "java/util/Deque.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonIoCloser () {
 @public
  id<JavaUtilDeque> stack_;
  NSException *thrown_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoCloser, stack_, id<JavaUtilDeque>)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoCloser, thrown_, NSException *)

inline id<ComGoogleCommonIoCloser_Suppressor> ComGoogleCommonIoCloser_get_SUPPRESSOR();
static id<ComGoogleCommonIoCloser_Suppressor> ComGoogleCommonIoCloser_SUPPRESSOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoCloser, SUPPRESSOR, id<ComGoogleCommonIoCloser_Suppressor>)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoCloser__Annotations$0();

@interface ComGoogleCommonIoCloser_Suppressor : NSObject

@end

@interface ComGoogleCommonIoCloser_SuppressingSuppressor ()

+ (JavaLangReflectMethod *)getAddSuppressed;

@end

__attribute__((unused)) static JavaLangReflectMethod *ComGoogleCommonIoCloser_SuppressingSuppressor_getAddSuppressed();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoCloser)

@implementation ComGoogleCommonIoCloser

+ (ComGoogleCommonIoCloser *)create {
  return ComGoogleCommonIoCloser_create();
}

- (instancetype)initWithComGoogleCommonIoCloser_Suppressor:(id<ComGoogleCommonIoCloser_Suppressor>)suppressor {
  ComGoogleCommonIoCloser_initWithComGoogleCommonIoCloser_Suppressor_(self, suppressor);
  return self;
}

- (id<JavaIoCloseable>)register__WithJavaIoCloseable:(id<JavaIoCloseable>)closeable {
  if (closeable != nil) {
    [((id<JavaUtilDeque>) nil_chk(stack_)) addFirstWithId:closeable];
  }
  return closeable;
}

- (JavaLangRuntimeException *)rethrowWithNSException:(NSException *)e {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(e);
  thrown_ = e;
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(e, JavaIoIOException_class_());
  @throw new_JavaLangRuntimeException_initWithNSException_(e);
}

- (JavaLangRuntimeException *)rethrowWithNSException:(NSException *)e
                                        withIOSClass:(IOSClass *)declaredType {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(e);
  thrown_ = e;
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(e, JavaIoIOException_class_());
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(e, declaredType);
  @throw new_JavaLangRuntimeException_initWithNSException_(e);
}

- (JavaLangRuntimeException *)rethrowWithNSException:(NSException *)e
                                        withIOSClass:(IOSClass *)declaredType1
                                        withIOSClass:(IOSClass *)declaredType2 {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(e);
  thrown_ = e;
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(e, JavaIoIOException_class_());
  ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_withIOSClass_(e, declaredType1, declaredType2);
  @throw new_JavaLangRuntimeException_initWithNSException_(e);
}

- (void)close {
  NSException *throwable = thrown_;
  while (![((id<JavaUtilDeque>) nil_chk(stack_)) isEmpty]) {
    id<JavaIoCloseable> closeable = [stack_ removeFirst];
    @try {
      [((id<JavaIoCloseable>) nil_chk(closeable)) close];
    }
    @catch (NSException *e) {
      if (throwable == nil) {
        throwable = e;
      }
      else {
        [((id<ComGoogleCommonIoCloser_Suppressor>) nil_chk(suppressor_)) suppressWithJavaIoCloseable:closeable withNSException:throwable withNSException:e];
      }
    }
  }
  if (thrown_ == nil && throwable != nil) {
    ComGoogleCommonBaseThrowables_propagateIfPossibleWithNSException_withIOSClass_(throwable, JavaIoIOException_class_());
    @throw new_JavaLangAssertionError_initWithId_(throwable);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonIoCloser;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoCloseable;", 0x1, 1, 2, -1, 3, -1, 4 },
    { NULL, "LJavaLangRuntimeException;", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "LJavaLangRuntimeException;", 0x1, 5, 8, 9, 10, -1, -1 },
    { NULL, "LJavaLangRuntimeException;", 0x1, 5, 11, 12, 13, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(create);
  methods[1].selector = @selector(initWithComGoogleCommonIoCloser_Suppressor:);
  methods[2].selector = @selector(register__WithJavaIoCloseable:);
  methods[3].selector = @selector(rethrowWithNSException:);
  methods[4].selector = @selector(rethrowWithNSException:withIOSClass:);
  methods[5].selector = @selector(rethrowWithNSException:withIOSClass:withIOSClass:);
  methods[6].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SUPPRESSOR", "LComGoogleCommonIoCloser_Suppressor;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "suppressor_", "LComGoogleCommonIoCloser_Suppressor;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "stack_", "LJavaUtilDeque;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "thrown_", "LNSException;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonIoCloser_Suppressor;", "register", "LJavaIoCloseable;", "<C::Ljava/io/Closeable;>(TC;)TC;", (void *)&ComGoogleCommonIoCloser__Annotations$0, "rethrow", "LNSException;", "LJavaIoIOException;", "LNSException;LIOSClass;", "LJavaIoIOException;LJavaLangException;", "<X:Ljava/lang/Exception;>(Ljava/lang/Throwable;Ljava/lang/Class<TX;>;)Ljava/lang/RuntimeException;^Ljava/io/IOException;^TX;", "LNSException;LIOSClass;LIOSClass;", "LJavaIoIOException;LJavaLangException;LJavaLangException;", "<X1:Ljava/lang/Exception;X2:Ljava/lang/Exception;>(Ljava/lang/Throwable;Ljava/lang/Class<TX1;>;Ljava/lang/Class<TX2;>;)Ljava/lang/RuntimeException;^Ljava/io/IOException;^TX1;^TX2;", &ComGoogleCommonIoCloser_SUPPRESSOR, "Ljava/util/Deque<Ljava/io/Closeable;>;", "LComGoogleCommonIoCloser_Suppressor;LComGoogleCommonIoCloser_LoggingSuppressor;LComGoogleCommonIoCloser_SuppressingSuppressor;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCloser = { "Closer", "com.google.common.io", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, 16, -1, -1, -1 };
  return &_ComGoogleCommonIoCloser;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoCloser class]) {
    ComGoogleCommonIoCloser_SUPPRESSOR = ComGoogleCommonIoCloser_SuppressingSuppressor_isAvailable() ? JreLoadStatic(ComGoogleCommonIoCloser_SuppressingSuppressor, INSTANCE) : (id) JreLoadStatic(ComGoogleCommonIoCloser_LoggingSuppressor, INSTANCE);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoCloser)
  }
}

@end

ComGoogleCommonIoCloser *ComGoogleCommonIoCloser_create() {
  ComGoogleCommonIoCloser_initialize();
  return new_ComGoogleCommonIoCloser_initWithComGoogleCommonIoCloser_Suppressor_(ComGoogleCommonIoCloser_SUPPRESSOR);
}

void ComGoogleCommonIoCloser_initWithComGoogleCommonIoCloser_Suppressor_(ComGoogleCommonIoCloser *self, id<ComGoogleCommonIoCloser_Suppressor> suppressor) {
  NSObject_init(self);
  self->stack_ = new_JavaUtilArrayDeque_initWithInt_(4);
  self->suppressor_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(suppressor);
}

ComGoogleCommonIoCloser *new_ComGoogleCommonIoCloser_initWithComGoogleCommonIoCloser_Suppressor_(id<ComGoogleCommonIoCloser_Suppressor> suppressor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCloser, initWithComGoogleCommonIoCloser_Suppressor_, suppressor)
}

ComGoogleCommonIoCloser *create_ComGoogleCommonIoCloser_initWithComGoogleCommonIoCloser_Suppressor_(id<ComGoogleCommonIoCloser_Suppressor> suppressor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCloser, initWithComGoogleCommonIoCloser_Suppressor_, suppressor)
}

IOSObjectArray *ComGoogleCommonIoCloser__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCloser)

@implementation ComGoogleCommonIoCloser_Suppressor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(suppressWithJavaIoCloseable:withNSException:withNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "suppress", "LJavaIoCloseable;LNSException;LNSException;", "LComGoogleCommonIoCloser;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCloser_Suppressor = { "Suppressor", "com.google.common.io", ptrTable, methods, NULL, 7, 0x608, 1, 0, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCloser_Suppressor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCloser_Suppressor)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoCloser_LoggingSuppressor)

ComGoogleCommonIoCloser_LoggingSuppressor *ComGoogleCommonIoCloser_LoggingSuppressor_INSTANCE;

@implementation ComGoogleCommonIoCloser_LoggingSuppressor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoCloser_LoggingSuppressor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)suppressWithJavaIoCloseable:(id<JavaIoCloseable>)closeable
                    withNSException:(NSException *)thrown
                    withNSException:(NSException *)suppressed {
  [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonIoCloseables, logger))) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$@", @"Suppressing exception thrown when closing ", closeable) withNSException:suppressed];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(suppressWithJavaIoCloseable:withNSException:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonIoCloser_LoggingSuppressor;", .constantValue.asLong = 0, 0x18, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "suppress", "LJavaIoCloseable;LNSException;LNSException;", &ComGoogleCommonIoCloser_LoggingSuppressor_INSTANCE, "LComGoogleCommonIoCloser;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCloser_LoggingSuppressor = { "LoggingSuppressor", "com.google.common.io", ptrTable, methods, fields, 7, 0x18, 2, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCloser_LoggingSuppressor;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoCloser_LoggingSuppressor class]) {
    ComGoogleCommonIoCloser_LoggingSuppressor_INSTANCE = new_ComGoogleCommonIoCloser_LoggingSuppressor_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoCloser_LoggingSuppressor)
  }
}

@end

void ComGoogleCommonIoCloser_LoggingSuppressor_init(ComGoogleCommonIoCloser_LoggingSuppressor *self) {
  NSObject_init(self);
}

ComGoogleCommonIoCloser_LoggingSuppressor *new_ComGoogleCommonIoCloser_LoggingSuppressor_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCloser_LoggingSuppressor, init)
}

ComGoogleCommonIoCloser_LoggingSuppressor *create_ComGoogleCommonIoCloser_LoggingSuppressor_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCloser_LoggingSuppressor, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCloser_LoggingSuppressor)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoCloser_SuppressingSuppressor)

ComGoogleCommonIoCloser_SuppressingSuppressor *ComGoogleCommonIoCloser_SuppressingSuppressor_INSTANCE;
JavaLangReflectMethod *ComGoogleCommonIoCloser_SuppressingSuppressor_addSuppressed;

@implementation ComGoogleCommonIoCloser_SuppressingSuppressor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoCloser_SuppressingSuppressor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isAvailable {
  return ComGoogleCommonIoCloser_SuppressingSuppressor_isAvailable();
}

+ (JavaLangReflectMethod *)getAddSuppressed {
  return ComGoogleCommonIoCloser_SuppressingSuppressor_getAddSuppressed();
}

- (void)suppressWithJavaIoCloseable:(id<JavaIoCloseable>)closeable
                    withNSException:(NSException *)thrown
                    withNSException:(NSException *)suppressed {
  if (thrown == suppressed) {
    return;
  }
  @try {
    (void) [((JavaLangReflectMethod *) nil_chk(ComGoogleCommonIoCloser_SuppressingSuppressor_addSuppressed)) invokeWithId:thrown withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ suppressed } count:1 type:NSObject_class_()]];
  }
  @catch (NSException *e) {
    [((ComGoogleCommonIoCloser_LoggingSuppressor *) nil_chk(JreLoadStatic(ComGoogleCommonIoCloser_LoggingSuppressor, INSTANCE))) suppressWithJavaIoCloseable:closeable withNSException:thrown withNSException:suppressed];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectMethod;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isAvailable);
  methods[2].selector = @selector(getAddSuppressed);
  methods[3].selector = @selector(suppressWithJavaIoCloseable:withNSException:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonIoCloser_SuppressingSuppressor;", .constantValue.asLong = 0, 0x18, -1, 2, -1, -1 },
    { "addSuppressed", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "suppress", "LJavaIoCloseable;LNSException;LNSException;", &ComGoogleCommonIoCloser_SuppressingSuppressor_INSTANCE, &ComGoogleCommonIoCloser_SuppressingSuppressor_addSuppressed, "LComGoogleCommonIoCloser;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCloser_SuppressingSuppressor = { "SuppressingSuppressor", "com.google.common.io", ptrTable, methods, fields, 7, 0x18, 4, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCloser_SuppressingSuppressor;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoCloser_SuppressingSuppressor class]) {
    ComGoogleCommonIoCloser_SuppressingSuppressor_INSTANCE = new_ComGoogleCommonIoCloser_SuppressingSuppressor_init();
    ComGoogleCommonIoCloser_SuppressingSuppressor_addSuppressed = ComGoogleCommonIoCloser_SuppressingSuppressor_getAddSuppressed();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoCloser_SuppressingSuppressor)
  }
}

@end

void ComGoogleCommonIoCloser_SuppressingSuppressor_init(ComGoogleCommonIoCloser_SuppressingSuppressor *self) {
  NSObject_init(self);
}

ComGoogleCommonIoCloser_SuppressingSuppressor *new_ComGoogleCommonIoCloser_SuppressingSuppressor_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCloser_SuppressingSuppressor, init)
}

ComGoogleCommonIoCloser_SuppressingSuppressor *create_ComGoogleCommonIoCloser_SuppressingSuppressor_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCloser_SuppressingSuppressor, init)
}

jboolean ComGoogleCommonIoCloser_SuppressingSuppressor_isAvailable() {
  ComGoogleCommonIoCloser_SuppressingSuppressor_initialize();
  return ComGoogleCommonIoCloser_SuppressingSuppressor_addSuppressed != nil;
}

JavaLangReflectMethod *ComGoogleCommonIoCloser_SuppressingSuppressor_getAddSuppressed() {
  ComGoogleCommonIoCloser_SuppressingSuppressor_initialize();
  @try {
    return [NSException_class_() getMethod:@"addSuppressed" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ NSException_class_() } count:1 type:IOSClass_class_()]];
  }
  @catch (NSException *e) {
    return nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCloser_SuppressingSuppressor)
