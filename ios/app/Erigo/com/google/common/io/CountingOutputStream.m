//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/CountingOutputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/CountingOutputStream.h"
#include "java/io/FilterOutputStream.h"
#include "java/io/OutputStream.h"

@interface ComGoogleCommonIoCountingOutputStream () {
 @public
  jlong count_;
}

@end

@implementation ComGoogleCommonIoCountingOutputStream

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  ComGoogleCommonIoCountingOutputStream_initWithJavaIoOutputStream_(self, outArg);
  return self;
}

- (jlong)getCount {
  return count_;
}

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithByteArray:b withInt:off withInt:len];
  count_ += len;
}

- (void)writeWithInt:(jint)b {
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:b];
  count_++;
}

- (void)close {
  [((JavaIoOutputStream *) nil_chk(out_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(getCount);
  methods[2].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(writeWithInt:);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "write", "[BII", "LJavaIoIOException;", "I" };
  static const J2ObjcClassInfo _ComGoogleCommonIoCountingOutputStream = { "CountingOutputStream", "com.google.common.io", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoCountingOutputStream;
}

@end

void ComGoogleCommonIoCountingOutputStream_initWithJavaIoOutputStream_(ComGoogleCommonIoCountingOutputStream *self, JavaIoOutputStream *outArg) {
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_(self, ComGoogleCommonBasePreconditions_checkNotNullWithId_(outArg));
}

ComGoogleCommonIoCountingOutputStream *new_ComGoogleCommonIoCountingOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoCountingOutputStream, initWithJavaIoOutputStream_, outArg)
}

ComGoogleCommonIoCountingOutputStream *create_ComGoogleCommonIoCountingOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoCountingOutputStream, initWithJavaIoOutputStream_, outArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoCountingOutputStream)
