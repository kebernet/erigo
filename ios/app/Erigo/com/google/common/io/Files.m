//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/Files.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Joiner.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Predicate.h"
#include "com/google/common/base/Splitter.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/Lists.h"
#include "com/google/common/collect/TreeTraverser.h"
#include "com/google/common/hash/HashCode.h"
#include "com/google/common/hash/HashFunction.h"
#include "com/google/common/io/ByteProcessor.h"
#include "com/google/common/io/ByteSink.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/ByteStreams.h"
#include "com/google/common/io/CharSink.h"
#include "com/google/common/io/CharSource.h"
#include "com/google/common/io/Closer.h"
#include "com/google/common/io/FileWriteMode.h"
#include "com/google/common/io/Files.h"
#include "com/google/common/io/LineProcessor.h"
#include "java/io/BufferedReader.h"
#include "java/io/BufferedWriter.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/RandomAccessFile.h"
#include "java/lang/Appendable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/OutOfMemoryError.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/MappedByteBuffer.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/charset/Charset.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/function/Predicate.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonIoFiles ()

- (instancetype)init;

+ (JavaNioMappedByteBuffer *)mapWithJavaIoRandomAccessFile:(JavaIoRandomAccessFile *)raf
                    withJavaNioChannelsFileChannel_MapMode:(JavaNioChannelsFileChannel_MapMode *)mode
                                                  withLong:(jlong)size;

@end

inline jint ComGoogleCommonIoFiles_get_TEMP_DIR_ATTEMPTS();
#define ComGoogleCommonIoFiles_TEMP_DIR_ATTEMPTS 10000
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonIoFiles, TEMP_DIR_ATTEMPTS, jint)

inline ComGoogleCommonCollectTreeTraverser *ComGoogleCommonIoFiles_get_FILE_TREE_TRAVERSER();
static ComGoogleCommonCollectTreeTraverser *ComGoogleCommonIoFiles_FILE_TREE_TRAVERSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonIoFiles, FILE_TREE_TRAVERSER, ComGoogleCommonCollectTreeTraverser *)

__attribute__((unused)) static void ComGoogleCommonIoFiles_init(ComGoogleCommonIoFiles *self);

__attribute__((unused)) static ComGoogleCommonIoFiles *new_ComGoogleCommonIoFiles_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoFiles *create_ComGoogleCommonIoFiles_init();

__attribute__((unused)) static JavaNioMappedByteBuffer *ComGoogleCommonIoFiles_mapWithJavaIoRandomAccessFile_withJavaNioChannelsFileChannel_MapMode_withLong_(JavaIoRandomAccessFile *raf, JavaNioChannelsFileChannel_MapMode *mode, jlong size);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$4();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$5();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$6();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles__Annotations$7();

@interface ComGoogleCommonIoFiles_FileByteSource : ComGoogleCommonIoByteSource {
 @public
  JavaIoFile *file_;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file;

- (JavaIoFileInputStream *)openStream;

- (ComGoogleCommonBaseOptional *)sizeIfKnown;

- (jlong)size;

- (IOSByteArray *)read;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_FileByteSource)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoFiles_FileByteSource, file_, JavaIoFile *)

__attribute__((unused)) static void ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(ComGoogleCommonIoFiles_FileByteSource *self, JavaIoFile *file);

__attribute__((unused)) static ComGoogleCommonIoFiles_FileByteSource *new_ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoFiles_FileByteSource *create_ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(JavaIoFile *file);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoFiles_FileByteSource)

@interface ComGoogleCommonIoFiles_FileByteSink : ComGoogleCommonIoByteSink {
 @public
  JavaIoFile *file_;
  ComGoogleCommonCollectImmutableSet *modes_;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
withComGoogleCommonIoFileWriteModeArray:(IOSObjectArray *)modes;

- (JavaIoFileOutputStream *)openStream;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_FileByteSink)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoFiles_FileByteSink, file_, JavaIoFile *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoFiles_FileByteSink, modes_, ComGoogleCommonCollectImmutableSet *)

__attribute__((unused)) static void ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(ComGoogleCommonIoFiles_FileByteSink *self, JavaIoFile *file, IOSObjectArray *modes);

__attribute__((unused)) static ComGoogleCommonIoFiles_FileByteSink *new_ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, IOSObjectArray *modes) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoFiles_FileByteSink *create_ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, IOSObjectArray *modes);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoFiles_FileByteSink)

@interface ComGoogleCommonIoFiles_1 : NSObject < ComGoogleCommonIoLineProcessor > {
 @public
  id<JavaUtilList> result_;
}

- (instancetype)init;

- (jboolean)processLineWithNSString:(NSString *)line;

- (id<JavaUtilList>)getResult;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_1)

J2OBJC_FIELD_SETTER(ComGoogleCommonIoFiles_1, result_, id<JavaUtilList>)

__attribute__((unused)) static void ComGoogleCommonIoFiles_1_init(ComGoogleCommonIoFiles_1 *self);

__attribute__((unused)) static ComGoogleCommonIoFiles_1 *new_ComGoogleCommonIoFiles_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoFiles_1 *create_ComGoogleCommonIoFiles_1_init();

@interface ComGoogleCommonIoFiles_2 : ComGoogleCommonCollectTreeTraverser

- (instancetype)init;

- (id<JavaLangIterable>)childrenWithId:(JavaIoFile *)file;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_2)

__attribute__((unused)) static void ComGoogleCommonIoFiles_2_init(ComGoogleCommonIoFiles_2 *self);

__attribute__((unused)) static ComGoogleCommonIoFiles_2 *new_ComGoogleCommonIoFiles_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoFiles_2 *create_ComGoogleCommonIoFiles_2_init();

typedef NS_ENUM(NSUInteger, ComGoogleCommonIoFiles_FilePredicate_Enum) {
  ComGoogleCommonIoFiles_FilePredicate_Enum_IS_DIRECTORY = 0,
  ComGoogleCommonIoFiles_FilePredicate_Enum_IS_FILE = 1,
};

@interface ComGoogleCommonIoFiles_FilePredicate : JavaLangEnum < NSCopying, ComGoogleCommonBasePredicate >

+ (IOSObjectArray *)values;

+ (ComGoogleCommonIoFiles_FilePredicate *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonIoFiles_FilePredicate)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_values_[];

inline ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_get_IS_DIRECTORY();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonIoFiles_FilePredicate, IS_DIRECTORY)

inline ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_get_IS_FILE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonIoFiles_FilePredicate, IS_FILE)

__attribute__((unused)) static void ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonIoFiles_FilePredicate *new_ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoFiles_FilePredicate_values();

__attribute__((unused)) static ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoFiles_FilePredicate)

@interface ComGoogleCommonIoFiles_FilePredicate_1 : ComGoogleCommonIoFiles_FilePredicate < NSCopying >

- (jboolean)applyWithId:(JavaIoFile *)file;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_FilePredicate_1)

__attribute__((unused)) static void ComGoogleCommonIoFiles_FilePredicate_1_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonIoFiles_FilePredicate_1 *new_ComGoogleCommonIoFiles_FilePredicate_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonIoFiles_FilePredicate_2 : ComGoogleCommonIoFiles_FilePredicate < NSCopying >

- (jboolean)applyWithId:(JavaIoFile *)file;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoFiles_FilePredicate_2)

__attribute__((unused)) static void ComGoogleCommonIoFiles_FilePredicate_2_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonIoFiles_FilePredicate_2 *new_ComGoogleCommonIoFiles_FilePredicate_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoFiles)

@implementation ComGoogleCommonIoFiles

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoFiles_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaIoBufferedReader *)newReaderWithJavaIoFile:(JavaIoFile *)file
                        withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_newReaderWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (JavaIoBufferedWriter *)newWriterWithJavaIoFile:(JavaIoFile *)file
                        withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_newWriterWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (ComGoogleCommonIoByteSource *)asByteSourceWithJavaIoFile:(JavaIoFile *)file {
  return ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file);
}

+ (IOSByteArray *)readFileWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                       withLong:(jlong)expectedSize {
  return ComGoogleCommonIoFiles_readFileWithJavaIoInputStream_withLong_(inArg, expectedSize);
}

+ (ComGoogleCommonIoByteSink *)asByteSinkWithJavaIoFile:(JavaIoFile *)file
                withComGoogleCommonIoFileWriteModeArray:(IOSObjectArray *)modes {
  return ComGoogleCommonIoFiles_asByteSinkWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(file, modes);
}

+ (ComGoogleCommonIoCharSource *)asCharSourceWithJavaIoFile:(JavaIoFile *)file
                                  withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (ComGoogleCommonIoCharSink *)asCharSinkWithJavaIoFile:(JavaIoFile *)file
                              withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset
                withComGoogleCommonIoFileWriteModeArray:(IOSObjectArray *)modes {
  return ComGoogleCommonIoFiles_asCharSinkWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoFileWriteModeArray_(file, charset, modes);
}

+ (IOSByteArray *)toByteArrayWithJavaIoFile:(JavaIoFile *)file {
  return ComGoogleCommonIoFiles_toByteArrayWithJavaIoFile_(file);
}

+ (NSString *)toStringWithJavaIoFile:(JavaIoFile *)file
           withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_toStringWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (void)writeWithByteArray:(IOSByteArray *)from
            withJavaIoFile:(JavaIoFile *)to {
  ComGoogleCommonIoFiles_writeWithByteArray_withJavaIoFile_(from, to);
}

+ (void)copy__WithJavaIoFile:(JavaIoFile *)from
      withJavaIoOutputStream:(JavaIoOutputStream *)to {
  ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaIoOutputStream_(from, to);
}

+ (void)copy__WithJavaIoFile:(JavaIoFile *)from
              withJavaIoFile:(JavaIoFile *)to {
  ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaIoFile_(from, to);
}

+ (void)writeWithJavaLangCharSequence:(id<JavaLangCharSequence>)from
                       withJavaIoFile:(JavaIoFile *)to
            withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonIoFiles_writeWithJavaLangCharSequence_withJavaIoFile_withJavaNioCharsetCharset_(from, to, charset);
}

+ (void)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)from
                        withJavaIoFile:(JavaIoFile *)to
             withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  ComGoogleCommonIoFiles_appendWithJavaLangCharSequence_withJavaIoFile_withJavaNioCharsetCharset_(from, to, charset);
}

+ (void)copy__WithJavaIoFile:(JavaIoFile *)from
   withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset
      withJavaLangAppendable:(id<JavaLangAppendable>)to {
  ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaNioCharsetCharset_withJavaLangAppendable_(from, charset, to);
}

+ (jboolean)equalWithJavaIoFile:(JavaIoFile *)file1
                 withJavaIoFile:(JavaIoFile *)file2 {
  return ComGoogleCommonIoFiles_equalWithJavaIoFile_withJavaIoFile_(file1, file2);
}

+ (JavaIoFile *)createTempDir {
  return ComGoogleCommonIoFiles_createTempDir();
}

+ (void)touchWithJavaIoFile:(JavaIoFile *)file {
  ComGoogleCommonIoFiles_touchWithJavaIoFile_(file);
}

+ (void)createParentDirsWithJavaIoFile:(JavaIoFile *)file {
  ComGoogleCommonIoFiles_createParentDirsWithJavaIoFile_(file);
}

+ (void)moveWithJavaIoFile:(JavaIoFile *)from
            withJavaIoFile:(JavaIoFile *)to {
  ComGoogleCommonIoFiles_moveWithJavaIoFile_withJavaIoFile_(from, to);
}

+ (NSString *)readFirstLineWithJavaIoFile:(JavaIoFile *)file
                withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_readFirstLineWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (id<JavaUtilList>)readLinesWithJavaIoFile:(JavaIoFile *)file
                  withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoFiles_readLinesWithJavaIoFile_withJavaNioCharsetCharset_(file, charset);
}

+ (id)readLinesWithJavaIoFile:(JavaIoFile *)file
    withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset
withComGoogleCommonIoLineProcessor:(id<ComGoogleCommonIoLineProcessor>)callback {
  return ComGoogleCommonIoFiles_readLinesWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoLineProcessor_(file, charset, callback);
}

+ (id)readBytesWithJavaIoFile:(JavaIoFile *)file
withComGoogleCommonIoByteProcessor:(id<ComGoogleCommonIoByteProcessor>)processor {
  return ComGoogleCommonIoFiles_readBytesWithJavaIoFile_withComGoogleCommonIoByteProcessor_(file, processor);
}

+ (ComGoogleCommonHashHashCode *)hash__WithJavaIoFile:(JavaIoFile *)file
                  withComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction>)hashFunction {
  return ComGoogleCommonIoFiles_hash__WithJavaIoFile_withComGoogleCommonHashHashFunction_(file, hashFunction);
}

+ (JavaNioMappedByteBuffer *)mapWithJavaIoFile:(JavaIoFile *)file {
  return ComGoogleCommonIoFiles_mapWithJavaIoFile_(file);
}

+ (JavaNioMappedByteBuffer *)mapWithJavaIoFile:(JavaIoFile *)file
        withJavaNioChannelsFileChannel_MapMode:(JavaNioChannelsFileChannel_MapMode *)mode {
  return ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_(file, mode);
}

+ (JavaNioMappedByteBuffer *)mapWithJavaIoFile:(JavaIoFile *)file
        withJavaNioChannelsFileChannel_MapMode:(JavaNioChannelsFileChannel_MapMode *)mode
                                      withLong:(jlong)size {
  return ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_withLong_(file, mode, size);
}

+ (JavaNioMappedByteBuffer *)mapWithJavaIoRandomAccessFile:(JavaIoRandomAccessFile *)raf
                    withJavaNioChannelsFileChannel_MapMode:(JavaNioChannelsFileChannel_MapMode *)mode
                                                  withLong:(jlong)size {
  return ComGoogleCommonIoFiles_mapWithJavaIoRandomAccessFile_withJavaNioChannelsFileChannel_MapMode_withLong_(raf, mode, size);
}

+ (NSString *)simplifyPathWithNSString:(NSString *)pathname {
  return ComGoogleCommonIoFiles_simplifyPathWithNSString_(pathname);
}

+ (NSString *)getFileExtensionWithNSString:(NSString *)fullName {
  return ComGoogleCommonIoFiles_getFileExtensionWithNSString_(fullName);
}

+ (NSString *)getNameWithoutExtensionWithNSString:(NSString *)file {
  return ComGoogleCommonIoFiles_getNameWithoutExtensionWithNSString_(file);
}

+ (ComGoogleCommonCollectTreeTraverser *)fileTreeTraverser {
  return ComGoogleCommonIoFiles_fileTreeTraverser();
}

+ (id<ComGoogleCommonBasePredicate>)isDirectory {
  return ComGoogleCommonIoFiles_isDirectory();
}

+ (id<ComGoogleCommonBasePredicate>)isFile {
  return ComGoogleCommonIoFiles_isFile();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaIoBufferedWriter;", 0x9, 3, 1, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 6, 7, 8, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSink;", 0x89, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x9, 11, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSink;", 0x89, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 14, 5, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 15, 1, 8, -1, 16, -1 },
    { NULL, "V", 0x9, 17, 18, 8, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 20, 8, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 21, 8, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 22, 8, -1, 23, -1 },
    { NULL, "V", 0x9, 24, 22, 8, -1, 25, -1 },
    { NULL, "V", 0x9, 19, 26, 8, -1, 27, -1 },
    { NULL, "Z", 0x9, 28, 21, 8, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 5, 8, -1, -1, -1 },
    { NULL, "V", 0x9, 30, 5, 8, -1, -1, -1 },
    { NULL, "V", 0x9, 31, 21, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 32, 1, 8, -1, 33, -1 },
    { NULL, "LJavaUtilList;", 0x9, 34, 1, 8, 35, -1, -1 },
    { NULL, "LNSObject;", 0x9, 34, 36, 8, 37, 38, -1 },
    { NULL, "LNSObject;", 0x9, 39, 40, 8, 41, 42, -1 },
    { NULL, "LComGoogleCommonHashHashCode;", 0x9, 43, 44, 8, -1, 45, -1 },
    { NULL, "LJavaNioMappedByteBuffer;", 0x9, 46, 5, 8, -1, -1, -1 },
    { NULL, "LJavaNioMappedByteBuffer;", 0x9, 46, 47, 8, -1, -1, -1 },
    { NULL, "LJavaNioMappedByteBuffer;", 0x9, 46, 48, 49, -1, -1, -1 },
    { NULL, "LJavaNioMappedByteBuffer;", 0xa, 46, 50, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 51, 52, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 53, 52, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 54, 52, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectTreeTraverser;", 0x9, -1, -1, -1, 55, -1, -1 },
    { NULL, "LComGoogleCommonBasePredicate;", 0x9, -1, -1, -1, 56, -1, -1 },
    { NULL, "LComGoogleCommonBasePredicate;", 0x9, -1, -1, -1, 56, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newReaderWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[2].selector = @selector(newWriterWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[3].selector = @selector(asByteSourceWithJavaIoFile:);
  methods[4].selector = @selector(readFileWithJavaIoInputStream:withLong:);
  methods[5].selector = @selector(asByteSinkWithJavaIoFile:withComGoogleCommonIoFileWriteModeArray:);
  methods[6].selector = @selector(asCharSourceWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[7].selector = @selector(asCharSinkWithJavaIoFile:withJavaNioCharsetCharset:withComGoogleCommonIoFileWriteModeArray:);
  methods[8].selector = @selector(toByteArrayWithJavaIoFile:);
  methods[9].selector = @selector(toStringWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[10].selector = @selector(writeWithByteArray:withJavaIoFile:);
  methods[11].selector = @selector(copy__WithJavaIoFile:withJavaIoOutputStream:);
  methods[12].selector = @selector(copy__WithJavaIoFile:withJavaIoFile:);
  methods[13].selector = @selector(writeWithJavaLangCharSequence:withJavaIoFile:withJavaNioCharsetCharset:);
  methods[14].selector = @selector(appendWithJavaLangCharSequence:withJavaIoFile:withJavaNioCharsetCharset:);
  methods[15].selector = @selector(copy__WithJavaIoFile:withJavaNioCharsetCharset:withJavaLangAppendable:);
  methods[16].selector = @selector(equalWithJavaIoFile:withJavaIoFile:);
  methods[17].selector = @selector(createTempDir);
  methods[18].selector = @selector(touchWithJavaIoFile:);
  methods[19].selector = @selector(createParentDirsWithJavaIoFile:);
  methods[20].selector = @selector(moveWithJavaIoFile:withJavaIoFile:);
  methods[21].selector = @selector(readFirstLineWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[22].selector = @selector(readLinesWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[23].selector = @selector(readLinesWithJavaIoFile:withJavaNioCharsetCharset:withComGoogleCommonIoLineProcessor:);
  methods[24].selector = @selector(readBytesWithJavaIoFile:withComGoogleCommonIoByteProcessor:);
  methods[25].selector = @selector(hash__WithJavaIoFile:withComGoogleCommonHashHashFunction:);
  methods[26].selector = @selector(mapWithJavaIoFile:);
  methods[27].selector = @selector(mapWithJavaIoFile:withJavaNioChannelsFileChannel_MapMode:);
  methods[28].selector = @selector(mapWithJavaIoFile:withJavaNioChannelsFileChannel_MapMode:withLong:);
  methods[29].selector = @selector(mapWithJavaIoRandomAccessFile:withJavaNioChannelsFileChannel_MapMode:withLong:);
  methods[30].selector = @selector(simplifyPathWithNSString:);
  methods[31].selector = @selector(getFileExtensionWithNSString:);
  methods[32].selector = @selector(getNameWithoutExtensionWithNSString:);
  methods[33].selector = @selector(fileTreeTraverser);
  methods[34].selector = @selector(isDirectory);
  methods[35].selector = @selector(isFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TEMP_DIR_ATTEMPTS", "I", .constantValue.asInt = ComGoogleCommonIoFiles_TEMP_DIR_ATTEMPTS, 0x1a, -1, -1, -1, -1 },
    { "FILE_TREE_TRAVERSER", "LComGoogleCommonCollectTreeTraverser;", .constantValue.asLong = 0, 0x1a, -1, 57, 58, -1 },
  };
  static const void *ptrTable[] = { "newReader", "LJavaIoFile;LJavaNioCharsetCharset;", "LJavaIoFileNotFoundException;", "newWriter", "asByteSource", "LJavaIoFile;", "readFile", "LJavaIoInputStream;J", "LJavaIoIOException;", "asByteSink", "LJavaIoFile;[LComGoogleCommonIoFileWriteMode;", "asCharSource", "asCharSink", "LJavaIoFile;LJavaNioCharsetCharset;[LComGoogleCommonIoFileWriteMode;", "toByteArray", "toString", (void *)&ComGoogleCommonIoFiles__Annotations$0, "write", "[BLJavaIoFile;", "copy", "LJavaIoFile;LJavaIoOutputStream;", "LJavaIoFile;LJavaIoFile;", "LJavaLangCharSequence;LJavaIoFile;LJavaNioCharsetCharset;", (void *)&ComGoogleCommonIoFiles__Annotations$1, "append", (void *)&ComGoogleCommonIoFiles__Annotations$2, "LJavaIoFile;LJavaNioCharsetCharset;LJavaLangAppendable;", (void *)&ComGoogleCommonIoFiles__Annotations$3, "equal", "touch", "createParentDirs", "move", "readFirstLine", (void *)&ComGoogleCommonIoFiles__Annotations$4, "readLines", "(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List<Ljava/lang/String;>;", "LJavaIoFile;LJavaNioCharsetCharset;LComGoogleCommonIoLineProcessor;", "<T:Ljava/lang/Object;>(Ljava/io/File;Ljava/nio/charset/Charset;Lcom/google/common/io/LineProcessor<TT;>;)TT;", (void *)&ComGoogleCommonIoFiles__Annotations$5, "readBytes", "LJavaIoFile;LComGoogleCommonIoByteProcessor;", "<T:Ljava/lang/Object;>(Ljava/io/File;Lcom/google/common/io/ByteProcessor<TT;>;)TT;", (void *)&ComGoogleCommonIoFiles__Annotations$6, "hash", "LJavaIoFile;LComGoogleCommonHashHashFunction;", (void *)&ComGoogleCommonIoFiles__Annotations$7, "map", "LJavaIoFile;LJavaNioChannelsFileChannel_MapMode;", "LJavaIoFile;LJavaNioChannelsFileChannel_MapMode;J", "LJavaIoFileNotFoundException;LJavaIoIOException;", "LJavaIoRandomAccessFile;LJavaNioChannelsFileChannel_MapMode;J", "simplifyPath", "LNSString;", "getFileExtension", "getNameWithoutExtension", "()Lcom/google/common/collect/TreeTraverser<Ljava/io/File;>;", "()Lcom/google/common/base/Predicate<Ljava/io/File;>;", &ComGoogleCommonIoFiles_FILE_TREE_TRAVERSER, "Lcom/google/common/collect/TreeTraverser<Ljava/io/File;>;", "LComGoogleCommonIoFiles_FileByteSource;LComGoogleCommonIoFiles_FileByteSink;LComGoogleCommonIoFiles_FilePredicate;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles = { "Files", "com.google.common.io", ptrTable, methods, fields, 7, 0x11, 36, 2, -1, 59, -1, -1, -1 };
  return &_ComGoogleCommonIoFiles;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoFiles class]) {
    ComGoogleCommonIoFiles_FILE_TREE_TRAVERSER = new_ComGoogleCommonIoFiles_2_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoFiles)
  }
}

@end

void ComGoogleCommonIoFiles_init(ComGoogleCommonIoFiles *self) {
  NSObject_init(self);
}

ComGoogleCommonIoFiles *new_ComGoogleCommonIoFiles_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles, init)
}

ComGoogleCommonIoFiles *create_ComGoogleCommonIoFiles_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoFiles, init)
}

JavaIoBufferedReader *ComGoogleCommonIoFiles_newReaderWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
  return new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(new_JavaIoFileInputStream_initWithJavaIoFile_(file), charset));
}

JavaIoBufferedWriter *ComGoogleCommonIoFiles_newWriterWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
  return new_JavaIoBufferedWriter_initWithJavaIoWriter_(new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_(new_JavaIoFileOutputStream_initWithJavaIoFile_(file), charset));
}

ComGoogleCommonIoByteSource *ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(JavaIoFile *file) {
  ComGoogleCommonIoFiles_initialize();
  return new_ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(file);
}

IOSByteArray *ComGoogleCommonIoFiles_readFileWithJavaIoInputStream_withLong_(JavaIoInputStream *inArg, jlong expectedSize) {
  ComGoogleCommonIoFiles_initialize();
  if (expectedSize > JavaLangInteger_MAX_VALUE) {
    @throw new_JavaLangOutOfMemoryError_initWithNSString_(JreStrcat("$J$", @"file is too large to fit in a byte array: ", expectedSize, @" bytes"));
  }
  return expectedSize == 0 ? ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_(inArg) : ComGoogleCommonIoByteStreams_toByteArrayWithJavaIoInputStream_withInt_(inArg, (jint) expectedSize);
}

ComGoogleCommonIoByteSink *ComGoogleCommonIoFiles_asByteSinkWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, IOSObjectArray *modes) {
  ComGoogleCommonIoFiles_initialize();
  return new_ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(file, modes);
}

ComGoogleCommonIoCharSource *ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file))) asCharSourceWithJavaNioCharsetCharset:charset];
}

ComGoogleCommonIoCharSink *ComGoogleCommonIoFiles_asCharSinkWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, JavaNioCharsetCharset *charset, IOSObjectArray *modes) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoByteSink *) nil_chk(ComGoogleCommonIoFiles_asByteSinkWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(file, modes))) asCharSinkWithJavaNioCharsetCharset:charset];
}

IOSByteArray *ComGoogleCommonIoFiles_toByteArrayWithJavaIoFile_(JavaIoFile *file) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file))) read];
}

NSString *ComGoogleCommonIoFiles_toStringWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoCharSource *) nil_chk(ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(file, charset))) read];
}

void ComGoogleCommonIoFiles_writeWithByteArray_withJavaIoFile_(IOSByteArray *from, JavaIoFile *to) {
  ComGoogleCommonIoFiles_initialize();
  [((ComGoogleCommonIoByteSink *) nil_chk(ComGoogleCommonIoFiles_asByteSinkWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(to, [IOSObjectArray newArrayWithLength:0 type:ComGoogleCommonIoFileWriteMode_class_()]))) writeWithByteArray:from];
}

void ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaIoOutputStream_(JavaIoFile *from, JavaIoOutputStream *to) {
  ComGoogleCommonIoFiles_initialize();
  [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(from))) copyToWithJavaIoOutputStream:to];
}

void ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaIoFile_(JavaIoFile *from, JavaIoFile *to) {
  ComGoogleCommonIoFiles_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(![((JavaIoFile *) nil_chk(from)) isEqual:to], @"Source %s and destination %s must be different", from, to);
  [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(from))) copyToWithComGoogleCommonIoByteSink:ComGoogleCommonIoFiles_asByteSinkWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(to, [IOSObjectArray newArrayWithLength:0 type:ComGoogleCommonIoFileWriteMode_class_()])];
}

void ComGoogleCommonIoFiles_writeWithJavaLangCharSequence_withJavaIoFile_withJavaNioCharsetCharset_(id<JavaLangCharSequence> from, JavaIoFile *to, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  [((ComGoogleCommonIoCharSink *) nil_chk(ComGoogleCommonIoFiles_asCharSinkWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoFileWriteModeArray_(to, charset, [IOSObjectArray newArrayWithLength:0 type:ComGoogleCommonIoFileWriteMode_class_()]))) writeWithJavaLangCharSequence:from];
}

void ComGoogleCommonIoFiles_appendWithJavaLangCharSequence_withJavaIoFile_withJavaNioCharsetCharset_(id<JavaLangCharSequence> from, JavaIoFile *to, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  [((ComGoogleCommonIoCharSink *) nil_chk(ComGoogleCommonIoFiles_asCharSinkWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoFileWriteModeArray_(to, charset, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(ComGoogleCommonIoFileWriteMode, APPEND) } count:1 type:ComGoogleCommonIoFileWriteMode_class_()]))) writeWithJavaLangCharSequence:from];
}

void ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaNioCharsetCharset_withJavaLangAppendable_(JavaIoFile *from, JavaNioCharsetCharset *charset, id<JavaLangAppendable> to) {
  ComGoogleCommonIoFiles_initialize();
  [((ComGoogleCommonIoCharSource *) nil_chk(ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(from, charset))) copyToWithJavaLangAppendable:to];
}

jboolean ComGoogleCommonIoFiles_equalWithJavaIoFile_withJavaIoFile_(JavaIoFile *file1, JavaIoFile *file2) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file1);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file2);
  if (file1 == file2 || [((JavaIoFile *) nil_chk(file1)) isEqual:file2]) {
    return true;
  }
  jlong len1 = [((JavaIoFile *) nil_chk(file1)) length];
  jlong len2 = [((JavaIoFile *) nil_chk(file2)) length];
  if (len1 != 0 && len2 != 0 && len1 != len2) {
    return false;
  }
  return [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file1))) contentEqualsWithComGoogleCommonIoByteSource:ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file2)];
}

JavaIoFile *ComGoogleCommonIoFiles_createTempDir() {
  ComGoogleCommonIoFiles_initialize();
  JavaIoFile *baseDir = new_JavaIoFile_initWithNSString_(JavaLangSystem_getPropertyWithNSString_(@"java.io.tmpdir"));
  NSString *baseName = JreStrcat("JC", JavaLangSystem_currentTimeMillis(), '-');
  for (jint counter = 0; counter < ComGoogleCommonIoFiles_TEMP_DIR_ATTEMPTS; counter++) {
    JavaIoFile *tempDir = new_JavaIoFile_initWithJavaIoFile_withNSString_(baseDir, JreStrcat("$I", baseName, counter));
    if ([tempDir mkdir]) {
      return tempDir;
    }
  }
  @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$$$$IC", @"Failed to create directory within ", ComGoogleCommonIoFiles_TEMP_DIR_ATTEMPTS, @" attempts (tried ", baseName, @"0 to ", baseName, (ComGoogleCommonIoFiles_TEMP_DIR_ATTEMPTS - 1), ')'));
}

void ComGoogleCommonIoFiles_touchWithJavaIoFile_(JavaIoFile *file) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  if (![((JavaIoFile *) nil_chk(file)) createNewFile] && ![file setLastModifiedWithLong:JavaLangSystem_currentTimeMillis()]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Unable to update modification time of ", file));
  }
}

void ComGoogleCommonIoFiles_createParentDirsWithJavaIoFile_(JavaIoFile *file) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  JavaIoFile *parent = [((JavaIoFile *) nil_chk([((JavaIoFile *) nil_chk(file)) getCanonicalFile])) getParentFile];
  if (parent == nil) {
    return;
  }
  [parent mkdirs];
  if (![parent isDirectory]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Unable to create parent directories of ", file));
  }
}

void ComGoogleCommonIoFiles_moveWithJavaIoFile_withJavaIoFile_(JavaIoFile *from, JavaIoFile *to) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(from);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(to);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(![((JavaIoFile *) nil_chk(from)) isEqual:to], @"Source %s and destination %s must be different", from, to);
  if (![from renameToWithJavaIoFile:to]) {
    ComGoogleCommonIoFiles_copy__WithJavaIoFile_withJavaIoFile_(from, to);
    if (![from delete__]) {
      if (![((JavaIoFile *) nil_chk(to)) delete__]) {
        @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Unable to delete ", to));
      }
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"Unable to delete ", from));
    }
  }
}

NSString *ComGoogleCommonIoFiles_readFirstLineWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoCharSource *) nil_chk(ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(file, charset))) readFirstLine];
}

id<JavaUtilList> ComGoogleCommonIoFiles_readLinesWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *charset) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoCharSource *) nil_chk(ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(file, charset))) readLinesWithComGoogleCommonIoLineProcessor:new_ComGoogleCommonIoFiles_1_init()];
}

id ComGoogleCommonIoFiles_readLinesWithJavaIoFile_withJavaNioCharsetCharset_withComGoogleCommonIoLineProcessor_(JavaIoFile *file, JavaNioCharsetCharset *charset, id<ComGoogleCommonIoLineProcessor> callback) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoCharSource *) nil_chk(ComGoogleCommonIoFiles_asCharSourceWithJavaIoFile_withJavaNioCharsetCharset_(file, charset))) readLinesWithComGoogleCommonIoLineProcessor:callback];
}

id ComGoogleCommonIoFiles_readBytesWithJavaIoFile_withComGoogleCommonIoByteProcessor_(JavaIoFile *file, id<ComGoogleCommonIoByteProcessor> processor) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file))) readWithComGoogleCommonIoByteProcessor:processor];
}

ComGoogleCommonHashHashCode *ComGoogleCommonIoFiles_hash__WithJavaIoFile_withComGoogleCommonHashHashFunction_(JavaIoFile *file, id<ComGoogleCommonHashHashFunction> hashFunction) {
  ComGoogleCommonIoFiles_initialize();
  return [((ComGoogleCommonIoByteSource *) nil_chk(ComGoogleCommonIoFiles_asByteSourceWithJavaIoFile_(file))) hash__WithComGoogleCommonHashHashFunction:hashFunction];
}

JavaNioMappedByteBuffer *ComGoogleCommonIoFiles_mapWithJavaIoFile_(JavaIoFile *file) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  return ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_(file, JreLoadStatic(JavaNioChannelsFileChannel_MapMode, READ_ONLY));
}

JavaNioMappedByteBuffer *ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_(JavaIoFile *file, JavaNioChannelsFileChannel_MapMode *mode) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(mode);
  if (![((JavaIoFile *) nil_chk(file)) exists]) {
    @throw new_JavaIoFileNotFoundException_initWithNSString_([file description]);
  }
  return ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_withLong_(file, mode, [file length]);
}

JavaNioMappedByteBuffer *ComGoogleCommonIoFiles_mapWithJavaIoFile_withJavaNioChannelsFileChannel_MapMode_withLong_(JavaIoFile *file, JavaNioChannelsFileChannel_MapMode *mode, jlong size) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(mode);
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoRandomAccessFile *raf = ((JavaIoRandomAccessFile *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:new_JavaIoRandomAccessFile_initWithJavaIoFile_withNSString_(file, mode == JreLoadStatic(JavaNioChannelsFileChannel_MapMode, READ_ONLY) ? @"r" : @"rw")]);
    return ComGoogleCommonIoFiles_mapWithJavaIoRandomAccessFile_withJavaNioChannelsFileChannel_MapMode_withLong_(raf, mode, size);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

JavaNioMappedByteBuffer *ComGoogleCommonIoFiles_mapWithJavaIoRandomAccessFile_withJavaNioChannelsFileChannel_MapMode_withLong_(JavaIoRandomAccessFile *raf, JavaNioChannelsFileChannel_MapMode *mode, jlong size) {
  ComGoogleCommonIoFiles_initialize();
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaNioChannelsFileChannel *channel = ((JavaNioChannelsFileChannel *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[((JavaIoRandomAccessFile *) nil_chk(raf)) getChannel]]);
    return [((JavaNioChannelsFileChannel *) nil_chk(channel)) mapWithJavaNioChannelsFileChannel_MapMode:mode withLong:0 withLong:size];
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

NSString *ComGoogleCommonIoFiles_simplifyPathWithNSString_(NSString *pathname) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(pathname);
  if ([((NSString *) nil_chk(pathname)) java_length] == 0) {
    return @".";
  }
  id<JavaLangIterable> components = [((ComGoogleCommonBaseSplitter *) nil_chk([((ComGoogleCommonBaseSplitter *) nil_chk(ComGoogleCommonBaseSplitter_onWithChar_('/'))) omitEmptyStrings])) splitWithJavaLangCharSequence:pathname];
  id<JavaUtilList> path = new_JavaUtilArrayList_init();
  for (NSString * __strong component in nil_chk(components)) {
    if ([((NSString *) nil_chk(component)) isEqual:@"."]) {
      continue;
    }
    else if ([component isEqual:@".."]) {
      if ([path size] > 0 && ![((NSString *) nil_chk([path getWithInt:[path size] - 1])) isEqual:@".."]) {
        (void) [path removeWithInt:[path size] - 1];
      }
      else {
        [path addWithId:@".."];
      }
    }
    else {
      [path addWithId:component];
    }
  }
  NSString *result = [((ComGoogleCommonBaseJoiner *) nil_chk(ComGoogleCommonBaseJoiner_onWithChar_('/'))) joinWithJavaLangIterable:path];
  if ([pathname charAtWithInt:0] == '/') {
    result = JreStrcat("C$", '/', result);
  }
  while ([((NSString *) nil_chk(result)) java_hasPrefix:@"/../"]) {
    result = [result java_substring:3];
  }
  if ([result isEqual:@"/.."]) {
    result = @"/";
  }
  else if ([@"" isEqual:result]) {
    result = @".";
  }
  return result;
}

NSString *ComGoogleCommonIoFiles_getFileExtensionWithNSString_(NSString *fullName) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(fullName);
  NSString *fileName = [new_JavaIoFile_initWithNSString_(fullName) getName];
  jint dotIndex = [((NSString *) nil_chk(fileName)) java_lastIndexOf:'.'];
  return (dotIndex == -1) ? @"" : [fileName java_substring:dotIndex + 1];
}

NSString *ComGoogleCommonIoFiles_getNameWithoutExtensionWithNSString_(NSString *file) {
  ComGoogleCommonIoFiles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  NSString *fileName = [new_JavaIoFile_initWithNSString_(file) getName];
  jint dotIndex = [((NSString *) nil_chk(fileName)) java_lastIndexOf:'.'];
  return (dotIndex == -1) ? fileName : [fileName java_substring:0 endIndex:dotIndex];
}

ComGoogleCommonCollectTreeTraverser *ComGoogleCommonIoFiles_fileTreeTraverser() {
  ComGoogleCommonIoFiles_initialize();
  return ComGoogleCommonIoFiles_FILE_TREE_TRAVERSER;
}

id<ComGoogleCommonBasePredicate> ComGoogleCommonIoFiles_isDirectory() {
  ComGoogleCommonIoFiles_initialize();
  return JreLoadEnum(ComGoogleCommonIoFiles_FilePredicate, IS_DIRECTORY);
}

id<ComGoogleCommonBasePredicate> ComGoogleCommonIoFiles_isFile() {
  ComGoogleCommonIoFiles_initialize();
  return JreLoadEnum(ComGoogleCommonIoFiles_FilePredicate, IS_FILE);
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonIoFiles__Annotations$7() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoFiles)

@implementation ComGoogleCommonIoFiles_FileByteSource

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file {
  ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(self, file);
  return self;
}

- (JavaIoFileInputStream *)openStream {
  return new_JavaIoFileInputStream_initWithJavaIoFile_(file_);
}

- (ComGoogleCommonBaseOptional *)sizeIfKnown {
  if ([((JavaIoFile *) nil_chk(file_)) isFile]) {
    return ComGoogleCommonBaseOptional_ofWithId_(JavaLangLong_valueOfWithLong_([file_ length]));
  }
  else {
    return ComGoogleCommonBaseOptional_absent();
  }
}

- (jlong)size {
  if (![((JavaIoFile *) nil_chk(file_)) isFile]) {
    @throw new_JavaIoFileNotFoundException_initWithNSString_([file_ description]);
  }
  return [file_ length];
}

- (IOSByteArray *)read {
  ComGoogleCommonIoCloser *closer = ComGoogleCommonIoCloser_create();
  @try {
    JavaIoFileInputStream *in = ((JavaIoFileInputStream *) [((ComGoogleCommonIoCloser *) nil_chk(closer)) register__WithJavaIoCloseable:[self openStream]]);
    return ComGoogleCommonIoFiles_readFileWithJavaIoInputStream_withLong_(in, [((JavaNioChannelsFileChannel *) nil_chk([((JavaIoFileInputStream *) nil_chk(in)) getChannel])) size]);
  }
  @catch (NSException *e) {
    @throw nil_chk([closer rethrowWithNSException:e]);
  }
  @finally {
    [closer close];
  }
}

- (NSString *)description {
  return JreStrcat("$@C", @"Files.asByteSource(", file_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileInputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoFile:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(sizeIfKnown);
  methods[3].selector = @selector(size);
  methods[4].selector = @selector(read);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "file_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoFile;", "LJavaIoIOException;", "()Lcom/google/common/base/Optional<Ljava/lang/Long;>;", "toString", "LComGoogleCommonIoFiles;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_FileByteSource = { "FileByteSource", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 6, 1, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoFiles_FileByteSource;
}

@end

void ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(ComGoogleCommonIoFiles_FileByteSource *self, JavaIoFile *file) {
  ComGoogleCommonIoByteSource_init(self);
  self->file_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
}

ComGoogleCommonIoFiles_FileByteSource *new_ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_FileByteSource, initWithJavaIoFile_, file)
}

ComGoogleCommonIoFiles_FileByteSource *create_ComGoogleCommonIoFiles_FileByteSource_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoFiles_FileByteSource, initWithJavaIoFile_, file)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoFiles_FileByteSource)

@implementation ComGoogleCommonIoFiles_FileByteSink

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
withComGoogleCommonIoFileWriteModeArray:(IOSObjectArray *)modes {
  ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(self, file, modes);
  return self;
}

- (JavaIoFileOutputStream *)openStream {
  return new_JavaIoFileOutputStream_initWithJavaIoFile_withBoolean_(file_, [((ComGoogleCommonCollectImmutableSet *) nil_chk(modes_)) containsWithId:JreLoadEnum(ComGoogleCommonIoFileWriteMode, APPEND)]);
}

- (NSString *)description {
  return JreStrcat("$@$@C", @"Files.asByteSink(", file_, @", ", modes_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x82, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileOutputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoFile:withComGoogleCommonIoFileWriteModeArray:);
  methods[1].selector = @selector(openStream);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "file_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "modes_", "LComGoogleCommonCollectImmutableSet;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoFile;[LComGoogleCommonIoFileWriteMode;", "LJavaIoIOException;", "toString", "Lcom/google/common/collect/ImmutableSet<Lcom/google/common/io/FileWriteMode;>;", "LComGoogleCommonIoFiles;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_FileByteSink = { "FileByteSink", "com.google.common.io", ptrTable, methods, fields, 7, 0x1a, 3, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoFiles_FileByteSink;
}

@end

void ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(ComGoogleCommonIoFiles_FileByteSink *self, JavaIoFile *file, IOSObjectArray *modes) {
  ComGoogleCommonIoByteSink_init(self);
  self->file_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(file);
  self->modes_ = ComGoogleCommonCollectImmutableSet_copyOfWithNSObjectArray_(modes);
}

ComGoogleCommonIoFiles_FileByteSink *new_ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, IOSObjectArray *modes) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_FileByteSink, initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_, file, modes)
}

ComGoogleCommonIoFiles_FileByteSink *create_ComGoogleCommonIoFiles_FileByteSink_initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_(JavaIoFile *file, IOSObjectArray *modes) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoFiles_FileByteSink, initWithJavaIoFile_withComGoogleCommonIoFileWriteModeArray_, file, modes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoFiles_FileByteSink)

@implementation ComGoogleCommonIoFiles_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoFiles_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)processLineWithNSString:(NSString *)line {
  [((id<JavaUtilList>) nil_chk(result_)) addWithId:line];
  return true;
}

- (id<JavaUtilList>)getResult {
  return result_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(processLineWithNSString:);
  methods[2].selector = @selector(getResult);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "result_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "processLine", "LNSString;", "()Ljava/util/List<Ljava/lang/String;>;", "Ljava/util/List<Ljava/lang/String;>;", "LComGoogleCommonIoFiles;", "readLinesWithJavaIoFile:withJavaNioCharsetCharset:", "Ljava/lang/Object;Lcom/google/common/io/LineProcessor<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_1 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, 6, -1 };
  return &_ComGoogleCommonIoFiles_1;
}

@end

void ComGoogleCommonIoFiles_1_init(ComGoogleCommonIoFiles_1 *self) {
  NSObject_init(self);
  self->result_ = ComGoogleCommonCollectLists_newArrayList();
}

ComGoogleCommonIoFiles_1 *new_ComGoogleCommonIoFiles_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_1, init)
}

ComGoogleCommonIoFiles_1 *create_ComGoogleCommonIoFiles_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoFiles_1, init)
}

@implementation ComGoogleCommonIoFiles_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonIoFiles_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)childrenWithId:(JavaIoFile *)file {
  if ([((JavaIoFile *) nil_chk(file)) isDirectory]) {
    IOSObjectArray *files = [file listFiles];
    if (files != nil) {
      return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(files));
    }
  }
  return JavaUtilCollections_emptyList();
}

- (NSString *)description {
  return @"Files.fileTreeTraverser()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(childrenWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "children", "LJavaIoFile;", "(Ljava/io/File;)Ljava/lang/Iterable<Ljava/io/File;>;", "toString", "LComGoogleCommonIoFiles;", "Lcom/google/common/collect/TreeTraverser<Ljava/io/File;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_2 = { "", "com.google.common.io", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonIoFiles_2;
}

@end

void ComGoogleCommonIoFiles_2_init(ComGoogleCommonIoFiles_2 *self) {
  ComGoogleCommonCollectTreeTraverser_init(self);
}

ComGoogleCommonIoFiles_2 *new_ComGoogleCommonIoFiles_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_2, init)
}

ComGoogleCommonIoFiles_2 *create_ComGoogleCommonIoFiles_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoFiles_2, init)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonIoFiles_FilePredicate)

ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_values_[2];

@implementation ComGoogleCommonIoFiles_FilePredicate

- (jboolean)testWithId:(JavaIoFile *)arg0 {
  return ComGoogleCommonBasePredicate_testWithId_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonIoFiles_FilePredicate_values();
}

+ (ComGoogleCommonIoFiles_FilePredicate *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonIoFiles_FilePredicate_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComGoogleCommonIoFiles_FilePredicate;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoFiles_FilePredicate;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IS_DIRECTORY", "LComGoogleCommonIoFiles_FilePredicate;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "IS_FILE", "LComGoogleCommonIoFiles_FilePredicate;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleCommonIoFiles_FilePredicate, IS_DIRECTORY), &JreEnum(ComGoogleCommonIoFiles_FilePredicate, IS_FILE), "LComGoogleCommonIoFiles;", "Ljava/lang/Enum<Lcom/google/common/io/Files$FilePredicate;>;Lcom/google/common/base/Predicate<Ljava/io/File;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_FilePredicate = { "FilePredicate", "com.google.common.io", ptrTable, methods, fields, 7, 0x440a, 2, 2, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonIoFiles_FilePredicate;
}

+ (void)initialize {
  if (self == [ComGoogleCommonIoFiles_FilePredicate class]) {
    JreEnum(ComGoogleCommonIoFiles_FilePredicate, IS_DIRECTORY) = new_ComGoogleCommonIoFiles_FilePredicate_1_initWithNSString_withInt_(@"IS_DIRECTORY", 0);
    JreEnum(ComGoogleCommonIoFiles_FilePredicate, IS_FILE) = new_ComGoogleCommonIoFiles_FilePredicate_2_initWithNSString_withInt_(@"IS_FILE", 1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonIoFiles_FilePredicate)
  }
}

@end

void ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonIoFiles_FilePredicate *new_ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_FilePredicate, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonIoFiles_FilePredicate_values() {
  ComGoogleCommonIoFiles_FilePredicate_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonIoFiles_FilePredicate_values_ count:2 type:ComGoogleCommonIoFiles_FilePredicate_class_()];
}

ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonIoFiles_FilePredicate_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonIoFiles_FilePredicate *e = ComGoogleCommonIoFiles_FilePredicate_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonIoFiles_FilePredicate *ComGoogleCommonIoFiles_FilePredicate_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonIoFiles_FilePredicate_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonIoFiles_FilePredicate_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoFiles_FilePredicate)

@implementation ComGoogleCommonIoFiles_FilePredicate_1

- (jboolean)applyWithId:(JavaIoFile *)file {
  return [((JavaIoFile *) nil_chk(file)) isDirectory];
}

- (NSString *)description {
  return @"Files.isDirectory()";
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonIoFiles_FilePredicate_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LJavaIoFile;", "toString", "LComGoogleCommonIoFiles_FilePredicate;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_FilePredicate_1 = { "", "com.google.common.io", ptrTable, methods, NULL, 7, 0xc018, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoFiles_FilePredicate_1;
}

@end

void ComGoogleCommonIoFiles_FilePredicate_1_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonIoFiles_FilePredicate_1 *new_ComGoogleCommonIoFiles_FilePredicate_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_FilePredicate_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonIoFiles_FilePredicate_2

- (jboolean)applyWithId:(JavaIoFile *)file {
  return [((JavaIoFile *) nil_chk(file)) isFile];
}

- (NSString *)description {
  return @"Files.isFile()";
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonIoFiles_FilePredicate_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LJavaIoFile;", "toString", "LComGoogleCommonIoFiles_FilePredicate;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoFiles_FilePredicate_2 = { "", "com.google.common.io", ptrTable, methods, NULL, 7, 0xc018, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoFiles_FilePredicate_2;
}

@end

void ComGoogleCommonIoFiles_FilePredicate_2_initWithNSString_withInt_(ComGoogleCommonIoFiles_FilePredicate_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonIoFiles_FilePredicate_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonIoFiles_FilePredicate_2 *new_ComGoogleCommonIoFiles_FilePredicate_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoFiles_FilePredicate_2, initWithNSString_withInt_, __name, __ordinal)
}
