//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/LineReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/CharStreams.h"
#include "com/google/common/io/LineBuffer.h"
#include "com/google/common/io/LineReader.h"
#include "java/io/Reader.h"
#include "java/lang/Readable.h"
#include "java/nio/Buffer.h"
#include "java/nio/CharBuffer.h"
#include "java/util/LinkedList.h"
#include "java/util/Queue.h"

@interface ComGoogleCommonIoLineReader () {
 @public
  id<JavaLangReadable> readable_;
  JavaIoReader *reader_;
  JavaNioCharBuffer *cbuf_;
  IOSCharArray *buf_;
  id<JavaUtilQueue> lines_;
  ComGoogleCommonIoLineBuffer *lineBuf_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, readable_, id<JavaLangReadable>)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, reader_, JavaIoReader *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, cbuf_, JavaNioCharBuffer *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, buf_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, lines_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoLineReader, lineBuf_, ComGoogleCommonIoLineBuffer *)

@interface ComGoogleCommonIoLineReader_1 : ComGoogleCommonIoLineBuffer {
 @public
  ComGoogleCommonIoLineReader *this$0_;
}

- (instancetype)initWithComGoogleCommonIoLineReader:(ComGoogleCommonIoLineReader *)outer$;

- (void)handleLineWithNSString:(NSString *)line
                  withNSString:(NSString *)end;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoLineReader_1)

__attribute__((unused)) static void ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader_1 *self, ComGoogleCommonIoLineReader *outer$);

__attribute__((unused)) static ComGoogleCommonIoLineReader_1 *new_ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonIoLineReader_1 *create_ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader *outer$);

@implementation ComGoogleCommonIoLineReader

- (instancetype)initWithJavaLangReadable:(id<JavaLangReadable>)readable {
  ComGoogleCommonIoLineReader_initWithJavaLangReadable_(self, readable);
  return self;
}

- (NSString *)readLine {
  while ([((id<JavaUtilQueue>) nil_chk(lines_)) peek] == nil) {
    (void) [((JavaNioCharBuffer *) nil_chk(cbuf_)) clear];
    jint read = (reader_ != nil) ? [((JavaIoReader *) nil_chk(reader_)) readWithCharArray:buf_ withInt:0 withInt:((IOSCharArray *) nil_chk(buf_))->size_] : [((id<JavaLangReadable>) nil_chk(readable_)) readWithJavaNioCharBuffer:cbuf_];
    if (read == -1) {
      [((ComGoogleCommonIoLineBuffer *) nil_chk(lineBuf_)) finish];
      break;
    }
    [((ComGoogleCommonIoLineBuffer *) nil_chk(lineBuf_)) addWithCharArray:buf_ withInt:0 withInt:read];
  }
  return [lines_ poll];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReadable:);
  methods[1].selector = @selector(readLine);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "readable_", "LJavaLangReadable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reader_", "LJavaIoReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cbuf_", "LJavaNioCharBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "buf_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lines_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "lineBuf_", "LComGoogleCommonIoLineBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReadable;", "LJavaIoIOException;", "Ljava/util/Queue<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoLineReader = { "LineReader", "com.google.common.io", ptrTable, methods, fields, 7, 0x11, 2, 6, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoLineReader;
}

@end

void ComGoogleCommonIoLineReader_initWithJavaLangReadable_(ComGoogleCommonIoLineReader *self, id<JavaLangReadable> readable) {
  NSObject_init(self);
  self->cbuf_ = ComGoogleCommonIoCharStreams_createBuffer();
  self->buf_ = [((JavaNioCharBuffer *) nil_chk(self->cbuf_)) array];
  self->lines_ = new_JavaUtilLinkedList_init();
  self->lineBuf_ = new_ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(self);
  self->readable_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(readable);
  self->reader_ = ([readable isKindOfClass:[JavaIoReader class]]) ? (JavaIoReader *) cast_chk(readable, [JavaIoReader class]) : nil;
}

ComGoogleCommonIoLineReader *new_ComGoogleCommonIoLineReader_initWithJavaLangReadable_(id<JavaLangReadable> readable) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoLineReader, initWithJavaLangReadable_, readable)
}

ComGoogleCommonIoLineReader *create_ComGoogleCommonIoLineReader_initWithJavaLangReadable_(id<JavaLangReadable> readable) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoLineReader, initWithJavaLangReadable_, readable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoLineReader)

@implementation ComGoogleCommonIoLineReader_1

- (instancetype)initWithComGoogleCommonIoLineReader:(ComGoogleCommonIoLineReader *)outer$ {
  ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(self, outer$);
  return self;
}

- (void)handleLineWithNSString:(NSString *)line
                  withNSString:(NSString *)end {
  [((id<JavaUtilQueue>) nil_chk(this$0_->lines_)) addWithId:line];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonIoLineReader:);
  methods[1].selector = @selector(handleLineWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonIoLineReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleLine", "LNSString;LNSString;", "LComGoogleCommonIoLineReader;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoLineReader_1 = { "", "com.google.common.io", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoLineReader_1;
}

@end

void ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader_1 *self, ComGoogleCommonIoLineReader *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonIoLineBuffer_init(self);
}

ComGoogleCommonIoLineReader_1 *new_ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoLineReader_1, initWithComGoogleCommonIoLineReader_, outer$)
}

ComGoogleCommonIoLineReader_1 *create_ComGoogleCommonIoLineReader_1_initWithComGoogleCommonIoLineReader_(ComGoogleCommonIoLineReader *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoLineReader_1, initWithComGoogleCommonIoLineReader_, outer$)
}
