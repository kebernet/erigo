//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/LittleEndianDataInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/ByteStreams.h"
#include "com/google/common/io/LittleEndianDataInputStream.h"
#include "com/google/common/primitives/Ints.h"
#include "com/google/common/primitives/Longs.h"
#include "java/io/DataInputStream.h"
#include "java/io/EOFException.h"
#include "java/io/FilterInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/UnsupportedOperationException.h"

@interface ComGoogleCommonIoLittleEndianDataInputStream ()

- (jbyte)readAndCheckByte;

@end

__attribute__((unused)) static jbyte ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(ComGoogleCommonIoLittleEndianDataInputStream *self);

@implementation ComGoogleCommonIoLittleEndianDataInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  ComGoogleCommonIoLittleEndianDataInputStream_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (NSString *)readLine {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"readLine is not supported");
}

- (void)readFullyWithByteArray:(IOSByteArray *)b {
  ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_(self, b);
}

- (void)readFullyWithByteArray:(IOSByteArray *)b
                       withInt:(jint)off
                       withInt:(jint)len {
  ComGoogleCommonIoByteStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(self, b, off, len);
}

- (jint)skipBytesWithInt:(jint)n {
  return (jint) [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) skipWithLong:n];
}

- (jint)readUnsignedByte {
  jint b1 = [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) read];
  if (0 > b1) {
    @throw new_JavaIoEOFException_init();
  }
  return b1;
}

- (jint)readUnsignedShort {
  jbyte b1 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b2 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  return ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_((jbyte) 0, (jbyte) 0, b2, b1);
}

- (jint)readInt {
  jbyte b1 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b2 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b3 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b4 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  return ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_(b4, b3, b2, b1);
}

- (jlong)readLong {
  jbyte b1 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b2 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b3 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b4 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b5 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b6 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b7 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  jbyte b8 = ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
  return ComGoogleCommonPrimitivesLongs_fromBytesWithByte_withByte_withByte_withByte_withByte_withByte_withByte_withByte_(b8, b7, b6, b5, b4, b3, b2, b1);
}

- (jfloat)readFloat {
  return JavaLangFloat_intBitsToFloatWithInt_([self readInt]);
}

- (jdouble)readDouble {
  return JavaLangDouble_longBitsToDoubleWithLong_([self readLong]);
}

- (NSString *)readUTF {
  return [new_JavaIoDataInputStream_initWithJavaIoInputStream_(JreLoadVolatileId(&in_)) readUTF];
}

- (jshort)readShort {
  return (jshort) [self readUnsignedShort];
}

- (jchar)readChar {
  return (jchar) [self readUnsignedShort];
}

- (jbyte)readByte {
  return (jbyte) [self readUnsignedByte];
}

- (jboolean)readBoolean {
  return [self readUnsignedByte] != 0;
}

- (jbyte)readAndCheckByte {
  return ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 6, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "S", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "B", 0x2, -1, -1, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(readLine);
  methods[2].selector = @selector(readFullyWithByteArray:);
  methods[3].selector = @selector(readFullyWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(skipBytesWithInt:);
  methods[5].selector = @selector(readUnsignedByte);
  methods[6].selector = @selector(readUnsignedShort);
  methods[7].selector = @selector(readInt);
  methods[8].selector = @selector(readLong);
  methods[9].selector = @selector(readFloat);
  methods[10].selector = @selector(readDouble);
  methods[11].selector = @selector(readUTF);
  methods[12].selector = @selector(readShort);
  methods[13].selector = @selector(readChar);
  methods[14].selector = @selector(readByte);
  methods[15].selector = @selector(readBoolean);
  methods[16].selector = @selector(readAndCheckByte);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoInputStream;", "readFully", "[B", "LJavaIoIOException;", "[BII", "skipBytes", "I", "LJavaIoIOException;LJavaIoEOFException;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoLittleEndianDataInputStream = { "LittleEndianDataInputStream", "com.google.common.io", ptrTable, methods, NULL, 7, 0x11, 17, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoLittleEndianDataInputStream;
}

@end

void ComGoogleCommonIoLittleEndianDataInputStream_initWithJavaIoInputStream_(ComGoogleCommonIoLittleEndianDataInputStream *self, JavaIoInputStream *inArg) {
  JavaIoFilterInputStream_initWithJavaIoInputStream_(self, ComGoogleCommonBasePreconditions_checkNotNullWithId_(inArg));
}

ComGoogleCommonIoLittleEndianDataInputStream *new_ComGoogleCommonIoLittleEndianDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoLittleEndianDataInputStream, initWithJavaIoInputStream_, inArg)
}

ComGoogleCommonIoLittleEndianDataInputStream *create_ComGoogleCommonIoLittleEndianDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoLittleEndianDataInputStream, initWithJavaIoInputStream_, inArg)
}

jbyte ComGoogleCommonIoLittleEndianDataInputStream_readAndCheckByte(ComGoogleCommonIoLittleEndianDataInputStream *self) {
  jint b1 = [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&self->in_))) read];
  if (-1 == b1) {
    @throw new_JavaIoEOFException_init();
  }
  return (jbyte) b1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoLittleEndianDataInputStream)
