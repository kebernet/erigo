//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/io/MultiInputStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/MultiInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Iterator.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonIoMultiInputStream () {
 @public
  id<JavaUtilIterator> it_;
  JavaIoInputStream *in_;
}

- (void)advance;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonIoMultiInputStream, it_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(ComGoogleCommonIoMultiInputStream, in_, JavaIoInputStream *)

__attribute__((unused)) static void ComGoogleCommonIoMultiInputStream_advance(ComGoogleCommonIoMultiInputStream *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonIoMultiInputStream__Annotations$0();

@implementation ComGoogleCommonIoMultiInputStream

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)it {
  ComGoogleCommonIoMultiInputStream_initWithJavaUtilIterator_(self, it);
  return self;
}

- (void)close {
  if (in_ != nil) {
    @try {
      [in_ close];
    }
    @finally {
      in_ = nil;
    }
  }
}

- (void)advance {
  ComGoogleCommonIoMultiInputStream_advance(self);
}

- (jint)available {
  if (in_ == nil) {
    return 0;
  }
  return [in_ available];
}

- (jboolean)markSupported {
  return false;
}

- (jint)read {
  if (in_ == nil) {
    return -1;
  }
  jint result = [in_ read];
  if (result == -1) {
    ComGoogleCommonIoMultiInputStream_advance(self);
    return [self read];
  }
  return result;
}

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len {
  if (in_ == nil) {
    return -1;
  }
  jint result = [in_ readWithByteArray:b withInt:off withInt:len];
  if (result == -1) {
    ComGoogleCommonIoMultiInputStream_advance(self);
    return [self readWithByteArray:b withInt:off withInt:len];
  }
  return result;
}

- (jlong)skipWithLong:(jlong)n {
  if (in_ == nil || n <= 0) {
    return 0;
  }
  jlong result = [in_ skipWithLong:n];
  if (result != 0) {
    return result;
  }
  if ([self read] == -1) {
    return 0;
  }
  return 1 + [((JavaIoInputStream *) nil_chk(in_)) skipWithLong:n - 1];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, 1, -1, -1, 5 },
    { NULL, "J", 0x1, 6, 7, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilIterator:);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(advance);
  methods[3].selector = @selector(available);
  methods[4].selector = @selector(markSupported);
  methods[5].selector = @selector(read);
  methods[6].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[7].selector = @selector(skipWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "it_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 8, -1 },
    { "in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilIterator;", "LJavaIoIOException;", "(Ljava/util/Iterator<+Lcom/google/common/io/ByteSource;>;)V", "read", "[BII", (void *)&ComGoogleCommonIoMultiInputStream__Annotations$0, "skip", "J", "Ljava/util/Iterator<+Lcom/google/common/io/ByteSource;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonIoMultiInputStream = { "MultiInputStream", "com.google.common.io", ptrTable, methods, fields, 7, 0x10, 8, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonIoMultiInputStream;
}

@end

void ComGoogleCommonIoMultiInputStream_initWithJavaUtilIterator_(ComGoogleCommonIoMultiInputStream *self, id<JavaUtilIterator> it) {
  JavaIoInputStream_init(self);
  self->it_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(it);
  ComGoogleCommonIoMultiInputStream_advance(self);
}

ComGoogleCommonIoMultiInputStream *new_ComGoogleCommonIoMultiInputStream_initWithJavaUtilIterator_(id<JavaUtilIterator> it) {
  J2OBJC_NEW_IMPL(ComGoogleCommonIoMultiInputStream, initWithJavaUtilIterator_, it)
}

ComGoogleCommonIoMultiInputStream *create_ComGoogleCommonIoMultiInputStream_initWithJavaUtilIterator_(id<JavaUtilIterator> it) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonIoMultiInputStream, initWithJavaUtilIterator_, it)
}

void ComGoogleCommonIoMultiInputStream_advance(ComGoogleCommonIoMultiInputStream *self) {
  [self close];
  if ([((id<JavaUtilIterator>) nil_chk(self->it_)) hasNext]) {
    self->in_ = [((ComGoogleCommonIoByteSource *) nil_chk([((id<JavaUtilIterator>) nil_chk(self->it_)) next])) openStream];
  }
}

IOSObjectArray *ComGoogleCommonIoMultiInputStream__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonIoMultiInputStream)
