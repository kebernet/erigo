//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/math/LinearTransformation.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonMathLinearTransformation")
#ifdef RESTRICT_ComGoogleCommonMathLinearTransformation
#define INCLUDE_ALL_ComGoogleCommonMathLinearTransformation 0
#else
#define INCLUDE_ALL_ComGoogleCommonMathLinearTransformation 1
#endif
#undef RESTRICT_ComGoogleCommonMathLinearTransformation

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonMathLinearTransformation_) && (INCLUDE_ALL_ComGoogleCommonMathLinearTransformation || defined(INCLUDE_ComGoogleCommonMathLinearTransformation))
#define ComGoogleCommonMathLinearTransformation_

@class ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder;

@interface ComGoogleCommonMathLinearTransformation : NSObject

#pragma mark Public

- (instancetype)init;

+ (ComGoogleCommonMathLinearTransformation *)forNaN;

+ (ComGoogleCommonMathLinearTransformation *)horizontalWithDouble:(jdouble)y;

- (ComGoogleCommonMathLinearTransformation *)inverse;

- (jboolean)isHorizontal;

- (jboolean)isVertical;

+ (ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *)mappingWithDouble:(jdouble)x1
                                                                                withDouble:(jdouble)y1;

- (jdouble)slope;

- (jdouble)transformWithDouble:(jdouble)x;

+ (ComGoogleCommonMathLinearTransformation *)verticalWithDouble:(jdouble)x;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathLinearTransformation)

FOUNDATION_EXPORT void ComGoogleCommonMathLinearTransformation_init(ComGoogleCommonMathLinearTransformation *self);

FOUNDATION_EXPORT ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *ComGoogleCommonMathLinearTransformation_mappingWithDouble_withDouble_(jdouble x1, jdouble y1);

FOUNDATION_EXPORT ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_verticalWithDouble_(jdouble x);

FOUNDATION_EXPORT ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_horizontalWithDouble_(jdouble y);

FOUNDATION_EXPORT ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_forNaN();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathLinearTransformation)

#endif

#if !defined (ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_) && (INCLUDE_ALL_ComGoogleCommonMathLinearTransformation || defined(INCLUDE_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder))
#define ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_

@class ComGoogleCommonMathLinearTransformation;

@interface ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder : NSObject

#pragma mark Public

- (ComGoogleCommonMathLinearTransformation *)and__WithDouble:(jdouble)x2
                                                  withDouble:(jdouble)y2;

- (ComGoogleCommonMathLinearTransformation *)withSlopeWithDouble:(jdouble)slope;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonMathLinearTransformation")
