//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/math/LinearTransformation.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/math/DoubleUtils.h"
#include "com/google/common/math/LinearTransformation.h"
#include "com/google/errorprone/annotations/concurrent/LazyInit.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/annotation/Annotation.h"

@interface ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder () {
 @public
  jdouble x1_;
  jdouble y1_;
}

- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1;

@end

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *self, jdouble x1, jdouble y1);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *new_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(jdouble x1, jdouble y1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *create_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(jdouble x1, jdouble y1);

@interface ComGoogleCommonMathLinearTransformation_RegularLinearTransformation : ComGoogleCommonMathLinearTransformation {
 @public
  jdouble slope_;
  jdouble yIntercept_;
  volatile_id inverse_;
}

- (instancetype)initWithDouble:(jdouble)slope
                    withDouble:(jdouble)yIntercept;

- (instancetype)initWithDouble:(jdouble)slope
                    withDouble:(jdouble)yIntercept
withComGoogleCommonMathLinearTransformation:(ComGoogleCommonMathLinearTransformation *)inverse;

- (jboolean)isVertical;

- (jboolean)isHorizontal;

- (jdouble)slope;

- (jdouble)transformWithDouble:(jdouble)x;

- (ComGoogleCommonMathLinearTransformation *)inverse;

- (NSString *)description;

- (ComGoogleCommonMathLinearTransformation *)createInverse;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation)

J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation, inverse_, ComGoogleCommonMathLinearTransformation *)

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self, jdouble slope, jdouble yIntercept);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(jdouble slope, jdouble yIntercept) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *create_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(jdouble slope, jdouble yIntercept);

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self, jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *create_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_createInverse(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonMathLinearTransformation_RegularLinearTransformation__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation)

@interface ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation : ComGoogleCommonMathLinearTransformation {
 @public
  jdouble x_;
  volatile_id inverse_;
}

- (instancetype)initWithDouble:(jdouble)x;

- (instancetype)initWithDouble:(jdouble)x
withComGoogleCommonMathLinearTransformation:(ComGoogleCommonMathLinearTransformation *)inverse;

- (jboolean)isVertical;

- (jboolean)isHorizontal;

- (jdouble)slope;

- (jdouble)transformWithDouble:(jdouble)x;

- (ComGoogleCommonMathLinearTransformation *)inverse;

- (NSString *)description;

- (ComGoogleCommonMathLinearTransformation *)createInverse;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation)

J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation, inverse_, ComGoogleCommonMathLinearTransformation *)

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self, jdouble x);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(jdouble x) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *create_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(jdouble x);

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self, jdouble x, ComGoogleCommonMathLinearTransformation *inverse);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(jdouble x, ComGoogleCommonMathLinearTransformation *inverse) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *create_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(jdouble x, ComGoogleCommonMathLinearTransformation *inverse);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_createInverse(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation)

@interface ComGoogleCommonMathLinearTransformation_NaNLinearTransformation : ComGoogleCommonMathLinearTransformation

- (instancetype)init;

- (jboolean)isVertical;

- (jboolean)isHorizontal;

- (jdouble)slope;

- (jdouble)transformWithDouble:(jdouble)x;

- (ComGoogleCommonMathLinearTransformation *)inverse;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation)

inline ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_get_INSTANCE();
static ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation, INSTANCE, ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *)

__attribute__((unused)) static void ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *self);

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *new_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *create_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation)

@implementation ComGoogleCommonMathLinearTransformation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonMathLinearTransformation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *)mappingWithDouble:(jdouble)x1
                                                                                withDouble:(jdouble)y1 {
  return ComGoogleCommonMathLinearTransformation_mappingWithDouble_withDouble_(x1, y1);
}

+ (ComGoogleCommonMathLinearTransformation *)verticalWithDouble:(jdouble)x {
  return ComGoogleCommonMathLinearTransformation_verticalWithDouble_(x);
}

+ (ComGoogleCommonMathLinearTransformation *)horizontalWithDouble:(jdouble)y {
  return ComGoogleCommonMathLinearTransformation_horizontalWithDouble_(y);
}

+ (ComGoogleCommonMathLinearTransformation *)forNaN {
  return ComGoogleCommonMathLinearTransformation_forNaN();
}

- (jboolean)isVertical {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isHorizontal {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)slope {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)transformWithDouble:(jdouble)x {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonMathLinearTransformation *)inverse {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation_LinearTransformationBuilder;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, 5, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mappingWithDouble:withDouble:);
  methods[2].selector = @selector(verticalWithDouble:);
  methods[3].selector = @selector(horizontalWithDouble:);
  methods[4].selector = @selector(forNaN);
  methods[5].selector = @selector(isVertical);
  methods[6].selector = @selector(isHorizontal);
  methods[7].selector = @selector(slope);
  methods[8].selector = @selector(transformWithDouble:);
  methods[9].selector = @selector(inverse);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "mapping", "DD", "vertical", "D", "horizontal", "transform", "LComGoogleCommonMathLinearTransformation_LinearTransformationBuilder;LComGoogleCommonMathLinearTransformation_RegularLinearTransformation;LComGoogleCommonMathLinearTransformation_VerticalLinearTransformation;LComGoogleCommonMathLinearTransformation_NaNLinearTransformation;" };
  static const J2ObjcClassInfo _ComGoogleCommonMathLinearTransformation = { "LinearTransformation", "com.google.common.math", ptrTable, methods, NULL, 7, 0x401, 10, 0, -1, 6, -1, -1, -1 };
  return &_ComGoogleCommonMathLinearTransformation;
}

@end

void ComGoogleCommonMathLinearTransformation_init(ComGoogleCommonMathLinearTransformation *self) {
  NSObject_init(self);
}

ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *ComGoogleCommonMathLinearTransformation_mappingWithDouble_withDouble_(jdouble x1, jdouble y1) {
  ComGoogleCommonMathLinearTransformation_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(x1) && ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(y1));
  return new_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(x1, y1);
}

ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_verticalWithDouble_(jdouble x) {
  ComGoogleCommonMathLinearTransformation_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(x));
  return new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(x);
}

ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_horizontalWithDouble_(jdouble y) {
  ComGoogleCommonMathLinearTransformation_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(y));
  jdouble slope = 0.0;
  return new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(slope, y);
}

ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_forNaN() {
  ComGoogleCommonMathLinearTransformation_initialize();
  return JreLoadStatic(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation, INSTANCE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonMathLinearTransformation)

@implementation ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder

- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1 {
  ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(self, x1, y1);
  return self;
}

- (ComGoogleCommonMathLinearTransformation *)and__WithDouble:(jdouble)x2
                                                  withDouble:(jdouble)y2 {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(x2) && ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(y2));
  if (x2 == x1_) {
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(y2 != y1_);
    return new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(x1_);
  }
  else {
    return [self withSlopeWithDouble:(y2 - y1_) / (x2 - x1_)];
  }
}

- (ComGoogleCommonMathLinearTransformation *)withSlopeWithDouble:(jdouble)slope {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(!JavaLangDouble_isNaNWithDouble_(slope));
  if (ComGoogleCommonMathDoubleUtils_isFiniteWithDouble_(slope)) {
    jdouble yIntercept = y1_ - x1_ * slope;
    return new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(slope, yIntercept);
  }
  else {
    return new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(x1_);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDouble:withDouble:);
  methods[1].selector = @selector(and__WithDouble:withDouble:);
  methods[2].selector = @selector(withSlopeWithDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "y1_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DD", "and", "withSlope", "D", "LComGoogleCommonMathLinearTransformation;" };
  static const J2ObjcClassInfo _ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder = { "LinearTransformationBuilder", "com.google.common.math", ptrTable, methods, fields, 7, 0x19, 3, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder;
}

@end

void ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *self, jdouble x1, jdouble y1) {
  NSObject_init(self);
  self->x1_ = x1;
  self->y1_ = y1;
}

ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *new_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(jdouble x1, jdouble y1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder, initWithDouble_withDouble_, x1, y1)
}

ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder *create_ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder_initWithDouble_withDouble_(jdouble x1, jdouble y1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder, initWithDouble_withDouble_, x1, y1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonMathLinearTransformation_LinearTransformationBuilder)

@implementation ComGoogleCommonMathLinearTransformation_RegularLinearTransformation

- (instancetype)initWithDouble:(jdouble)slope
                    withDouble:(jdouble)yIntercept {
  ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(self, slope, yIntercept);
  return self;
}

- (instancetype)initWithDouble:(jdouble)slope
                    withDouble:(jdouble)yIntercept
withComGoogleCommonMathLinearTransformation:(ComGoogleCommonMathLinearTransformation *)inverse {
  ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(self, slope, yIntercept, inverse);
  return self;
}

- (jboolean)isVertical {
  return false;
}

- (jboolean)isHorizontal {
  return slope_ == 0.0;
}

- (jdouble)slope {
  return slope_;
}

- (jdouble)transformWithDouble:(jdouble)x {
  return x * slope_ + yIntercept_;
}

- (ComGoogleCommonMathLinearTransformation *)inverse {
  ComGoogleCommonMathLinearTransformation *result = JreLoadVolatileId(&inverse_);
  return (result == nil) ? JreVolatileStrongAssign(&inverse_, ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_createInverse(self)) : result;
}

- (NSString *)description {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"y = %g * x + %g", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(slope_), JavaLangDouble_valueOfWithDouble_(yIntercept_) } count:2 type:NSObject_class_()]);
}

- (ComGoogleCommonMathLinearTransformation *)createInverse {
  return ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_createInverse(self);
}

- (void)__javaClone:(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&inverse_, &original->inverse_);
}

- (void)dealloc {
  JreReleaseVolatile(&inverse_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDouble:withDouble:);
  methods[1].selector = @selector(initWithDouble:withDouble:withComGoogleCommonMathLinearTransformation:);
  methods[2].selector = @selector(isVertical);
  methods[3].selector = @selector(isHorizontal);
  methods[4].selector = @selector(slope);
  methods[5].selector = @selector(transformWithDouble:);
  methods[6].selector = @selector(inverse);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(createInverse);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "slope_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "yIntercept_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "inverse_", "LComGoogleCommonMathLinearTransformation;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
  };
  static const void *ptrTable[] = { "DD", "DDLComGoogleCommonMathLinearTransformation;", "transform", "D", "toString", (void *)&ComGoogleCommonMathLinearTransformation_RegularLinearTransformation__Annotations$0, "LComGoogleCommonMathLinearTransformation;" };
  static const J2ObjcClassInfo _ComGoogleCommonMathLinearTransformation_RegularLinearTransformation = { "RegularLinearTransformation", "com.google.common.math", ptrTable, methods, fields, 7, 0x1a, 9, 3, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation;
}

@end

void ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self, jdouble slope, jdouble yIntercept) {
  ComGoogleCommonMathLinearTransformation_init(self);
  self->slope_ = slope;
  self->yIntercept_ = yIntercept;
  (void) JreVolatileStrongAssign(&self->inverse_, nil);
}

ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(jdouble slope, jdouble yIntercept) {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation, initWithDouble_withDouble_, slope, yIntercept)
}

ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *create_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_(jdouble slope, jdouble yIntercept) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation, initWithDouble_withDouble_, slope, yIntercept)
}

void ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self, jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse) {
  ComGoogleCommonMathLinearTransformation_init(self);
  self->slope_ = slope;
  self->yIntercept_ = yIntercept;
  (void) JreVolatileStrongAssign(&self->inverse_, inverse);
}

ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse) {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation, initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_, slope, yIntercept, inverse)
}

ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *create_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(jdouble slope, jdouble yIntercept, ComGoogleCommonMathLinearTransformation *inverse) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation, initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_, slope, yIntercept, inverse)
}

ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_createInverse(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation *self) {
  if (self->slope_ != 0.0) {
    return new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(1.0 / self->slope_, -1.0 * self->yIntercept_ / self->slope_, self);
  }
  else {
    return new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(self->yIntercept_, self);
  }
}

IOSObjectArray *ComGoogleCommonMathLinearTransformation_RegularLinearTransformation__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonMathLinearTransformation_RegularLinearTransformation)

@implementation ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation

- (instancetype)initWithDouble:(jdouble)x {
  ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(self, x);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
withComGoogleCommonMathLinearTransformation:(ComGoogleCommonMathLinearTransformation *)inverse {
  ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(self, x, inverse);
  return self;
}

- (jboolean)isVertical {
  return true;
}

- (jboolean)isHorizontal {
  return false;
}

- (jdouble)slope {
  @throw new_JavaLangIllegalStateException_init();
}

- (jdouble)transformWithDouble:(jdouble)x {
  @throw new_JavaLangIllegalStateException_init();
}

- (ComGoogleCommonMathLinearTransformation *)inverse {
  ComGoogleCommonMathLinearTransformation *result = JreLoadVolatileId(&inverse_);
  return (result == nil) ? JreVolatileStrongAssign(&inverse_, ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_createInverse(self)) : result;
}

- (NSString *)description {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"x = %g", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(x_) } count:1 type:NSObject_class_()]);
}

- (ComGoogleCommonMathLinearTransformation *)createInverse {
  return ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_createInverse(self);
}

- (void)__javaClone:(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&inverse_, &original->inverse_);
}

- (void)dealloc {
  JreReleaseVolatile(&inverse_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDouble:);
  methods[1].selector = @selector(initWithDouble:withComGoogleCommonMathLinearTransformation:);
  methods[2].selector = @selector(isVertical);
  methods[3].selector = @selector(isHorizontal);
  methods[4].selector = @selector(slope);
  methods[5].selector = @selector(transformWithDouble:);
  methods[6].selector = @selector(inverse);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(createInverse);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "inverse_", "LComGoogleCommonMathLinearTransformation;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "D", "DLComGoogleCommonMathLinearTransformation;", "transform", "toString", (void *)&ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation__Annotations$0, "LComGoogleCommonMathLinearTransformation;" };
  static const J2ObjcClassInfo _ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation = { "VerticalLinearTransformation", "com.google.common.math", ptrTable, methods, fields, 7, 0x1a, 9, 2, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation;
}

@end

void ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self, jdouble x) {
  ComGoogleCommonMathLinearTransformation_init(self);
  self->x_ = x;
  (void) JreVolatileStrongAssign(&self->inverse_, nil);
}

ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(jdouble x) {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation, initWithDouble_, x)
}

ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *create_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_(jdouble x) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation, initWithDouble_, x)
}

void ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self, jdouble x, ComGoogleCommonMathLinearTransformation *inverse) {
  ComGoogleCommonMathLinearTransformation_init(self);
  self->x_ = x;
  (void) JreVolatileStrongAssign(&self->inverse_, inverse);
}

ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *new_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(jdouble x, ComGoogleCommonMathLinearTransformation *inverse) {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation, initWithDouble_withComGoogleCommonMathLinearTransformation_, x, inverse)
}

ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *create_ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_initWithDouble_withComGoogleCommonMathLinearTransformation_(jdouble x, ComGoogleCommonMathLinearTransformation *inverse) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation, initWithDouble_withComGoogleCommonMathLinearTransformation_, x, inverse)
}

ComGoogleCommonMathLinearTransformation *ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation_createInverse(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation *self) {
  return new_ComGoogleCommonMathLinearTransformation_RegularLinearTransformation_initWithDouble_withDouble_withComGoogleCommonMathLinearTransformation_(0.0, self->x_, self);
}

IOSObjectArray *ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonMathLinearTransformation_VerticalLinearTransformation)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation)

@implementation ComGoogleCommonMathLinearTransformation_NaNLinearTransformation

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isVertical {
  return false;
}

- (jboolean)isHorizontal {
  return false;
}

- (jdouble)slope {
  return JavaLangDouble_NaN;
}

- (jdouble)transformWithDouble:(jdouble)x {
  return JavaLangDouble_NaN;
}

- (ComGoogleCommonMathLinearTransformation *)inverse {
  return self;
}

- (NSString *)description {
  return @"NaN";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonMathLinearTransformation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isVertical);
  methods[2].selector = @selector(isHorizontal);
  methods[3].selector = @selector(slope);
  methods[4].selector = @selector(transformWithDouble:);
  methods[5].selector = @selector(inverse);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonMathLinearTransformation_NaNLinearTransformation;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "transform", "D", "toString", &ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_INSTANCE, "LComGoogleCommonMathLinearTransformation;" };
  static const J2ObjcClassInfo _ComGoogleCommonMathLinearTransformation_NaNLinearTransformation = { "NaNLinearTransformation", "com.google.common.math", ptrTable, methods, fields, 7, 0x1a, 7, 1, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation;
}

+ (void)initialize {
  if (self == [ComGoogleCommonMathLinearTransformation_NaNLinearTransformation class]) {
    ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_INSTANCE = new_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation)
  }
}

@end

void ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *self) {
  ComGoogleCommonMathLinearTransformation_init(self);
}

ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *new_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation, init)
}

ComGoogleCommonMathLinearTransformation_NaNLinearTransformation *create_ComGoogleCommonMathLinearTransformation_NaNLinearTransformation_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonMathLinearTransformation_NaNLinearTransformation)
