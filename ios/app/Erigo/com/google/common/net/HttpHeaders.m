//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/net/HttpHeaders.java
//

#include "J2ObjC_source.h"
#include "com/google/common/net/HttpHeaders.h"

@interface ComGoogleCommonNetHttpHeaders ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonNetHttpHeaders_init(ComGoogleCommonNetHttpHeaders *self);

__attribute__((unused)) static ComGoogleCommonNetHttpHeaders *new_ComGoogleCommonNetHttpHeaders_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonNetHttpHeaders *create_ComGoogleCommonNetHttpHeaders_init();

NSString *ComGoogleCommonNetHttpHeaders_CACHE_CONTROL = @"Cache-Control";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_LENGTH = @"Content-Length";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_TYPE = @"Content-Type";
NSString *ComGoogleCommonNetHttpHeaders_DATE = @"Date";
NSString *ComGoogleCommonNetHttpHeaders_PRAGMA = @"Pragma";
NSString *ComGoogleCommonNetHttpHeaders_VIA = @"Via";
NSString *ComGoogleCommonNetHttpHeaders_WARNING = @"Warning";
NSString *ComGoogleCommonNetHttpHeaders_ACCEPT = @"Accept";
NSString *ComGoogleCommonNetHttpHeaders_ACCEPT_CHARSET = @"Accept-Charset";
NSString *ComGoogleCommonNetHttpHeaders_ACCEPT_ENCODING = @"Accept-Encoding";
NSString *ComGoogleCommonNetHttpHeaders_ACCEPT_LANGUAGE = @"Accept-Language";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_REQUEST_HEADERS = @"Access-Control-Request-Headers";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_REQUEST_METHOD = @"Access-Control-Request-Method";
NSString *ComGoogleCommonNetHttpHeaders_AUTHORIZATION = @"Authorization";
NSString *ComGoogleCommonNetHttpHeaders_CONNECTION = @"Connection";
NSString *ComGoogleCommonNetHttpHeaders_COOKIE = @"Cookie";
NSString *ComGoogleCommonNetHttpHeaders_EXPECT = @"Expect";
NSString *ComGoogleCommonNetHttpHeaders_FROM = @"From";
NSString *ComGoogleCommonNetHttpHeaders_FORWARDED = @"Forwarded";
NSString *ComGoogleCommonNetHttpHeaders_FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = @"Follow-Only-When-Prerender-Shown";
NSString *ComGoogleCommonNetHttpHeaders_HOST = @"Host";
NSString *ComGoogleCommonNetHttpHeaders_IF_MATCH = @"If-Match";
NSString *ComGoogleCommonNetHttpHeaders_IF_MODIFIED_SINCE = @"If-Modified-Since";
NSString *ComGoogleCommonNetHttpHeaders_IF_NONE_MATCH = @"If-None-Match";
NSString *ComGoogleCommonNetHttpHeaders_IF_RANGE = @"If-Range";
NSString *ComGoogleCommonNetHttpHeaders_IF_UNMODIFIED_SINCE = @"If-Unmodified-Since";
NSString *ComGoogleCommonNetHttpHeaders_LAST_EVENT_ID = @"Last-Event-ID";
NSString *ComGoogleCommonNetHttpHeaders_MAX_FORWARDS = @"Max-Forwards";
NSString *ComGoogleCommonNetHttpHeaders_ORIGIN = @"Origin";
NSString *ComGoogleCommonNetHttpHeaders_PROXY_AUTHORIZATION = @"Proxy-Authorization";
NSString *ComGoogleCommonNetHttpHeaders_RANGE = @"Range";
NSString *ComGoogleCommonNetHttpHeaders_REFERER = @"Referer";
NSString *ComGoogleCommonNetHttpHeaders_SERVICE_WORKER = @"Service-Worker";
NSString *ComGoogleCommonNetHttpHeaders_TE = @"TE";
NSString *ComGoogleCommonNetHttpHeaders_UPGRADE = @"Upgrade";
NSString *ComGoogleCommonNetHttpHeaders_USER_AGENT = @"User-Agent";
NSString *ComGoogleCommonNetHttpHeaders_ACCEPT_RANGES = @"Accept-Ranges";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_HEADERS = @"Access-Control-Allow-Headers";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_METHODS = @"Access-Control-Allow-Methods";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_ORIGIN = @"Access-Control-Allow-Origin";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_CREDENTIALS = @"Access-Control-Allow-Credentials";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_EXPOSE_HEADERS = @"Access-Control-Expose-Headers";
NSString *ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_MAX_AGE = @"Access-Control-Max-Age";
NSString *ComGoogleCommonNetHttpHeaders_AGE = @"Age";
NSString *ComGoogleCommonNetHttpHeaders_ALLOW = @"Allow";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_DISPOSITION = @"Content-Disposition";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_ENCODING = @"Content-Encoding";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_LANGUAGE = @"Content-Language";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_LOCATION = @"Content-Location";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_MD5 = @"Content-MD5";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_RANGE = @"Content-Range";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_SECURITY_POLICY = @"Content-Security-Policy";
NSString *ComGoogleCommonNetHttpHeaders_CONTENT_SECURITY_POLICY_REPORT_ONLY = @"Content-Security-Policy-Report-Only";
NSString *ComGoogleCommonNetHttpHeaders_X_CONTENT_SECURITY_POLICY = @"X-Content-Security-Policy";
NSString *ComGoogleCommonNetHttpHeaders_X_CONTENT_SECURITY_POLICY_REPORT_ONLY = @"X-Content-Security-Policy-Report-Only";
NSString *ComGoogleCommonNetHttpHeaders_X_WEBKIT_CSP = @"X-WebKit-CSP";
NSString *ComGoogleCommonNetHttpHeaders_X_WEBKIT_CSP_REPORT_ONLY = @"X-WebKit-CSP-Report-Only";
NSString *ComGoogleCommonNetHttpHeaders_ETAG = @"ETag";
NSString *ComGoogleCommonNetHttpHeaders_EXPIRES = @"Expires";
NSString *ComGoogleCommonNetHttpHeaders_LAST_MODIFIED = @"Last-Modified";
NSString *ComGoogleCommonNetHttpHeaders_LINK = @"Link";
NSString *ComGoogleCommonNetHttpHeaders_LOCATION = @"Location";
NSString *ComGoogleCommonNetHttpHeaders_P3P = @"P3P";
NSString *ComGoogleCommonNetHttpHeaders_PROXY_AUTHENTICATE = @"Proxy-Authenticate";
NSString *ComGoogleCommonNetHttpHeaders_REFRESH = @"Refresh";
NSString *ComGoogleCommonNetHttpHeaders_RETRY_AFTER = @"Retry-After";
NSString *ComGoogleCommonNetHttpHeaders_SERVER = @"Server";
NSString *ComGoogleCommonNetHttpHeaders_SERVICE_WORKER_ALLOWED = @"Service-Worker-Allowed";
NSString *ComGoogleCommonNetHttpHeaders_SET_COOKIE = @"Set-Cookie";
NSString *ComGoogleCommonNetHttpHeaders_SET_COOKIE2 = @"Set-Cookie2";
NSString *ComGoogleCommonNetHttpHeaders_STRICT_TRANSPORT_SECURITY = @"Strict-Transport-Security";
NSString *ComGoogleCommonNetHttpHeaders_TIMING_ALLOW_ORIGIN = @"Timing-Allow-Origin";
NSString *ComGoogleCommonNetHttpHeaders_TRAILER = @"Trailer";
NSString *ComGoogleCommonNetHttpHeaders_TRANSFER_ENCODING = @"Transfer-Encoding";
NSString *ComGoogleCommonNetHttpHeaders_VARY = @"Vary";
NSString *ComGoogleCommonNetHttpHeaders_WWW_AUTHENTICATE = @"WWW-Authenticate";
NSString *ComGoogleCommonNetHttpHeaders_DNT = @"DNT";
NSString *ComGoogleCommonNetHttpHeaders_X_CONTENT_TYPE_OPTIONS = @"X-Content-Type-Options";
NSString *ComGoogleCommonNetHttpHeaders_X_DO_NOT_TRACK = @"X-Do-Not-Track";
NSString *ComGoogleCommonNetHttpHeaders_X_FORWARDED_FOR = @"X-Forwarded-For";
NSString *ComGoogleCommonNetHttpHeaders_X_FORWARDED_PROTO = @"X-Forwarded-Proto";
NSString *ComGoogleCommonNetHttpHeaders_X_FORWARDED_HOST = @"X-Forwarded-Host";
NSString *ComGoogleCommonNetHttpHeaders_X_FORWARDED_PORT = @"X-Forwarded-Port";
NSString *ComGoogleCommonNetHttpHeaders_X_FRAME_OPTIONS = @"X-Frame-Options";
NSString *ComGoogleCommonNetHttpHeaders_X_POWERED_BY = @"X-Powered-By";
NSString *ComGoogleCommonNetHttpHeaders_PUBLIC_KEY_PINS = @"Public-Key-Pins";
NSString *ComGoogleCommonNetHttpHeaders_PUBLIC_KEY_PINS_REPORT_ONLY = @"Public-Key-Pins-Report-Only";
NSString *ComGoogleCommonNetHttpHeaders_X_REQUESTED_WITH = @"X-Requested-With";
NSString *ComGoogleCommonNetHttpHeaders_X_USER_IP = @"X-User-IP";
NSString *ComGoogleCommonNetHttpHeaders_X_XSS_PROTECTION = @"X-XSS-Protection";
NSString *ComGoogleCommonNetHttpHeaders_X_DNS_PREFETCH_CONTROL = @"X-DNS-Prefetch-Control";
NSString *ComGoogleCommonNetHttpHeaders_PING_FROM = @"Ping-From";
NSString *ComGoogleCommonNetHttpHeaders_PING_TO = @"Ping-To";

@implementation ComGoogleCommonNetHttpHeaders

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonNetHttpHeaders_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CACHE_CONTROL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "CONTENT_LENGTH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "CONTENT_TYPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "DATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "PRAGMA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "VIA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "WARNING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "ACCEPT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "ACCEPT_CHARSET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "ACCEPT_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "ACCEPT_LANGUAGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "ACCESS_CONTROL_REQUEST_HEADERS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "ACCESS_CONTROL_REQUEST_METHOD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "AUTHORIZATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "CONNECTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "COOKIE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "EXPECT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "FROM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "FORWARDED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "HOST", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "IF_MATCH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "IF_MODIFIED_SINCE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "IF_NONE_MATCH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "IF_RANGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "IF_UNMODIFIED_SINCE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "LAST_EVENT_ID", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "MAX_FORWARDS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "ORIGIN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "PROXY_AUTHORIZATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "RANGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "REFERER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "SERVICE_WORKER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "TE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "UPGRADE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "USER_AGENT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "ACCEPT_RANGES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "ACCESS_CONTROL_ALLOW_HEADERS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "ACCESS_CONTROL_ALLOW_METHODS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "ACCESS_CONTROL_ALLOW_ORIGIN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "ACCESS_CONTROL_ALLOW_CREDENTIALS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "ACCESS_CONTROL_EXPOSE_HEADERS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "ACCESS_CONTROL_MAX_AGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "AGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "ALLOW", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "CONTENT_DISPOSITION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "CONTENT_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "CONTENT_LANGUAGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "CONTENT_LOCATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "CONTENT_MD5", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "CONTENT_RANGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "CONTENT_SECURITY_POLICY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "CONTENT_SECURITY_POLICY_REPORT_ONLY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "X_CONTENT_SECURITY_POLICY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
    { "X_CONTENT_SECURITY_POLICY_REPORT_ONLY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "X_WEBKIT_CSP", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 55, -1, -1 },
    { "X_WEBKIT_CSP_REPORT_ONLY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 56, -1, -1 },
    { "ETAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "EXPIRES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "LAST_MODIFIED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "LINK", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "LOCATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "P3P", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "PROXY_AUTHENTICATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "REFRESH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 64, -1, -1 },
    { "RETRY_AFTER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 65, -1, -1 },
    { "SERVER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "SERVICE_WORKER_ALLOWED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 67, -1, -1 },
    { "SET_COOKIE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 68, -1, -1 },
    { "SET_COOKIE2", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "STRICT_TRANSPORT_SECURITY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 70, -1, -1 },
    { "TIMING_ALLOW_ORIGIN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 71, -1, -1 },
    { "TRAILER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "TRANSFER_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "VARY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 74, -1, -1 },
    { "WWW_AUTHENTICATE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 75, -1, -1 },
    { "DNT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "X_CONTENT_TYPE_OPTIONS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 77, -1, -1 },
    { "X_DO_NOT_TRACK", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 78, -1, -1 },
    { "X_FORWARDED_FOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 79, -1, -1 },
    { "X_FORWARDED_PROTO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 80, -1, -1 },
    { "X_FORWARDED_HOST", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 81, -1, -1 },
    { "X_FORWARDED_PORT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 82, -1, -1 },
    { "X_FRAME_OPTIONS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
    { "X_POWERED_BY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 84, -1, -1 },
    { "PUBLIC_KEY_PINS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 85, -1, -1 },
    { "PUBLIC_KEY_PINS_REPORT_ONLY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 86, -1, -1 },
    { "X_REQUESTED_WITH", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 87, -1, -1 },
    { "X_USER_IP", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 88, -1, -1 },
    { "X_XSS_PROTECTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 89, -1, -1 },
    { "X_DNS_PREFETCH_CONTROL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 90, -1, -1 },
    { "PING_FROM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 91, -1, -1 },
    { "PING_TO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 92, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonNetHttpHeaders_CACHE_CONTROL, &ComGoogleCommonNetHttpHeaders_CONTENT_LENGTH, &ComGoogleCommonNetHttpHeaders_CONTENT_TYPE, &ComGoogleCommonNetHttpHeaders_DATE, &ComGoogleCommonNetHttpHeaders_PRAGMA, &ComGoogleCommonNetHttpHeaders_VIA, &ComGoogleCommonNetHttpHeaders_WARNING, &ComGoogleCommonNetHttpHeaders_ACCEPT, &ComGoogleCommonNetHttpHeaders_ACCEPT_CHARSET, &ComGoogleCommonNetHttpHeaders_ACCEPT_ENCODING, &ComGoogleCommonNetHttpHeaders_ACCEPT_LANGUAGE, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_REQUEST_HEADERS, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_REQUEST_METHOD, &ComGoogleCommonNetHttpHeaders_AUTHORIZATION, &ComGoogleCommonNetHttpHeaders_CONNECTION, &ComGoogleCommonNetHttpHeaders_COOKIE, &ComGoogleCommonNetHttpHeaders_EXPECT, &ComGoogleCommonNetHttpHeaders_FROM, &ComGoogleCommonNetHttpHeaders_FORWARDED, &ComGoogleCommonNetHttpHeaders_FOLLOW_ONLY_WHEN_PRERENDER_SHOWN, &ComGoogleCommonNetHttpHeaders_HOST, &ComGoogleCommonNetHttpHeaders_IF_MATCH, &ComGoogleCommonNetHttpHeaders_IF_MODIFIED_SINCE, &ComGoogleCommonNetHttpHeaders_IF_NONE_MATCH, &ComGoogleCommonNetHttpHeaders_IF_RANGE, &ComGoogleCommonNetHttpHeaders_IF_UNMODIFIED_SINCE, &ComGoogleCommonNetHttpHeaders_LAST_EVENT_ID, &ComGoogleCommonNetHttpHeaders_MAX_FORWARDS, &ComGoogleCommonNetHttpHeaders_ORIGIN, &ComGoogleCommonNetHttpHeaders_PROXY_AUTHORIZATION, &ComGoogleCommonNetHttpHeaders_RANGE, &ComGoogleCommonNetHttpHeaders_REFERER, &ComGoogleCommonNetHttpHeaders_SERVICE_WORKER, &ComGoogleCommonNetHttpHeaders_TE, &ComGoogleCommonNetHttpHeaders_UPGRADE, &ComGoogleCommonNetHttpHeaders_USER_AGENT, &ComGoogleCommonNetHttpHeaders_ACCEPT_RANGES, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_HEADERS, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_METHODS, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_ORIGIN, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_ALLOW_CREDENTIALS, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_EXPOSE_HEADERS, &ComGoogleCommonNetHttpHeaders_ACCESS_CONTROL_MAX_AGE, &ComGoogleCommonNetHttpHeaders_AGE, &ComGoogleCommonNetHttpHeaders_ALLOW, &ComGoogleCommonNetHttpHeaders_CONTENT_DISPOSITION, &ComGoogleCommonNetHttpHeaders_CONTENT_ENCODING, &ComGoogleCommonNetHttpHeaders_CONTENT_LANGUAGE, &ComGoogleCommonNetHttpHeaders_CONTENT_LOCATION, &ComGoogleCommonNetHttpHeaders_CONTENT_MD5, &ComGoogleCommonNetHttpHeaders_CONTENT_RANGE, &ComGoogleCommonNetHttpHeaders_CONTENT_SECURITY_POLICY, &ComGoogleCommonNetHttpHeaders_CONTENT_SECURITY_POLICY_REPORT_ONLY, &ComGoogleCommonNetHttpHeaders_X_CONTENT_SECURITY_POLICY, &ComGoogleCommonNetHttpHeaders_X_CONTENT_SECURITY_POLICY_REPORT_ONLY, &ComGoogleCommonNetHttpHeaders_X_WEBKIT_CSP, &ComGoogleCommonNetHttpHeaders_X_WEBKIT_CSP_REPORT_ONLY, &ComGoogleCommonNetHttpHeaders_ETAG, &ComGoogleCommonNetHttpHeaders_EXPIRES, &ComGoogleCommonNetHttpHeaders_LAST_MODIFIED, &ComGoogleCommonNetHttpHeaders_LINK, &ComGoogleCommonNetHttpHeaders_LOCATION, &ComGoogleCommonNetHttpHeaders_P3P, &ComGoogleCommonNetHttpHeaders_PROXY_AUTHENTICATE, &ComGoogleCommonNetHttpHeaders_REFRESH, &ComGoogleCommonNetHttpHeaders_RETRY_AFTER, &ComGoogleCommonNetHttpHeaders_SERVER, &ComGoogleCommonNetHttpHeaders_SERVICE_WORKER_ALLOWED, &ComGoogleCommonNetHttpHeaders_SET_COOKIE, &ComGoogleCommonNetHttpHeaders_SET_COOKIE2, &ComGoogleCommonNetHttpHeaders_STRICT_TRANSPORT_SECURITY, &ComGoogleCommonNetHttpHeaders_TIMING_ALLOW_ORIGIN, &ComGoogleCommonNetHttpHeaders_TRAILER, &ComGoogleCommonNetHttpHeaders_TRANSFER_ENCODING, &ComGoogleCommonNetHttpHeaders_VARY, &ComGoogleCommonNetHttpHeaders_WWW_AUTHENTICATE, &ComGoogleCommonNetHttpHeaders_DNT, &ComGoogleCommonNetHttpHeaders_X_CONTENT_TYPE_OPTIONS, &ComGoogleCommonNetHttpHeaders_X_DO_NOT_TRACK, &ComGoogleCommonNetHttpHeaders_X_FORWARDED_FOR, &ComGoogleCommonNetHttpHeaders_X_FORWARDED_PROTO, &ComGoogleCommonNetHttpHeaders_X_FORWARDED_HOST, &ComGoogleCommonNetHttpHeaders_X_FORWARDED_PORT, &ComGoogleCommonNetHttpHeaders_X_FRAME_OPTIONS, &ComGoogleCommonNetHttpHeaders_X_POWERED_BY, &ComGoogleCommonNetHttpHeaders_PUBLIC_KEY_PINS, &ComGoogleCommonNetHttpHeaders_PUBLIC_KEY_PINS_REPORT_ONLY, &ComGoogleCommonNetHttpHeaders_X_REQUESTED_WITH, &ComGoogleCommonNetHttpHeaders_X_USER_IP, &ComGoogleCommonNetHttpHeaders_X_XSS_PROTECTION, &ComGoogleCommonNetHttpHeaders_X_DNS_PREFETCH_CONTROL, &ComGoogleCommonNetHttpHeaders_PING_FROM, &ComGoogleCommonNetHttpHeaders_PING_TO };
  static const J2ObjcClassInfo _ComGoogleCommonNetHttpHeaders = { "HttpHeaders", "com.google.common.net", ptrTable, methods, fields, 7, 0x11, 1, 93, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonNetHttpHeaders;
}

@end

void ComGoogleCommonNetHttpHeaders_init(ComGoogleCommonNetHttpHeaders *self) {
  NSObject_init(self);
}

ComGoogleCommonNetHttpHeaders *new_ComGoogleCommonNetHttpHeaders_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonNetHttpHeaders, init)
}

ComGoogleCommonNetHttpHeaders *create_ComGoogleCommonNetHttpHeaders_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonNetHttpHeaders, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonNetHttpHeaders)
