//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/net/MediaType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Ascii.h"
#include "com/google/common/base/CharMatcher.h"
#include "com/google/common/base/Charsets.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/Joiner.h"
#include "com/google/common/base/MoreObjects.h"
#include "com/google/common/base/Objects.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableCollection.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableListMultimap.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/ImmutableMultiset.h"
#include "com/google/common/collect/ListMultimap.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/Multimap.h"
#include "com/google/common/collect/Multimaps.h"
#include "com/google/common/net/MediaType.h"
#include "com/google/errorprone/annotations/concurrent/LazyInit.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonNetMediaType () {
 @public
  NSString *type_;
  NSString *subtype_;
  ComGoogleCommonCollectImmutableListMultimap *parameters_;
  volatile_id toString_;
  jint hashCode_;
  volatile_id parsedCharset_;
}

+ (ComGoogleCommonNetMediaType *)createConstantWithNSString:(NSString *)type
                                               withNSString:(NSString *)subtype;

+ (ComGoogleCommonNetMediaType *)createConstantUtf8WithNSString:(NSString *)type
                                                   withNSString:(NSString *)subtype;

+ (ComGoogleCommonNetMediaType *)addKnownTypeWithComGoogleCommonNetMediaType:(ComGoogleCommonNetMediaType *)mediaType;

- (instancetype)initWithNSString:(NSString *)type
                    withNSString:(NSString *)subtype
withComGoogleCommonCollectImmutableListMultimap:(ComGoogleCommonCollectImmutableListMultimap *)parameters;

- (id<JavaUtilMap>)parametersAsMap;

+ (ComGoogleCommonNetMediaType *)createWithNSString:(NSString *)type
                                       withNSString:(NSString *)subtype
                 withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)parameters;

+ (NSString *)normalizeTokenWithNSString:(NSString *)token;

+ (NSString *)normalizeParameterValueWithNSString:(NSString *)attribute
                                     withNSString:(NSString *)value;

- (NSString *)computeToString;

+ (NSString *)escapeAndQuoteWithNSString:(NSString *)value;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonNetMediaType, type_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonNetMediaType, subtype_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonNetMediaType, parameters_, ComGoogleCommonCollectImmutableListMultimap *)
J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonNetMediaType, toString_, NSString *)
J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonNetMediaType, parsedCharset_, ComGoogleCommonBaseOptional *)

inline NSString *ComGoogleCommonNetMediaType_get_CHARSET_ATTRIBUTE();
static NSString *ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE = @"charset";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, CHARSET_ATTRIBUTE, NSString *)

inline ComGoogleCommonCollectImmutableListMultimap *ComGoogleCommonNetMediaType_get_UTF_8_CONSTANT_PARAMETERS();
static ComGoogleCommonCollectImmutableListMultimap *ComGoogleCommonNetMediaType_UTF_8_CONSTANT_PARAMETERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, UTF_8_CONSTANT_PARAMETERS, ComGoogleCommonCollectImmutableListMultimap *)

inline ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_get_TOKEN_MATCHER();
static ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_TOKEN_MATCHER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, TOKEN_MATCHER, ComGoogleCommonBaseCharMatcher *)

inline ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_get_QUOTED_TEXT_MATCHER();
static ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_QUOTED_TEXT_MATCHER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, QUOTED_TEXT_MATCHER, ComGoogleCommonBaseCharMatcher *)

inline ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_get_LINEAR_WHITE_SPACE();
static ComGoogleCommonBaseCharMatcher *ComGoogleCommonNetMediaType_LINEAR_WHITE_SPACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, LINEAR_WHITE_SPACE, ComGoogleCommonBaseCharMatcher *)

inline NSString *ComGoogleCommonNetMediaType_get_APPLICATION_TYPE();
static NSString *ComGoogleCommonNetMediaType_APPLICATION_TYPE = @"application";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, APPLICATION_TYPE, NSString *)

inline NSString *ComGoogleCommonNetMediaType_get_AUDIO_TYPE();
static NSString *ComGoogleCommonNetMediaType_AUDIO_TYPE = @"audio";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, AUDIO_TYPE, NSString *)

inline NSString *ComGoogleCommonNetMediaType_get_IMAGE_TYPE();
static NSString *ComGoogleCommonNetMediaType_IMAGE_TYPE = @"image";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, IMAGE_TYPE, NSString *)

inline NSString *ComGoogleCommonNetMediaType_get_TEXT_TYPE();
static NSString *ComGoogleCommonNetMediaType_TEXT_TYPE = @"text";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, TEXT_TYPE, NSString *)

inline NSString *ComGoogleCommonNetMediaType_get_VIDEO_TYPE();
static NSString *ComGoogleCommonNetMediaType_VIDEO_TYPE = @"video";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, VIDEO_TYPE, NSString *)

inline NSString *ComGoogleCommonNetMediaType_get_WILDCARD();
static NSString *ComGoogleCommonNetMediaType_WILDCARD = @"*";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, WILDCARD, NSString *)

inline id<JavaUtilMap> ComGoogleCommonNetMediaType_get_KNOWN_TYPES();
static id<JavaUtilMap> ComGoogleCommonNetMediaType_KNOWN_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, KNOWN_TYPES, id<JavaUtilMap>)

inline ComGoogleCommonBaseJoiner_MapJoiner *ComGoogleCommonNetMediaType_get_PARAMETER_JOINER();
static ComGoogleCommonBaseJoiner_MapJoiner *ComGoogleCommonNetMediaType_PARAMETER_JOINER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonNetMediaType, PARAMETER_JOINER, ComGoogleCommonBaseJoiner_MapJoiner *)

__attribute__((unused)) static ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(NSString *type, NSString *subtype);

__attribute__((unused)) static ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(NSString *type, NSString *subtype);

__attribute__((unused)) static ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_addKnownTypeWithComGoogleCommonNetMediaType_(ComGoogleCommonNetMediaType *mediaType);

__attribute__((unused)) static void ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(ComGoogleCommonNetMediaType *self, NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters);

__attribute__((unused)) static ComGoogleCommonNetMediaType *new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonNetMediaType *create_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters);

__attribute__((unused)) static id<JavaUtilMap> ComGoogleCommonNetMediaType_parametersAsMap(ComGoogleCommonNetMediaType *self);

__attribute__((unused)) static ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(NSString *type, NSString *subtype, id<ComGoogleCommonCollectMultimap> parameters);

__attribute__((unused)) static NSString *ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(NSString *token);

__attribute__((unused)) static NSString *ComGoogleCommonNetMediaType_normalizeParameterValueWithNSString_withNSString_(NSString *attribute, NSString *value);

__attribute__((unused)) static NSString *ComGoogleCommonNetMediaType_computeToString(ComGoogleCommonNetMediaType *self);

__attribute__((unused)) static NSString *ComGoogleCommonNetMediaType_escapeAndQuoteWithNSString_(NSString *value);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$3();

@interface ComGoogleCommonNetMediaType_1 : NSObject < ComGoogleCommonBaseFunction >

- (instancetype)init;

- (ComGoogleCommonCollectImmutableMultiset *)applyWithId:(id<JavaUtilCollection>)input;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonNetMediaType_1)

__attribute__((unused)) static void ComGoogleCommonNetMediaType_1_init(ComGoogleCommonNetMediaType_1 *self);

__attribute__((unused)) static ComGoogleCommonNetMediaType_1 *new_ComGoogleCommonNetMediaType_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonNetMediaType_1 *create_ComGoogleCommonNetMediaType_1_init();

@interface ComGoogleCommonNetMediaType_Tokenizer : NSObject {
 @public
  NSString *input_;
  jint position_;
}

- (instancetype)initWithNSString:(NSString *)input;

- (NSString *)consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher;

- (NSString *)consumeTokenWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher;

- (jchar)consumeCharacterWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher;

- (jchar)consumeCharacterWithChar:(jchar)c;

- (jchar)previewChar;

- (jboolean)hasMore;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonNetMediaType_Tokenizer)

J2OBJC_FIELD_SETTER(ComGoogleCommonNetMediaType_Tokenizer, input_, NSString *)

__attribute__((unused)) static void ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(ComGoogleCommonNetMediaType_Tokenizer *self, NSString *input);

__attribute__((unused)) static ComGoogleCommonNetMediaType_Tokenizer *new_ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(NSString *input) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonNetMediaType_Tokenizer *create_ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(NSString *input);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonNetMediaType_Tokenizer)

@interface ComGoogleCommonNetMediaType_2 : NSObject < ComGoogleCommonBaseFunction >

- (instancetype)init;

- (NSString *)applyWithId:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonNetMediaType_2)

__attribute__((unused)) static void ComGoogleCommonNetMediaType_2_init(ComGoogleCommonNetMediaType_2 *self);

__attribute__((unused)) static ComGoogleCommonNetMediaType_2 *new_ComGoogleCommonNetMediaType_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonNetMediaType_2 *create_ComGoogleCommonNetMediaType_2_init();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonNetMediaType)

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_TEXT_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_IMAGE_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_AUDIO_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_VIDEO_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ANY_APPLICATION_TYPE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_CACHE_MANIFEST_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_CSS_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_CSV_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_HTML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_I_CALENDAR_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_PLAIN_TEXT_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_TEXT_JAVASCRIPT_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_TSV_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_VCARD_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_XML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_VTT_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_BMP;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_CRW;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_GIF;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ICO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_JPEG;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_PNG;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_PSD;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_SVG_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_TIFF;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WEBP;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MP4_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MPEG_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OGG_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WEBM_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_L24_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_BASIC_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_AAC_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_VORBIS_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WMA_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WAX_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_VND_REAL_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_VND_WAVE_AUDIO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MP4_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MPEG_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OGG_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_QUICKTIME;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WEBM_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WMV;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_FLV_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_THREE_GPP_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_THREE_GPP2_VIDEO;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_APPLICATION_XML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ATOM_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_BZIP2;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_DART_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_APPLE_PASSBOOK;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_EOT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_EPUB;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_FORM_DATA;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_KEY_ARCHIVE;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_APPLICATION_BINARY;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_GZIP;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_JAVASCRIPT_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_JSON_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MANIFEST_JSON_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_KML;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_KMZ;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MBOX;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_APPLE_MOBILE_CONFIG;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MICROSOFT_EXCEL;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MICROSOFT_POWERPOINT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_MICROSOFT_WORD;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_NACL_APPLICATION;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_NACL_PORTABLE_APPLICATION;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OCTET_STREAM;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OGG_CONTAINER;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OOXML_DOCUMENT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OOXML_PRESENTATION;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OOXML_SHEET;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OPENDOCUMENT_GRAPHICS;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OPENDOCUMENT_PRESENTATION;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OPENDOCUMENT_SPREADSHEET;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_OPENDOCUMENT_TEXT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_PDF;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_POSTSCRIPT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_PROTOBUF;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_RDF_XML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_RTF_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_SFNT;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_SHOCKWAVE_FLASH;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_SKETCHUP;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_SOAP_XML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_TAR;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WOFF;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_WOFF2;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_XHTML_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_XRD_UTF_8;
ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_ZIP;

@implementation ComGoogleCommonNetMediaType

+ (ComGoogleCommonNetMediaType *)createConstantWithNSString:(NSString *)type
                                               withNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(type, subtype);
}

+ (ComGoogleCommonNetMediaType *)createConstantUtf8WithNSString:(NSString *)type
                                                   withNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(type, subtype);
}

+ (ComGoogleCommonNetMediaType *)addKnownTypeWithComGoogleCommonNetMediaType:(ComGoogleCommonNetMediaType *)mediaType {
  return ComGoogleCommonNetMediaType_addKnownTypeWithComGoogleCommonNetMediaType_(mediaType);
}

- (instancetype)initWithNSString:(NSString *)type
                    withNSString:(NSString *)subtype
withComGoogleCommonCollectImmutableListMultimap:(ComGoogleCommonCollectImmutableListMultimap *)parameters {
  ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(self, type, subtype, parameters);
  return self;
}

- (NSString *)type {
  return type_;
}

- (NSString *)subtype {
  return subtype_;
}

- (ComGoogleCommonCollectImmutableListMultimap *)parameters {
  return parameters_;
}

- (id<JavaUtilMap>)parametersAsMap {
  return ComGoogleCommonNetMediaType_parametersAsMap(self);
}

- (ComGoogleCommonBaseOptional *)charset {
  ComGoogleCommonBaseOptional *local = JreLoadVolatileId(&parsedCharset_);
  if (local == nil) {
    NSString *value = nil;
    local = ComGoogleCommonBaseOptional_absent();
    for (NSString * __strong currentValue in nil_chk([((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(parameters_)) getWithId:ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE])) {
      if (value == nil) {
        value = currentValue;
        local = ComGoogleCommonBaseOptional_ofWithId_(JavaNioCharsetCharset_forNameWithNSString_(value));
      }
      else if (![value isEqual:currentValue]) {
        @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$$", @"Multiple charset values defined: ", value, @", ", currentValue));
      }
    }
    (void) JreVolatileStrongAssign(&parsedCharset_, local);
  }
  return local;
}

- (ComGoogleCommonNetMediaType *)withoutParameters {
  return [((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(parameters_)) isEmpty] ? self : ComGoogleCommonNetMediaType_createWithNSString_withNSString_(type_, subtype_);
}

- (ComGoogleCommonNetMediaType *)withParametersWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)parameters {
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(type_, subtype_, parameters);
}

- (ComGoogleCommonNetMediaType *)withParameterWithNSString:(NSString *)attribute
                                              withNSString:(NSString *)value {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(attribute);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(value);
  NSString *normalizedAttribute = ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(attribute);
  ComGoogleCommonCollectImmutableListMultimap_Builder *builder = ComGoogleCommonCollectImmutableListMultimap_builder();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(parameters_)) entries])) {
    NSString *key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (![((NSString *) nil_chk(normalizedAttribute)) isEqual:key]) {
      (void) [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(builder)) putWithId:key withId:[entry_ getValue]];
    }
  }
  (void) [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(builder)) putWithId:normalizedAttribute withId:ComGoogleCommonNetMediaType_normalizeParameterValueWithNSString_withNSString_(normalizedAttribute, value)];
  ComGoogleCommonNetMediaType *mediaType = new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(type_, subtype_, [builder build]);
  if (![((NSString *) nil_chk(normalizedAttribute)) isEqual:ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE]) {
    (void) JreVolatileStrongAssign(&mediaType->parsedCharset_, JreLoadVolatileId(&self->parsedCharset_));
  }
  return ComGoogleCommonBaseMoreObjects_firstNonNullWithId_withId_([((id<JavaUtilMap>) nil_chk(ComGoogleCommonNetMediaType_KNOWN_TYPES)) getWithId:mediaType], mediaType);
}

- (ComGoogleCommonNetMediaType *)withCharsetWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(charset);
  ComGoogleCommonNetMediaType *withCharset = [self withParameterWithNSString:ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE withNSString:[((JavaNioCharsetCharset *) nil_chk(charset)) name]];
  (void) JreVolatileStrongAssign(&((ComGoogleCommonNetMediaType *) nil_chk(withCharset))->parsedCharset_, ComGoogleCommonBaseOptional_ofWithId_(charset));
  return withCharset;
}

- (jboolean)hasWildcard {
  return [((NSString *) nil_chk(ComGoogleCommonNetMediaType_WILDCARD)) isEqual:type_] || [ComGoogleCommonNetMediaType_WILDCARD isEqual:subtype_];
}

- (jboolean)isWithComGoogleCommonNetMediaType:(ComGoogleCommonNetMediaType *)mediaTypeRange {
  return ([((NSString *) nil_chk(((ComGoogleCommonNetMediaType *) nil_chk(mediaTypeRange))->type_)) isEqual:ComGoogleCommonNetMediaType_WILDCARD] || [mediaTypeRange->type_ isEqual:self->type_]) && ([((NSString *) nil_chk(mediaTypeRange->subtype_)) isEqual:ComGoogleCommonNetMediaType_WILDCARD] || [mediaTypeRange->subtype_ isEqual:self->subtype_]) && [((ComGoogleCommonCollectImmutableCollection *) nil_chk([((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(self->parameters_)) entries])) containsAllWithJavaUtilCollection:[mediaTypeRange->parameters_ entries]];
}

+ (ComGoogleCommonNetMediaType *)createWithNSString:(NSString *)type
                                       withNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(type, subtype);
}

+ (ComGoogleCommonNetMediaType *)createApplicationTypeWithNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createApplicationTypeWithNSString_(subtype);
}

+ (ComGoogleCommonNetMediaType *)createAudioTypeWithNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createAudioTypeWithNSString_(subtype);
}

+ (ComGoogleCommonNetMediaType *)createImageTypeWithNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createImageTypeWithNSString_(subtype);
}

+ (ComGoogleCommonNetMediaType *)createTextTypeWithNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createTextTypeWithNSString_(subtype);
}

+ (ComGoogleCommonNetMediaType *)createVideoTypeWithNSString:(NSString *)subtype {
  return ComGoogleCommonNetMediaType_createVideoTypeWithNSString_(subtype);
}

+ (ComGoogleCommonNetMediaType *)createWithNSString:(NSString *)type
                                       withNSString:(NSString *)subtype
                 withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)parameters {
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(type, subtype, parameters);
}

+ (NSString *)normalizeTokenWithNSString:(NSString *)token {
  return ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(token);
}

+ (NSString *)normalizeParameterValueWithNSString:(NSString *)attribute
                                     withNSString:(NSString *)value {
  return ComGoogleCommonNetMediaType_normalizeParameterValueWithNSString_withNSString_(attribute, value);
}

+ (ComGoogleCommonNetMediaType *)parseWithNSString:(NSString *)input {
  return ComGoogleCommonNetMediaType_parseWithNSString_(input);
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  else if ([obj isKindOfClass:[ComGoogleCommonNetMediaType class]]) {
    ComGoogleCommonNetMediaType *that = (ComGoogleCommonNetMediaType *) cast_chk(obj, [ComGoogleCommonNetMediaType class]);
    return [((NSString *) nil_chk(self->type_)) isEqual:((ComGoogleCommonNetMediaType *) nil_chk(that))->type_] && [((NSString *) nil_chk(self->subtype_)) isEqual:that->subtype_] && [((id<JavaUtilMap>) nil_chk(ComGoogleCommonNetMediaType_parametersAsMap(self))) isEqual:ComGoogleCommonNetMediaType_parametersAsMap(that)];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  jint h = hashCode_;
  if (h == 0) {
    h = ComGoogleCommonBaseObjects_hashCodeWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ type_, subtype_, ComGoogleCommonNetMediaType_parametersAsMap(self) } count:3 type:NSObject_class_()]);
    hashCode_ = h;
  }
  return h;
}

- (NSString *)description {
  NSString *result = JreLoadVolatileId(&toString_);
  if (result == nil) {
    result = ComGoogleCommonNetMediaType_computeToString(self);
    (void) JreVolatileStrongAssign(&toString_, result);
  }
  return result;
}

- (NSString *)computeToString {
  return ComGoogleCommonNetMediaType_computeToString(self);
}

+ (NSString *)escapeAndQuoteWithNSString:(NSString *)value {
  return ComGoogleCommonNetMediaType_escapeAndQuoteWithNSString_(value);
}

- (void)__javaClone:(ComGoogleCommonNetMediaType *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&toString_, &original->toString_);
  JreCloneVolatileStrong(&parsedCharset_, &original->parsedCharset_);
}

- (void)dealloc {
  JreReleaseVolatile(&toString_);
  JreReleaseVolatile(&parsedCharset_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonNetMediaType;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableListMultimap;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, -1, -1, -1, 8, -1, -1 },
    { NULL, "LComGoogleCommonBaseOptional;", 0x1, -1, -1, -1, 9, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x1, 13, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x9, 17, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x8, 18, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x8, 20, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x8, 21, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x8, 22, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x8, 23, 19, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0xa, 17, 24, -1, 25, -1, -1 },
    { NULL, "LNSString;", 0xa, 26, 19, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 27, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonNetMediaType;", 0x9, 28, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 29, 30, -1, -1, -1, 31 },
    { NULL, "I", 0x1, 32, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 33, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 34, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createConstantWithNSString:withNSString:);
  methods[1].selector = @selector(createConstantUtf8WithNSString:withNSString:);
  methods[2].selector = @selector(addKnownTypeWithComGoogleCommonNetMediaType:);
  methods[3].selector = @selector(initWithNSString:withNSString:withComGoogleCommonCollectImmutableListMultimap:);
  methods[4].selector = @selector(type);
  methods[5].selector = @selector(subtype);
  methods[6].selector = @selector(parameters);
  methods[7].selector = @selector(parametersAsMap);
  methods[8].selector = @selector(charset);
  methods[9].selector = @selector(withoutParameters);
  methods[10].selector = @selector(withParametersWithComGoogleCommonCollectMultimap:);
  methods[11].selector = @selector(withParameterWithNSString:withNSString:);
  methods[12].selector = @selector(withCharsetWithJavaNioCharsetCharset:);
  methods[13].selector = @selector(hasWildcard);
  methods[14].selector = @selector(isWithComGoogleCommonNetMediaType:);
  methods[15].selector = @selector(createWithNSString:withNSString:);
  methods[16].selector = @selector(createApplicationTypeWithNSString:);
  methods[17].selector = @selector(createAudioTypeWithNSString:);
  methods[18].selector = @selector(createImageTypeWithNSString:);
  methods[19].selector = @selector(createTextTypeWithNSString:);
  methods[20].selector = @selector(createVideoTypeWithNSString:);
  methods[21].selector = @selector(createWithNSString:withNSString:withComGoogleCommonCollectMultimap:);
  methods[22].selector = @selector(normalizeTokenWithNSString:);
  methods[23].selector = @selector(normalizeParameterValueWithNSString:withNSString:);
  methods[24].selector = @selector(parseWithNSString:);
  methods[25].selector = @selector(isEqual:);
  methods[26].selector = @selector(hash);
  methods[27].selector = @selector(description);
  methods[28].selector = @selector(computeToString);
  methods[29].selector = @selector(escapeAndQuoteWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CHARSET_ATTRIBUTE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "UTF_8_CONSTANT_PARAMETERS", "LComGoogleCommonCollectImmutableListMultimap;", .constantValue.asLong = 0, 0x1a, -1, 36, 37, -1 },
    { "TOKEN_MATCHER", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "QUOTED_TEXT_MATCHER", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "LINEAR_WHITE_SPACE", "LComGoogleCommonBaseCharMatcher;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
    { "APPLICATION_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 41, -1, -1 },
    { "AUDIO_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 42, -1, -1 },
    { "IMAGE_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 43, -1, -1 },
    { "TEXT_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 44, -1, -1 },
    { "VIDEO_TYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 45, -1, -1 },
    { "WILDCARD", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 46, -1, -1 },
    { "KNOWN_TYPES", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 47, 48, -1 },
    { "ANY_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "ANY_TEXT_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "ANY_IMAGE_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "ANY_AUDIO_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "ANY_VIDEO_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
    { "ANY_APPLICATION_TYPE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "CACHE_MANIFEST_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 55, -1, -1 },
    { "CSS_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 56, -1, -1 },
    { "CSV_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "HTML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "I_CALENDAR_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "PLAIN_TEXT_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "TEXT_JAVASCRIPT_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "TSV_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "VCARD_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "WML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 64, -1, -1 },
    { "XML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 65, -1, -1 },
    { "VTT_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "BMP", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 67, -1, -1 },
    { "CRW", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 68, -1, -1 },
    { "GIF", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "ICO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 70, -1, -1 },
    { "JPEG", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 71, -1, -1 },
    { "PNG", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "PSD", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "SVG_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 74, -1, -1 },
    { "TIFF", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 75, -1, -1 },
    { "WEBP", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "MP4_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 77, -1, -1 },
    { "MPEG_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 78, -1, -1 },
    { "OGG_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 79, -1, -1 },
    { "WEBM_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 80, -1, -1 },
    { "L24_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 81, -1, -1 },
    { "BASIC_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 82, -1, -1 },
    { "AAC_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
    { "VORBIS_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 84, -1, -1 },
    { "WMA_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 85, -1, -1 },
    { "WAX_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 86, -1, -1 },
    { "VND_REAL_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 87, -1, -1 },
    { "VND_WAVE_AUDIO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 88, -1, -1 },
    { "MP4_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 89, -1, -1 },
    { "MPEG_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 90, -1, -1 },
    { "OGG_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 91, -1, -1 },
    { "QUICKTIME", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 92, -1, -1 },
    { "WEBM_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 93, -1, -1 },
    { "WMV", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 94, -1, -1 },
    { "FLV_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 95, -1, -1 },
    { "THREE_GPP_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 96, -1, -1 },
    { "THREE_GPP2_VIDEO", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 97, -1, -1 },
    { "APPLICATION_XML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 98, -1, -1 },
    { "ATOM_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 99, -1, -1 },
    { "BZIP2", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 100, -1, -1 },
    { "DART_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 101, -1, -1 },
    { "APPLE_PASSBOOK", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 102, -1, -1 },
    { "EOT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 103, -1, -1 },
    { "EPUB", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 104, -1, -1 },
    { "FORM_DATA", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 105, -1, -1 },
    { "KEY_ARCHIVE", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 106, -1, -1 },
    { "APPLICATION_BINARY", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 107, -1, -1 },
    { "GZIP", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 108, -1, -1 },
    { "JAVASCRIPT_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 109, -1, -1 },
    { "JSON_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 110, -1, -1 },
    { "MANIFEST_JSON_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 111, -1, -1 },
    { "KML", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 112, -1, -1 },
    { "KMZ", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 113, -1, -1 },
    { "MBOX", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 114, -1, -1 },
    { "APPLE_MOBILE_CONFIG", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 115, -1, -1 },
    { "MICROSOFT_EXCEL", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 116, -1, -1 },
    { "MICROSOFT_POWERPOINT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 117, -1, -1 },
    { "MICROSOFT_WORD", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 118, -1, -1 },
    { "NACL_APPLICATION", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 119, -1, -1 },
    { "NACL_PORTABLE_APPLICATION", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 120, -1, -1 },
    { "OCTET_STREAM", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 121, -1, -1 },
    { "OGG_CONTAINER", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 122, -1, -1 },
    { "OOXML_DOCUMENT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 123, -1, -1 },
    { "OOXML_PRESENTATION", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 124, -1, -1 },
    { "OOXML_SHEET", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 125, -1, -1 },
    { "OPENDOCUMENT_GRAPHICS", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 126, -1, -1 },
    { "OPENDOCUMENT_PRESENTATION", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 127, -1, -1 },
    { "OPENDOCUMENT_SPREADSHEET", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 128, -1, -1 },
    { "OPENDOCUMENT_TEXT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 129, -1, -1 },
    { "PDF", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 130, -1, -1 },
    { "POSTSCRIPT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 131, -1, -1 },
    { "PROTOBUF", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 132, -1, -1 },
    { "RDF_XML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 133, -1, -1 },
    { "RTF_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 134, -1, -1 },
    { "SFNT", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 135, -1, -1 },
    { "SHOCKWAVE_FLASH", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 136, -1, -1 },
    { "SKETCHUP", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 137, -1, -1 },
    { "SOAP_XML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 138, -1, -1 },
    { "TAR", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 139, -1, -1 },
    { "WOFF", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 140, -1, -1 },
    { "WOFF2", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 141, -1, -1 },
    { "XHTML_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 142, -1, -1 },
    { "XRD_UTF_8", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 143, -1, -1 },
    { "ZIP", "LComGoogleCommonNetMediaType;", .constantValue.asLong = 0, 0x19, -1, 144, -1, -1 },
    { "type_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subtype_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parameters_", "LComGoogleCommonCollectImmutableListMultimap;", .constantValue.asLong = 0, 0x12, -1, -1, 37, -1 },
    { "toString_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, 145 },
    { "hashCode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, 146 },
    { "parsedCharset_", "LComGoogleCommonBaseOptional;", .constantValue.asLong = 0, 0x2, -1, -1, 147, 148 },
    { "PARAMETER_JOINER", "LComGoogleCommonBaseJoiner_MapJoiner;", .constantValue.asLong = 0, 0x1a, -1, 149, -1, -1 },
  };
  static const void *ptrTable[] = { "createConstant", "LNSString;LNSString;", "createConstantUtf8", "addKnownType", "LComGoogleCommonNetMediaType;", "LNSString;LNSString;LComGoogleCommonCollectImmutableListMultimap;", "(Ljava/lang/String;Ljava/lang/String;Lcom/google/common/collect/ImmutableListMultimap<Ljava/lang/String;Ljava/lang/String;>;)V", "()Lcom/google/common/collect/ImmutableListMultimap<Ljava/lang/String;Ljava/lang/String;>;", "()Ljava/util/Map<Ljava/lang/String;Lcom/google/common/collect/ImmutableMultiset<Ljava/lang/String;>;>;", "()Lcom/google/common/base/Optional<Ljava/nio/charset/Charset;>;", "withParameters", "LComGoogleCommonCollectMultimap;", "(Lcom/google/common/collect/Multimap<Ljava/lang/String;Ljava/lang/String;>;)Lcom/google/common/net/MediaType;", "withParameter", "withCharset", "LJavaNioCharsetCharset;", "is", "create", "createApplicationType", "LNSString;", "createAudioType", "createImageType", "createTextType", "createVideoType", "LNSString;LNSString;LComGoogleCommonCollectMultimap;", "(Ljava/lang/String;Ljava/lang/String;Lcom/google/common/collect/Multimap<Ljava/lang/String;Ljava/lang/String;>;)Lcom/google/common/net/MediaType;", "normalizeToken", "normalizeParameterValue", "parse", "equals", "LNSObject;", (void *)&ComGoogleCommonNetMediaType__Annotations$0, "hashCode", "toString", "escapeAndQuote", &ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE, &ComGoogleCommonNetMediaType_UTF_8_CONSTANT_PARAMETERS, "Lcom/google/common/collect/ImmutableListMultimap<Ljava/lang/String;Ljava/lang/String;>;", &ComGoogleCommonNetMediaType_TOKEN_MATCHER, &ComGoogleCommonNetMediaType_QUOTED_TEXT_MATCHER, &ComGoogleCommonNetMediaType_LINEAR_WHITE_SPACE, &ComGoogleCommonNetMediaType_APPLICATION_TYPE, &ComGoogleCommonNetMediaType_AUDIO_TYPE, &ComGoogleCommonNetMediaType_IMAGE_TYPE, &ComGoogleCommonNetMediaType_TEXT_TYPE, &ComGoogleCommonNetMediaType_VIDEO_TYPE, &ComGoogleCommonNetMediaType_WILDCARD, &ComGoogleCommonNetMediaType_KNOWN_TYPES, "Ljava/util/Map<Lcom/google/common/net/MediaType;Lcom/google/common/net/MediaType;>;", &ComGoogleCommonNetMediaType_ANY_TYPE, &ComGoogleCommonNetMediaType_ANY_TEXT_TYPE, &ComGoogleCommonNetMediaType_ANY_IMAGE_TYPE, &ComGoogleCommonNetMediaType_ANY_AUDIO_TYPE, &ComGoogleCommonNetMediaType_ANY_VIDEO_TYPE, &ComGoogleCommonNetMediaType_ANY_APPLICATION_TYPE, &ComGoogleCommonNetMediaType_CACHE_MANIFEST_UTF_8, &ComGoogleCommonNetMediaType_CSS_UTF_8, &ComGoogleCommonNetMediaType_CSV_UTF_8, &ComGoogleCommonNetMediaType_HTML_UTF_8, &ComGoogleCommonNetMediaType_I_CALENDAR_UTF_8, &ComGoogleCommonNetMediaType_PLAIN_TEXT_UTF_8, &ComGoogleCommonNetMediaType_TEXT_JAVASCRIPT_UTF_8, &ComGoogleCommonNetMediaType_TSV_UTF_8, &ComGoogleCommonNetMediaType_VCARD_UTF_8, &ComGoogleCommonNetMediaType_WML_UTF_8, &ComGoogleCommonNetMediaType_XML_UTF_8, &ComGoogleCommonNetMediaType_VTT_UTF_8, &ComGoogleCommonNetMediaType_BMP, &ComGoogleCommonNetMediaType_CRW, &ComGoogleCommonNetMediaType_GIF, &ComGoogleCommonNetMediaType_ICO, &ComGoogleCommonNetMediaType_JPEG, &ComGoogleCommonNetMediaType_PNG, &ComGoogleCommonNetMediaType_PSD, &ComGoogleCommonNetMediaType_SVG_UTF_8, &ComGoogleCommonNetMediaType_TIFF, &ComGoogleCommonNetMediaType_WEBP, &ComGoogleCommonNetMediaType_MP4_AUDIO, &ComGoogleCommonNetMediaType_MPEG_AUDIO, &ComGoogleCommonNetMediaType_OGG_AUDIO, &ComGoogleCommonNetMediaType_WEBM_AUDIO, &ComGoogleCommonNetMediaType_L24_AUDIO, &ComGoogleCommonNetMediaType_BASIC_AUDIO, &ComGoogleCommonNetMediaType_AAC_AUDIO, &ComGoogleCommonNetMediaType_VORBIS_AUDIO, &ComGoogleCommonNetMediaType_WMA_AUDIO, &ComGoogleCommonNetMediaType_WAX_AUDIO, &ComGoogleCommonNetMediaType_VND_REAL_AUDIO, &ComGoogleCommonNetMediaType_VND_WAVE_AUDIO, &ComGoogleCommonNetMediaType_MP4_VIDEO, &ComGoogleCommonNetMediaType_MPEG_VIDEO, &ComGoogleCommonNetMediaType_OGG_VIDEO, &ComGoogleCommonNetMediaType_QUICKTIME, &ComGoogleCommonNetMediaType_WEBM_VIDEO, &ComGoogleCommonNetMediaType_WMV, &ComGoogleCommonNetMediaType_FLV_VIDEO, &ComGoogleCommonNetMediaType_THREE_GPP_VIDEO, &ComGoogleCommonNetMediaType_THREE_GPP2_VIDEO, &ComGoogleCommonNetMediaType_APPLICATION_XML_UTF_8, &ComGoogleCommonNetMediaType_ATOM_UTF_8, &ComGoogleCommonNetMediaType_BZIP2, &ComGoogleCommonNetMediaType_DART_UTF_8, &ComGoogleCommonNetMediaType_APPLE_PASSBOOK, &ComGoogleCommonNetMediaType_EOT, &ComGoogleCommonNetMediaType_EPUB, &ComGoogleCommonNetMediaType_FORM_DATA, &ComGoogleCommonNetMediaType_KEY_ARCHIVE, &ComGoogleCommonNetMediaType_APPLICATION_BINARY, &ComGoogleCommonNetMediaType_GZIP, &ComGoogleCommonNetMediaType_JAVASCRIPT_UTF_8, &ComGoogleCommonNetMediaType_JSON_UTF_8, &ComGoogleCommonNetMediaType_MANIFEST_JSON_UTF_8, &ComGoogleCommonNetMediaType_KML, &ComGoogleCommonNetMediaType_KMZ, &ComGoogleCommonNetMediaType_MBOX, &ComGoogleCommonNetMediaType_APPLE_MOBILE_CONFIG, &ComGoogleCommonNetMediaType_MICROSOFT_EXCEL, &ComGoogleCommonNetMediaType_MICROSOFT_POWERPOINT, &ComGoogleCommonNetMediaType_MICROSOFT_WORD, &ComGoogleCommonNetMediaType_NACL_APPLICATION, &ComGoogleCommonNetMediaType_NACL_PORTABLE_APPLICATION, &ComGoogleCommonNetMediaType_OCTET_STREAM, &ComGoogleCommonNetMediaType_OGG_CONTAINER, &ComGoogleCommonNetMediaType_OOXML_DOCUMENT, &ComGoogleCommonNetMediaType_OOXML_PRESENTATION, &ComGoogleCommonNetMediaType_OOXML_SHEET, &ComGoogleCommonNetMediaType_OPENDOCUMENT_GRAPHICS, &ComGoogleCommonNetMediaType_OPENDOCUMENT_PRESENTATION, &ComGoogleCommonNetMediaType_OPENDOCUMENT_SPREADSHEET, &ComGoogleCommonNetMediaType_OPENDOCUMENT_TEXT, &ComGoogleCommonNetMediaType_PDF, &ComGoogleCommonNetMediaType_POSTSCRIPT, &ComGoogleCommonNetMediaType_PROTOBUF, &ComGoogleCommonNetMediaType_RDF_XML_UTF_8, &ComGoogleCommonNetMediaType_RTF_UTF_8, &ComGoogleCommonNetMediaType_SFNT, &ComGoogleCommonNetMediaType_SHOCKWAVE_FLASH, &ComGoogleCommonNetMediaType_SKETCHUP, &ComGoogleCommonNetMediaType_SOAP_XML_UTF_8, &ComGoogleCommonNetMediaType_TAR, &ComGoogleCommonNetMediaType_WOFF, &ComGoogleCommonNetMediaType_WOFF2, &ComGoogleCommonNetMediaType_XHTML_UTF_8, &ComGoogleCommonNetMediaType_XRD_UTF_8, &ComGoogleCommonNetMediaType_ZIP, (void *)&ComGoogleCommonNetMediaType__Annotations$1, (void *)&ComGoogleCommonNetMediaType__Annotations$2, "Lcom/google/common/base/Optional<Ljava/nio/charset/Charset;>;", (void *)&ComGoogleCommonNetMediaType__Annotations$3, &ComGoogleCommonNetMediaType_PARAMETER_JOINER, "LComGoogleCommonNetMediaType_Tokenizer;" };
  static const J2ObjcClassInfo _ComGoogleCommonNetMediaType = { "MediaType", "com.google.common.net", ptrTable, methods, fields, 7, 0x11, 30, 115, -1, 150, -1, -1, -1 };
  return &_ComGoogleCommonNetMediaType;
}

+ (void)initialize {
  if (self == [ComGoogleCommonNetMediaType class]) {
    ComGoogleCommonNetMediaType_UTF_8_CONSTANT_PARAMETERS = ComGoogleCommonCollectImmutableListMultimap_ofWithId_withId_(ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE, ComGoogleCommonBaseAscii_toLowerCaseWithNSString_([((JavaNioCharsetCharset *) nil_chk(JreLoadStatic(ComGoogleCommonBaseCharsets, UTF_8))) name]));
    ComGoogleCommonNetMediaType_TOKEN_MATCHER = [((ComGoogleCommonBaseCharMatcher *) nil_chk([((ComGoogleCommonBaseCharMatcher *) nil_chk([((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_ascii())) and__WithComGoogleCommonBaseCharMatcher:[((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_javaIsoControl())) negate]])) and__WithComGoogleCommonBaseCharMatcher:ComGoogleCommonBaseCharMatcher_isNotWithChar_(' ')])) and__WithComGoogleCommonBaseCharMatcher:ComGoogleCommonBaseCharMatcher_noneOfWithJavaLangCharSequence_(@"()<>@,;:\\\"/[]?=")];
    ComGoogleCommonNetMediaType_QUOTED_TEXT_MATCHER = [((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_ascii())) and__WithComGoogleCommonBaseCharMatcher:ComGoogleCommonBaseCharMatcher_noneOfWithJavaLangCharSequence_(@"\"\\\x0d")];
    ComGoogleCommonNetMediaType_LINEAR_WHITE_SPACE = ComGoogleCommonBaseCharMatcher_anyOfWithJavaLangCharSequence_(@" \t\x0d\n");
    ComGoogleCommonNetMediaType_KNOWN_TYPES = ComGoogleCommonCollectMaps_newHashMap();
    ComGoogleCommonNetMediaType_ANY_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_WILDCARD, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_ANY_TEXT_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_ANY_IMAGE_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_ANY_AUDIO_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_ANY_VIDEO_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_ANY_APPLICATION_TYPE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, ComGoogleCommonNetMediaType_WILDCARD);
    ComGoogleCommonNetMediaType_CACHE_MANIFEST_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"cache-manifest");
    ComGoogleCommonNetMediaType_CSS_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"css");
    ComGoogleCommonNetMediaType_CSV_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"csv");
    ComGoogleCommonNetMediaType_HTML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"html");
    ComGoogleCommonNetMediaType_I_CALENDAR_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"calendar");
    ComGoogleCommonNetMediaType_PLAIN_TEXT_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"plain");
    ComGoogleCommonNetMediaType_TEXT_JAVASCRIPT_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"javascript");
    ComGoogleCommonNetMediaType_TSV_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"tab-separated-values");
    ComGoogleCommonNetMediaType_VCARD_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"vcard");
    ComGoogleCommonNetMediaType_WML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"vnd.wap.wml");
    ComGoogleCommonNetMediaType_XML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"xml");
    ComGoogleCommonNetMediaType_VTT_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, @"vtt");
    ComGoogleCommonNetMediaType_BMP = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"bmp");
    ComGoogleCommonNetMediaType_CRW = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"x-canon-crw");
    ComGoogleCommonNetMediaType_GIF = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"gif");
    ComGoogleCommonNetMediaType_ICO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"vnd.microsoft.icon");
    ComGoogleCommonNetMediaType_JPEG = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"jpeg");
    ComGoogleCommonNetMediaType_PNG = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"png");
    ComGoogleCommonNetMediaType_PSD = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"vnd.adobe.photoshop");
    ComGoogleCommonNetMediaType_SVG_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"svg+xml");
    ComGoogleCommonNetMediaType_TIFF = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"tiff");
    ComGoogleCommonNetMediaType_WEBP = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, @"webp");
    ComGoogleCommonNetMediaType_MP4_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"mp4");
    ComGoogleCommonNetMediaType_MPEG_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"mpeg");
    ComGoogleCommonNetMediaType_OGG_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"ogg");
    ComGoogleCommonNetMediaType_WEBM_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"webm");
    ComGoogleCommonNetMediaType_L24_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"l24");
    ComGoogleCommonNetMediaType_BASIC_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"basic");
    ComGoogleCommonNetMediaType_AAC_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"aac");
    ComGoogleCommonNetMediaType_VORBIS_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"vorbis");
    ComGoogleCommonNetMediaType_WMA_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"x-ms-wma");
    ComGoogleCommonNetMediaType_WAX_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"x-ms-wax");
    ComGoogleCommonNetMediaType_VND_REAL_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"vnd.rn-realaudio");
    ComGoogleCommonNetMediaType_VND_WAVE_AUDIO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, @"vnd.wave");
    ComGoogleCommonNetMediaType_MP4_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"mp4");
    ComGoogleCommonNetMediaType_MPEG_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"mpeg");
    ComGoogleCommonNetMediaType_OGG_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"ogg");
    ComGoogleCommonNetMediaType_QUICKTIME = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"quicktime");
    ComGoogleCommonNetMediaType_WEBM_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"webm");
    ComGoogleCommonNetMediaType_WMV = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"x-ms-wmv");
    ComGoogleCommonNetMediaType_FLV_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"x-flv");
    ComGoogleCommonNetMediaType_THREE_GPP_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"3gpp");
    ComGoogleCommonNetMediaType_THREE_GPP2_VIDEO = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, @"3gpp2");
    ComGoogleCommonNetMediaType_APPLICATION_XML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"xml");
    ComGoogleCommonNetMediaType_ATOM_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"atom+xml");
    ComGoogleCommonNetMediaType_BZIP2 = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-bzip2");
    ComGoogleCommonNetMediaType_DART_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"dart");
    ComGoogleCommonNetMediaType_APPLE_PASSBOOK = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.apple.pkpass");
    ComGoogleCommonNetMediaType_EOT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.ms-fontobject");
    ComGoogleCommonNetMediaType_EPUB = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"epub+zip");
    ComGoogleCommonNetMediaType_FORM_DATA = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-www-form-urlencoded");
    ComGoogleCommonNetMediaType_KEY_ARCHIVE = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"pkcs12");
    ComGoogleCommonNetMediaType_APPLICATION_BINARY = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"binary");
    ComGoogleCommonNetMediaType_GZIP = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-gzip");
    ComGoogleCommonNetMediaType_JAVASCRIPT_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"javascript");
    ComGoogleCommonNetMediaType_JSON_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"json");
    ComGoogleCommonNetMediaType_MANIFEST_JSON_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"manifest+json");
    ComGoogleCommonNetMediaType_KML = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.google-earth.kml+xml");
    ComGoogleCommonNetMediaType_KMZ = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.google-earth.kmz");
    ComGoogleCommonNetMediaType_MBOX = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"mbox");
    ComGoogleCommonNetMediaType_APPLE_MOBILE_CONFIG = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-apple-aspen-config");
    ComGoogleCommonNetMediaType_MICROSOFT_EXCEL = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.ms-excel");
    ComGoogleCommonNetMediaType_MICROSOFT_POWERPOINT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.ms-powerpoint");
    ComGoogleCommonNetMediaType_MICROSOFT_WORD = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"msword");
    ComGoogleCommonNetMediaType_NACL_APPLICATION = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-nacl");
    ComGoogleCommonNetMediaType_NACL_PORTABLE_APPLICATION = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-pnacl");
    ComGoogleCommonNetMediaType_OCTET_STREAM = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"octet-stream");
    ComGoogleCommonNetMediaType_OGG_CONTAINER = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"ogg");
    ComGoogleCommonNetMediaType_OOXML_DOCUMENT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.openxmlformats-officedocument.wordprocessingml.document");
    ComGoogleCommonNetMediaType_OOXML_PRESENTATION = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.openxmlformats-officedocument.presentationml.presentation");
    ComGoogleCommonNetMediaType_OOXML_SHEET = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    ComGoogleCommonNetMediaType_OPENDOCUMENT_GRAPHICS = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.oasis.opendocument.graphics");
    ComGoogleCommonNetMediaType_OPENDOCUMENT_PRESENTATION = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.oasis.opendocument.presentation");
    ComGoogleCommonNetMediaType_OPENDOCUMENT_SPREADSHEET = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.oasis.opendocument.spreadsheet");
    ComGoogleCommonNetMediaType_OPENDOCUMENT_TEXT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.oasis.opendocument.text");
    ComGoogleCommonNetMediaType_PDF = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"pdf");
    ComGoogleCommonNetMediaType_POSTSCRIPT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"postscript");
    ComGoogleCommonNetMediaType_PROTOBUF = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"protobuf");
    ComGoogleCommonNetMediaType_RDF_XML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"rdf+xml");
    ComGoogleCommonNetMediaType_RTF_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"rtf");
    ComGoogleCommonNetMediaType_SFNT = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"font-sfnt");
    ComGoogleCommonNetMediaType_SHOCKWAVE_FLASH = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-shockwave-flash");
    ComGoogleCommonNetMediaType_SKETCHUP = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"vnd.sketchup.skp");
    ComGoogleCommonNetMediaType_SOAP_XML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"soap+xml");
    ComGoogleCommonNetMediaType_TAR = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"x-tar");
    ComGoogleCommonNetMediaType_WOFF = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"font-woff");
    ComGoogleCommonNetMediaType_WOFF2 = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"font-woff2");
    ComGoogleCommonNetMediaType_XHTML_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"xhtml+xml");
    ComGoogleCommonNetMediaType_XRD_UTF_8 = ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"xrd+xml");
    ComGoogleCommonNetMediaType_ZIP = ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, @"zip");
    ComGoogleCommonNetMediaType_PARAMETER_JOINER = [((ComGoogleCommonBaseJoiner *) nil_chk(ComGoogleCommonBaseJoiner_onWithNSString_(@"; "))) withKeyValueSeparatorWithNSString:@"="];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonNetMediaType)
  }
}

@end

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createConstantWithNSString_withNSString_(NSString *type, NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  ComGoogleCommonNetMediaType *mediaType = ComGoogleCommonNetMediaType_addKnownTypeWithComGoogleCommonNetMediaType_(new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(type, subtype, ComGoogleCommonCollectImmutableListMultimap_of()));
  (void) JreVolatileStrongAssign(&((ComGoogleCommonNetMediaType *) nil_chk(mediaType))->parsedCharset_, ComGoogleCommonBaseOptional_absent());
  return mediaType;
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createConstantUtf8WithNSString_withNSString_(NSString *type, NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  ComGoogleCommonNetMediaType *mediaType = ComGoogleCommonNetMediaType_addKnownTypeWithComGoogleCommonNetMediaType_(new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(type, subtype, ComGoogleCommonNetMediaType_UTF_8_CONSTANT_PARAMETERS));
  (void) JreVolatileStrongAssign(&((ComGoogleCommonNetMediaType *) nil_chk(mediaType))->parsedCharset_, ComGoogleCommonBaseOptional_ofWithId_(JreLoadStatic(ComGoogleCommonBaseCharsets, UTF_8)));
  return mediaType;
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_addKnownTypeWithComGoogleCommonNetMediaType_(ComGoogleCommonNetMediaType *mediaType) {
  ComGoogleCommonNetMediaType_initialize();
  (void) [((id<JavaUtilMap>) nil_chk(ComGoogleCommonNetMediaType_KNOWN_TYPES)) putWithId:mediaType withId:mediaType];
  return mediaType;
}

void ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(ComGoogleCommonNetMediaType *self, NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters) {
  NSObject_init(self);
  self->type_ = type;
  self->subtype_ = subtype;
  self->parameters_ = parameters;
}

ComGoogleCommonNetMediaType *new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters) {
  J2OBJC_NEW_IMPL(ComGoogleCommonNetMediaType, initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_, type, subtype, parameters)
}

ComGoogleCommonNetMediaType *create_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(NSString *type, NSString *subtype, ComGoogleCommonCollectImmutableListMultimap *parameters) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonNetMediaType, initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_, type, subtype, parameters)
}

id<JavaUtilMap> ComGoogleCommonNetMediaType_parametersAsMap(ComGoogleCommonNetMediaType *self) {
  return ComGoogleCommonCollectMaps_transformValuesWithJavaUtilMap_withComGoogleCommonBaseFunction_([((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(self->parameters_)) asMap], new_ComGoogleCommonNetMediaType_1_init());
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createWithNSString_withNSString_(NSString *type, NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  ComGoogleCommonNetMediaType *mediaType = ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(type, subtype, ComGoogleCommonCollectImmutableListMultimap_of());
  (void) JreVolatileStrongAssign(&((ComGoogleCommonNetMediaType *) nil_chk(mediaType))->parsedCharset_, ComGoogleCommonBaseOptional_absent());
  return mediaType;
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createApplicationTypeWithNSString_(NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(ComGoogleCommonNetMediaType_APPLICATION_TYPE, subtype);
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createAudioTypeWithNSString_(NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(ComGoogleCommonNetMediaType_AUDIO_TYPE, subtype);
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createImageTypeWithNSString_(NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(ComGoogleCommonNetMediaType_IMAGE_TYPE, subtype);
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createTextTypeWithNSString_(NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(ComGoogleCommonNetMediaType_TEXT_TYPE, subtype);
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createVideoTypeWithNSString_(NSString *subtype) {
  ComGoogleCommonNetMediaType_initialize();
  return ComGoogleCommonNetMediaType_createWithNSString_withNSString_(ComGoogleCommonNetMediaType_VIDEO_TYPE, subtype);
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(NSString *type, NSString *subtype, id<ComGoogleCommonCollectMultimap> parameters) {
  ComGoogleCommonNetMediaType_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(subtype);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(parameters);
  NSString *normalizedType = ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(type);
  NSString *normalizedSubtype = ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(subtype);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(![((NSString *) nil_chk(ComGoogleCommonNetMediaType_WILDCARD)) isEqual:normalizedType] || [ComGoogleCommonNetMediaType_WILDCARD isEqual:normalizedSubtype], @"A wildcard type cannot be used with a non-wildcard subtype");
  ComGoogleCommonCollectImmutableListMultimap_Builder *builder = ComGoogleCommonCollectImmutableListMultimap_builder();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<ComGoogleCommonCollectMultimap>) nil_chk(parameters)) entries])) {
    NSString *attribute = ComGoogleCommonNetMediaType_normalizeTokenWithNSString_([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]);
    (void) [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(builder)) putWithId:attribute withId:ComGoogleCommonNetMediaType_normalizeParameterValueWithNSString_withNSString_(attribute, [entry_ getValue])];
  }
  ComGoogleCommonNetMediaType *mediaType = new_ComGoogleCommonNetMediaType_initWithNSString_withNSString_withComGoogleCommonCollectImmutableListMultimap_(normalizedType, normalizedSubtype, [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(builder)) build]);
  return ComGoogleCommonBaseMoreObjects_firstNonNullWithId_withId_([((id<JavaUtilMap>) nil_chk(ComGoogleCommonNetMediaType_KNOWN_TYPES)) getWithId:mediaType], mediaType);
}

NSString *ComGoogleCommonNetMediaType_normalizeTokenWithNSString_(NSString *token) {
  ComGoogleCommonNetMediaType_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_([((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonNetMediaType_TOKEN_MATCHER)) matchesAllOfWithJavaLangCharSequence:token]);
  return ComGoogleCommonBaseAscii_toLowerCaseWithNSString_(token);
}

NSString *ComGoogleCommonNetMediaType_normalizeParameterValueWithNSString_withNSString_(NSString *attribute, NSString *value) {
  ComGoogleCommonNetMediaType_initialize();
  return [((NSString *) nil_chk(ComGoogleCommonNetMediaType_CHARSET_ATTRIBUTE)) isEqual:attribute] ? ComGoogleCommonBaseAscii_toLowerCaseWithNSString_(value) : value;
}

ComGoogleCommonNetMediaType *ComGoogleCommonNetMediaType_parseWithNSString_(NSString *input) {
  ComGoogleCommonNetMediaType_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(input);
  ComGoogleCommonNetMediaType_Tokenizer *tokenizer = new_ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(input);
  @try {
    NSString *type = [tokenizer consumeTokenWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_TOKEN_MATCHER];
    [tokenizer consumeCharacterWithChar:'/'];
    NSString *subtype = [tokenizer consumeTokenWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_TOKEN_MATCHER];
    ComGoogleCommonCollectImmutableListMultimap_Builder *parameters = ComGoogleCommonCollectImmutableListMultimap_builder();
    while ([tokenizer hasMore]) {
      (void) [tokenizer consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_LINEAR_WHITE_SPACE];
      [tokenizer consumeCharacterWithChar:';'];
      (void) [tokenizer consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_LINEAR_WHITE_SPACE];
      NSString *attribute = [tokenizer consumeTokenWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_TOKEN_MATCHER];
      [tokenizer consumeCharacterWithChar:'='];
      NSString *value;
      if ('"' == [tokenizer previewChar]) {
        [tokenizer consumeCharacterWithChar:'"'];
        JavaLangStringBuilder *valueBuilder = new_JavaLangStringBuilder_init();
        while ('"' != [tokenizer previewChar]) {
          if ('\\' == [tokenizer previewChar]) {
            [tokenizer consumeCharacterWithChar:'\\'];
            (void) [valueBuilder appendWithChar:[tokenizer consumeCharacterWithComGoogleCommonBaseCharMatcher:ComGoogleCommonBaseCharMatcher_ascii()]];
          }
          else {
            (void) [valueBuilder appendWithNSString:[tokenizer consumeTokenWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_QUOTED_TEXT_MATCHER]];
          }
        }
        value = [valueBuilder description];
        [tokenizer consumeCharacterWithChar:'"'];
      }
      else {
        value = [tokenizer consumeTokenWithComGoogleCommonBaseCharMatcher:ComGoogleCommonNetMediaType_TOKEN_MATCHER];
      }
      (void) [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(parameters)) putWithId:attribute withId:value];
    }
    return ComGoogleCommonNetMediaType_createWithNSString_withNSString_withComGoogleCommonCollectMultimap_(type, subtype, [((ComGoogleCommonCollectImmutableListMultimap_Builder *) nil_chk(parameters)) build]);
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_withNSException_(JreStrcat("$$C", @"Could not parse '", input, '\''), e);
  }
}

NSString *ComGoogleCommonNetMediaType_computeToString(ComGoogleCommonNetMediaType *self) {
  JavaLangStringBuilder *builder = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([new_JavaLangStringBuilder_init() appendWithNSString:self->type_])) appendWithChar:'/'])) appendWithNSString:self->subtype_];
  if (![((ComGoogleCommonCollectImmutableListMultimap *) nil_chk(self->parameters_)) isEmpty]) {
    (void) [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@"; "];
    id<ComGoogleCommonCollectMultimap> quotedParameters = ComGoogleCommonCollectMultimaps_transformValuesWithComGoogleCommonCollectListMultimap_withComGoogleCommonBaseFunction_(self->parameters_, new_ComGoogleCommonNetMediaType_2_init());
    (void) [((ComGoogleCommonBaseJoiner_MapJoiner *) nil_chk(ComGoogleCommonNetMediaType_PARAMETER_JOINER)) appendToWithJavaLangStringBuilder:builder withJavaLangIterable:[((id<ComGoogleCommonCollectMultimap>) nil_chk(quotedParameters)) entries]];
  }
  return [((JavaLangStringBuilder *) nil_chk(builder)) description];
}

NSString *ComGoogleCommonNetMediaType_escapeAndQuoteWithNSString_(NSString *value) {
  ComGoogleCommonNetMediaType_initialize();
  JavaLangStringBuilder *escaped = [new_JavaLangStringBuilder_initWithInt_([((NSString *) nil_chk(value)) java_length] + 16) appendWithChar:'"'];
  for (jint i = 0; i < [value java_length]; i++) {
    jchar ch = [value charAtWithInt:i];
    if (ch == 0x000d || ch == '\\' || ch == '"') {
      (void) [((JavaLangStringBuilder *) nil_chk(escaped)) appendWithChar:'\\'];
    }
    (void) [((JavaLangStringBuilder *) nil_chk(escaped)) appendWithChar:ch];
  }
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(escaped)) appendWithChar:'"'])) description];
}

IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonNetMediaType__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleErrorproneAnnotationsConcurrentLazyInit() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonNetMediaType)

@implementation ComGoogleCommonNetMediaType_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonNetMediaType_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonCollectImmutableMultiset *)applyWithId:(id<JavaUtilCollection>)input {
  return ComGoogleCommonCollectImmutableMultiset_copyOfWithJavaLangIterable_(input);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableMultiset;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)Lcom/google/common/collect/ImmutableMultiset<Ljava/lang/String;>;", "LComGoogleCommonNetMediaType;", "parametersAsMap", "Ljava/lang/Object;Lcom/google/common/base/Function<Ljava/util/Collection<Ljava/lang/String;>;Lcom/google/common/collect/ImmutableMultiset<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonNetMediaType_1 = { "", "com.google.common.net", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_ComGoogleCommonNetMediaType_1;
}

@end

void ComGoogleCommonNetMediaType_1_init(ComGoogleCommonNetMediaType_1 *self) {
  NSObject_init(self);
}

ComGoogleCommonNetMediaType_1 *new_ComGoogleCommonNetMediaType_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonNetMediaType_1, init)
}

ComGoogleCommonNetMediaType_1 *create_ComGoogleCommonNetMediaType_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonNetMediaType_1, init)
}

@implementation ComGoogleCommonNetMediaType_Tokenizer

- (instancetype)initWithNSString:(NSString *)input {
  ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(self, input);
  return self;
}

- (NSString *)consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([self hasMore]);
  jint startPosition = position_;
  position_ = [((ComGoogleCommonBaseCharMatcher *) nil_chk([((ComGoogleCommonBaseCharMatcher *) nil_chk(matcher)) negate])) indexInWithJavaLangCharSequence:input_ withInt:startPosition];
  return [self hasMore] ? [((NSString *) nil_chk(input_)) java_substring:startPosition endIndex:position_] : [((NSString *) nil_chk(input_)) java_substring:startPosition];
}

- (NSString *)consumeTokenWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher {
  jint startPosition = position_;
  NSString *token = [self consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:matcher];
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_(position_ != startPosition);
  return token;
}

- (jchar)consumeCharacterWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)matcher {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([self hasMore]);
  jchar c = [self previewChar];
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([((ComGoogleCommonBaseCharMatcher *) nil_chk(matcher)) matchesWithChar:c]);
  position_++;
  return c;
}

- (jchar)consumeCharacterWithChar:(jchar)c {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([self hasMore]);
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([self previewChar] == c);
  position_++;
  return c;
}

- (jchar)previewChar {
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_([self hasMore]);
  return [((NSString *) nil_chk(input_)) charAtWithInt:position_];
}

- (jboolean)hasMore {
  return (position_ >= 0) && (position_ < [((NSString *) nil_chk(input_)) java_length]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 3, 2, -1, -1, -1, -1 },
    { NULL, "C", 0x0, 4, 2, -1, -1, -1, -1 },
    { NULL, "C", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "C", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(consumeTokenIfPresentWithComGoogleCommonBaseCharMatcher:);
  methods[2].selector = @selector(consumeTokenWithComGoogleCommonBaseCharMatcher:);
  methods[3].selector = @selector(consumeCharacterWithComGoogleCommonBaseCharMatcher:);
  methods[4].selector = @selector(consumeCharacterWithChar:);
  methods[5].selector = @selector(previewChar);
  methods[6].selector = @selector(hasMore);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "input_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "consumeTokenIfPresent", "LComGoogleCommonBaseCharMatcher;", "consumeToken", "consumeCharacter", "C", "LComGoogleCommonNetMediaType;" };
  static const J2ObjcClassInfo _ComGoogleCommonNetMediaType_Tokenizer = { "Tokenizer", "com.google.common.net", ptrTable, methods, fields, 7, 0x1a, 7, 2, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonNetMediaType_Tokenizer;
}

@end

void ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(ComGoogleCommonNetMediaType_Tokenizer *self, NSString *input) {
  NSObject_init(self);
  self->position_ = 0;
  self->input_ = input;
}

ComGoogleCommonNetMediaType_Tokenizer *new_ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(NSString *input) {
  J2OBJC_NEW_IMPL(ComGoogleCommonNetMediaType_Tokenizer, initWithNSString_, input)
}

ComGoogleCommonNetMediaType_Tokenizer *create_ComGoogleCommonNetMediaType_Tokenizer_initWithNSString_(NSString *input) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonNetMediaType_Tokenizer, initWithNSString_, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonNetMediaType_Tokenizer)

@implementation ComGoogleCommonNetMediaType_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonNetMediaType_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)applyWithId:(NSString *)value {
  return [((ComGoogleCommonBaseCharMatcher *) nil_chk(JreLoadStatic(ComGoogleCommonNetMediaType, TOKEN_MATCHER))) matchesAllOfWithJavaLangCharSequence:value] ? value : ComGoogleCommonNetMediaType_escapeAndQuoteWithNSString_(value);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LNSString;", "LComGoogleCommonNetMediaType;", "computeToString", "Ljava/lang/Object;Lcom/google/common/base/Function<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonNetMediaType_2 = { "", "com.google.common.net", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_ComGoogleCommonNetMediaType_2;
}

@end

void ComGoogleCommonNetMediaType_2_init(ComGoogleCommonNetMediaType_2 *self) {
  NSObject_init(self);
}

ComGoogleCommonNetMediaType_2 *new_ComGoogleCommonNetMediaType_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonNetMediaType_2, init)
}

ComGoogleCommonNetMediaType_2 *create_ComGoogleCommonNetMediaType_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonNetMediaType_2, init)
}
