//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/Booleans.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Booleans.h"
#include "java/io/Serializable.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonPrimitivesBooleans ()

- (instancetype)init;

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)target
                        withInt:(jint)start
                        withInt:(jint)end;

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)target
                            withInt:(jint)start
                            withInt:(jint)end;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesBooleans_init(ComGoogleCommonPrimitivesBooleans *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans *new_ComGoogleCommonPrimitivesBooleans_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans *create_ComGoogleCommonPrimitivesBooleans_init();

__attribute__((unused)) static jint ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(IOSBooleanArray *array, jboolean target, jint start, jint end);

__attribute__((unused)) static jint ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_withInt_withInt_(IOSBooleanArray *array, jboolean target, jint start, jint end);

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesBooleans_BooleanComparator_Enum) {
  ComGoogleCommonPrimitivesBooleans_BooleanComparator_Enum_TRUE_FIRST = 0,
  ComGoogleCommonPrimitivesBooleans_BooleanComparator_Enum_FALSE_FIRST = 1,
};

@interface ComGoogleCommonPrimitivesBooleans_BooleanComparator : JavaLangEnum < NSCopying, JavaUtilComparator > {
 @public
  jint trueValue_;
  NSString *toString_;
}

- (jint)compareWithId:(JavaLangBoolean *)a
               withId:(JavaLangBoolean *)b;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesBooleans_BooleanComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesBooleans_BooleanComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_values_[];

inline ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_get_TRUE_FIRST();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesBooleans_BooleanComparator, TRUE_FIRST)

inline ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_get_FALSE_FIRST();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesBooleans_BooleanComparator, FALSE_FIRST)

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesBooleans_BooleanComparator, toString_, NSString *)

__attribute__((unused)) static void ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(ComGoogleCommonPrimitivesBooleans_BooleanComparator *self, jint trueValue, NSString *toString, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanComparator *new_ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(jint trueValue, NSString *toString, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesBooleans_BooleanComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesBooleans_BooleanComparator)

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesBooleans_LexicographicalComparator : JavaLangEnum < NSCopying, JavaUtilComparator >

- (jint)compareWithId:(IOSBooleanArray *)left
               withId:(IOSBooleanArray *)right;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *new_ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator)

@interface ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSBooleanArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array;

- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array
                             withInt:(jint)start
                             withInt:(jint)end;

- (jint)size;

- (jboolean)isEmpty;

- (JavaLangBoolean *)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)target;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangBoolean *)setWithInt:(jint)index
                         withId:(JavaLangBoolean *)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSBooleanArray *)toBooleanArray;

- (JavaLangBoolean *)removeWithInt:(jint)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList)

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, array_, IOSBooleanArray *)

inline jlong ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_get_serialVersionUID();
#define ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *self, IOSBooleanArray *array);

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(IOSBooleanArray *array) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *create_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(IOSBooleanArray *array);

__attribute__((unused)) static void ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *self, IOSBooleanArray *array, jint start, jint end);

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint start, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *create_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList)

@implementation ComGoogleCommonPrimitivesBooleans

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesBooleans_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilComparator>)trueFirst {
  return ComGoogleCommonPrimitivesBooleans_trueFirst();
}

+ (id<JavaUtilComparator>)falseFirst {
  return ComGoogleCommonPrimitivesBooleans_falseFirst();
}

+ (jint)hashCodeWithBoolean:(jboolean)value {
  return ComGoogleCommonPrimitivesBooleans_hashCodeWithBoolean_(value);
}

+ (jint)compareWithBoolean:(jboolean)a
               withBoolean:(jboolean)b {
  return ComGoogleCommonPrimitivesBooleans_compareWithBoolean_withBoolean_(a, b);
}

+ (jboolean)containsWithBooleanArray:(IOSBooleanArray *)array
                         withBoolean:(jboolean)target {
  return ComGoogleCommonPrimitivesBooleans_containsWithBooleanArray_withBoolean_(array, target);
}

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)target {
  return ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_(array, target);
}

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)target
                        withInt:(jint)start
                        withInt:(jint)end {
  return ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(array, target, start, end);
}

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
               withBooleanArray:(IOSBooleanArray *)target {
  return ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBooleanArray_(array, target);
}

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)target {
  return ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_(array, target);
}

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)target
                            withInt:(jint)start
                            withInt:(jint)end {
  return ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_withInt_withInt_(array, target, start, end);
}

+ (IOSBooleanArray *)concatWithBooleanArray2:(IOSObjectArray *)arrays {
  return ComGoogleCommonPrimitivesBooleans_concatWithBooleanArray2_(arrays);
}

+ (IOSBooleanArray *)ensureCapacityWithBooleanArray:(IOSBooleanArray *)array
                                            withInt:(jint)minLength
                                            withInt:(jint)padding {
  return ComGoogleCommonPrimitivesBooleans_ensureCapacityWithBooleanArray_withInt_withInt_(array, minLength, padding);
}

+ (NSString *)joinWithNSString:(NSString *)separator
              withBooleanArray:(IOSBooleanArray *)array {
  return ComGoogleCommonPrimitivesBooleans_joinWithNSString_withBooleanArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesBooleans_lexicographicalComparator();
}

+ (IOSBooleanArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return ComGoogleCommonPrimitivesBooleans_toArrayWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilList>)asListWithBooleanArray:(IOSBooleanArray *)backingArray {
  return ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_(backingArray);
}

+ (jint)countTrueWithBooleanArray:(IOSBooleanArray *)values {
  return ComGoogleCommonPrimitivesBooleans_countTrueWithBooleanArray_(values);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "I", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 10, 8, -1, -1, -1, -1 },
    { NULL, "[Z", 0x89, 11, 12, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 15, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 17, -1, -1 },
    { NULL, "[Z", 0x9, 18, 19, -1, 20, -1, -1 },
    { NULL, "LJavaUtilList;", 0x89, 21, 22, -1, 23, -1, -1 },
    { NULL, "I", 0x89, 24, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(trueFirst);
  methods[2].selector = @selector(falseFirst);
  methods[3].selector = @selector(hashCodeWithBoolean:);
  methods[4].selector = @selector(compareWithBoolean:withBoolean:);
  methods[5].selector = @selector(containsWithBooleanArray:withBoolean:);
  methods[6].selector = @selector(indexOfWithBooleanArray:withBoolean:);
  methods[7].selector = @selector(indexOfWithBooleanArray:withBoolean:withInt:withInt:);
  methods[8].selector = @selector(indexOfWithBooleanArray:withBooleanArray:);
  methods[9].selector = @selector(lastIndexOfWithBooleanArray:withBoolean:);
  methods[10].selector = @selector(lastIndexOfWithBooleanArray:withBoolean:withInt:withInt:);
  methods[11].selector = @selector(concatWithBooleanArray2:);
  methods[12].selector = @selector(ensureCapacityWithBooleanArray:withInt:withInt:);
  methods[13].selector = @selector(joinWithNSString:withBooleanArray:);
  methods[14].selector = @selector(lexicographicalComparator);
  methods[15].selector = @selector(toArrayWithJavaUtilCollection:);
  methods[16].selector = @selector(asListWithBooleanArray:);
  methods[17].selector = @selector(countTrueWithBooleanArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Comparator<Ljava/lang/Boolean;>;", "hashCode", "Z", "compare", "ZZ", "contains", "[ZZ", "indexOf", "[ZZII", "[Z[Z", "lastIndexOf", "concat", "[[Z", "ensureCapacity", "[ZII", "join", "LNSString;[Z", "()Ljava/util/Comparator<[Z>;", "toArray", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/Boolean;>;)[Z", "asList", "[Z", "([Z)Ljava/util/List<Ljava/lang/Boolean;>;", "countTrue", "LComGoogleCommonPrimitivesBooleans_BooleanComparator;LComGoogleCommonPrimitivesBooleans_LexicographicalComparator;LComGoogleCommonPrimitivesBooleans_BooleanArrayAsList;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesBooleans = { "Booleans", "com.google.common.primitives", ptrTable, methods, NULL, 7, 0x11, 18, 0, -1, 25, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesBooleans;
}

@end

void ComGoogleCommonPrimitivesBooleans_init(ComGoogleCommonPrimitivesBooleans *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesBooleans *new_ComGoogleCommonPrimitivesBooleans_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesBooleans, init)
}

ComGoogleCommonPrimitivesBooleans *create_ComGoogleCommonPrimitivesBooleans_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesBooleans, init)
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesBooleans_trueFirst() {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, TRUE_FIRST);
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesBooleans_falseFirst() {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, FALSE_FIRST);
}

jint ComGoogleCommonPrimitivesBooleans_hashCodeWithBoolean_(jboolean value) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return value ? 1231 : 1237;
}

jint ComGoogleCommonPrimitivesBooleans_compareWithBoolean_withBoolean_(jboolean a, jboolean b) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return (a == b) ? 0 : (a ? 1 : -1);
}

jboolean ComGoogleCommonPrimitivesBooleans_containsWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean target) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  {
    IOSBooleanArray *a__ = array;
    jboolean const *b__ = ((IOSBooleanArray *) nil_chk(a__))->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean value = *b__++;
      if (value == target) {
        return true;
      }
    }
  }
  return false;
}

jint ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean target) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(array, target, 0, ((IOSBooleanArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(IOSBooleanArray *array, jboolean target, jint start, jint end) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  for (jint i = start; i < end; i++) {
    if (IOSBooleanArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jint ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBooleanArray_(IOSBooleanArray *array, IOSBooleanArray *target) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(array, @"array");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(target, @"target");
  if (((IOSBooleanArray *) nil_chk(target))->size_ == 0) {
    return 0;
  }
  for (jint i = 0; i < ((IOSBooleanArray *) nil_chk(array))->size_ - target->size_ + 1; i++) {
    {
      for (jint j = 0; j < target->size_; j++) {
        if (IOSBooleanArray_Get(array, i + j) != IOSBooleanArray_Get(target, j)) {
          goto continue_outer;
        }
      }
      return i;
    }
    continue_outer: ;
  }
  return -1;
}

jint ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean target) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_withInt_withInt_(array, target, 0, ((IOSBooleanArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_withInt_withInt_(IOSBooleanArray *array, jboolean target, jint start, jint end) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  for (jint i = end - 1; i >= start; i--) {
    if (IOSBooleanArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

IOSBooleanArray *ComGoogleCommonPrimitivesBooleans_concatWithBooleanArray2_(IOSObjectArray *arrays) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  jint length = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSBooleanArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSBooleanArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSBooleanArray *array = *b__++;
      length += ((IOSBooleanArray *) nil_chk(array))->size_;
    }
  }
  IOSBooleanArray *result = [IOSBooleanArray newArrayWithLength:length];
  jint pos = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSBooleanArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSBooleanArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSBooleanArray *array = *b__++;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, pos, ((IOSBooleanArray *) nil_chk(array))->size_);
      pos += array->size_;
    }
  }
  return result;
}

IOSBooleanArray *ComGoogleCommonPrimitivesBooleans_ensureCapacityWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint minLength, jint padding) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(minLength >= 0, @"Invalid minLength: %s", minLength);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(padding >= 0, @"Invalid padding: %s", padding);
  return (((IOSBooleanArray *) nil_chk(array))->size_ < minLength) ? JavaUtilArrays_copyOfWithBooleanArray_withInt_(array, minLength + padding) : array;
}

NSString *ComGoogleCommonPrimitivesBooleans_joinWithNSString_withBooleanArray_(NSString *separator, IOSBooleanArray *array) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSBooleanArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 7);
  (void) [builder appendWithBoolean:IOSBooleanArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithBoolean:IOSBooleanArray_Get(array, i)];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesBooleans_lexicographicalComparator() {
  ComGoogleCommonPrimitivesBooleans_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator, INSTANCE);
}

IOSBooleanArray *ComGoogleCommonPrimitivesBooleans_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  if ([collection isKindOfClass:[ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList class]]) {
    return [((ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *) nil_chk(((ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *) cast_chk(collection, [ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList class])))) toBooleanArray];
  }
  IOSObjectArray *boxedArray = [((id<JavaUtilCollection>) nil_chk(collection)) toArray];
  jint len = ((IOSObjectArray *) nil_chk(boxedArray))->size_;
  IOSBooleanArray *array = [IOSBooleanArray newArrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    *IOSBooleanArray_GetRef(array, i) = [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(IOSObjectArray_Get(boxedArray, i)), [JavaLangBoolean class]))) booleanValue];
  }
  return array;
}

id<JavaUtilList> ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_(IOSBooleanArray *backingArray) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  if (((IOSBooleanArray *) nil_chk(backingArray))->size_ == 0) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(backingArray);
}

jint ComGoogleCommonPrimitivesBooleans_countTrueWithBooleanArray_(IOSBooleanArray *values) {
  ComGoogleCommonPrimitivesBooleans_initialize();
  jint count = 0;
  {
    IOSBooleanArray *a__ = values;
    jboolean const *b__ = ((IOSBooleanArray *) nil_chk(a__))->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean value = *b__++;
      if (value) {
        count++;
      }
    }
  }
  return count;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesBooleans)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesBooleans_BooleanComparator)

ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_values_[2];

@implementation ComGoogleCommonPrimitivesBooleans_BooleanComparator

- (jint)compareWithId:(JavaLangBoolean *)a
               withId:(JavaLangBoolean *)b {
  jint aVal = [((JavaLangBoolean *) nil_chk(a)) booleanValue] ? trueValue_ : 0;
  jint bVal = [((JavaLangBoolean *) nil_chk(b)) booleanValue] ? trueValue_ : 0;
  return bVal - aVal;
}

- (NSString *)description {
  return toString_;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesBooleans_BooleanComparator_values();
}

+ (ComGoogleCommonPrimitivesBooleans_BooleanComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesBooleans_BooleanComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesBooleans_BooleanComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesBooleans_BooleanComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TRUE_FIRST", "LComGoogleCommonPrimitivesBooleans_BooleanComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "FALSE_FIRST", "LComGoogleCommonPrimitivesBooleans_BooleanComparator;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "trueValue_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "toString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "LJavaLangBoolean;LJavaLangBoolean;", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, TRUE_FIRST), &JreEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, FALSE_FIRST), "LComGoogleCommonPrimitivesBooleans;", "Ljava/lang/Enum<Lcom/google/common/primitives/Booleans$BooleanComparator;>;Ljava/util/Comparator<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesBooleans_BooleanComparator = { "BooleanComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 4, 7, -1, -1, 8, -1 };
  return &_ComGoogleCommonPrimitivesBooleans_BooleanComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesBooleans_BooleanComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, TRUE_FIRST) = new_ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(1, @"Booleans.trueFirst()", @"TRUE_FIRST", 0);
    JreEnum(ComGoogleCommonPrimitivesBooleans_BooleanComparator, FALSE_FIRST) = new_ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(-1, @"Booleans.falseFirst()", @"FALSE_FIRST", 1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesBooleans_BooleanComparator)
  }
}

@end

void ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(ComGoogleCommonPrimitivesBooleans_BooleanComparator *self, jint trueValue, NSString *toString, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->trueValue_ = trueValue;
  self->toString_ = toString;
}

ComGoogleCommonPrimitivesBooleans_BooleanComparator *new_ComGoogleCommonPrimitivesBooleans_BooleanComparator_initWithInt_withNSString_withNSString_withInt_(jint trueValue, NSString *toString, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesBooleans_BooleanComparator, initWithInt_withNSString_withNSString_withInt_, trueValue, toString, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesBooleans_BooleanComparator_values() {
  ComGoogleCommonPrimitivesBooleans_BooleanComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesBooleans_BooleanComparator_values_ count:2 type:ComGoogleCommonPrimitivesBooleans_BooleanComparator_class_()];
}

ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesBooleans_BooleanComparator_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonPrimitivesBooleans_BooleanComparator *e = ComGoogleCommonPrimitivesBooleans_BooleanComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesBooleans_BooleanComparator *ComGoogleCommonPrimitivesBooleans_BooleanComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesBooleans_BooleanComparator_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonPrimitivesBooleans_BooleanComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesBooleans_BooleanComparator)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator)

ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesBooleans_LexicographicalComparator

- (jint)compareWithId:(IOSBooleanArray *)left
               withId:(IOSBooleanArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSBooleanArray *) nil_chk(left))->size_, ((IOSBooleanArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    jint result = ComGoogleCommonPrimitivesBooleans_compareWithBoolean_withBoolean_(IOSBooleanArray_Get(left, i), IOSBooleanArray_Get(right, i));
    if (result != 0) {
      return result;
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"Booleans.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesBooleans_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesBooleans_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesBooleans_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[Z[Z", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesBooleans;", "Ljava/lang/Enum<Lcom/google/common/primitives/Booleans$LexicographicalComparator;>;Ljava/util/Comparator<[Z>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesBooleans_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesBooleans_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesBooleans_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *new_ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *e = ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesBooleans_LexicographicalComparator *ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesBooleans_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesBooleans_LexicographicalComparator)

@implementation ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList

- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array {
  ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(self, array);
  return self;
}

- (instancetype)initWithBooleanArray:(IOSBooleanArray *)array
                             withInt:(jint)start
                             withInt:(jint)end {
  ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jint)size {
  return end_ - start_;
}

- (jboolean)isEmpty {
  return false;
}

- (JavaLangBoolean *)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  return JavaLangBoolean_valueOfWithBoolean_(IOSBooleanArray_Get(nil_chk(array_), start_ + index));
}

- (jboolean)containsWithId:(id)target {
  return ([target isKindOfClass:[JavaLangBoolean class]]) && ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(array_, [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(target, [JavaLangBoolean class]))) booleanValue], start_, end_) != -1;
}

- (jint)indexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangBoolean class]]) {
    jint i = ComGoogleCommonPrimitivesBooleans_indexOfWithBooleanArray_withBoolean_withInt_withInt_(array_, [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(target, [JavaLangBoolean class]))) booleanValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (jint)lastIndexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangBoolean class]]) {
    jint i = ComGoogleCommonPrimitivesBooleans_lastIndexOfWithBooleanArray_withBoolean_withInt_withInt_(array_, [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(target, [JavaLangBoolean class]))) booleanValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (JavaLangBoolean *)setWithInt:(jint)index
                         withId:(JavaLangBoolean *)element {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  jboolean oldValue = IOSBooleanArray_Get(nil_chk(array_), start_ + index);
  *IOSBooleanArray_GetRef(array_, start_ + index) = [((JavaLangBoolean *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(element))) booleanValue];
  return JavaLangBoolean_valueOfWithBoolean_(oldValue);
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  jint size = [self size];
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(fromIndex, toIndex, size);
  if (fromIndex == toIndex) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(array_, start_ + fromIndex, start_ + toIndex);
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if ([object isKindOfClass:[ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList class]]) {
    ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *that = (ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *) cast_chk(object, [ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList class]);
    jint size = [self size];
    if ([((ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *) nil_chk(that)) size] != size) {
      return false;
    }
    for (jint i = 0; i < size; i++) {
      if (IOSBooleanArray_Get(nil_chk(array_), start_ + i) != IOSBooleanArray_Get(that->array_, that->start_ + i)) {
        return false;
      }
    }
    return true;
  }
  return [super isEqual:object];
}

- (NSUInteger)hash {
  jint result = 1;
  for (jint i = start_; i < end_; i++) {
    result = 31 * result + ComGoogleCommonPrimitivesBooleans_hashCodeWithBoolean_(IOSBooleanArray_Get(nil_chk(array_), i));
  }
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_([self size] * 7);
  (void) [builder appendWithNSString:IOSBooleanArray_Get(nil_chk(array_), start_) ? @"[true" : @"[false"];
  for (jint i = start_ + 1; i < end_; i++) {
    (void) [builder appendWithNSString:IOSBooleanArray_Get(array_, i) ? @", true" : @", false"];
  }
  return [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:']'])) description];
}

- (IOSBooleanArray *)toBooleanArray {
  return JavaUtilArrays_copyOfRangeWithBooleanArray_withInt_withInt_(array_, start_, end_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, 14 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "[Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBooleanArray:);
  methods[1].selector = @selector(initWithBooleanArray:withInt:withInt:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(containsWithId:);
  methods[6].selector = @selector(indexOfWithId:);
  methods[7].selector = @selector(lastIndexOfWithId:);
  methods[8].selector = @selector(setWithInt:withId:);
  methods[9].selector = @selector(subListWithInt:withInt:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(toBooleanArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[Z", "[ZII", "get", "I", "contains", "LNSObject;", "indexOf", "lastIndexOf", "set", "ILJavaLangBoolean;", "subList", "II", "(II)Ljava/util/List<Ljava/lang/Boolean;>;", "equals", (void *)&ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList__Annotations$0, "hashCode", "toString", "LComGoogleCommonPrimitivesBooleans;", "Ljava/util/AbstractList<Ljava/lang/Boolean;>;Ljava/util/RandomAccess;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList = { "BooleanArrayAsList", "com.google.common.primitives", ptrTable, methods, fields, 7, 0xa, 14, 4, 17, -1, -1, 18, -1 };
  return &_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList;
}

@end

void ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *self, IOSBooleanArray *array) {
  ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(self, array, 0, ((IOSBooleanArray *) nil_chk(array))->size_);
}

ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(IOSBooleanArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, initWithBooleanArray_, array)
}

ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *create_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_(IOSBooleanArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, initWithBooleanArray_, array)
}

void ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *self, IOSBooleanArray *array, jint start, jint end) {
  JavaUtilAbstractList_init(self);
  self->array_ = array;
  self->start_ = start;
  self->end_ = end;
}

ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *new_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, initWithBooleanArray_withInt_withInt_, array, start, end)
}

ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList *create_ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList_initWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList, initWithBooleanArray_withInt_withInt_, array, start, end)
}

IOSObjectArray *ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesBooleans_BooleanArrayAsList)
