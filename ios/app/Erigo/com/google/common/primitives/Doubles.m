//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/Doubles.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Converter.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Doubles.h"
#include "java/io/Serializable.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "javax/annotation/CheckForNull.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonPrimitivesDoubles ()

- (instancetype)init;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)target
                       withInt:(jint)start
                       withInt:(jint)end;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)target
                           withInt:(jint)start
                           withInt:(jint)end;

+ (JavaUtilRegexPattern *)fpPattern;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesDoubles_init(ComGoogleCommonPrimitivesDoubles *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles *new_ComGoogleCommonPrimitivesDoubles_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles *create_ComGoogleCommonPrimitivesDoubles_init();

__attribute__((unused)) static jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(IOSDoubleArray *array, jdouble target, jint start, jint end);

__attribute__((unused)) static jint ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_withInt_withInt_(IOSDoubleArray *array, jdouble target, jint start, jint end);

__attribute__((unused)) static JavaUtilRegexPattern *ComGoogleCommonPrimitivesDoubles_fpPattern();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesDoubles__Annotations$0();

@interface ComGoogleCommonPrimitivesDoubles_DoubleConverter : ComGoogleCommonBaseConverter < JavaIoSerializable >

- (instancetype)init;

- (JavaLangDouble *)doForwardWithId:(NSString *)value;

- (NSString *)doBackwardWithId:(JavaLangDouble *)value;

- (NSString *)description;

- (id)readResolve;

- (JavaLangDouble *)applyWithId:(NSString *)arg0;

- (JavaLangDouble *)correctedDoForwardWithId:(NSString *)arg0;

- (JavaLangDouble *)convertWithId:(NSString *)arg0;

- (NSString *)correctedDoBackwardWithId:(JavaLangDouble *)arg0;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesDoubles_DoubleConverter)

inline ComGoogleCommonPrimitivesDoubles_DoubleConverter *ComGoogleCommonPrimitivesDoubles_DoubleConverter_get_INSTANCE();
static ComGoogleCommonPrimitivesDoubles_DoubleConverter *ComGoogleCommonPrimitivesDoubles_DoubleConverter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesDoubles_DoubleConverter, INSTANCE, ComGoogleCommonPrimitivesDoubles_DoubleConverter *)

inline jlong ComGoogleCommonPrimitivesDoubles_DoubleConverter_get_serialVersionUID();
#define ComGoogleCommonPrimitivesDoubles_DoubleConverter_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesDoubles_DoubleConverter, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesDoubles_DoubleConverter_init(ComGoogleCommonPrimitivesDoubles_DoubleConverter *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleConverter *new_ComGoogleCommonPrimitivesDoubles_DoubleConverter_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleConverter *create_ComGoogleCommonPrimitivesDoubles_DoubleConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesDoubles_DoubleConverter)

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesDoubles_LexicographicalComparator : JavaLangEnum < NSCopying, JavaUtilComparator >

- (jint)compareWithId:(IOSDoubleArray *)left
               withId:(IOSDoubleArray *)right;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *new_ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator)

@interface ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSDoubleArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
                            withInt:(jint)start
                            withInt:(jint)end;

- (jint)size;

- (jboolean)isEmpty;

- (JavaLangDouble *)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)target;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangDouble *)setWithInt:(jint)index
                        withId:(JavaLangDouble *)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSDoubleArray *)toDoubleArray;

- (JavaLangDouble *)removeWithInt:(jint)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList)

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, array_, IOSDoubleArray *)

inline jlong ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_get_serialVersionUID();
#define ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *self, IOSDoubleArray *array);

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(IOSDoubleArray *array) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *create_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(IOSDoubleArray *array);

__attribute__((unused)) static void ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *self, IOSDoubleArray *array, jint start, jint end);

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *create_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesDoubles)

JavaUtilRegexPattern *ComGoogleCommonPrimitivesDoubles_FLOATING_POINT_PATTERN;

@implementation ComGoogleCommonPrimitivesDoubles

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesDoubles_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)hashCodeWithDouble:(jdouble)value {
  return ComGoogleCommonPrimitivesDoubles_hashCodeWithDouble_(value);
}

+ (jint)compareWithDouble:(jdouble)a
               withDouble:(jdouble)b {
  return ComGoogleCommonPrimitivesDoubles_compareWithDouble_withDouble_(a, b);
}

+ (jboolean)isFiniteWithDouble:(jdouble)value {
  return ComGoogleCommonPrimitivesDoubles_isFiniteWithDouble_(value);
}

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)target {
  return ComGoogleCommonPrimitivesDoubles_containsWithDoubleArray_withDouble_(array, target);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)target {
  return ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_(array, target);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)target
                       withInt:(jint)start
                       withInt:(jint)end {
  return ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(array, target, start, end);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
               withDoubleArray:(IOSDoubleArray *)target {
  return ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDoubleArray_(array, target);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)target {
  return ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_(array, target);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)target
                           withInt:(jint)start
                           withInt:(jint)end {
  return ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_withInt_withInt_(array, target, start, end);
}

+ (jdouble)minWithDoubleArray:(IOSDoubleArray *)array {
  return ComGoogleCommonPrimitivesDoubles_minWithDoubleArray_(array);
}

+ (jdouble)maxWithDoubleArray:(IOSDoubleArray *)array {
  return ComGoogleCommonPrimitivesDoubles_maxWithDoubleArray_(array);
}

+ (jdouble)constrainToRangeWithDouble:(jdouble)value
                           withDouble:(jdouble)min
                           withDouble:(jdouble)max {
  return ComGoogleCommonPrimitivesDoubles_constrainToRangeWithDouble_withDouble_withDouble_(value, min, max);
}

+ (IOSDoubleArray *)concatWithDoubleArray2:(IOSObjectArray *)arrays {
  return ComGoogleCommonPrimitivesDoubles_concatWithDoubleArray2_(arrays);
}

+ (ComGoogleCommonBaseConverter *)stringConverter {
  return ComGoogleCommonPrimitivesDoubles_stringConverter();
}

+ (IOSDoubleArray *)ensureCapacityWithDoubleArray:(IOSDoubleArray *)array
                                          withInt:(jint)minLength
                                          withInt:(jint)padding {
  return ComGoogleCommonPrimitivesDoubles_ensureCapacityWithDoubleArray_withInt_withInt_(array, minLength, padding);
}

+ (NSString *)joinWithNSString:(NSString *)separator
               withDoubleArray:(IOSDoubleArray *)array {
  return ComGoogleCommonPrimitivesDoubles_joinWithNSString_withDoubleArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesDoubles_lexicographicalComparator();
}

+ (IOSDoubleArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return ComGoogleCommonPrimitivesDoubles_toArrayWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilList>)asListWithDoubleArray:(IOSDoubleArray *)backingArray {
  return ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(backingArray);
}

+ (JavaUtilRegexPattern *)fpPattern {
  return ComGoogleCommonPrimitivesDoubles_fpPattern();
}

+ (JavaLangDouble *)tryParseWithNSString:(NSString *)string {
  return ComGoogleCommonPrimitivesDoubles_tryParseWithNSString_(string);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 10, 8, -1, -1, -1, -1 },
    { NULL, "D", 0x89, 11, 12, -1, -1, -1, -1 },
    { NULL, "D", 0x89, 13, 12, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "[D", 0x89, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseConverter;", 0x9, -1, -1, -1, 18, -1, -1 },
    { NULL, "[D", 0x9, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 21, 22, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 23, -1, -1 },
    { NULL, "[D", 0x9, 24, 25, -1, 26, -1, -1 },
    { NULL, "LJavaUtilList;", 0x89, 27, 12, -1, 28, -1, -1 },
    { NULL, "LJavaUtilRegexPattern;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x9, 29, 30, -1, -1, 31, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hashCodeWithDouble:);
  methods[2].selector = @selector(compareWithDouble:withDouble:);
  methods[3].selector = @selector(isFiniteWithDouble:);
  methods[4].selector = @selector(containsWithDoubleArray:withDouble:);
  methods[5].selector = @selector(indexOfWithDoubleArray:withDouble:);
  methods[6].selector = @selector(indexOfWithDoubleArray:withDouble:withInt:withInt:);
  methods[7].selector = @selector(indexOfWithDoubleArray:withDoubleArray:);
  methods[8].selector = @selector(lastIndexOfWithDoubleArray:withDouble:);
  methods[9].selector = @selector(lastIndexOfWithDoubleArray:withDouble:withInt:withInt:);
  methods[10].selector = @selector(minWithDoubleArray:);
  methods[11].selector = @selector(maxWithDoubleArray:);
  methods[12].selector = @selector(constrainToRangeWithDouble:withDouble:withDouble:);
  methods[13].selector = @selector(concatWithDoubleArray2:);
  methods[14].selector = @selector(stringConverter);
  methods[15].selector = @selector(ensureCapacityWithDoubleArray:withInt:withInt:);
  methods[16].selector = @selector(joinWithNSString:withDoubleArray:);
  methods[17].selector = @selector(lexicographicalComparator);
  methods[18].selector = @selector(toArrayWithJavaUtilCollection:);
  methods[19].selector = @selector(asListWithDoubleArray:);
  methods[20].selector = @selector(fpPattern);
  methods[21].selector = @selector(tryParseWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES", "I", .constantValue.asInt = ComGoogleCommonPrimitivesDoubles_BYTES, 0x19, -1, -1, -1, -1 },
    { "FLOATING_POINT_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
  };
  static const void *ptrTable[] = { "hashCode", "D", "compare", "DD", "isFinite", "contains", "[DD", "indexOf", "[DDII", "[D[D", "lastIndexOf", "min", "[D", "max", "constrainToRange", "DDD", "concat", "[[D", "()Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Double;>;", "ensureCapacity", "[DII", "join", "LNSString;[D", "()Ljava/util/Comparator<[D>;", "toArray", "LJavaUtilCollection;", "(Ljava/util/Collection<+Ljava/lang/Number;>;)[D", "asList", "([D)Ljava/util/List<Ljava/lang/Double;>;", "tryParse", "LNSString;", (void *)&ComGoogleCommonPrimitivesDoubles__Annotations$0, &ComGoogleCommonPrimitivesDoubles_FLOATING_POINT_PATTERN, "LComGoogleCommonPrimitivesDoubles_DoubleConverter;LComGoogleCommonPrimitivesDoubles_LexicographicalComparator;LComGoogleCommonPrimitivesDoubles_DoubleArrayAsList;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesDoubles = { "Doubles", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 22, 2, -1, 33, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesDoubles;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesDoubles class]) {
    ComGoogleCommonPrimitivesDoubles_FLOATING_POINT_PATTERN = ComGoogleCommonPrimitivesDoubles_fpPattern();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesDoubles)
  }
}

@end

void ComGoogleCommonPrimitivesDoubles_init(ComGoogleCommonPrimitivesDoubles *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesDoubles *new_ComGoogleCommonPrimitivesDoubles_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesDoubles, init)
}

ComGoogleCommonPrimitivesDoubles *create_ComGoogleCommonPrimitivesDoubles_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesDoubles, init)
}

jint ComGoogleCommonPrimitivesDoubles_hashCodeWithDouble_(jdouble value) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return ((jint) [JavaLangDouble_valueOfWithDouble_(value) hash]);
}

jint ComGoogleCommonPrimitivesDoubles_compareWithDouble_withDouble_(jdouble a, jdouble b) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return JavaLangDouble_compareWithDouble_withDouble_(a, b);
}

jboolean ComGoogleCommonPrimitivesDoubles_isFiniteWithDouble_(jdouble value) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return JavaLangDouble_NEGATIVE_INFINITY < value && value < JavaLangDouble_POSITIVE_INFINITY;
}

jboolean ComGoogleCommonPrimitivesDoubles_containsWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  {
    IOSDoubleArray *a__ = array;
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble value = *b__++;
      if (value == target) {
        return true;
      }
    }
  }
  return false;
}

jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(array, target, 0, ((IOSDoubleArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(IOSDoubleArray *array, jdouble target, jint start, jint end) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  for (jint i = start; i < end; i++) {
    if (IOSDoubleArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jint ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDoubleArray_(IOSDoubleArray *array, IOSDoubleArray *target) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(array, @"array");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(target, @"target");
  if (((IOSDoubleArray *) nil_chk(target))->size_ == 0) {
    return 0;
  }
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(array))->size_ - target->size_ + 1; i++) {
    {
      for (jint j = 0; j < target->size_; j++) {
        if (IOSDoubleArray_Get(array, i + j) != IOSDoubleArray_Get(target, j)) {
          goto continue_outer;
        }
      }
      return i;
    }
    continue_outer: ;
  }
  return -1;
}

jint ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble target) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_withInt_withInt_(array, target, 0, ((IOSDoubleArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_withInt_withInt_(IOSDoubleArray *array, jdouble target, jint start, jint end) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  for (jint i = end - 1; i >= start; i--) {
    if (IOSDoubleArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jdouble ComGoogleCommonPrimitivesDoubles_minWithDoubleArray_(IOSDoubleArray *array) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSDoubleArray *) nil_chk(array))->size_ > 0);
  jdouble min = IOSDoubleArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    min = JavaLangMath_minWithDouble_withDouble_(min, IOSDoubleArray_Get(array, i));
  }
  return min;
}

jdouble ComGoogleCommonPrimitivesDoubles_maxWithDoubleArray_(IOSDoubleArray *array) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSDoubleArray *) nil_chk(array))->size_ > 0);
  jdouble max = IOSDoubleArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    max = JavaLangMath_maxWithDouble_withDouble_(max, IOSDoubleArray_Get(array, i));
  }
  return max;
}

jdouble ComGoogleCommonPrimitivesDoubles_constrainToRangeWithDouble_withDouble_withDouble_(jdouble value, jdouble min, jdouble max) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(min <= max, @"min (%s) must be less than or equal to max (%s)", JavaLangDouble_valueOfWithDouble_(min), JavaLangDouble_valueOfWithDouble_(max));
  return JavaLangMath_minWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(value, min), max);
}

IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_concatWithDoubleArray2_(IOSObjectArray *arrays) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  jint length = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSDoubleArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSDoubleArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSDoubleArray *array = *b__++;
      length += ((IOSDoubleArray *) nil_chk(array))->size_;
    }
  }
  IOSDoubleArray *result = [IOSDoubleArray newArrayWithLength:length];
  jint pos = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSDoubleArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSDoubleArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSDoubleArray *array = *b__++;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, pos, ((IOSDoubleArray *) nil_chk(array))->size_);
      pos += array->size_;
    }
  }
  return result;
}

ComGoogleCommonBaseConverter *ComGoogleCommonPrimitivesDoubles_stringConverter() {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return JreLoadStatic(ComGoogleCommonPrimitivesDoubles_DoubleConverter, INSTANCE);
}

IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_ensureCapacityWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint minLength, jint padding) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(minLength >= 0, @"Invalid minLength: %s", minLength);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(padding >= 0, @"Invalid padding: %s", padding);
  return (((IOSDoubleArray *) nil_chk(array))->size_ < minLength) ? JavaUtilArrays_copyOfWithDoubleArray_withInt_(array, minLength + padding) : array;
}

NSString *ComGoogleCommonPrimitivesDoubles_joinWithNSString_withDoubleArray_(NSString *separator, IOSDoubleArray *array) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSDoubleArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 12);
  (void) [builder appendWithDouble:IOSDoubleArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithDouble:IOSDoubleArray_Get(array, i)];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesDoubles_lexicographicalComparator() {
  ComGoogleCommonPrimitivesDoubles_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator, INSTANCE);
}

IOSDoubleArray *ComGoogleCommonPrimitivesDoubles_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  if ([collection isKindOfClass:[ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList class]]) {
    return [((ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *) nil_chk(((ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *) cast_chk(collection, [ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList class])))) toDoubleArray];
  }
  IOSObjectArray *boxedArray = [((id<JavaUtilCollection>) nil_chk(collection)) toArray];
  jint len = ((IOSObjectArray *) nil_chk(boxedArray))->size_;
  IOSDoubleArray *array = [IOSDoubleArray newArrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    *IOSDoubleArray_GetRef(array, i) = [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(IOSObjectArray_Get(boxedArray, i)), [NSNumber class])))) doubleValue];
  }
  return array;
}

id<JavaUtilList> ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_(IOSDoubleArray *backingArray) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  if (((IOSDoubleArray *) nil_chk(backingArray))->size_ == 0) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(backingArray);
}

JavaUtilRegexPattern *ComGoogleCommonPrimitivesDoubles_fpPattern() {
  ComGoogleCommonPrimitivesDoubles_initialize();
  NSString *decimal = @"(?:\\d++(?:\\.\\d*+)?|\\.\\d++)";
  NSString *completeDec = JreStrcat("$$", decimal, @"(?:[eE][+-]?\\d++)?[fFdD]?");
  NSString *hex = @"(?:\\p{XDigit}++(?:\\.\\p{XDigit}*+)?|\\.\\p{XDigit}++)";
  NSString *completeHex = JreStrcat("$$$", @"0[xX]", hex, @"[pP][+-]?\\d++[fFdD]?");
  NSString *fpPattern = JreStrcat("$$C$C", @"[+-]?(?:NaN|Infinity|", completeDec, '|', completeHex, ')');
  return JavaUtilRegexPattern_compileWithNSString_(fpPattern);
}

JavaLangDouble *ComGoogleCommonPrimitivesDoubles_tryParseWithNSString_(NSString *string) {
  ComGoogleCommonPrimitivesDoubles_initialize();
  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleCommonPrimitivesDoubles_FLOATING_POINT_PATTERN)) matcherWithJavaLangCharSequence:string])) matches]) {
    @try {
      return JavaLangDouble_valueOfWithDouble_(JavaLangDouble_parseDoubleWithNSString_(string));
    }
    @catch (JavaLangNumberFormatException *e) {
    }
  }
  return nil;
}

IOSObjectArray *ComGoogleCommonPrimitivesDoubles__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable(), create_JavaxAnnotationCheckForNull() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesDoubles)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesDoubles_DoubleConverter)

@implementation ComGoogleCommonPrimitivesDoubles_DoubleConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesDoubles_DoubleConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangDouble *)doForwardWithId:(NSString *)value {
  return JavaLangDouble_valueOfWithNSString_(value);
}

- (NSString *)doBackwardWithId:(JavaLangDouble *)value {
  return [((JavaLangDouble *) nil_chk(value)) description];
}

- (NSString *)description {
  return @"Doubles.stringConverter()";
}

- (id)readResolve {
  return ComGoogleCommonPrimitivesDoubles_DoubleConverter_INSTANCE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(doForwardWithId:);
  methods[2].selector = @selector(doBackwardWithId:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesDoubles_DoubleConverter;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesDoubles_DoubleConverter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "doForward", "LNSString;", "doBackward", "LJavaLangDouble;", "toString", &ComGoogleCommonPrimitivesDoubles_DoubleConverter_INSTANCE, "LComGoogleCommonPrimitivesDoubles;", "Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Double;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesDoubles_DoubleConverter = { "DoubleConverter", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x1a, 5, 2, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesDoubles_DoubleConverter;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesDoubles_DoubleConverter class]) {
    ComGoogleCommonPrimitivesDoubles_DoubleConverter_INSTANCE = new_ComGoogleCommonPrimitivesDoubles_DoubleConverter_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesDoubles_DoubleConverter)
  }
}

@end

void ComGoogleCommonPrimitivesDoubles_DoubleConverter_init(ComGoogleCommonPrimitivesDoubles_DoubleConverter *self) {
  ComGoogleCommonBaseConverter_init(self);
}

ComGoogleCommonPrimitivesDoubles_DoubleConverter *new_ComGoogleCommonPrimitivesDoubles_DoubleConverter_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleConverter, init)
}

ComGoogleCommonPrimitivesDoubles_DoubleConverter *create_ComGoogleCommonPrimitivesDoubles_DoubleConverter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesDoubles_DoubleConverter)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator)

ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesDoubles_LexicographicalComparator

- (jint)compareWithId:(IOSDoubleArray *)left
               withId:(IOSDoubleArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSDoubleArray *) nil_chk(left))->size_, ((IOSDoubleArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    jint result = JavaLangDouble_compareWithDouble_withDouble_(IOSDoubleArray_Get(left, i), IOSDoubleArray_Get(right, i));
    if (result != 0) {
      return result;
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"Doubles.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesDoubles_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesDoubles_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesDoubles_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[D[D", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesDoubles;", "Ljava/lang/Enum<Lcom/google/common/primitives/Doubles$LexicographicalComparator;>;Ljava/util/Comparator<[D>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesDoubles_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesDoubles_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesDoubles_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *new_ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *e = ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesDoubles_LexicographicalComparator *ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesDoubles_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesDoubles_LexicographicalComparator)

@implementation ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array {
  ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(self, array);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
                            withInt:(jint)start
                            withInt:(jint)end {
  ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jint)size {
  return end_ - start_;
}

- (jboolean)isEmpty {
  return false;
}

- (JavaLangDouble *)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  return JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(nil_chk(array_), start_ + index));
}

- (jboolean)containsWithId:(id)target {
  return ([target isKindOfClass:[JavaLangDouble class]]) && ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(array_, [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(target, [JavaLangDouble class]))) doubleValue], start_, end_) != -1;
}

- (jint)indexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangDouble class]]) {
    jint i = ComGoogleCommonPrimitivesDoubles_indexOfWithDoubleArray_withDouble_withInt_withInt_(array_, [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(target, [JavaLangDouble class]))) doubleValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (jint)lastIndexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangDouble class]]) {
    jint i = ComGoogleCommonPrimitivesDoubles_lastIndexOfWithDoubleArray_withDouble_withInt_withInt_(array_, [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(target, [JavaLangDouble class]))) doubleValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (JavaLangDouble *)setWithInt:(jint)index
                        withId:(JavaLangDouble *)element {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  jdouble oldValue = IOSDoubleArray_Get(nil_chk(array_), start_ + index);
  *IOSDoubleArray_GetRef(array_, start_ + index) = [((JavaLangDouble *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(element))) doubleValue];
  return JavaLangDouble_valueOfWithDouble_(oldValue);
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  jint size = [self size];
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(fromIndex, toIndex, size);
  if (fromIndex == toIndex) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(array_, start_ + fromIndex, start_ + toIndex);
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if ([object isKindOfClass:[ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList class]]) {
    ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *that = (ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *) cast_chk(object, [ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList class]);
    jint size = [self size];
    if ([((ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *) nil_chk(that)) size] != size) {
      return false;
    }
    for (jint i = 0; i < size; i++) {
      if (IOSDoubleArray_Get(nil_chk(array_), start_ + i) != IOSDoubleArray_Get(that->array_, that->start_ + i)) {
        return false;
      }
    }
    return true;
  }
  return [super isEqual:object];
}

- (NSUInteger)hash {
  jint result = 1;
  for (jint i = start_; i < end_; i++) {
    result = 31 * result + ComGoogleCommonPrimitivesDoubles_hashCodeWithDouble_(IOSDoubleArray_Get(nil_chk(array_), i));
  }
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_([self size] * 12);
  (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'['])) appendWithDouble:IOSDoubleArray_Get(nil_chk(array_), start_)];
  for (jint i = start_ + 1; i < end_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@", "])) appendWithDouble:IOSDoubleArray_Get(array_, i)];
  }
  return [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:']'])) description];
}

- (IOSDoubleArray *)toDoubleArray {
  return JavaUtilArrays_copyOfRangeWithDoubleArray_withInt_withInt_(array_, start_, end_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, 14 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "[D", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDoubleArray:);
  methods[1].selector = @selector(initWithDoubleArray:withInt:withInt:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(containsWithId:);
  methods[6].selector = @selector(indexOfWithId:);
  methods[7].selector = @selector(lastIndexOfWithId:);
  methods[8].selector = @selector(setWithInt:withId:);
  methods[9].selector = @selector(subListWithInt:withInt:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(toDoubleArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[D", "[DII", "get", "I", "contains", "LNSObject;", "indexOf", "lastIndexOf", "set", "ILJavaLangDouble;", "subList", "II", "(II)Ljava/util/List<Ljava/lang/Double;>;", "equals", (void *)&ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList__Annotations$0, "hashCode", "toString", "LComGoogleCommonPrimitivesDoubles;", "Ljava/util/AbstractList<Ljava/lang/Double;>;Ljava/util/RandomAccess;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList = { "DoubleArrayAsList", "com.google.common.primitives", ptrTable, methods, fields, 7, 0xa, 14, 4, 17, -1, -1, 18, -1 };
  return &_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList;
}

@end

void ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *self, IOSDoubleArray *array) {
  ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(self, array, 0, ((IOSDoubleArray *) nil_chk(array))->size_);
}

ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(IOSDoubleArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, initWithDoubleArray_, array)
}

ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *create_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_(IOSDoubleArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, initWithDoubleArray_, array)
}

void ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *self, IOSDoubleArray *array, jint start, jint end) {
  JavaUtilAbstractList_init(self);
  self->array_ = array;
  self->start_ = start;
  self->end_ = end;
}

ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *new_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, initWithDoubleArray_withInt_withInt_, array, start, end)
}

ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList *create_ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList, initWithDoubleArray_withInt_withInt_, array, start, end)
}

IOSObjectArray *ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesDoubles_DoubleArrayAsList)
