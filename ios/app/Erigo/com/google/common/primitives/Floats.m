//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/Floats.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Converter.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Doubles.h"
#include "com/google/common/primitives/Floats.h"
#include "java/io/Serializable.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "javax/annotation/CheckForNull.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonPrimitivesFloats ()

- (instancetype)init;

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)target
                      withInt:(jint)start
                      withInt:(jint)end;

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)target
                          withInt:(jint)start
                          withInt:(jint)end;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesFloats_init(ComGoogleCommonPrimitivesFloats *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats *new_ComGoogleCommonPrimitivesFloats_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats *create_ComGoogleCommonPrimitivesFloats_init();

__attribute__((unused)) static jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(IOSFloatArray *array, jfloat target, jint start, jint end);

__attribute__((unused)) static jint ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_withInt_withInt_(IOSFloatArray *array, jfloat target, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesFloats__Annotations$0();

@interface ComGoogleCommonPrimitivesFloats_FloatConverter : ComGoogleCommonBaseConverter < JavaIoSerializable >

- (instancetype)init;

- (JavaLangFloat *)doForwardWithId:(NSString *)value;

- (NSString *)doBackwardWithId:(JavaLangFloat *)value;

- (NSString *)description;

- (id)readResolve;

- (JavaLangFloat *)applyWithId:(NSString *)arg0;

- (JavaLangFloat *)correctedDoForwardWithId:(NSString *)arg0;

- (JavaLangFloat *)convertWithId:(NSString *)arg0;

- (NSString *)correctedDoBackwardWithId:(JavaLangFloat *)arg0;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesFloats_FloatConverter)

inline ComGoogleCommonPrimitivesFloats_FloatConverter *ComGoogleCommonPrimitivesFloats_FloatConverter_get_INSTANCE();
static ComGoogleCommonPrimitivesFloats_FloatConverter *ComGoogleCommonPrimitivesFloats_FloatConverter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesFloats_FloatConverter, INSTANCE, ComGoogleCommonPrimitivesFloats_FloatConverter *)

inline jlong ComGoogleCommonPrimitivesFloats_FloatConverter_get_serialVersionUID();
#define ComGoogleCommonPrimitivesFloats_FloatConverter_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesFloats_FloatConverter, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesFloats_FloatConverter_init(ComGoogleCommonPrimitivesFloats_FloatConverter *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatConverter *new_ComGoogleCommonPrimitivesFloats_FloatConverter_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatConverter *create_ComGoogleCommonPrimitivesFloats_FloatConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesFloats_FloatConverter)

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesFloats_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesFloats_LexicographicalComparator_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesFloats_LexicographicalComparator : JavaLangEnum < NSCopying, JavaUtilComparator >

- (jint)compareWithId:(IOSFloatArray *)left
               withId:(IOSFloatArray *)right;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesFloats_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesFloats_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesFloats_LexicographicalComparator, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesFloats_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_LexicographicalComparator *new_ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesFloats_LexicographicalComparator)

@interface ComGoogleCommonPrimitivesFloats_FloatArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSFloatArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)array;

- (instancetype)initWithFloatArray:(IOSFloatArray *)array
                           withInt:(jint)start
                           withInt:(jint)end;

- (jint)size;

- (jboolean)isEmpty;

- (JavaLangFloat *)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)target;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangFloat *)setWithInt:(jint)index
                       withId:(JavaLangFloat *)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSFloatArray *)toFloatArray;

- (JavaLangFloat *)removeWithInt:(jint)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesFloats_FloatArrayAsList)

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, array_, IOSFloatArray *)

inline jlong ComGoogleCommonPrimitivesFloats_FloatArrayAsList_get_serialVersionUID();
#define ComGoogleCommonPrimitivesFloats_FloatArrayAsList_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(ComGoogleCommonPrimitivesFloats_FloatArrayAsList *self, IOSFloatArray *array);

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatArrayAsList *new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(IOSFloatArray *array) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatArrayAsList *create_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(IOSFloatArray *array);

__attribute__((unused)) static void ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(ComGoogleCommonPrimitivesFloats_FloatArrayAsList *self, IOSFloatArray *array, jint start, jint end);

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatArrayAsList *new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesFloats_FloatArrayAsList *create_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesFloats_FloatArrayAsList__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesFloats_FloatArrayAsList)

@implementation ComGoogleCommonPrimitivesFloats

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesFloats_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)hashCodeWithFloat:(jfloat)value {
  return ComGoogleCommonPrimitivesFloats_hashCodeWithFloat_(value);
}

+ (jint)compareWithFloat:(jfloat)a
               withFloat:(jfloat)b {
  return ComGoogleCommonPrimitivesFloats_compareWithFloat_withFloat_(a, b);
}

+ (jboolean)isFiniteWithFloat:(jfloat)value {
  return ComGoogleCommonPrimitivesFloats_isFiniteWithFloat_(value);
}

+ (jboolean)containsWithFloatArray:(IOSFloatArray *)array
                         withFloat:(jfloat)target {
  return ComGoogleCommonPrimitivesFloats_containsWithFloatArray_withFloat_(array, target);
}

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)target {
  return ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_(array, target);
}

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)target
                      withInt:(jint)start
                      withInt:(jint)end {
  return ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(array, target, start, end);
}

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
               withFloatArray:(IOSFloatArray *)target {
  return ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloatArray_(array, target);
}

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)target {
  return ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_(array, target);
}

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)target
                          withInt:(jint)start
                          withInt:(jint)end {
  return ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_withInt_withInt_(array, target, start, end);
}

+ (jfloat)minWithFloatArray:(IOSFloatArray *)array {
  return ComGoogleCommonPrimitivesFloats_minWithFloatArray_(array);
}

+ (jfloat)maxWithFloatArray:(IOSFloatArray *)array {
  return ComGoogleCommonPrimitivesFloats_maxWithFloatArray_(array);
}

+ (jfloat)constrainToRangeWithFloat:(jfloat)value
                          withFloat:(jfloat)min
                          withFloat:(jfloat)max {
  return ComGoogleCommonPrimitivesFloats_constrainToRangeWithFloat_withFloat_withFloat_(value, min, max);
}

+ (IOSFloatArray *)concatWithFloatArray2:(IOSObjectArray *)arrays {
  return ComGoogleCommonPrimitivesFloats_concatWithFloatArray2_(arrays);
}

+ (ComGoogleCommonBaseConverter *)stringConverter {
  return ComGoogleCommonPrimitivesFloats_stringConverter();
}

+ (IOSFloatArray *)ensureCapacityWithFloatArray:(IOSFloatArray *)array
                                        withInt:(jint)minLength
                                        withInt:(jint)padding {
  return ComGoogleCommonPrimitivesFloats_ensureCapacityWithFloatArray_withInt_withInt_(array, minLength, padding);
}

+ (NSString *)joinWithNSString:(NSString *)separator
                withFloatArray:(IOSFloatArray *)array {
  return ComGoogleCommonPrimitivesFloats_joinWithNSString_withFloatArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesFloats_lexicographicalComparator();
}

+ (IOSFloatArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return ComGoogleCommonPrimitivesFloats_toArrayWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilList>)asListWithFloatArray:(IOSFloatArray *)backingArray {
  return ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(backingArray);
}

+ (JavaLangFloat *)tryParseWithNSString:(NSString *)string {
  return ComGoogleCommonPrimitivesFloats_tryParseWithNSString_(string);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 6, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 10, 8, -1, -1, -1, -1 },
    { NULL, "F", 0x89, 11, 12, -1, -1, -1, -1 },
    { NULL, "F", 0x89, 13, 12, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "[F", 0x89, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseConverter;", 0x9, -1, -1, -1, 18, -1, -1 },
    { NULL, "[F", 0x9, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 21, 22, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 23, -1, -1 },
    { NULL, "[F", 0x9, 24, 25, -1, 26, -1, -1 },
    { NULL, "LJavaUtilList;", 0x89, 27, 12, -1, 28, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x9, 29, 30, -1, -1, 31, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hashCodeWithFloat:);
  methods[2].selector = @selector(compareWithFloat:withFloat:);
  methods[3].selector = @selector(isFiniteWithFloat:);
  methods[4].selector = @selector(containsWithFloatArray:withFloat:);
  methods[5].selector = @selector(indexOfWithFloatArray:withFloat:);
  methods[6].selector = @selector(indexOfWithFloatArray:withFloat:withInt:withInt:);
  methods[7].selector = @selector(indexOfWithFloatArray:withFloatArray:);
  methods[8].selector = @selector(lastIndexOfWithFloatArray:withFloat:);
  methods[9].selector = @selector(lastIndexOfWithFloatArray:withFloat:withInt:withInt:);
  methods[10].selector = @selector(minWithFloatArray:);
  methods[11].selector = @selector(maxWithFloatArray:);
  methods[12].selector = @selector(constrainToRangeWithFloat:withFloat:withFloat:);
  methods[13].selector = @selector(concatWithFloatArray2:);
  methods[14].selector = @selector(stringConverter);
  methods[15].selector = @selector(ensureCapacityWithFloatArray:withInt:withInt:);
  methods[16].selector = @selector(joinWithNSString:withFloatArray:);
  methods[17].selector = @selector(lexicographicalComparator);
  methods[18].selector = @selector(toArrayWithJavaUtilCollection:);
  methods[19].selector = @selector(asListWithFloatArray:);
  methods[20].selector = @selector(tryParseWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES", "I", .constantValue.asInt = ComGoogleCommonPrimitivesFloats_BYTES, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "hashCode", "F", "compare", "FF", "isFinite", "contains", "[FF", "indexOf", "[FFII", "[F[F", "lastIndexOf", "min", "[F", "max", "constrainToRange", "FFF", "concat", "[[F", "()Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Float;>;", "ensureCapacity", "[FII", "join", "LNSString;[F", "()Ljava/util/Comparator<[F>;", "toArray", "LJavaUtilCollection;", "(Ljava/util/Collection<+Ljava/lang/Number;>;)[F", "asList", "([F)Ljava/util/List<Ljava/lang/Float;>;", "tryParse", "LNSString;", (void *)&ComGoogleCommonPrimitivesFloats__Annotations$0, "LComGoogleCommonPrimitivesFloats_FloatConverter;LComGoogleCommonPrimitivesFloats_LexicographicalComparator;LComGoogleCommonPrimitivesFloats_FloatArrayAsList;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesFloats = { "Floats", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 21, 1, -1, 32, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesFloats;
}

@end

void ComGoogleCommonPrimitivesFloats_init(ComGoogleCommonPrimitivesFloats *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesFloats *new_ComGoogleCommonPrimitivesFloats_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesFloats, init)
}

ComGoogleCommonPrimitivesFloats *create_ComGoogleCommonPrimitivesFloats_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesFloats, init)
}

jint ComGoogleCommonPrimitivesFloats_hashCodeWithFloat_(jfloat value) {
  ComGoogleCommonPrimitivesFloats_initialize();
  return ((jint) [JavaLangFloat_valueOfWithFloat_(value) hash]);
}

jint ComGoogleCommonPrimitivesFloats_compareWithFloat_withFloat_(jfloat a, jfloat b) {
  ComGoogleCommonPrimitivesFloats_initialize();
  return JavaLangFloat_compareWithFloat_withFloat_(a, b);
}

jboolean ComGoogleCommonPrimitivesFloats_isFiniteWithFloat_(jfloat value) {
  ComGoogleCommonPrimitivesFloats_initialize();
  return JavaLangFloat_NEGATIVE_INFINITY < value && value < JavaLangFloat_POSITIVE_INFINITY;
}

jboolean ComGoogleCommonPrimitivesFloats_containsWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target) {
  ComGoogleCommonPrimitivesFloats_initialize();
  {
    IOSFloatArray *a__ = array;
    jfloat const *b__ = ((IOSFloatArray *) nil_chk(a__))->buffer_;
    jfloat const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jfloat value = *b__++;
      if (value == target) {
        return true;
      }
    }
  }
  return false;
}

jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target) {
  ComGoogleCommonPrimitivesFloats_initialize();
  return ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(array, target, 0, ((IOSFloatArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(IOSFloatArray *array, jfloat target, jint start, jint end) {
  ComGoogleCommonPrimitivesFloats_initialize();
  for (jint i = start; i < end; i++) {
    if (IOSFloatArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloatArray_(IOSFloatArray *array, IOSFloatArray *target) {
  ComGoogleCommonPrimitivesFloats_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(array, @"array");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(target, @"target");
  if (((IOSFloatArray *) nil_chk(target))->size_ == 0) {
    return 0;
  }
  for (jint i = 0; i < ((IOSFloatArray *) nil_chk(array))->size_ - target->size_ + 1; i++) {
    {
      for (jint j = 0; j < target->size_; j++) {
        if (IOSFloatArray_Get(array, i + j) != IOSFloatArray_Get(target, j)) {
          goto continue_outer;
        }
      }
      return i;
    }
    continue_outer: ;
  }
  return -1;
}

jint ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target) {
  ComGoogleCommonPrimitivesFloats_initialize();
  return ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_withInt_withInt_(array, target, 0, ((IOSFloatArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_withInt_withInt_(IOSFloatArray *array, jfloat target, jint start, jint end) {
  ComGoogleCommonPrimitivesFloats_initialize();
  for (jint i = end - 1; i >= start; i--) {
    if (IOSFloatArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jfloat ComGoogleCommonPrimitivesFloats_minWithFloatArray_(IOSFloatArray *array) {
  ComGoogleCommonPrimitivesFloats_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSFloatArray *) nil_chk(array))->size_ > 0);
  jfloat min = IOSFloatArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    min = JavaLangMath_minWithFloat_withFloat_(min, IOSFloatArray_Get(array, i));
  }
  return min;
}

jfloat ComGoogleCommonPrimitivesFloats_maxWithFloatArray_(IOSFloatArray *array) {
  ComGoogleCommonPrimitivesFloats_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSFloatArray *) nil_chk(array))->size_ > 0);
  jfloat max = IOSFloatArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    max = JavaLangMath_maxWithFloat_withFloat_(max, IOSFloatArray_Get(array, i));
  }
  return max;
}

jfloat ComGoogleCommonPrimitivesFloats_constrainToRangeWithFloat_withFloat_withFloat_(jfloat value, jfloat min, jfloat max) {
  ComGoogleCommonPrimitivesFloats_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(min <= max, @"min (%s) must be less than or equal to max (%s)", JavaLangFloat_valueOfWithFloat_(min), JavaLangFloat_valueOfWithFloat_(max));
  return JavaLangMath_minWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(value, min), max);
}

IOSFloatArray *ComGoogleCommonPrimitivesFloats_concatWithFloatArray2_(IOSObjectArray *arrays) {
  ComGoogleCommonPrimitivesFloats_initialize();
  jint length = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSFloatArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSFloatArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSFloatArray *array = *b__++;
      length += ((IOSFloatArray *) nil_chk(array))->size_;
    }
  }
  IOSFloatArray *result = [IOSFloatArray newArrayWithLength:length];
  jint pos = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSFloatArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSFloatArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSFloatArray *array = *b__++;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, pos, ((IOSFloatArray *) nil_chk(array))->size_);
      pos += array->size_;
    }
  }
  return result;
}

ComGoogleCommonBaseConverter *ComGoogleCommonPrimitivesFloats_stringConverter() {
  ComGoogleCommonPrimitivesFloats_initialize();
  return JreLoadStatic(ComGoogleCommonPrimitivesFloats_FloatConverter, INSTANCE);
}

IOSFloatArray *ComGoogleCommonPrimitivesFloats_ensureCapacityWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint minLength, jint padding) {
  ComGoogleCommonPrimitivesFloats_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(minLength >= 0, @"Invalid minLength: %s", minLength);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(padding >= 0, @"Invalid padding: %s", padding);
  return (((IOSFloatArray *) nil_chk(array))->size_ < minLength) ? JavaUtilArrays_copyOfWithFloatArray_withInt_(array, minLength + padding) : array;
}

NSString *ComGoogleCommonPrimitivesFloats_joinWithNSString_withFloatArray_(NSString *separator, IOSFloatArray *array) {
  ComGoogleCommonPrimitivesFloats_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSFloatArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 12);
  (void) [builder appendWithFloat:IOSFloatArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithFloat:IOSFloatArray_Get(array, i)];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesFloats_lexicographicalComparator() {
  ComGoogleCommonPrimitivesFloats_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesFloats_LexicographicalComparator, INSTANCE);
}

IOSFloatArray *ComGoogleCommonPrimitivesFloats_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  ComGoogleCommonPrimitivesFloats_initialize();
  if ([collection isKindOfClass:[ComGoogleCommonPrimitivesFloats_FloatArrayAsList class]]) {
    return [((ComGoogleCommonPrimitivesFloats_FloatArrayAsList *) nil_chk(((ComGoogleCommonPrimitivesFloats_FloatArrayAsList *) cast_chk(collection, [ComGoogleCommonPrimitivesFloats_FloatArrayAsList class])))) toFloatArray];
  }
  IOSObjectArray *boxedArray = [((id<JavaUtilCollection>) nil_chk(collection)) toArray];
  jint len = ((IOSObjectArray *) nil_chk(boxedArray))->size_;
  IOSFloatArray *array = [IOSFloatArray newArrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    *IOSFloatArray_GetRef(array, i) = [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(IOSObjectArray_Get(boxedArray, i)), [NSNumber class])))) floatValue];
  }
  return array;
}

id<JavaUtilList> ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(IOSFloatArray *backingArray) {
  ComGoogleCommonPrimitivesFloats_initialize();
  if (((IOSFloatArray *) nil_chk(backingArray))->size_ == 0) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(backingArray);
}

JavaLangFloat *ComGoogleCommonPrimitivesFloats_tryParseWithNSString_(NSString *string) {
  ComGoogleCommonPrimitivesFloats_initialize();
  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(ComGoogleCommonPrimitivesDoubles, FLOATING_POINT_PATTERN))) matcherWithJavaLangCharSequence:string])) matches]) {
    @try {
      return JavaLangFloat_valueOfWithFloat_(JavaLangFloat_parseFloatWithNSString_(string));
    }
    @catch (JavaLangNumberFormatException *e) {
    }
  }
  return nil;
}

IOSObjectArray *ComGoogleCommonPrimitivesFloats__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable(), create_JavaxAnnotationCheckForNull() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesFloats)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesFloats_FloatConverter)

@implementation ComGoogleCommonPrimitivesFloats_FloatConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesFloats_FloatConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangFloat *)doForwardWithId:(NSString *)value {
  return JavaLangFloat_valueOfWithNSString_(value);
}

- (NSString *)doBackwardWithId:(JavaLangFloat *)value {
  return [((JavaLangFloat *) nil_chk(value)) description];
}

- (NSString *)description {
  return @"Floats.stringConverter()";
}

- (id)readResolve {
  return ComGoogleCommonPrimitivesFloats_FloatConverter_INSTANCE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(doForwardWithId:);
  methods[2].selector = @selector(doBackwardWithId:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesFloats_FloatConverter;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesFloats_FloatConverter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "doForward", "LNSString;", "doBackward", "LJavaLangFloat;", "toString", &ComGoogleCommonPrimitivesFloats_FloatConverter_INSTANCE, "LComGoogleCommonPrimitivesFloats;", "Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Float;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesFloats_FloatConverter = { "FloatConverter", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x1a, 5, 2, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesFloats_FloatConverter;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesFloats_FloatConverter class]) {
    ComGoogleCommonPrimitivesFloats_FloatConverter_INSTANCE = new_ComGoogleCommonPrimitivesFloats_FloatConverter_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesFloats_FloatConverter)
  }
}

@end

void ComGoogleCommonPrimitivesFloats_FloatConverter_init(ComGoogleCommonPrimitivesFloats_FloatConverter *self) {
  ComGoogleCommonBaseConverter_init(self);
}

ComGoogleCommonPrimitivesFloats_FloatConverter *new_ComGoogleCommonPrimitivesFloats_FloatConverter_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesFloats_FloatConverter, init)
}

ComGoogleCommonPrimitivesFloats_FloatConverter *create_ComGoogleCommonPrimitivesFloats_FloatConverter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesFloats_FloatConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesFloats_FloatConverter)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesFloats_LexicographicalComparator)

ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesFloats_LexicographicalComparator

- (jint)compareWithId:(IOSFloatArray *)left
               withId:(IOSFloatArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSFloatArray *) nil_chk(left))->size_, ((IOSFloatArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    jint result = JavaLangFloat_compareWithFloat_withFloat_(IOSFloatArray_Get(left, i), IOSFloatArray_Get(right, i));
    if (result != 0) {
      return result;
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"Floats.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesFloats_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesFloats_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesFloats_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesFloats_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesFloats_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[F[F", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesFloats_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesFloats;", "Ljava/lang/Enum<Lcom/google/common/primitives/Floats$LexicographicalComparator;>;Ljava/util/Comparator<[F>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesFloats_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesFloats_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesFloats_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesFloats_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesFloats_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesFloats_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesFloats_LexicographicalComparator *new_ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesFloats_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesFloats_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesFloats_LexicographicalComparator *e = ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesFloats_LexicographicalComparator *ComGoogleCommonPrimitivesFloats_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesFloats_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesFloats_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesFloats_LexicographicalComparator)

@implementation ComGoogleCommonPrimitivesFloats_FloatArrayAsList

- (instancetype)initWithFloatArray:(IOSFloatArray *)array {
  ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(self, array);
  return self;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)array
                           withInt:(jint)start
                           withInt:(jint)end {
  ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jint)size {
  return end_ - start_;
}

- (jboolean)isEmpty {
  return false;
}

- (JavaLangFloat *)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  return JavaLangFloat_valueOfWithFloat_(IOSFloatArray_Get(nil_chk(array_), start_ + index));
}

- (jboolean)containsWithId:(id)target {
  return ([target isKindOfClass:[JavaLangFloat class]]) && ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(array_, [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(target, [JavaLangFloat class]))) floatValue], start_, end_) != -1;
}

- (jint)indexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangFloat class]]) {
    jint i = ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_withInt_withInt_(array_, [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(target, [JavaLangFloat class]))) floatValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (jint)lastIndexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangFloat class]]) {
    jint i = ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_withInt_withInt_(array_, [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(target, [JavaLangFloat class]))) floatValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (JavaLangFloat *)setWithInt:(jint)index
                       withId:(JavaLangFloat *)element {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  jfloat oldValue = IOSFloatArray_Get(nil_chk(array_), start_ + index);
  *IOSFloatArray_GetRef(array_, start_ + index) = [((JavaLangFloat *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(element))) floatValue];
  return JavaLangFloat_valueOfWithFloat_(oldValue);
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  jint size = [self size];
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(fromIndex, toIndex, size);
  if (fromIndex == toIndex) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(array_, start_ + fromIndex, start_ + toIndex);
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if ([object isKindOfClass:[ComGoogleCommonPrimitivesFloats_FloatArrayAsList class]]) {
    ComGoogleCommonPrimitivesFloats_FloatArrayAsList *that = (ComGoogleCommonPrimitivesFloats_FloatArrayAsList *) cast_chk(object, [ComGoogleCommonPrimitivesFloats_FloatArrayAsList class]);
    jint size = [self size];
    if ([((ComGoogleCommonPrimitivesFloats_FloatArrayAsList *) nil_chk(that)) size] != size) {
      return false;
    }
    for (jint i = 0; i < size; i++) {
      if (IOSFloatArray_Get(nil_chk(array_), start_ + i) != IOSFloatArray_Get(that->array_, that->start_ + i)) {
        return false;
      }
    }
    return true;
  }
  return [super isEqual:object];
}

- (NSUInteger)hash {
  jint result = 1;
  for (jint i = start_; i < end_; i++) {
    result = 31 * result + ComGoogleCommonPrimitivesFloats_hashCodeWithFloat_(IOSFloatArray_Get(nil_chk(array_), i));
  }
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_([self size] * 12);
  (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'['])) appendWithFloat:IOSFloatArray_Get(nil_chk(array_), start_)];
  for (jint i = start_ + 1; i < end_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@", "])) appendWithFloat:IOSFloatArray_Get(array_, i)];
  }
  return [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:']'])) description];
}

- (IOSFloatArray *)toFloatArray {
  return JavaUtilArrays_copyOfRangeWithFloatArray_withInt_withInt_(array_, start_, end_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, 14 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "[F", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithFloatArray:);
  methods[1].selector = @selector(initWithFloatArray:withInt:withInt:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(containsWithId:);
  methods[6].selector = @selector(indexOfWithId:);
  methods[7].selector = @selector(lastIndexOfWithId:);
  methods[8].selector = @selector(setWithInt:withId:);
  methods[9].selector = @selector(subListWithInt:withInt:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(toFloatArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesFloats_FloatArrayAsList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[F", "[FII", "get", "I", "contains", "LNSObject;", "indexOf", "lastIndexOf", "set", "ILJavaLangFloat;", "subList", "II", "(II)Ljava/util/List<Ljava/lang/Float;>;", "equals", (void *)&ComGoogleCommonPrimitivesFloats_FloatArrayAsList__Annotations$0, "hashCode", "toString", "LComGoogleCommonPrimitivesFloats;", "Ljava/util/AbstractList<Ljava/lang/Float;>;Ljava/util/RandomAccess;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesFloats_FloatArrayAsList = { "FloatArrayAsList", "com.google.common.primitives", ptrTable, methods, fields, 7, 0xa, 14, 4, 17, -1, -1, 18, -1 };
  return &_ComGoogleCommonPrimitivesFloats_FloatArrayAsList;
}

@end

void ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(ComGoogleCommonPrimitivesFloats_FloatArrayAsList *self, IOSFloatArray *array) {
  ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(self, array, 0, ((IOSFloatArray *) nil_chk(array))->size_);
}

ComGoogleCommonPrimitivesFloats_FloatArrayAsList *new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(IOSFloatArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, initWithFloatArray_, array)
}

ComGoogleCommonPrimitivesFloats_FloatArrayAsList *create_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_(IOSFloatArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, initWithFloatArray_, array)
}

void ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(ComGoogleCommonPrimitivesFloats_FloatArrayAsList *self, IOSFloatArray *array, jint start, jint end) {
  JavaUtilAbstractList_init(self);
  self->array_ = array;
  self->start_ = start;
  self->end_ = end;
}

ComGoogleCommonPrimitivesFloats_FloatArrayAsList *new_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, initWithFloatArray_withInt_withInt_, array, start, end)
}

ComGoogleCommonPrimitivesFloats_FloatArrayAsList *create_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_initWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, initWithFloatArray_withInt_withInt_, array, start, end)
}

IOSObjectArray *ComGoogleCommonPrimitivesFloats_FloatArrayAsList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesFloats_FloatArrayAsList)
