//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/ImmutableDoubleArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray")
#ifdef RESTRICT_ComGoogleCommonPrimitivesImmutableDoubleArray
#define INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray 0
#else
#define INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray 1
#endif
#undef RESTRICT_ComGoogleCommonPrimitivesImmutableDoubleArray

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonPrimitivesImmutableDoubleArray_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray || defined(INCLUDE_ComGoogleCommonPrimitivesImmutableDoubleArray))
#define ComGoogleCommonPrimitivesImmutableDoubleArray_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComGoogleCommonPrimitivesImmutableDoubleArray_Builder;
@class IOSDoubleArray;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionDoubleConsumer;
@protocol JavaUtilList;
@protocol JavaUtilStreamDoubleStream;

@interface ComGoogleCommonPrimitivesImmutableDoubleArray : NSObject < JavaIoSerializable >

#pragma mark Public

- (id<JavaUtilList>)asList;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)builder;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)builderWithInt:(jint)initialCapacity;

- (jboolean)containsWithDouble:(jdouble)target;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaUtilCollection:(id<JavaUtilCollection>)values OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithDoubleArray:(IOSDoubleArray *)values OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaUtilStreamDoubleStream:(id<JavaUtilStreamDoubleStream>)stream OBJC_METHOD_FAMILY_NONE;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaLangIterable:(id<JavaLangIterable>)values OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)object;

- (void)forEachWithJavaUtilFunctionDoubleConsumer:(id<JavaUtilFunctionDoubleConsumer>)consumer;

- (jdouble)getWithInt:(jint)index;

- (NSUInteger)hash;

- (jint)indexOfWithDouble:(jdouble)target;

- (jboolean)isEmpty;

- (jint)lastIndexOfWithDouble:(jdouble)target;

- (jint)length;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)of;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)first
                                                withDoubleArray:(IOSDoubleArray *)rest;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3
                                                     withDouble:(jdouble)e4;

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3
                                                     withDouble:(jdouble)e4
                                                     withDouble:(jdouble)e5;

- (id<JavaUtilStreamDoubleStream>)stream;

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)subArrayWithInt:(jint)startIndex
                                                           withInt:(jint)endIndex;

- (IOSDoubleArray *)toArray;

- (NSString *)description;

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)trimmed;

#pragma mark Package-Private

- (id)readResolve;

- (id)writeReplace;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesImmutableDoubleArray)

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_of();

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_(jdouble e0);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_(jdouble e0, jdouble e1);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3, jdouble e4);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3, jdouble e4, jdouble e5);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDoubleArray_(jdouble first, IOSDoubleArray *rest);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithDoubleArray_(IOSDoubleArray *values);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilCollection_(id<JavaUtilCollection> values);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaLangIterable_(id<JavaLangIterable> values);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilStreamDoubleStream_(id<JavaUtilStreamDoubleStream> stream);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *ComGoogleCommonPrimitivesImmutableDoubleArray_builderWithInt_(jint initialCapacity);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *ComGoogleCommonPrimitivesImmutableDoubleArray_builder();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesImmutableDoubleArray)

#endif

#if !defined (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray || defined(INCLUDE_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder))
#define ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_

@class ComGoogleCommonPrimitivesImmutableDoubleArray;
@class IOSDoubleArray;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilStreamDoubleStream;

@interface ComGoogleCommonPrimitivesImmutableDoubleArray_Builder : NSObject

#pragma mark Public

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addWithDouble:(jdouble)value;

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)values;

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithDoubleArray:(IOSDoubleArray *)values;

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaUtilStreamDoubleStream:(id<JavaUtilStreamDoubleStream>)stream;

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithComGoogleCommonPrimitivesImmutableDoubleArray:(ComGoogleCommonPrimitivesImmutableDoubleArray *)values;

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaLangIterable:(id<JavaLangIterable>)values;

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)build;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)initialCapacity;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder)

FOUNDATION_EXPORT void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *self, jint initialCapacity);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *create_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(jint initialCapacity);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder)

#endif

#if !defined (ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray || defined(INCLUDE_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList))
#define ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_

#define RESTRICT_JavaUtilAbstractList 1
#define INCLUDE_JavaUtilAbstractList 1
#include "java/util/AbstractList.h"

#define RESTRICT_JavaUtilRandomAccess 1
#define INCLUDE_JavaUtilRandomAccess 1
#include "java/util/RandomAccess.h"

@class JavaLangDouble;
@protocol JavaUtilList;
@protocol JavaUtilSpliterator;

@interface ComGoogleCommonPrimitivesImmutableDoubleArray_AsList : JavaUtilAbstractList < JavaUtilRandomAccess >

#pragma mark Public

- (jboolean)containsWithId:(id)target;

- (jboolean)isEqual:(id)object;

- (JavaLangDouble *)getWithInt:(jint)index;

- (NSUInteger)hash;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangDouble *)removeWithInt:(jint)arg0;

- (JavaLangDouble *)setWithInt:(jint)arg0
                        withId:(JavaLangDouble *)arg1;

- (jint)size;

- (id<JavaUtilSpliterator>)spliterator;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (NSString *)description;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesImmutableDoubleArray")
