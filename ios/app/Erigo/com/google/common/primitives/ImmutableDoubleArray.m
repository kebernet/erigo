//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/ImmutableDoubleArray.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Doubles.h"
#include "com/google/common/primitives/ImmutableDoubleArray.h"
#include "com/google/common/primitives/Ints.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Spliterator.h"
#include "java/util/Spliterators.h"
#include "java/util/function/DoubleConsumer.h"
#include "java/util/stream/DoubleStream.h"
#include "javax/annotation/CheckReturnValue.h"
#include "javax/annotation/Nullable.h"
#include "javax/annotation/meta/When.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonPrimitivesImmutableDoubleArray () {
 @public
  IOSDoubleArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
                            withInt:(jint)start
                            withInt:(jint)end;

- (id<JavaUtilSpliterator_OfDouble>)spliterator;

+ (jboolean)areEqualWithDouble:(jdouble)a
                    withDouble:(jdouble)b;

- (jboolean)isPartialView;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesImmutableDoubleArray, array_, IOSDoubleArray *)

inline ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_get_EMPTY();
static ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesImmutableDoubleArray, EMPTY, ComGoogleCommonPrimitivesImmutableDoubleArray *)

__attribute__((unused)) static void ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *self, IOSDoubleArray *array);

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray *new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(IOSDoubleArray *array) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray *create_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(IOSDoubleArray *array);

__attribute__((unused)) static void ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(ComGoogleCommonPrimitivesImmutableDoubleArray *self, IOSDoubleArray *array, jint start, jint end);

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray *new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray *create_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end);

__attribute__((unused)) static id<JavaUtilSpliterator_OfDouble> ComGoogleCommonPrimitivesImmutableDoubleArray_spliterator(ComGoogleCommonPrimitivesImmutableDoubleArray *self);

__attribute__((unused)) static jboolean ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(jdouble a, jdouble b);

__attribute__((unused)) static jboolean ComGoogleCommonPrimitivesImmutableDoubleArray_isPartialView(ComGoogleCommonPrimitivesImmutableDoubleArray *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray__Annotations$0();

@interface ComGoogleCommonPrimitivesImmutableDoubleArray_Builder () {
 @public
  IOSDoubleArray *array_;
  jint count_;
}

- (void)ensureRoomForWithInt:(jint)numberToAdd;

+ (jint)expandedCapacityWithInt:(jint)oldCapacity
                        withInt:(jint)minCapacity;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder, array_, IOSDoubleArray *)

__attribute__((unused)) static void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *self, jint numberToAdd);

__attribute__((unused)) static jint ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_expandedCapacityWithInt_withInt_(jint oldCapacity, jint minCapacity);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray_Builder__Annotations$0();

@interface ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 : NSObject < JavaUtilFunctionDoubleConsumer > {
 @public
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *target$_;
}

- (void)acceptWithDouble:(jdouble)a;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1)

__attribute__((unused)) static void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *self, ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$);

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *create_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$);

@interface ComGoogleCommonPrimitivesImmutableDoubleArray_AsList () {
 @public
  ComGoogleCommonPrimitivesImmutableDoubleArray *parent_;
}

- (instancetype)initWithComGoogleCommonPrimitivesImmutableDoubleArray:(ComGoogleCommonPrimitivesImmutableDoubleArray *)parent;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList, parent_, ComGoogleCommonPrimitivesImmutableDoubleArray *)

__attribute__((unused)) static void ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *self, ComGoogleCommonPrimitivesImmutableDoubleArray *parent);

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *new_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *parent) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *create_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *parent);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray_AsList__Annotations$0();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesImmutableDoubleArray)

@implementation ComGoogleCommonPrimitivesImmutableDoubleArray

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)of {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_of();
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_(e0);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_(e0, e1);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_(e0, e1, e2);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_(e0, e1, e2, e3);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3
                                                     withDouble:(jdouble)e4 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_(e0, e1, e2, e3, e4);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)e0
                                                     withDouble:(jdouble)e1
                                                     withDouble:(jdouble)e2
                                                     withDouble:(jdouble)e3
                                                     withDouble:(jdouble)e4
                                                     withDouble:(jdouble)e5 {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(e0, e1, e2, e3, e4, e5);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)ofWithDouble:(jdouble)first
                                                withDoubleArray:(IOSDoubleArray *)rest {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDoubleArray_(first, rest);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithDoubleArray:(IOSDoubleArray *)values {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithDoubleArray_(values);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaUtilCollection:(id<JavaUtilCollection>)values {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilCollection_(values);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaLangIterable:(id<JavaLangIterable>)values {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaLangIterable_(values);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray *)copyOfWithJavaUtilStreamDoubleStream:(id<JavaUtilStreamDoubleStream>)stream {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilStreamDoubleStream_(stream);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)builderWithInt:(jint)initialCapacity {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_builderWithInt_(initialCapacity);
}

+ (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)builder {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_builder();
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(self, array);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array
                            withInt:(jint)start
                            withInt:(jint)end {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jint)length {
  return end_ - start_;
}

- (jboolean)isEmpty {
  return end_ == start_;
}

- (jdouble)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self length]);
  return IOSDoubleArray_Get(nil_chk(array_), start_ + index);
}

- (jint)indexOfWithDouble:(jdouble)target {
  for (jint i = start_; i < end_; i++) {
    if (ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(array_), i), target)) {
      return i - start_;
    }
  }
  return -1;
}

- (jint)lastIndexOfWithDouble:(jdouble)target {
  for (jint i = end_ - 1; i >= start_; i--) {
    if (ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(array_), i), target)) {
      return i - start_;
    }
  }
  return -1;
}

- (jboolean)containsWithDouble:(jdouble)target {
  return [self indexOfWithDouble:target] >= 0;
}

- (void)forEachWithJavaUtilFunctionDoubleConsumer:(id<JavaUtilFunctionDoubleConsumer>)consumer {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(consumer);
  for (jint i = start_; i < end_; i++) {
    [((id<JavaUtilFunctionDoubleConsumer>) nil_chk(consumer)) acceptWithDouble:IOSDoubleArray_Get(nil_chk(array_), i)];
  }
}

- (id<JavaUtilStreamDoubleStream>)stream {
  return JavaUtilArrays_streamWithDoubleArray_withInt_withInt_(array_, start_, end_);
}

- (IOSDoubleArray *)toArray {
  return JavaUtilArrays_copyOfRangeWithDoubleArray_withInt_withInt_(array_, start_, end_);
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)subArrayWithInt:(jint)startIndex
                                                           withInt:(jint)endIndex {
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(startIndex, endIndex, [self length]);
  return startIndex == endIndex ? ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY : new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(array_, start_ + startIndex, start_ + endIndex);
}

- (id<JavaUtilSpliterator_OfDouble>)spliterator {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_spliterator(self);
}

- (id<JavaUtilList>)asList {
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(self);
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if (!([object isKindOfClass:[ComGoogleCommonPrimitivesImmutableDoubleArray class]])) {
    return false;
  }
  ComGoogleCommonPrimitivesImmutableDoubleArray *that = (ComGoogleCommonPrimitivesImmutableDoubleArray *) cast_chk(object, [ComGoogleCommonPrimitivesImmutableDoubleArray class]);
  if ([self length] != [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(that)) length]) {
    return false;
  }
  for (jint i = 0; i < [self length]; i++) {
    if (!ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_([self getWithInt:i], [that getWithInt:i])) {
      return false;
    }
  }
  return true;
}

+ (jboolean)areEqualWithDouble:(jdouble)a
                    withDouble:(jdouble)b {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(a, b);
}

- (NSUInteger)hash {
  jint hash_ = 1;
  for (jint i = start_; i < end_; i++) {
    hash_ *= 31;
    hash_ += ComGoogleCommonPrimitivesDoubles_hashCodeWithDouble_(IOSDoubleArray_Get(nil_chk(array_), i));
  }
  return hash_;
}

- (NSString *)description {
  if ([self isEmpty]) {
    return @"[]";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_([self length] * 5);
  (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'['])) appendWithDouble:IOSDoubleArray_Get(nil_chk(array_), start_)];
  for (jint i = start_ + 1; i < end_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@", "])) appendWithDouble:IOSDoubleArray_Get(array_, i)];
  }
  (void) [builder appendWithChar:']'];
  return [builder description];
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)trimmed {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_isPartialView(self) ? new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([self toArray]) : self;
}

- (jboolean)isPartialView {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_isPartialView(self);
}

- (id)writeReplace {
  return [self trimmed];
}

- (id)readResolve {
  return [self isEmpty] ? ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY : self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 0, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x89, 0, 7, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 8, 10, -1, 11, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 8, 12, -1, 13, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x9, 8, 14, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 18, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 21, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LJavaUtilStreamDoubleStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSpliterator_OfDouble;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 26, -1, -1 },
    { NULL, "Z", 0x1, 27, 28, -1, -1, -1, 29 },
    { NULL, "Z", 0xa, 30, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 31, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 32, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(of);
  methods[1].selector = @selector(ofWithDouble:);
  methods[2].selector = @selector(ofWithDouble:withDouble:);
  methods[3].selector = @selector(ofWithDouble:withDouble:withDouble:);
  methods[4].selector = @selector(ofWithDouble:withDouble:withDouble:withDouble:);
  methods[5].selector = @selector(ofWithDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[6].selector = @selector(ofWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[7].selector = @selector(ofWithDouble:withDoubleArray:);
  methods[8].selector = @selector(copyOfWithDoubleArray:);
  methods[9].selector = @selector(copyOfWithJavaUtilCollection:);
  methods[10].selector = @selector(copyOfWithJavaLangIterable:);
  methods[11].selector = @selector(copyOfWithJavaUtilStreamDoubleStream:);
  methods[12].selector = @selector(builderWithInt:);
  methods[13].selector = @selector(builder);
  methods[14].selector = @selector(initWithDoubleArray:);
  methods[15].selector = @selector(initWithDoubleArray:withInt:withInt:);
  methods[16].selector = @selector(length);
  methods[17].selector = @selector(isEmpty);
  methods[18].selector = @selector(getWithInt:);
  methods[19].selector = @selector(indexOfWithDouble:);
  methods[20].selector = @selector(lastIndexOfWithDouble:);
  methods[21].selector = @selector(containsWithDouble:);
  methods[22].selector = @selector(forEachWithJavaUtilFunctionDoubleConsumer:);
  methods[23].selector = @selector(stream);
  methods[24].selector = @selector(toArray);
  methods[25].selector = @selector(subArrayWithInt:withInt:);
  methods[26].selector = @selector(spliterator);
  methods[27].selector = @selector(asList);
  methods[28].selector = @selector(isEqual:);
  methods[29].selector = @selector(areEqualWithDouble:withDouble:);
  methods[30].selector = @selector(hash);
  methods[31].selector = @selector(description);
  methods[32].selector = @selector(trimmed);
  methods[33].selector = @selector(isPartialView);
  methods[34].selector = @selector(writeReplace);
  methods[35].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY", "LComGoogleCommonPrimitivesImmutableDoubleArray;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "array_", "[D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "of", "D", "DD", "DDD", "DDDD", "DDDDD", "DDDDDD", "D[D", "copyOf", "[D", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/Double;>;)Lcom/google/common/primitives/ImmutableDoubleArray;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Double;>;)Lcom/google/common/primitives/ImmutableDoubleArray;", "LJavaUtilStreamDoubleStream;", "builder", "I", "[DII", "get", "indexOf", "lastIndexOf", "contains", "forEach", "LJavaUtilFunctionDoubleConsumer;", "subArray", "II", "()Ljava/util/List<Ljava/lang/Double;>;", "equals", "LNSObject;", (void *)&ComGoogleCommonPrimitivesImmutableDoubleArray__Annotations$0, "areEqual", "hashCode", "toString", &ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;LComGoogleCommonPrimitivesImmutableDoubleArray_AsList;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesImmutableDoubleArray = { "ImmutableDoubleArray", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 36, 4, -1, 34, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesImmutableDoubleArray;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesImmutableDoubleArray class]) {
    ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY = new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithLength:0]);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesImmutableDoubleArray)
  }
}

@end

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_of() {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY;
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_(jdouble e0) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0 } count:1]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_(jdouble e0, jdouble e1) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0, e1 } count:2]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0, e1, e2 } count:3]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0, e1, e2, e3 } count:4]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3, jdouble e4) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0, e1, e2, e3, e4 } count:5]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble e0, jdouble e1, jdouble e2, jdouble e3, jdouble e4, jdouble e5) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ e0, e1, e2, e3, e4, e5 } count:6]);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_ofWithDouble_withDoubleArray_(jdouble first, IOSDoubleArray *rest) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  IOSDoubleArray *array = [IOSDoubleArray newArrayWithLength:((IOSDoubleArray *) nil_chk(rest))->size_ + 1];
  *IOSDoubleArray_GetRef(array, 0) = first;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(rest, 0, array, 1, rest->size_);
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(array);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithDoubleArray_(IOSDoubleArray *values) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return ((IOSDoubleArray *) nil_chk(values))->size_ == 0 ? ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY : new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(JavaUtilArrays_copyOfWithDoubleArray_withInt_(values, values->size_));
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilCollection_(id<JavaUtilCollection> values) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return [((id<JavaUtilCollection>) nil_chk(values)) isEmpty] ? ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY : new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(ComGoogleCommonPrimitivesDoubles_toArrayWithJavaUtilCollection_(values));
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaLangIterable_(id<JavaLangIterable> values) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  if ([JavaUtilCollection_class_() isInstance:values]) {
    return ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilCollection_((id<JavaUtilCollection>) cast_check(values, JavaUtilCollection_class_()));
  }
  return [((ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *) nil_chk([((ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *) nil_chk(ComGoogleCommonPrimitivesImmutableDoubleArray_builder())) addAllWithJavaLangIterable:values])) build];
}

ComGoogleCommonPrimitivesImmutableDoubleArray *ComGoogleCommonPrimitivesImmutableDoubleArray_copyOfWithJavaUtilStreamDoubleStream_(id<JavaUtilStreamDoubleStream> stream) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  IOSDoubleArray *array = [((id<JavaUtilStreamDoubleStream>) nil_chk(stream)) toArray];
  return (((IOSDoubleArray *) nil_chk(array))->size_ == 0) ? ComGoogleCommonPrimitivesImmutableDoubleArray_EMPTY : new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(array);
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *ComGoogleCommonPrimitivesImmutableDoubleArray_builderWithInt_(jint initialCapacity) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(initialCapacity >= 0, @"Invalid initialCapacity: %s", initialCapacity);
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(initialCapacity);
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *ComGoogleCommonPrimitivesImmutableDoubleArray_builder() {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(10);
}

void ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *self, IOSDoubleArray *array) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(self, array, 0, ((IOSDoubleArray *) nil_chk(array))->size_);
}

ComGoogleCommonPrimitivesImmutableDoubleArray *new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(IOSDoubleArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray, initWithDoubleArray_, array)
}

ComGoogleCommonPrimitivesImmutableDoubleArray *create_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_(IOSDoubleArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray, initWithDoubleArray_, array)
}

void ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(ComGoogleCommonPrimitivesImmutableDoubleArray *self, IOSDoubleArray *array, jint start, jint end) {
  NSObject_init(self);
  self->array_ = array;
  self->start_ = start;
  self->end_ = end;
}

ComGoogleCommonPrimitivesImmutableDoubleArray *new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray, initWithDoubleArray_withInt_withInt_, array, start, end)
}

ComGoogleCommonPrimitivesImmutableDoubleArray *create_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray, initWithDoubleArray_withInt_withInt_, array, start, end)
}

id<JavaUtilSpliterator_OfDouble> ComGoogleCommonPrimitivesImmutableDoubleArray_spliterator(ComGoogleCommonPrimitivesImmutableDoubleArray *self) {
  return JavaUtilSpliterators_spliteratorWithDoubleArray_withInt_withInt_withInt_(self->array_, self->start_, self->end_, JavaUtilSpliterator_IMMUTABLE | JavaUtilSpliterator_ORDERED);
}

jboolean ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(jdouble a, jdouble b) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_initialize();
  return JavaLangDouble_doubleToLongBitsWithDouble_(a) == JavaLangDouble_doubleToLongBitsWithDouble_(b);
}

jboolean ComGoogleCommonPrimitivesImmutableDoubleArray_isPartialView(ComGoogleCommonPrimitivesImmutableDoubleArray *self) {
  return self->start_ > 0 || self->end_ < ((IOSDoubleArray *) nil_chk(self->array_))->size_;
}

IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesImmutableDoubleArray)

@implementation ComGoogleCommonPrimitivesImmutableDoubleArray_Builder

- (instancetype)initWithInt:(jint)initialCapacity {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(self, initialCapacity);
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addWithDouble:(jdouble)value {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, 1);
  *IOSDoubleArray_GetRef(nil_chk(array_), count_) = value;
  count_ += 1;
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithDoubleArray:(IOSDoubleArray *)values {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, ((IOSDoubleArray *) nil_chk(values))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(values, 0, array_, count_, values->size_);
  count_ += values->size_;
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaLangIterable:(id<JavaLangIterable>)values {
  if ([JavaUtilCollection_class_() isInstance:values]) {
    return [self addAllWithJavaUtilCollection:(id<JavaUtilCollection>) cast_check(values, JavaUtilCollection_class_())];
  }
  for (JavaLangDouble * __strong value in nil_chk(values)) {
    (void) [self addWithDouble:[((JavaLangDouble *) nil_chk(value)) doubleValue]];
  }
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)values {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, [((id<JavaUtilCollection>) nil_chk(values)) size]);
  for (JavaLangDouble * __strong value in values) {
    *IOSDoubleArray_GetRef(nil_chk(array_), count_++) = [((JavaLangDouble *) nil_chk(value)) doubleValue];
  }
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithJavaUtilStreamDoubleStream:(id<JavaUtilStreamDoubleStream>)stream {
  id<JavaUtilSpliterator_OfDouble> spliterator = [((id<JavaUtilStreamDoubleStream>) nil_chk(stream)) spliterator];
  jlong size = [((id<JavaUtilSpliterator_OfDouble>) nil_chk(spliterator)) getExactSizeIfKnown];
  if (size > 0) {
    ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, ComGoogleCommonPrimitivesInts_saturatedCastWithLong_(size));
  }
  [spliterator forEachRemainingWithId:new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(self)];
  return self;
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *)addAllWithComGoogleCommonPrimitivesImmutableDoubleArray:(ComGoogleCommonPrimitivesImmutableDoubleArray *)values {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(values)) length]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(values->array_, values->start_, array_, count_, [values length]);
  count_ += [values length];
  return self;
}

- (void)ensureRoomForWithInt:(jint)numberToAdd {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(self, numberToAdd);
}

+ (jint)expandedCapacityWithInt:(jint)oldCapacity
                        withInt:(jint)minCapacity {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_expandedCapacityWithInt_withInt_(oldCapacity, minCapacity);
}

- (ComGoogleCommonPrimitivesImmutableDoubleArray *)build {
  return count_ == 0 ? JreLoadStatic(ComGoogleCommonPrimitivesImmutableDoubleArray, EMPTY) : new_ComGoogleCommonPrimitivesImmutableDoubleArray_initWithDoubleArray_withInt_withInt_(array_, 0, count_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 3, 5, -1, 6, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 3, 7, -1, 8, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 3, 9, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray_Builder;", 0x1, 3, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 0, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 12, 13, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesImmutableDoubleArray;", 0x1, -1, -1, -1, -1, 14, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(addWithDouble:);
  methods[2].selector = @selector(addAllWithDoubleArray:);
  methods[3].selector = @selector(addAllWithJavaLangIterable:);
  methods[4].selector = @selector(addAllWithJavaUtilCollection:);
  methods[5].selector = @selector(addAllWithJavaUtilStreamDoubleStream:);
  methods[6].selector = @selector(addAllWithComGoogleCommonPrimitivesImmutableDoubleArray:);
  methods[7].selector = @selector(ensureRoomForWithInt:);
  methods[8].selector = @selector(expandedCapacityWithInt:withInt:);
  methods[9].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "add", "D", "addAll", "[D", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Double;>;)Lcom/google/common/primitives/ImmutableDoubleArray$Builder;", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/Double;>;)Lcom/google/common/primitives/ImmutableDoubleArray$Builder;", "LJavaUtilStreamDoubleStream;", "LComGoogleCommonPrimitivesImmutableDoubleArray;", "ensureRoomFor", "expandedCapacity", "II", (void *)&ComGoogleCommonPrimitivesImmutableDoubleArray_Builder__Annotations$0 };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesImmutableDoubleArray_Builder = { "Builder", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x19, 10, 2, 10, -1, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder;
}

@end

void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *self, jint initialCapacity) {
  NSObject_init(self);
  self->count_ = 0;
  self->array_ = [IOSDoubleArray newArrayWithLength:initialCapacity];
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(jint initialCapacity) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder, initWithInt_, initialCapacity)
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *create_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initWithInt_(jint initialCapacity) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder, initWithInt_, initialCapacity)
}

void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_ensureRoomForWithInt_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *self, jint numberToAdd) {
  jint newCount = self->count_ + numberToAdd;
  if (newCount > ((IOSDoubleArray *) nil_chk(self->array_))->size_) {
    IOSDoubleArray *newArray = [IOSDoubleArray newArrayWithLength:ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_expandedCapacityWithInt_withInt_(self->array_->size_, newCount)];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->array_, 0, newArray, 0, self->count_);
    self->array_ = newArray;
  }
}

jint ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_expandedCapacityWithInt_withInt_(jint oldCapacity, jint minCapacity) {
  ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_initialize();
  if (minCapacity < 0) {
    @throw new_JavaLangAssertionError_initWithId_(@"cannot store more than MAX_VALUE elements");
  }
  jint newCapacity = oldCapacity + (JreRShift32(oldCapacity, 1)) + 1;
  if (newCapacity < minCapacity) {
    newCapacity = JreLShift32(JavaLangInteger_highestOneBitWithInt_(minCapacity - 1), 1);
  }
  if (newCapacity < 0) {
    newCapacity = JavaLangInteger_MAX_VALUE;
  }
  return newCapacity;
}

IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray_Builder__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationCheckReturnValue(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder)

@implementation ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1

- (void)acceptWithDouble:(jdouble)a {
  (void) [target$_ addWithDouble:a];
}

- (id<JavaUtilFunctionDoubleConsumer>)andThenWithJavaUtilFunctionDoubleConsumer:(id<JavaUtilFunctionDoubleConsumer>)arg0 {
  return JavaUtilFunctionDoubleConsumer_andThenWithJavaUtilFunctionDoubleConsumer_(self, arg0);
}

@end

void ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *self, ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$) {
  self->target$_ = outer$;
  NSObject_init(self);
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *new_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1, initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_, outer$)
}

ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1 *create_ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1_initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_Builder_$Lambda$1, initWithComGoogleCommonPrimitivesImmutableDoubleArray_Builder_, outer$)
}

@implementation ComGoogleCommonPrimitivesImmutableDoubleArray_AsList

- (instancetype)initWithComGoogleCommonPrimitivesImmutableDoubleArray:(ComGoogleCommonPrimitivesImmutableDoubleArray *)parent {
  ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(self, parent);
  return self;
}

- (jint)size {
  return [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) length];
}

- (JavaLangDouble *)getWithInt:(jint)index {
  return JavaLangDouble_valueOfWithDouble_([((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) getWithInt:index]);
}

- (jboolean)containsWithId:(id)target {
  return [self indexOfWithId:target] >= 0;
}

- (jint)indexOfWithId:(id)target {
  return [target isKindOfClass:[JavaLangDouble class]] ? [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) indexOfWithDouble:[((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(target, [JavaLangDouble class]))) doubleValue]] : -1;
}

- (jint)lastIndexOfWithId:(id)target {
  return [target isKindOfClass:[JavaLangDouble class]] ? [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) lastIndexOfWithDouble:[((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(target, [JavaLangDouble class]))) doubleValue]] : -1;
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  return [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk([((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) subArrayWithInt:fromIndex withInt:toIndex])) asList];
}

- (id<JavaUtilSpliterator>)spliterator {
  return ComGoogleCommonPrimitivesImmutableDoubleArray_spliterator(nil_chk(parent_));
}

- (jboolean)isEqual:(id)object {
  if ([object isKindOfClass:[ComGoogleCommonPrimitivesImmutableDoubleArray_AsList class]]) {
    ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *that = (ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *) cast_chk(object, [ComGoogleCommonPrimitivesImmutableDoubleArray_AsList class]);
    return [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(self->parent_)) isEqual:((ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *) nil_chk(that))->parent_];
  }
  if (!([JavaUtilList_class_() isInstance:object])) {
    return false;
  }
  id<JavaUtilList> that = (id<JavaUtilList>) cast_check(object, JavaUtilList_class_());
  if ([self size] != [((id<JavaUtilList>) nil_chk(that)) size]) {
    return false;
  }
  jint i = ((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_))->start_;
  for (id __strong element in that) {
    if (!([element isKindOfClass:[JavaLangDouble class]]) || !ComGoogleCommonPrimitivesImmutableDoubleArray_areEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(parent_->array_), i++), [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(element, [JavaLangDouble class]))) doubleValue])) {
      return false;
    }
  }
  return true;
}

- (NSUInteger)hash {
  return ((jint) [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) hash]);
}

- (NSString *)description {
  return [((ComGoogleCommonPrimitivesImmutableDoubleArray *) nil_chk(parent_)) description];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LJavaUtilSpliterator;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, 11, 4, -1, -1, -1, 12 },
    { NULL, "I", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonPrimitivesImmutableDoubleArray:);
  methods[1].selector = @selector(size);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(containsWithId:);
  methods[4].selector = @selector(indexOfWithId:);
  methods[5].selector = @selector(lastIndexOfWithId:);
  methods[6].selector = @selector(subListWithInt:withInt:);
  methods[7].selector = @selector(spliterator);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LComGoogleCommonPrimitivesImmutableDoubleArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonPrimitivesImmutableDoubleArray;", "get", "I", "contains", "LNSObject;", "indexOf", "lastIndexOf", "subList", "II", "(II)Ljava/util/List<Ljava/lang/Double;>;", "()Ljava/util/Spliterator<Ljava/lang/Double;>;", "equals", (void *)&ComGoogleCommonPrimitivesImmutableDoubleArray_AsList__Annotations$0, "hashCode", "toString", "Ljava/util/AbstractList<Ljava/lang/Double;>;Ljava/util/RandomAccess;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesImmutableDoubleArray_AsList = { "AsList", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x8, 11, 1, 0, -1, -1, 15, -1 };
  return &_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList;
}

@end

void ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *self, ComGoogleCommonPrimitivesImmutableDoubleArray *parent) {
  JavaUtilAbstractList_init(self);
  self->parent_ = parent;
}

ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *new_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *parent) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList, initWithComGoogleCommonPrimitivesImmutableDoubleArray_, parent)
}

ComGoogleCommonPrimitivesImmutableDoubleArray_AsList *create_ComGoogleCommonPrimitivesImmutableDoubleArray_AsList_initWithComGoogleCommonPrimitivesImmutableDoubleArray_(ComGoogleCommonPrimitivesImmutableDoubleArray *parent) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList, initWithComGoogleCommonPrimitivesImmutableDoubleArray_, parent)
}

IOSObjectArray *ComGoogleCommonPrimitivesImmutableDoubleArray_AsList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesImmutableDoubleArray_AsList)
