//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/Ints.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Converter.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Ints.h"
#include "com/google/common/primitives/Longs.h"
#include "java/io/Serializable.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "javax/annotation/CheckForNull.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonPrimitivesInts ()

- (instancetype)init;

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)target
                    withInt:(jint)start
                    withInt:(jint)end;

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)target
                        withInt:(jint)start
                        withInt:(jint)end;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesInts_init(ComGoogleCommonPrimitivesInts *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesInts *new_ComGoogleCommonPrimitivesInts_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesInts *create_ComGoogleCommonPrimitivesInts_init();

__attribute__((unused)) static jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint target, jint start, jint end);

__attribute__((unused)) static jint ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint target, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesInts__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesInts__Annotations$1();

@interface ComGoogleCommonPrimitivesInts_IntConverter : ComGoogleCommonBaseConverter < JavaIoSerializable >

- (instancetype)init;

- (JavaLangInteger *)doForwardWithId:(NSString *)value;

- (NSString *)doBackwardWithId:(JavaLangInteger *)value;

- (NSString *)description;

- (id)readResolve;

- (JavaLangInteger *)applyWithId:(NSString *)arg0;

- (JavaLangInteger *)correctedDoForwardWithId:(NSString *)arg0;

- (JavaLangInteger *)convertWithId:(NSString *)arg0;

- (NSString *)correctedDoBackwardWithId:(JavaLangInteger *)arg0;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesInts_IntConverter)

inline ComGoogleCommonPrimitivesInts_IntConverter *ComGoogleCommonPrimitivesInts_IntConverter_get_INSTANCE();
static ComGoogleCommonPrimitivesInts_IntConverter *ComGoogleCommonPrimitivesInts_IntConverter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesInts_IntConverter, INSTANCE, ComGoogleCommonPrimitivesInts_IntConverter *)

inline jlong ComGoogleCommonPrimitivesInts_IntConverter_get_serialVersionUID();
#define ComGoogleCommonPrimitivesInts_IntConverter_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesInts_IntConverter, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesInts_IntConverter_init(ComGoogleCommonPrimitivesInts_IntConverter *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntConverter *new_ComGoogleCommonPrimitivesInts_IntConverter_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntConverter *create_ComGoogleCommonPrimitivesInts_IntConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesInts_IntConverter)

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesInts_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesInts_LexicographicalComparator_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesInts_LexicographicalComparator : JavaLangEnum < NSCopying, JavaUtilComparator >

- (jint)compareWithId:(IOSIntArray *)left
               withId:(IOSIntArray *)right;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesInts_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesInts_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesInts_LexicographicalComparator, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonPrimitivesInts_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesInts_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_LexicographicalComparator *new_ComGoogleCommonPrimitivesInts_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesInts_LexicographicalComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesInts_LexicographicalComparator)

@interface ComGoogleCommonPrimitivesInts_IntArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSIntArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithIntArray:(IOSIntArray *)array;

- (instancetype)initWithIntArray:(IOSIntArray *)array
                         withInt:(jint)start
                         withInt:(jint)end;

- (jint)size;

- (jboolean)isEmpty;

- (JavaLangInteger *)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)target;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangInteger *)setWithInt:(jint)index
                         withId:(JavaLangInteger *)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSIntArray *)toIntArray;

- (JavaLangInteger *)removeWithInt:(jint)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesInts_IntArrayAsList)

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesInts_IntArrayAsList, array_, IOSIntArray *)

inline jlong ComGoogleCommonPrimitivesInts_IntArrayAsList_get_serialVersionUID();
#define ComGoogleCommonPrimitivesInts_IntArrayAsList_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesInts_IntArrayAsList, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(ComGoogleCommonPrimitivesInts_IntArrayAsList *self, IOSIntArray *array);

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntArrayAsList *new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(IOSIntArray *array) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntArrayAsList *create_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(IOSIntArray *array);

__attribute__((unused)) static void ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(ComGoogleCommonPrimitivesInts_IntArrayAsList *self, IOSIntArray *array, jint start, jint end);

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntArrayAsList *new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint end) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesInts_IntArrayAsList *create_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint end);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesInts_IntArrayAsList__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesInts_IntArrayAsList)

@implementation ComGoogleCommonPrimitivesInts

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesInts_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)hashCodeWithInt:(jint)value {
  return ComGoogleCommonPrimitivesInts_hashCodeWithInt_(value);
}

+ (jint)checkedCastWithLong:(jlong)value {
  return ComGoogleCommonPrimitivesInts_checkedCastWithLong_(value);
}

+ (jint)saturatedCastWithLong:(jlong)value {
  return ComGoogleCommonPrimitivesInts_saturatedCastWithLong_(value);
}

+ (jint)compareWithInt:(jint)a
               withInt:(jint)b {
  return ComGoogleCommonPrimitivesInts_compareWithInt_withInt_(a, b);
}

+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)target {
  return ComGoogleCommonPrimitivesInts_containsWithIntArray_withInt_(array, target);
}

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)target {
  return ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_(array, target);
}

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)target
                    withInt:(jint)start
                    withInt:(jint)end {
  return ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(array, target, start, end);
}

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
               withIntArray:(IOSIntArray *)target {
  return ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withIntArray_(array, target);
}

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)target {
  return ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_(array, target);
}

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)target
                        withInt:(jint)start
                        withInt:(jint)end {
  return ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_withInt_withInt_(array, target, start, end);
}

+ (jint)minWithIntArray:(IOSIntArray *)array {
  return ComGoogleCommonPrimitivesInts_minWithIntArray_(array);
}

+ (jint)maxWithIntArray:(IOSIntArray *)array {
  return ComGoogleCommonPrimitivesInts_maxWithIntArray_(array);
}

+ (jint)constrainToRangeWithInt:(jint)value
                        withInt:(jint)min
                        withInt:(jint)max {
  return ComGoogleCommonPrimitivesInts_constrainToRangeWithInt_withInt_withInt_(value, min, max);
}

+ (IOSIntArray *)concatWithIntArray2:(IOSObjectArray *)arrays {
  return ComGoogleCommonPrimitivesInts_concatWithIntArray2_(arrays);
}

+ (IOSByteArray *)toByteArrayWithInt:(jint)value {
  return ComGoogleCommonPrimitivesInts_toByteArrayWithInt_(value);
}

+ (jint)fromByteArrayWithByteArray:(IOSByteArray *)bytes {
  return ComGoogleCommonPrimitivesInts_fromByteArrayWithByteArray_(bytes);
}

+ (jint)fromBytesWithByte:(jbyte)b1
                 withByte:(jbyte)b2
                 withByte:(jbyte)b3
                 withByte:(jbyte)b4 {
  return ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_(b1, b2, b3, b4);
}

+ (ComGoogleCommonBaseConverter *)stringConverter {
  return ComGoogleCommonPrimitivesInts_stringConverter();
}

+ (IOSIntArray *)ensureCapacityWithIntArray:(IOSIntArray *)array
                                    withInt:(jint)minLength
                                    withInt:(jint)padding {
  return ComGoogleCommonPrimitivesInts_ensureCapacityWithIntArray_withInt_withInt_(array, minLength, padding);
}

+ (NSString *)joinWithNSString:(NSString *)separator
                  withIntArray:(IOSIntArray *)array {
  return ComGoogleCommonPrimitivesInts_joinWithNSString_withIntArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesInts_lexicographicalComparator();
}

+ (IOSIntArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return ComGoogleCommonPrimitivesInts_toArrayWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilList>)asListWithIntArray:(IOSIntArray *)backingArray {
  return ComGoogleCommonPrimitivesInts_asListWithIntArray_(backingArray);
}

+ (JavaLangInteger *)tryParseWithNSString:(NSString *)string {
  return ComGoogleCommonPrimitivesInts_tryParseWithNSString_(string);
}

+ (JavaLangInteger *)tryParseWithNSString:(NSString *)string
                                  withInt:(jint)radix {
  return ComGoogleCommonPrimitivesInts_tryParseWithNSString_withInt_(string, radix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 8, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 8, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 12, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x89, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x89, 15, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "[I", 0x89, 18, 19, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 20, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 23, 24, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonBaseConverter;", 0x9, -1, -1, -1, 25, -1, -1 },
    { NULL, "[I", 0x9, 26, 27, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 28, 29, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 30, -1, -1 },
    { NULL, "[I", 0x9, 31, 32, -1, 33, -1, -1 },
    { NULL, "LJavaUtilList;", 0x89, 34, 14, -1, 35, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 36, 37, -1, -1, 38, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 36, 39, -1, -1, 40, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hashCodeWithInt:);
  methods[2].selector = @selector(checkedCastWithLong:);
  methods[3].selector = @selector(saturatedCastWithLong:);
  methods[4].selector = @selector(compareWithInt:withInt:);
  methods[5].selector = @selector(containsWithIntArray:withInt:);
  methods[6].selector = @selector(indexOfWithIntArray:withInt:);
  methods[7].selector = @selector(indexOfWithIntArray:withInt:withInt:withInt:);
  methods[8].selector = @selector(indexOfWithIntArray:withIntArray:);
  methods[9].selector = @selector(lastIndexOfWithIntArray:withInt:);
  methods[10].selector = @selector(lastIndexOfWithIntArray:withInt:withInt:withInt:);
  methods[11].selector = @selector(minWithIntArray:);
  methods[12].selector = @selector(maxWithIntArray:);
  methods[13].selector = @selector(constrainToRangeWithInt:withInt:withInt:);
  methods[14].selector = @selector(concatWithIntArray2:);
  methods[15].selector = @selector(toByteArrayWithInt:);
  methods[16].selector = @selector(fromByteArrayWithByteArray:);
  methods[17].selector = @selector(fromBytesWithByte:withByte:withByte:withByte:);
  methods[18].selector = @selector(stringConverter);
  methods[19].selector = @selector(ensureCapacityWithIntArray:withInt:withInt:);
  methods[20].selector = @selector(joinWithNSString:withIntArray:);
  methods[21].selector = @selector(lexicographicalComparator);
  methods[22].selector = @selector(toArrayWithJavaUtilCollection:);
  methods[23].selector = @selector(asListWithIntArray:);
  methods[24].selector = @selector(tryParseWithNSString:);
  methods[25].selector = @selector(tryParseWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES", "I", .constantValue.asInt = ComGoogleCommonPrimitivesInts_BYTES, 0x19, -1, -1, -1, -1 },
    { "MAX_POWER_OF_TWO", "I", .constantValue.asInt = ComGoogleCommonPrimitivesInts_MAX_POWER_OF_TWO, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "hashCode", "I", "checkedCast", "J", "saturatedCast", "compare", "II", "contains", "[II", "indexOf", "[IIII", "[I[I", "lastIndexOf", "min", "[I", "max", "constrainToRange", "III", "concat", "[[I", "toByteArray", "fromByteArray", "[B", "fromBytes", "BBBB", "()Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Integer;>;", "ensureCapacity", "[III", "join", "LNSString;[I", "()Ljava/util/Comparator<[I>;", "toArray", "LJavaUtilCollection;", "(Ljava/util/Collection<+Ljava/lang/Number;>;)[I", "asList", "([I)Ljava/util/List<Ljava/lang/Integer;>;", "tryParse", "LNSString;", (void *)&ComGoogleCommonPrimitivesInts__Annotations$0, "LNSString;I", (void *)&ComGoogleCommonPrimitivesInts__Annotations$1, "LComGoogleCommonPrimitivesInts_IntConverter;LComGoogleCommonPrimitivesInts_LexicographicalComparator;LComGoogleCommonPrimitivesInts_IntArrayAsList;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesInts = { "Ints", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 26, 2, -1, 41, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesInts;
}

@end

void ComGoogleCommonPrimitivesInts_init(ComGoogleCommonPrimitivesInts *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesInts *new_ComGoogleCommonPrimitivesInts_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesInts, init)
}

ComGoogleCommonPrimitivesInts *create_ComGoogleCommonPrimitivesInts_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesInts, init)
}

jint ComGoogleCommonPrimitivesInts_hashCodeWithInt_(jint value) {
  ComGoogleCommonPrimitivesInts_initialize();
  return value;
}

jint ComGoogleCommonPrimitivesInts_checkedCastWithLong_(jlong value) {
  ComGoogleCommonPrimitivesInts_initialize();
  jint result = (jint) value;
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(result == value, @"Out of range: %s", value);
  return result;
}

jint ComGoogleCommonPrimitivesInts_saturatedCastWithLong_(jlong value) {
  ComGoogleCommonPrimitivesInts_initialize();
  if (value > JavaLangInteger_MAX_VALUE) {
    return JavaLangInteger_MAX_VALUE;
  }
  if (value < JavaLangInteger_MIN_VALUE) {
    return JavaLangInteger_MIN_VALUE;
  }
  return (jint) value;
}

jint ComGoogleCommonPrimitivesInts_compareWithInt_withInt_(jint a, jint b) {
  ComGoogleCommonPrimitivesInts_initialize();
  return (a < b) ? -1 : ((a > b) ? 1 : 0);
}

jboolean ComGoogleCommonPrimitivesInts_containsWithIntArray_withInt_(IOSIntArray *array, jint target) {
  ComGoogleCommonPrimitivesInts_initialize();
  {
    IOSIntArray *a__ = array;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint value = *b__++;
      if (value == target) {
        return true;
      }
    }
  }
  return false;
}

jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_(IOSIntArray *array, jint target) {
  ComGoogleCommonPrimitivesInts_initialize();
  return ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(array, target, 0, ((IOSIntArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint target, jint start, jint end) {
  ComGoogleCommonPrimitivesInts_initialize();
  for (jint i = start; i < end; i++) {
    if (IOSIntArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jint ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *target) {
  ComGoogleCommonPrimitivesInts_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(array, @"array");
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(target, @"target");
  if (((IOSIntArray *) nil_chk(target))->size_ == 0) {
    return 0;
  }
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(array))->size_ - target->size_ + 1; i++) {
    {
      for (jint j = 0; j < target->size_; j++) {
        if (IOSIntArray_Get(array, i + j) != IOSIntArray_Get(target, j)) {
          goto continue_outer;
        }
      }
      return i;
    }
    continue_outer: ;
  }
  return -1;
}

jint ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_(IOSIntArray *array, jint target) {
  ComGoogleCommonPrimitivesInts_initialize();
  return ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_withInt_withInt_(array, target, 0, ((IOSIntArray *) nil_chk(array))->size_);
}

jint ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint target, jint start, jint end) {
  ComGoogleCommonPrimitivesInts_initialize();
  for (jint i = end - 1; i >= start; i--) {
    if (IOSIntArray_Get(nil_chk(array), i) == target) {
      return i;
    }
  }
  return -1;
}

jint ComGoogleCommonPrimitivesInts_minWithIntArray_(IOSIntArray *array) {
  ComGoogleCommonPrimitivesInts_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSIntArray *) nil_chk(array))->size_ > 0);
  jint min = IOSIntArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    if (IOSIntArray_Get(array, i) < min) {
      min = IOSIntArray_Get(array, i);
    }
  }
  return min;
}

jint ComGoogleCommonPrimitivesInts_maxWithIntArray_(IOSIntArray *array) {
  ComGoogleCommonPrimitivesInts_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSIntArray *) nil_chk(array))->size_ > 0);
  jint max = IOSIntArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    if (IOSIntArray_Get(array, i) > max) {
      max = IOSIntArray_Get(array, i);
    }
  }
  return max;
}

jint ComGoogleCommonPrimitivesInts_constrainToRangeWithInt_withInt_withInt_(jint value, jint min, jint max) {
  ComGoogleCommonPrimitivesInts_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_withInt_(min <= max, @"min (%s) must be less than or equal to max (%s)", min, max);
  return JavaLangMath_minWithInt_withInt_(JavaLangMath_maxWithInt_withInt_(value, min), max);
}

IOSIntArray *ComGoogleCommonPrimitivesInts_concatWithIntArray2_(IOSObjectArray *arrays) {
  ComGoogleCommonPrimitivesInts_initialize();
  jint length = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSIntArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSIntArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSIntArray *array = *b__++;
      length += ((IOSIntArray *) nil_chk(array))->size_;
    }
  }
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length];
  jint pos = 0;
  {
    IOSObjectArray *a__ = arrays;
    IOSIntArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSIntArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSIntArray *array = *b__++;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, pos, ((IOSIntArray *) nil_chk(array))->size_);
      pos += array->size_;
    }
  }
  return result;
}

IOSByteArray *ComGoogleCommonPrimitivesInts_toByteArrayWithInt_(jint value) {
  ComGoogleCommonPrimitivesInts_initialize();
  return [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (JreRShift32(value, 24)), (jbyte) (JreRShift32(value, 16)), (jbyte) (JreRShift32(value, 8)), (jbyte) value } count:4];
}

jint ComGoogleCommonPrimitivesInts_fromByteArrayWithByteArray_(IOSByteArray *bytes) {
  ComGoogleCommonPrimitivesInts_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_withInt_(((IOSByteArray *) nil_chk(bytes))->size_ >= ComGoogleCommonPrimitivesInts_BYTES, @"array too small: %s < %s", bytes->size_, ComGoogleCommonPrimitivesInts_BYTES);
  return ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_(IOSByteArray_Get(bytes, 0), IOSByteArray_Get(bytes, 1), IOSByteArray_Get(bytes, 2), IOSByteArray_Get(bytes, 3));
}

jint ComGoogleCommonPrimitivesInts_fromBytesWithByte_withByte_withByte_withByte_(jbyte b1, jbyte b2, jbyte b3, jbyte b4) {
  ComGoogleCommonPrimitivesInts_initialize();
  return (JreLShift32(b1, 24)) | (JreLShift32((b2 & (jint) 0xFF), 16)) | (JreLShift32((b3 & (jint) 0xFF), 8)) | (b4 & (jint) 0xFF);
}

ComGoogleCommonBaseConverter *ComGoogleCommonPrimitivesInts_stringConverter() {
  ComGoogleCommonPrimitivesInts_initialize();
  return JreLoadStatic(ComGoogleCommonPrimitivesInts_IntConverter, INSTANCE);
}

IOSIntArray *ComGoogleCommonPrimitivesInts_ensureCapacityWithIntArray_withInt_withInt_(IOSIntArray *array, jint minLength, jint padding) {
  ComGoogleCommonPrimitivesInts_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(minLength >= 0, @"Invalid minLength: %s", minLength);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(padding >= 0, @"Invalid padding: %s", padding);
  return (((IOSIntArray *) nil_chk(array))->size_ < minLength) ? JavaUtilArrays_copyOfWithIntArray_withInt_(array, minLength + padding) : array;
}

NSString *ComGoogleCommonPrimitivesInts_joinWithNSString_withIntArray_(NSString *separator, IOSIntArray *array) {
  ComGoogleCommonPrimitivesInts_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSIntArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 5);
  (void) [builder appendWithInt:IOSIntArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithInt:IOSIntArray_Get(array, i)];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesInts_lexicographicalComparator() {
  ComGoogleCommonPrimitivesInts_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesInts_LexicographicalComparator, INSTANCE);
}

IOSIntArray *ComGoogleCommonPrimitivesInts_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  ComGoogleCommonPrimitivesInts_initialize();
  if ([collection isKindOfClass:[ComGoogleCommonPrimitivesInts_IntArrayAsList class]]) {
    return [((ComGoogleCommonPrimitivesInts_IntArrayAsList *) nil_chk(((ComGoogleCommonPrimitivesInts_IntArrayAsList *) cast_chk(collection, [ComGoogleCommonPrimitivesInts_IntArrayAsList class])))) toIntArray];
  }
  IOSObjectArray *boxedArray = [((id<JavaUtilCollection>) nil_chk(collection)) toArray];
  jint len = ((IOSObjectArray *) nil_chk(boxedArray))->size_;
  IOSIntArray *array = [IOSIntArray newArrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    *IOSIntArray_GetRef(array, i) = [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(IOSObjectArray_Get(boxedArray, i)), [NSNumber class])))) intValue];
  }
  return array;
}

id<JavaUtilList> ComGoogleCommonPrimitivesInts_asListWithIntArray_(IOSIntArray *backingArray) {
  ComGoogleCommonPrimitivesInts_initialize();
  if (((IOSIntArray *) nil_chk(backingArray))->size_ == 0) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(backingArray);
}

JavaLangInteger *ComGoogleCommonPrimitivesInts_tryParseWithNSString_(NSString *string) {
  ComGoogleCommonPrimitivesInts_initialize();
  return ComGoogleCommonPrimitivesInts_tryParseWithNSString_withInt_(string, 10);
}

JavaLangInteger *ComGoogleCommonPrimitivesInts_tryParseWithNSString_withInt_(NSString *string, jint radix) {
  ComGoogleCommonPrimitivesInts_initialize();
  JavaLangLong *result = ComGoogleCommonPrimitivesLongs_tryParseWithNSString_withInt_(string, radix);
  if (result == nil || [result longLongValue] != [result intValue]) {
    return nil;
  }
  else {
    return JavaLangInteger_valueOfWithInt_([result intValue]);
  }
}

IOSObjectArray *ComGoogleCommonPrimitivesInts__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable(), create_JavaxAnnotationCheckForNull() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonPrimitivesInts__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable(), create_JavaxAnnotationCheckForNull() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesInts)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesInts_IntConverter)

@implementation ComGoogleCommonPrimitivesInts_IntConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesInts_IntConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)doForwardWithId:(NSString *)value {
  return JavaLangInteger_decodeWithNSString_(value);
}

- (NSString *)doBackwardWithId:(JavaLangInteger *)value {
  return [((JavaLangInteger *) nil_chk(value)) description];
}

- (NSString *)description {
  return @"Ints.stringConverter()";
}

- (id)readResolve {
  return ComGoogleCommonPrimitivesInts_IntConverter_INSTANCE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(doForwardWithId:);
  methods[2].selector = @selector(doBackwardWithId:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesInts_IntConverter;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesInts_IntConverter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "doForward", "LNSString;", "doBackward", "LJavaLangInteger;", "toString", &ComGoogleCommonPrimitivesInts_IntConverter_INSTANCE, "LComGoogleCommonPrimitivesInts;", "Lcom/google/common/base/Converter<Ljava/lang/String;Ljava/lang/Integer;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesInts_IntConverter = { "IntConverter", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x1a, 5, 2, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesInts_IntConverter;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesInts_IntConverter class]) {
    ComGoogleCommonPrimitivesInts_IntConverter_INSTANCE = new_ComGoogleCommonPrimitivesInts_IntConverter_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesInts_IntConverter)
  }
}

@end

void ComGoogleCommonPrimitivesInts_IntConverter_init(ComGoogleCommonPrimitivesInts_IntConverter *self) {
  ComGoogleCommonBaseConverter_init(self);
}

ComGoogleCommonPrimitivesInts_IntConverter *new_ComGoogleCommonPrimitivesInts_IntConverter_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesInts_IntConverter, init)
}

ComGoogleCommonPrimitivesInts_IntConverter *create_ComGoogleCommonPrimitivesInts_IntConverter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesInts_IntConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesInts_IntConverter)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesInts_LexicographicalComparator)

ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesInts_LexicographicalComparator

- (jint)compareWithId:(IOSIntArray *)left
               withId:(IOSIntArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSIntArray *) nil_chk(left))->size_, ((IOSIntArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    jint result = ComGoogleCommonPrimitivesInts_compareWithInt_withInt_(IOSIntArray_Get(left, i), IOSIntArray_Get(right, i));
    if (result != 0) {
      return result;
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"Ints.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesInts_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesInts_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesInts_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesInts_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesInts_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesInts_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[I[I", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesInts_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesInts;", "Ljava/lang/Enum<Lcom/google/common/primitives/Ints$LexicographicalComparator;>;Ljava/util/Comparator<[I>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesInts_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesInts_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesInts_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesInts_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesInts_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesInts_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesInts_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesInts_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesInts_LexicographicalComparator *new_ComGoogleCommonPrimitivesInts_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesInts_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesInts_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesInts_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesInts_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesInts_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesInts_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesInts_LexicographicalComparator *e = ComGoogleCommonPrimitivesInts_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesInts_LexicographicalComparator *ComGoogleCommonPrimitivesInts_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesInts_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesInts_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesInts_LexicographicalComparator)

@implementation ComGoogleCommonPrimitivesInts_IntArrayAsList

- (instancetype)initWithIntArray:(IOSIntArray *)array {
  ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(self, array);
  return self;
}

- (instancetype)initWithIntArray:(IOSIntArray *)array
                         withInt:(jint)start
                         withInt:(jint)end {
  ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(self, array, start, end);
  return self;
}

- (jint)size {
  return end_ - start_;
}

- (jboolean)isEmpty {
  return false;
}

- (JavaLangInteger *)getWithInt:(jint)index {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  return JavaLangInteger_valueOfWithInt_(IOSIntArray_Get(nil_chk(array_), start_ + index));
}

- (jboolean)containsWithId:(id)target {
  return ([target isKindOfClass:[JavaLangInteger class]]) && ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(array_, [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(target, [JavaLangInteger class]))) intValue], start_, end_) != -1;
}

- (jint)indexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangInteger class]]) {
    jint i = ComGoogleCommonPrimitivesInts_indexOfWithIntArray_withInt_withInt_withInt_(array_, [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(target, [JavaLangInteger class]))) intValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (jint)lastIndexOfWithId:(id)target {
  if ([target isKindOfClass:[JavaLangInteger class]]) {
    jint i = ComGoogleCommonPrimitivesInts_lastIndexOfWithIntArray_withInt_withInt_withInt_(array_, [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(target, [JavaLangInteger class]))) intValue], start_, end_);
    if (i >= 0) {
      return i - start_;
    }
  }
  return -1;
}

- (JavaLangInteger *)setWithInt:(jint)index
                         withId:(JavaLangInteger *)element {
  ComGoogleCommonBasePreconditions_checkElementIndexWithInt_withInt_(index, [self size]);
  jint oldValue = IOSIntArray_Get(nil_chk(array_), start_ + index);
  *IOSIntArray_GetRef(array_, start_ + index) = [((JavaLangInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(element))) intValue];
  return JavaLangInteger_valueOfWithInt_(oldValue);
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  jint size = [self size];
  ComGoogleCommonBasePreconditions_checkPositionIndexesWithInt_withInt_withInt_(fromIndex, toIndex, size);
  if (fromIndex == toIndex) {
    return JavaUtilCollections_emptyList();
  }
  return new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(array_, start_ + fromIndex, start_ + toIndex);
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return true;
  }
  if ([object isKindOfClass:[ComGoogleCommonPrimitivesInts_IntArrayAsList class]]) {
    ComGoogleCommonPrimitivesInts_IntArrayAsList *that = (ComGoogleCommonPrimitivesInts_IntArrayAsList *) cast_chk(object, [ComGoogleCommonPrimitivesInts_IntArrayAsList class]);
    jint size = [self size];
    if ([((ComGoogleCommonPrimitivesInts_IntArrayAsList *) nil_chk(that)) size] != size) {
      return false;
    }
    for (jint i = 0; i < size; i++) {
      if (IOSIntArray_Get(nil_chk(array_), start_ + i) != IOSIntArray_Get(that->array_, that->start_ + i)) {
        return false;
      }
    }
    return true;
  }
  return [super isEqual:object];
}

- (NSUInteger)hash {
  jint result = 1;
  for (jint i = start_; i < end_; i++) {
    result = 31 * result + ComGoogleCommonPrimitivesInts_hashCodeWithInt_(IOSIntArray_Get(nil_chk(array_), i));
  }
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_([self size] * 5);
  (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'['])) appendWithInt:IOSIntArray_Get(nil_chk(array_), start_)];
  for (jint i = start_ + 1; i < end_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@", "])) appendWithInt:IOSIntArray_Get(array_, i)];
  }
  return [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:']'])) description];
}

- (IOSIntArray *)toIntArray {
  return JavaUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(array_, start_, end_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, 14 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIntArray:);
  methods[1].selector = @selector(initWithIntArray:withInt:withInt:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(getWithInt:);
  methods[5].selector = @selector(containsWithId:);
  methods[6].selector = @selector(indexOfWithId:);
  methods[7].selector = @selector(lastIndexOfWithId:);
  methods[8].selector = @selector(setWithInt:withId:);
  methods[9].selector = @selector(subListWithInt:withInt:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(toIntArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonPrimitivesInts_IntArrayAsList_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[I", "[III", "get", "I", "contains", "LNSObject;", "indexOf", "lastIndexOf", "set", "ILJavaLangInteger;", "subList", "II", "(II)Ljava/util/List<Ljava/lang/Integer;>;", "equals", (void *)&ComGoogleCommonPrimitivesInts_IntArrayAsList__Annotations$0, "hashCode", "toString", "LComGoogleCommonPrimitivesInts;", "Ljava/util/AbstractList<Ljava/lang/Integer;>;Ljava/util/RandomAccess;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesInts_IntArrayAsList = { "IntArrayAsList", "com.google.common.primitives", ptrTable, methods, fields, 7, 0xa, 14, 4, 17, -1, -1, 18, -1 };
  return &_ComGoogleCommonPrimitivesInts_IntArrayAsList;
}

@end

void ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(ComGoogleCommonPrimitivesInts_IntArrayAsList *self, IOSIntArray *array) {
  ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(self, array, 0, ((IOSIntArray *) nil_chk(array))->size_);
}

ComGoogleCommonPrimitivesInts_IntArrayAsList *new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(IOSIntArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesInts_IntArrayAsList, initWithIntArray_, array)
}

ComGoogleCommonPrimitivesInts_IntArrayAsList *create_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_(IOSIntArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesInts_IntArrayAsList, initWithIntArray_, array)
}

void ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(ComGoogleCommonPrimitivesInts_IntArrayAsList *self, IOSIntArray *array, jint start, jint end) {
  JavaUtilAbstractList_init(self);
  self->array_ = array;
  self->start_ = start;
  self->end_ = end;
}

ComGoogleCommonPrimitivesInts_IntArrayAsList *new_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint end) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesInts_IntArrayAsList, initWithIntArray_withInt_withInt_, array, start, end)
}

ComGoogleCommonPrimitivesInts_IntArrayAsList *create_ComGoogleCommonPrimitivesInts_IntArrayAsList_initWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint end) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesInts_IntArrayAsList, initWithIntArray_withInt_withInt_, array, start, end)
}

IOSObjectArray *ComGoogleCommonPrimitivesInts_IntArrayAsList__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesInts_IntArrayAsList)
