//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/Primitives.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Primitives.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/Void.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComGoogleCommonPrimitivesPrimitives ()

- (instancetype)init;

+ (void)addWithJavaUtilMap:(id<JavaUtilMap>)forward
           withJavaUtilMap:(id<JavaUtilMap>)backward
              withIOSClass:(IOSClass *)key
              withIOSClass:(IOSClass *)value;

@end

inline id<JavaUtilMap> ComGoogleCommonPrimitivesPrimitives_get_PRIMITIVE_TO_WRAPPER_TYPE();
static id<JavaUtilMap> ComGoogleCommonPrimitivesPrimitives_PRIMITIVE_TO_WRAPPER_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesPrimitives, PRIMITIVE_TO_WRAPPER_TYPE, id<JavaUtilMap>)

inline id<JavaUtilMap> ComGoogleCommonPrimitivesPrimitives_get_WRAPPER_TO_PRIMITIVE_TYPE();
static id<JavaUtilMap> ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesPrimitives, WRAPPER_TO_PRIMITIVE_TYPE, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleCommonPrimitivesPrimitives_init(ComGoogleCommonPrimitivesPrimitives *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesPrimitives *new_ComGoogleCommonPrimitivesPrimitives_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesPrimitives *create_ComGoogleCommonPrimitivesPrimitives_init();

__attribute__((unused)) static void ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(id<JavaUtilMap> forward, id<JavaUtilMap> backward, IOSClass *key, IOSClass *value);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesPrimitives)

@implementation ComGoogleCommonPrimitivesPrimitives

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesPrimitives_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)addWithJavaUtilMap:(id<JavaUtilMap>)forward
           withJavaUtilMap:(id<JavaUtilMap>)backward
              withIOSClass:(IOSClass *)key
              withIOSClass:(IOSClass *)value {
  ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(forward, backward, key, value);
}

+ (id<JavaUtilSet>)allPrimitiveTypes {
  return ComGoogleCommonPrimitivesPrimitives_allPrimitiveTypes();
}

+ (id<JavaUtilSet>)allWrapperTypes {
  return ComGoogleCommonPrimitivesPrimitives_allWrapperTypes();
}

+ (jboolean)isWrapperTypeWithIOSClass:(IOSClass *)type {
  return ComGoogleCommonPrimitivesPrimitives_isWrapperTypeWithIOSClass_(type);
}

+ (IOSClass *)wrapWithIOSClass:(IOSClass *)type {
  return ComGoogleCommonPrimitivesPrimitives_wrapWithIOSClass_(type);
}

+ (IOSClass *)unwrapWithIOSClass:(IOSClass *)type {
  return ComGoogleCommonPrimitivesPrimitives_unwrapWithIOSClass_(type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, -1, -1, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, -1, -1, -1, 3, -1, -1 },
    { NULL, "Z", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 7, 5, -1, 8, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 9, 5, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithJavaUtilMap:withJavaUtilMap:withIOSClass:withIOSClass:);
  methods[2].selector = @selector(allPrimitiveTypes);
  methods[3].selector = @selector(allWrapperTypes);
  methods[4].selector = @selector(isWrapperTypeWithIOSClass:);
  methods[5].selector = @selector(wrapWithIOSClass:);
  methods[6].selector = @selector(unwrapWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRIMITIVE_TO_WRAPPER_TYPE", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 10, 11, -1 },
    { "WRAPPER_TO_PRIMITIVE_TYPE", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 12, 11, -1 },
  };
  static const void *ptrTable[] = { "add", "LJavaUtilMap;LJavaUtilMap;LIOSClass;LIOSClass;", "(Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Class<*>;>;Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Class<*>;>;Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V", "()Ljava/util/Set<Ljava/lang/Class<*>;>;", "isWrapperType", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "wrap", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Ljava/lang/Class<TT;>;", "unwrap", &ComGoogleCommonPrimitivesPrimitives_PRIMITIVE_TO_WRAPPER_TYPE, "Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Class<*>;>;", &ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesPrimitives = { "Primitives", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 7, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesPrimitives;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesPrimitives class]) {
    {
      id<JavaUtilMap> primToWrap = new_JavaUtilHashMap_initWithInt_(16);
      id<JavaUtilMap> wrapToPrim = new_JavaUtilHashMap_initWithInt_(16);
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass booleanClass], JavaLangBoolean_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass byteClass], JavaLangByte_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass charClass], JavaLangCharacter_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass doubleClass], JavaLangDouble_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass floatClass], JavaLangFloat_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass intClass], JavaLangInteger_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass longClass], JavaLangLong_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass shortClass], JavaLangShort_class_());
      ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(primToWrap, wrapToPrim, [IOSClass voidClass], JavaLangVoid_class_());
      ComGoogleCommonPrimitivesPrimitives_PRIMITIVE_TO_WRAPPER_TYPE = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(primToWrap);
      ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(wrapToPrim);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesPrimitives)
  }
}

@end

void ComGoogleCommonPrimitivesPrimitives_init(ComGoogleCommonPrimitivesPrimitives *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesPrimitives *new_ComGoogleCommonPrimitivesPrimitives_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesPrimitives, init)
}

ComGoogleCommonPrimitivesPrimitives *create_ComGoogleCommonPrimitivesPrimitives_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesPrimitives, init)
}

void ComGoogleCommonPrimitivesPrimitives_addWithJavaUtilMap_withJavaUtilMap_withIOSClass_withIOSClass_(id<JavaUtilMap> forward, id<JavaUtilMap> backward, IOSClass *key, IOSClass *value) {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  (void) [((id<JavaUtilMap>) nil_chk(forward)) putWithId:key withId:value];
  (void) [((id<JavaUtilMap>) nil_chk(backward)) putWithId:value withId:key];
}

id<JavaUtilSet> ComGoogleCommonPrimitivesPrimitives_allPrimitiveTypes() {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  return [((id<JavaUtilMap>) nil_chk(ComGoogleCommonPrimitivesPrimitives_PRIMITIVE_TO_WRAPPER_TYPE)) keySet];
}

id<JavaUtilSet> ComGoogleCommonPrimitivesPrimitives_allWrapperTypes() {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  return [((id<JavaUtilMap>) nil_chk(ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE)) keySet];
}

jboolean ComGoogleCommonPrimitivesPrimitives_isWrapperTypeWithIOSClass_(IOSClass *type) {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  return [((id<JavaUtilMap>) nil_chk(ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE)) containsKeyWithId:ComGoogleCommonBasePreconditions_checkNotNullWithId_(type)];
}

IOSClass *ComGoogleCommonPrimitivesPrimitives_wrapWithIOSClass_(IOSClass *type) {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  IOSClass *wrapped = [((id<JavaUtilMap>) nil_chk(ComGoogleCommonPrimitivesPrimitives_PRIMITIVE_TO_WRAPPER_TYPE)) getWithId:type];
  return (wrapped == nil) ? type : wrapped;
}

IOSClass *ComGoogleCommonPrimitivesPrimitives_unwrapWithIOSClass_(IOSClass *type) {
  ComGoogleCommonPrimitivesPrimitives_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  IOSClass *unwrapped = [((id<JavaUtilMap>) nil_chk(ComGoogleCommonPrimitivesPrimitives_WRAPPER_TO_PRIMITIVE_TYPE)) getWithId:type];
  return (unwrapped == nil) ? type : unwrapped;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesPrimitives)
