//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/SignedBytes.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/SignedBytes.h"
#include "java/lang/Byte.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface ComGoogleCommonPrimitivesSignedBytes ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesSignedBytes_init(ComGoogleCommonPrimitivesSignedBytes *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesSignedBytes *new_ComGoogleCommonPrimitivesSignedBytes_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesSignedBytes *create_ComGoogleCommonPrimitivesSignedBytes_init();

typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_Enum_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator : JavaLangEnum < NSCopying, JavaUtilComparator >

- (jint)compareWithId:(IOSByteArray *)left
               withId:(IOSByteArray *)right;

- (NSString *)description;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator, INSTANCE)

__attribute__((unused)) static void ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *new_ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values();

__attribute__((unused)) static ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator)

@implementation ComGoogleCommonPrimitivesSignedBytes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesSignedBytes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jbyte)checkedCastWithLong:(jlong)value {
  return ComGoogleCommonPrimitivesSignedBytes_checkedCastWithLong_(value);
}

+ (jbyte)saturatedCastWithLong:(jlong)value {
  return ComGoogleCommonPrimitivesSignedBytes_saturatedCastWithLong_(value);
}

+ (jint)compareWithByte:(jbyte)a
               withByte:(jbyte)b {
  return ComGoogleCommonPrimitivesSignedBytes_compareWithByte_withByte_(a, b);
}

+ (jbyte)minWithByteArray:(IOSByteArray *)array {
  return ComGoogleCommonPrimitivesSignedBytes_minWithByteArray_(array);
}

+ (jbyte)maxWithByteArray:(IOSByteArray *)array {
  return ComGoogleCommonPrimitivesSignedBytes_maxWithByteArray_(array);
}

+ (NSString *)joinWithNSString:(NSString *)separator
                 withByteArray:(IOSByteArray *)array {
  return ComGoogleCommonPrimitivesSignedBytes_joinWithNSString_withByteArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesSignedBytes_lexicographicalComparator();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "B", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "B", 0x89, 5, 6, -1, -1, -1, -1 },
    { NULL, "B", 0x89, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(checkedCastWithLong:);
  methods[2].selector = @selector(saturatedCastWithLong:);
  methods[3].selector = @selector(compareWithByte:withByte:);
  methods[4].selector = @selector(minWithByteArray:);
  methods[5].selector = @selector(maxWithByteArray:);
  methods[6].selector = @selector(joinWithNSString:withByteArray:);
  methods[7].selector = @selector(lexicographicalComparator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_POWER_OF_TWO", "B", .constantValue.asChar = ComGoogleCommonPrimitivesSignedBytes_MAX_POWER_OF_TWO, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "checkedCast", "J", "saturatedCast", "compare", "BB", "min", "[B", "max", "join", "LNSString;[B", "()Ljava/util/Comparator<[B>;", "LComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesSignedBytes = { "SignedBytes", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 8, 1, -1, 11, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesSignedBytes;
}

@end

void ComGoogleCommonPrimitivesSignedBytes_init(ComGoogleCommonPrimitivesSignedBytes *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesSignedBytes *new_ComGoogleCommonPrimitivesSignedBytes_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesSignedBytes, init)
}

ComGoogleCommonPrimitivesSignedBytes *create_ComGoogleCommonPrimitivesSignedBytes_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesSignedBytes, init)
}

jbyte ComGoogleCommonPrimitivesSignedBytes_checkedCastWithLong_(jlong value) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  jbyte result = (jbyte) value;
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_(result == value, @"Out of range: %s", value);
  return result;
}

jbyte ComGoogleCommonPrimitivesSignedBytes_saturatedCastWithLong_(jlong value) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  if (value > JavaLangByte_MAX_VALUE) {
    return JavaLangByte_MAX_VALUE;
  }
  if (value < JavaLangByte_MIN_VALUE) {
    return JavaLangByte_MIN_VALUE;
  }
  return (jbyte) value;
}

jint ComGoogleCommonPrimitivesSignedBytes_compareWithByte_withByte_(jbyte a, jbyte b) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  return a - b;
}

jbyte ComGoogleCommonPrimitivesSignedBytes_minWithByteArray_(IOSByteArray *array) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSByteArray *) nil_chk(array))->size_ > 0);
  jbyte min = IOSByteArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    if (IOSByteArray_Get(array, i) < min) {
      min = IOSByteArray_Get(array, i);
    }
  }
  return min;
}

jbyte ComGoogleCommonPrimitivesSignedBytes_maxWithByteArray_(IOSByteArray *array) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSByteArray *) nil_chk(array))->size_ > 0);
  jbyte max = IOSByteArray_Get(array, 0);
  for (jint i = 1; i < array->size_; i++) {
    if (IOSByteArray_Get(array, i) > max) {
      max = IOSByteArray_Get(array, i);
    }
  }
  return max;
}

NSString *ComGoogleCommonPrimitivesSignedBytes_joinWithNSString_withByteArray_(NSString *separator, IOSByteArray *array) {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSByteArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 5);
  (void) [builder appendWithInt:IOSByteArray_Get(array, 0)];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithInt:IOSByteArray_Get(array, i)];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesSignedBytes_lexicographicalComparator() {
  ComGoogleCommonPrimitivesSignedBytes_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator, INSTANCE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesSignedBytes)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator)

ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator

- (jint)compareWithId:(IOSByteArray *)left
               withId:(IOSByteArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSByteArray *) nil_chk(left))->size_, ((IOSByteArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    jint result = ComGoogleCommonPrimitivesSignedBytes_compareWithByte_withByte_(IOSByteArray_Get(left, i), IOSByteArray_Get(right, i));
    if (result != 0) {
      return result;
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"SignedBytes.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[B[B", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesSignedBytes;", "Ljava/lang/Enum<Lcom/google/common/primitives/SignedBytes$LexicographicalComparator;>;Ljava/util/Comparator<[B>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x401a, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *new_ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *e = ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator *ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesSignedBytes_LexicographicalComparator)
