//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/UnsignedInteger.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/UnsignedInteger.h"
#include "com/google/common/primitives/UnsignedInts.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigInteger.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonPrimitivesUnsignedInteger () {
 @public
  jint value_;
}

- (instancetype)initWithInt:(jint)value;

@end

__attribute__((unused)) static void ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(ComGoogleCommonPrimitivesUnsignedInteger *self, jint value);

__attribute__((unused)) static ComGoogleCommonPrimitivesUnsignedInteger *new_ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(jint value) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesUnsignedInteger *create_ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(jint value);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonPrimitivesUnsignedInteger__Annotations$0();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesUnsignedInteger)

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_ZERO;
ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_ONE;
ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_MAX_VALUE;

@implementation ComGoogleCommonPrimitivesUnsignedInteger

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)initWithInt:(jint)value {
  ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(self, value);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComGoogleCommonPrimitivesUnsignedInteger *)fromIntBitsWithInt:(jint)bits {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(bits);
}

+ (ComGoogleCommonPrimitivesUnsignedInteger *)valueOfWithLong:(jlong)value {
  return ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithLong_(value);
}

+ (ComGoogleCommonPrimitivesUnsignedInteger *)valueOfWithJavaMathBigInteger:(JavaMathBigInteger *)value {
  return ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithJavaMathBigInteger_(value);
}

+ (ComGoogleCommonPrimitivesUnsignedInteger *)valueOfWithNSString:(NSString *)string {
  return ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithNSString_(string);
}

+ (ComGoogleCommonPrimitivesUnsignedInteger *)valueOfWithNSString:(NSString *)string
                                                          withInt:(jint)radix {
  return ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithNSString_withInt_(string, radix);
}

- (ComGoogleCommonPrimitivesUnsignedInteger *)plusWithComGoogleCommonPrimitivesUnsignedInteger:(ComGoogleCommonPrimitivesUnsignedInteger *)val {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(self->value_ + ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(val)))->value_);
}

- (ComGoogleCommonPrimitivesUnsignedInteger *)minusWithComGoogleCommonPrimitivesUnsignedInteger:(ComGoogleCommonPrimitivesUnsignedInteger *)val {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(value_ - ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(val)))->value_);
}

- (ComGoogleCommonPrimitivesUnsignedInteger *)timesWithComGoogleCommonPrimitivesUnsignedInteger:(ComGoogleCommonPrimitivesUnsignedInteger *)val {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(value_ * ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(val)))->value_);
}

- (ComGoogleCommonPrimitivesUnsignedInteger *)dividedByWithComGoogleCommonPrimitivesUnsignedInteger:(ComGoogleCommonPrimitivesUnsignedInteger *)val {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(ComGoogleCommonPrimitivesUnsignedInts_divideWithInt_withInt_(value_, ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(val)))->value_));
}

- (ComGoogleCommonPrimitivesUnsignedInteger *)modWithComGoogleCommonPrimitivesUnsignedInteger:(ComGoogleCommonPrimitivesUnsignedInteger *)val {
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(ComGoogleCommonPrimitivesUnsignedInts_remainderWithInt_withInt_(value_, ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(ComGoogleCommonBasePreconditions_checkNotNullWithId_(val)))->value_));
}

- (jint)intValue {
  return value_;
}

- (jlong)longLongValue {
  return ComGoogleCommonPrimitivesUnsignedInts_toLongWithInt_(value_);
}

- (jfloat)floatValue {
  return [self longLongValue];
}

- (jdouble)doubleValue {
  return [self longLongValue];
}

- (JavaMathBigInteger *)bigIntegerValue {
  return JavaMathBigInteger_valueOfWithLong_([self longLongValue]);
}

- (jint)compareToWithId:(ComGoogleCommonPrimitivesUnsignedInteger *)other {
  (void) cast_chk(other, [ComGoogleCommonPrimitivesUnsignedInteger class]);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(other);
  return ComGoogleCommonPrimitivesUnsignedInts_compareWithInt_withInt_(value_, ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(other))->value_);
}

- (NSUInteger)hash {
  return value_;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[ComGoogleCommonPrimitivesUnsignedInteger class]]) {
    ComGoogleCommonPrimitivesUnsignedInteger *other = (ComGoogleCommonPrimitivesUnsignedInteger *) cast_chk(obj, [ComGoogleCommonPrimitivesUnsignedInteger class]);
    return value_ == ((ComGoogleCommonPrimitivesUnsignedInteger *) nil_chk(other))->value_;
  }
  return false;
}

- (NSString *)description {
  return [self toStringWithInt:10];
}

- (NSString *)toStringWithInt:(jint)radix {
  return ComGoogleCommonPrimitivesUnsignedInts_toStringWithInt_withInt_(value_, radix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x9, 2, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x9, 2, 6, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x1, 11, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedInteger;", 0x1, 12, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, 18 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(fromIntBitsWithInt:);
  methods[2].selector = @selector(valueOfWithLong:);
  methods[3].selector = @selector(valueOfWithJavaMathBigInteger:);
  methods[4].selector = @selector(valueOfWithNSString:);
  methods[5].selector = @selector(valueOfWithNSString:withInt:);
  methods[6].selector = @selector(plusWithComGoogleCommonPrimitivesUnsignedInteger:);
  methods[7].selector = @selector(minusWithComGoogleCommonPrimitivesUnsignedInteger:);
  methods[8].selector = @selector(timesWithComGoogleCommonPrimitivesUnsignedInteger:);
  methods[9].selector = @selector(dividedByWithComGoogleCommonPrimitivesUnsignedInteger:);
  methods[10].selector = @selector(modWithComGoogleCommonPrimitivesUnsignedInteger:);
  methods[11].selector = @selector(intValue);
  methods[12].selector = @selector(longLongValue);
  methods[13].selector = @selector(floatValue);
  methods[14].selector = @selector(doubleValue);
  methods[15].selector = @selector(bigIntegerValue);
  methods[16].selector = @selector(compareToWithId:);
  methods[17].selector = @selector(hash);
  methods[18].selector = @selector(isEqual:);
  methods[19].selector = @selector(description);
  methods[20].selector = @selector(toStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LComGoogleCommonPrimitivesUnsignedInteger;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "ONE", "LComGoogleCommonPrimitivesUnsignedInteger;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "MAX_VALUE", "LComGoogleCommonPrimitivesUnsignedInteger;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "value_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "fromIntBits", "valueOf", "J", "LJavaMathBigInteger;", "LNSString;", "LNSString;I", "plus", "LComGoogleCommonPrimitivesUnsignedInteger;", "minus", "times", "dividedBy", "mod", "longValue", "compareTo", "hashCode", "equals", "LNSObject;", (void *)&ComGoogleCommonPrimitivesUnsignedInteger__Annotations$0, "toString", &ComGoogleCommonPrimitivesUnsignedInteger_ZERO, &ComGoogleCommonPrimitivesUnsignedInteger_ONE, &ComGoogleCommonPrimitivesUnsignedInteger_MAX_VALUE, "Ljava/lang/Number;Ljava/lang/Comparable<Lcom/google/common/primitives/UnsignedInteger;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesUnsignedInteger = { "UnsignedInteger", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 21, 4, -1, -1, -1, 23, -1 };
  return &_ComGoogleCommonPrimitivesUnsignedInteger;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesUnsignedInteger class]) {
    ComGoogleCommonPrimitivesUnsignedInteger_ZERO = ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(0);
    ComGoogleCommonPrimitivesUnsignedInteger_ONE = ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(1);
    ComGoogleCommonPrimitivesUnsignedInteger_MAX_VALUE = ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(-1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesUnsignedInteger)
  }
}

@end

void ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(ComGoogleCommonPrimitivesUnsignedInteger *self, jint value) {
  NSNumber_init(self);
  self->value_ = value & (jint) 0xffffffff;
}

ComGoogleCommonPrimitivesUnsignedInteger *new_ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesUnsignedInteger, initWithInt_, value)
}

ComGoogleCommonPrimitivesUnsignedInteger *create_ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesUnsignedInteger, initWithInt_, value)
}

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(jint bits) {
  ComGoogleCommonPrimitivesUnsignedInteger_initialize();
  return new_ComGoogleCommonPrimitivesUnsignedInteger_initWithInt_(bits);
}

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithLong_(jlong value) {
  ComGoogleCommonPrimitivesUnsignedInteger_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withLong_((value & ComGoogleCommonPrimitivesUnsignedInts_INT_MASK) == value, @"value (%s) is outside the range for an unsigned integer value", value);
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_((jint) value);
}

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  ComGoogleCommonPrimitivesUnsignedInteger_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(value);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_([((JavaMathBigInteger *) nil_chk(value)) signum] >= 0 && [value bitLength] <= JavaLangInteger_SIZE, @"value (%s) is outside the range for an unsigned integer value", value);
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_([value intValue]);
}

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithNSString_(NSString *string) {
  ComGoogleCommonPrimitivesUnsignedInteger_initialize();
  return ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithNSString_withInt_(string, 10);
}

ComGoogleCommonPrimitivesUnsignedInteger *ComGoogleCommonPrimitivesUnsignedInteger_valueOfWithNSString_withInt_(NSString *string, jint radix) {
  ComGoogleCommonPrimitivesUnsignedInteger_initialize();
  return ComGoogleCommonPrimitivesUnsignedInteger_fromIntBitsWithInt_(ComGoogleCommonPrimitivesUnsignedInts_parseUnsignedIntWithNSString_withInt_(string, radix));
}

IOSObjectArray *ComGoogleCommonPrimitivesUnsignedInteger__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesUnsignedInteger)
