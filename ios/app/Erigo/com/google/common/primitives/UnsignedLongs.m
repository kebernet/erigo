//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/primitives/UnsignedLongs.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/primitives/Longs.h"
#include "com/google/common/primitives/ParseRequest.h"
#include "com/google/common/primitives/UnsignedLongs.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/math/BigInteger.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface ComGoogleCommonPrimitivesUnsignedLongs ()

- (instancetype)init;

+ (jlong)flipWithLong:(jlong)a;

+ (jboolean)overflowInParseWithLong:(jlong)current
                            withInt:(jint)digit
                            withInt:(jint)radix;

@end

inline IOSLongArray *ComGoogleCommonPrimitivesUnsignedLongs_get_maxValueDivs();
static IOSLongArray *ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesUnsignedLongs, maxValueDivs, IOSLongArray *)

inline IOSIntArray *ComGoogleCommonPrimitivesUnsignedLongs_get_maxValueMods();
static IOSIntArray *ComGoogleCommonPrimitivesUnsignedLongs_maxValueMods;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesUnsignedLongs, maxValueMods, IOSIntArray *)

inline IOSIntArray *ComGoogleCommonPrimitivesUnsignedLongs_get_maxSafeDigits();
static IOSIntArray *ComGoogleCommonPrimitivesUnsignedLongs_maxSafeDigits;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonPrimitivesUnsignedLongs, maxSafeDigits, IOSIntArray *)

__attribute__((unused)) static void ComGoogleCommonPrimitivesUnsignedLongs_init(ComGoogleCommonPrimitivesUnsignedLongs *self);

__attribute__((unused)) static ComGoogleCommonPrimitivesUnsignedLongs *new_ComGoogleCommonPrimitivesUnsignedLongs_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonPrimitivesUnsignedLongs *create_ComGoogleCommonPrimitivesUnsignedLongs_init();

__attribute__((unused)) static jlong ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(jlong a);

__attribute__((unused)) static jboolean ComGoogleCommonPrimitivesUnsignedLongs_overflowInParseWithLong_withInt_withInt_(jlong current, jint digit, jint radix);

__attribute__((unused)) static void ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *new_ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesUnsignedLongs)

@implementation ComGoogleCommonPrimitivesUnsignedLongs

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonPrimitivesUnsignedLongs_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jlong)flipWithLong:(jlong)a {
  return ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(a);
}

+ (jint)compareWithLong:(jlong)a
               withLong:(jlong)b {
  return ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(a, b);
}

+ (jlong)minWithLongArray:(IOSLongArray *)array {
  return ComGoogleCommonPrimitivesUnsignedLongs_minWithLongArray_(array);
}

+ (jlong)maxWithLongArray:(IOSLongArray *)array {
  return ComGoogleCommonPrimitivesUnsignedLongs_maxWithLongArray_(array);
}

+ (NSString *)joinWithNSString:(NSString *)separator
                 withLongArray:(IOSLongArray *)array {
  return ComGoogleCommonPrimitivesUnsignedLongs_joinWithNSString_withLongArray_(separator, array);
}

+ (id<JavaUtilComparator>)lexicographicalComparator {
  return ComGoogleCommonPrimitivesUnsignedLongs_lexicographicalComparator();
}

+ (jlong)divideWithLong:(jlong)dividend
               withLong:(jlong)divisor {
  return ComGoogleCommonPrimitivesUnsignedLongs_divideWithLong_withLong_(dividend, divisor);
}

+ (jlong)remainderWithLong:(jlong)dividend
                  withLong:(jlong)divisor {
  return ComGoogleCommonPrimitivesUnsignedLongs_remainderWithLong_withLong_(dividend, divisor);
}

+ (jlong)parseUnsignedLongWithNSString:(NSString *)string {
  return ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_(string);
}

+ (jlong)decodeWithNSString:(NSString *)stringValue {
  return ComGoogleCommonPrimitivesUnsignedLongs_decodeWithNSString_(stringValue);
}

+ (jlong)parseUnsignedLongWithNSString:(NSString *)string
                               withInt:(jint)radix {
  return ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_withInt_(string, radix);
}

+ (jboolean)overflowInParseWithLong:(jlong)current
                            withInt:(jint)digit
                            withInt:(jint)radix {
  return ComGoogleCommonPrimitivesUnsignedLongs_overflowInParseWithLong_withInt_withInt_(current, digit, radix);
}

+ (NSString *)toStringWithLong:(jlong)x {
  return ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_(x);
}

+ (NSString *)toStringWithLong:(jlong)x
                       withInt:(jint)radix {
  return ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_withInt_(x, radix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x89, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x89, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 9, -1, -1 },
    { NULL, "J", 0x9, 10, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 11, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 14, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 12, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 16, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(flipWithLong:);
  methods[2].selector = @selector(compareWithLong:withLong:);
  methods[3].selector = @selector(minWithLongArray:);
  methods[4].selector = @selector(maxWithLongArray:);
  methods[5].selector = @selector(joinWithNSString:withLongArray:);
  methods[6].selector = @selector(lexicographicalComparator);
  methods[7].selector = @selector(divideWithLong:withLong:);
  methods[8].selector = @selector(remainderWithLong:withLong:);
  methods[9].selector = @selector(parseUnsignedLongWithNSString:);
  methods[10].selector = @selector(decodeWithNSString:);
  methods[11].selector = @selector(parseUnsignedLongWithNSString:withInt:);
  methods[12].selector = @selector(overflowInParseWithLong:withInt:withInt:);
  methods[13].selector = @selector(toStringWithLong:);
  methods[14].selector = @selector(toStringWithLong:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_VALUE", "J", .constantValue.asLong = ComGoogleCommonPrimitivesUnsignedLongs_MAX_VALUE, 0x19, -1, -1, -1, -1 },
    { "maxValueDivs", "[J", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "maxValueMods", "[I", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "maxSafeDigits", "[I", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
  };
  static const void *ptrTable[] = { "flip", "J", "compare", "JJ", "min", "[J", "max", "join", "LNSString;[J", "()Ljava/util/Comparator<[J>;", "divide", "remainder", "parseUnsignedLong", "LNSString;", "decode", "LNSString;I", "overflowInParse", "JII", "toString", "JI", &ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs, &ComGoogleCommonPrimitivesUnsignedLongs_maxValueMods, &ComGoogleCommonPrimitivesUnsignedLongs_maxSafeDigits, "LComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesUnsignedLongs = { "UnsignedLongs", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x11, 15, 4, -1, 23, -1, -1, -1 };
  return &_ComGoogleCommonPrimitivesUnsignedLongs;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesUnsignedLongs class]) {
    ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs = [IOSLongArray newArrayWithLength:JavaLangCharacter_MAX_RADIX + 1];
    ComGoogleCommonPrimitivesUnsignedLongs_maxValueMods = [IOSIntArray newArrayWithLength:JavaLangCharacter_MAX_RADIX + 1];
    ComGoogleCommonPrimitivesUnsignedLongs_maxSafeDigits = [IOSIntArray newArrayWithLength:JavaLangCharacter_MAX_RADIX + 1];
    {
      JavaMathBigInteger *overflow = new_JavaMathBigInteger_initWithNSString_withInt_(@"10000000000000000", 16);
      for (jint i = JavaLangCharacter_MIN_RADIX; i <= JavaLangCharacter_MAX_RADIX; i++) {
        *IOSLongArray_GetRef(ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs, i) = ComGoogleCommonPrimitivesUnsignedLongs_divideWithLong_withLong_(ComGoogleCommonPrimitivesUnsignedLongs_MAX_VALUE, i);
        *IOSIntArray_GetRef(ComGoogleCommonPrimitivesUnsignedLongs_maxValueMods, i) = (jint) ComGoogleCommonPrimitivesUnsignedLongs_remainderWithLong_withLong_(ComGoogleCommonPrimitivesUnsignedLongs_MAX_VALUE, i);
        *IOSIntArray_GetRef(ComGoogleCommonPrimitivesUnsignedLongs_maxSafeDigits, i) = [((NSString *) nil_chk([overflow toStringWithInt:i])) java_length] - 1;
      }
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesUnsignedLongs)
  }
}

@end

void ComGoogleCommonPrimitivesUnsignedLongs_init(ComGoogleCommonPrimitivesUnsignedLongs *self) {
  NSObject_init(self);
}

ComGoogleCommonPrimitivesUnsignedLongs *new_ComGoogleCommonPrimitivesUnsignedLongs_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesUnsignedLongs, init)
}

ComGoogleCommonPrimitivesUnsignedLongs *create_ComGoogleCommonPrimitivesUnsignedLongs_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonPrimitivesUnsignedLongs, init)
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(jlong a) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  return a ^ JavaLangLong_MIN_VALUE;
}

jint ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(jlong a, jlong b) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  return ComGoogleCommonPrimitivesLongs_compareWithLong_withLong_(ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(a), ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(b));
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_minWithLongArray_(IOSLongArray *array) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSLongArray *) nil_chk(array))->size_ > 0);
  jlong min = ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(IOSLongArray_Get(array, 0));
  for (jint i = 1; i < array->size_; i++) {
    jlong next = ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(IOSLongArray_Get(array, i));
    if (next < min) {
      min = next;
    }
  }
  return ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(min);
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_maxWithLongArray_(IOSLongArray *array) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSLongArray *) nil_chk(array))->size_ > 0);
  jlong max = ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(IOSLongArray_Get(array, 0));
  for (jint i = 1; i < array->size_; i++) {
    jlong next = ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(IOSLongArray_Get(array, i));
    if (next > max) {
      max = next;
    }
  }
  return ComGoogleCommonPrimitivesUnsignedLongs_flipWithLong_(max);
}

NSString *ComGoogleCommonPrimitivesUnsignedLongs_joinWithNSString_withLongArray_(NSString *separator, IOSLongArray *array) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(separator);
  if (((IOSLongArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(array->size_ * 5);
  (void) [builder appendWithNSString:ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_(IOSLongArray_Get(array, 0))];
  for (jint i = 1; i < array->size_; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:separator])) appendWithNSString:ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_(IOSLongArray_Get(array, i))];
  }
  return [builder description];
}

id<JavaUtilComparator> ComGoogleCommonPrimitivesUnsignedLongs_lexicographicalComparator() {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  return JreLoadEnum(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator, INSTANCE);
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_divideWithLong_withLong_(jlong dividend, jlong divisor) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  if (divisor < 0) {
    if (ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(dividend, divisor) < 0) {
      return 0;
    }
    else {
      return 1;
    }
  }
  if (dividend >= 0) {
    return dividend / divisor;
  }
  jlong quotient = JreLShift64(((JreURShift64(dividend, 1)) / divisor), 1);
  jlong rem = dividend - quotient * divisor;
  return quotient + (ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(rem, divisor) >= 0 ? 1 : 0);
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_remainderWithLong_withLong_(jlong dividend, jlong divisor) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  if (divisor < 0) {
    if (ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(dividend, divisor) < 0) {
      return dividend;
    }
    else {
      return dividend - divisor;
    }
  }
  if (dividend >= 0) {
    return dividend % divisor;
  }
  jlong quotient = JreLShift64(((JreURShift64(dividend, 1)) / divisor), 1);
  jlong rem = dividend - quotient * divisor;
  return rem - (ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(rem, divisor) >= 0 ? divisor : 0);
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_(NSString *string) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  return ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_withInt_(string, 10);
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_decodeWithNSString_(NSString *stringValue) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  ComGoogleCommonPrimitivesParseRequest *request = ComGoogleCommonPrimitivesParseRequest_fromStringWithNSString_(stringValue);
  @try {
    return ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_withInt_(((ComGoogleCommonPrimitivesParseRequest *) nil_chk(request))->rawValue_, request->radix_);
  }
  @catch (JavaLangNumberFormatException *e) {
    JavaLangNumberFormatException *decodeException = new_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$$", @"Error parsing value: ", stringValue));
    (void) [decodeException initCauseWithNSException:e];
    @throw decodeException;
  }
}

jlong ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_withInt_(NSString *string, jint radix) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(string);
  if ([((NSString *) nil_chk(string)) java_length] == 0) {
    @throw new_JavaLangNumberFormatException_initWithNSString_(@"empty string");
  }
  if (radix < JavaLangCharacter_MIN_RADIX || radix > JavaLangCharacter_MAX_RADIX) {
    @throw new_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$I", @"illegal radix: ", radix));
  }
  jint maxSafePos = IOSIntArray_Get(nil_chk(ComGoogleCommonPrimitivesUnsignedLongs_maxSafeDigits), radix) - 1;
  jlong value = 0;
  for (jint pos = 0; pos < [string java_length]; pos++) {
    jint digit = JavaLangCharacter_digitWithChar_withInt_([string charAtWithInt:pos], radix);
    if (digit == -1) {
      @throw new_JavaLangNumberFormatException_initWithNSString_(string);
    }
    if (pos > maxSafePos && ComGoogleCommonPrimitivesUnsignedLongs_overflowInParseWithLong_withInt_withInt_(value, digit, radix)) {
      @throw new_JavaLangNumberFormatException_initWithNSString_(JreStrcat("$$", @"Too large for unsigned long: ", string));
    }
    value = (value * radix) + digit;
  }
  return value;
}

jboolean ComGoogleCommonPrimitivesUnsignedLongs_overflowInParseWithLong_withInt_withInt_(jlong current, jint digit, jint radix) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  if (current >= 0) {
    if (current < IOSLongArray_Get(nil_chk(ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs), radix)) {
      return false;
    }
    if (current > IOSLongArray_Get(ComGoogleCommonPrimitivesUnsignedLongs_maxValueDivs, radix)) {
      return true;
    }
    return (digit > IOSIntArray_Get(nil_chk(ComGoogleCommonPrimitivesUnsignedLongs_maxValueMods), radix));
  }
  return true;
}

NSString *ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_(jlong x) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  return ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_withInt_(x, 10);
}

NSString *ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_withInt_(jlong x, jint radix) {
  ComGoogleCommonPrimitivesUnsignedLongs_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withInt_(radix >= JavaLangCharacter_MIN_RADIX && radix <= JavaLangCharacter_MAX_RADIX, @"radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX", radix);
  if (x == 0) {
    return @"0";
  }
  else if (x > 0) {
    return JavaLangLong_toStringWithLong_withInt_(x, radix);
  }
  else {
    IOSCharArray *buf = [IOSCharArray newArrayWithLength:64];
    jint i = buf->size_;
    if ((radix & (radix - 1)) == 0) {
      jint shift = JavaLangInteger_numberOfTrailingZerosWithInt_(radix);
      jint mask = radix - 1;
      do {
        *IOSCharArray_GetRef(buf, --i) = JavaLangCharacter_forDigitWithInt_withInt_(((jint) x) & mask, radix);
        JreURShiftAssignLong(&x, shift);
      }
      while (x != 0);
    }
    else {
      jlong quotient;
      if ((radix & 1) == 0) {
        quotient = (JreURShift64(x, 1)) / (JreURShift32(radix, 1));
      }
      else {
        quotient = ComGoogleCommonPrimitivesUnsignedLongs_divideWithLong_withLong_(x, radix);
      }
      jlong rem = x - quotient * radix;
      *IOSCharArray_GetRef(buf, --i) = JavaLangCharacter_forDigitWithInt_withInt_((jint) rem, radix);
      x = quotient;
      while (x > 0) {
        *IOSCharArray_GetRef(buf, --i) = JavaLangCharacter_forDigitWithInt_withInt_((jint) (x % radix), radix);
        x /= radix;
      }
    }
    return [NSString java_stringWithCharacters:buf offset:i length:buf->size_ - i];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesUnsignedLongs)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator)

ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values_[1];

@implementation ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator

- (jint)compareWithId:(IOSLongArray *)left
               withId:(IOSLongArray *)right {
  jint minLength = JavaLangMath_minWithInt_withInt_(((IOSLongArray *) nil_chk(left))->size_, ((IOSLongArray *) nil_chk(right))->size_);
  for (jint i = 0; i < minLength; i++) {
    if (IOSLongArray_Get(left, i) != IOSLongArray_Get(right, i)) {
      return ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(IOSLongArray_Get(left, i), IOSLongArray_Get(right, i));
    }
  }
  return left->size_ - right->size_;
}

- (NSString *)description {
  return @"UnsignedLongs.lexicographicalComparator()";
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values();
}

+ (ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "[J[J", "toString", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator, INSTANCE), "LComGoogleCommonPrimitivesUnsignedLongs;", "Ljava/lang/Enum<Lcom/google/common/primitives/UnsignedLongs$LexicographicalComparator;>;Ljava/util/Comparator<[J>;" };
  static const J2ObjcClassInfo _ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator = { "LexicographicalComparator", "com.google.common.primitives", ptrTable, methods, fields, 7, 0x4018, 4, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator;
}

+ (void)initialize {
  if (self == [ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator class]) {
    JreEnum(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator, INSTANCE) = new_ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initWithNSString_withInt_(@"INSTANCE", 0);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator)
  }
}

@end

void ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initWithNSString_withInt_(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *new_ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values() {
  ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values_ count:1 type:ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_class_()];
}

ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initialize();
  for (int i = 0; i < 1; i++) {
    ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *e = ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator)
