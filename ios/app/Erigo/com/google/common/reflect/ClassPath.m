//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/reflect/ClassPath.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/CharMatcher.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Predicate.h"
#include "com/google/common/base/Splitter.h"
#include "com/google/common/collect/FluentIterable.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/MultimapBuilder.h"
#include "com/google/common/collect/SetMultimap.h"
#include "com/google/common/collect/Sets.h"
#include "com/google/common/io/ByteSource.h"
#include "com/google/common/io/CharSource.h"
#include "com/google/common/io/Resources.h"
#include "com/google/common/reflect/ClassPath.h"
#include "com/google/common/reflect/Reflection.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Iterable.h"
#include "java/lang/SecurityException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URI.h"
#include "java/net/URISyntaxException.h"
#include "java/net/URL.h"
#include "java/net/URLClassLoader.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/function/Predicate.h"
#include "java/util/jar/Attributes.h"
#include "java/util/jar/JarEntry.h"
#include "java/util/jar/JarFile.h"
#include "java/util/jar/Manifest.h"
#include "java/util/logging/Logger.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonReflectClassPath () {
 @public
  ComGoogleCommonCollectImmutableSet *resources_;
}

- (instancetype)initWithComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)resources;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath, resources_, ComGoogleCommonCollectImmutableSet *)

inline JavaUtilLoggingLogger *ComGoogleCommonReflectClassPath_get_logger();
static JavaUtilLoggingLogger *ComGoogleCommonReflectClassPath_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectClassPath, logger, JavaUtilLoggingLogger *)

inline id<ComGoogleCommonBasePredicate> ComGoogleCommonReflectClassPath_get_IS_TOP_LEVEL();
static id<ComGoogleCommonBasePredicate> ComGoogleCommonReflectClassPath_IS_TOP_LEVEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectClassPath, IS_TOP_LEVEL, id<ComGoogleCommonBasePredicate>)

inline ComGoogleCommonBaseSplitter *ComGoogleCommonReflectClassPath_get_CLASS_PATH_ATTRIBUTE_SEPARATOR();
static ComGoogleCommonBaseSplitter *ComGoogleCommonReflectClassPath_CLASS_PATH_ATTRIBUTE_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectClassPath, CLASS_PATH_ATTRIBUTE_SEPARATOR, ComGoogleCommonBaseSplitter *)

inline NSString *ComGoogleCommonReflectClassPath_get_CLASS_FILE_NAME_EXTENSION();
static NSString *ComGoogleCommonReflectClassPath_CLASS_FILE_NAME_EXTENSION = @".class";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectClassPath, CLASS_FILE_NAME_EXTENSION, NSString *)

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonReflectClassPath *self, ComGoogleCommonCollectImmutableSet *resources);

__attribute__((unused)) static ComGoogleCommonReflectClassPath *new_ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableSet *resources) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectClassPath *create_ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableSet *resources);

@interface ComGoogleCommonReflectClassPath_1 : NSObject < ComGoogleCommonBasePredicate >

- (instancetype)init;

- (jboolean)applyWithId:(ComGoogleCommonReflectClassPath_ClassInfo *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectClassPath_1)

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_1_init(ComGoogleCommonReflectClassPath_1 *self);

__attribute__((unused)) static ComGoogleCommonReflectClassPath_1 *new_ComGoogleCommonReflectClassPath_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectClassPath_1 *create_ComGoogleCommonReflectClassPath_1_init();

@interface ComGoogleCommonReflectClassPath_ResourceInfo () {
 @public
  NSString *resourceName_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_ResourceInfo, resourceName_, NSString *)

__attribute__((unused)) static JavaNetURL *ComGoogleCommonReflectClassPath_ResourceInfo_url(ComGoogleCommonReflectClassPath_ResourceInfo *self);

@interface ComGoogleCommonReflectClassPath_ClassInfo () {
 @public
  NSString *className__;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_ClassInfo, className__, NSString *)

@interface ComGoogleCommonReflectClassPath_Scanner () {
 @public
  id<JavaUtilSet> scannedUris_;
}

- (void)scanFromWithJavaIoFile:(JavaIoFile *)file
       withJavaLangClassLoader:(JavaLangClassLoader *)classloader;

- (void)scanJarWithJavaIoFile:(JavaIoFile *)file
      withJavaLangClassLoader:(JavaLangClassLoader *)classloader;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_Scanner, scannedUris_, id<JavaUtilSet>)

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_Scanner_scanWithJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaLangClassLoader *classloader);

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_Scanner_scanWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader);

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_Scanner_scanFromWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader);

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_Scanner_scanJarWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectClassPath_Scanner__Annotations$0();

@interface ComGoogleCommonReflectClassPath_DefaultScanner () {
 @public
  id<ComGoogleCommonCollectSetMultimap> resources_;
}

- (void)scanDirectoryWithJavaIoFile:(JavaIoFile *)directory
            withJavaLangClassLoader:(JavaLangClassLoader *)classloader
                       withNSString:(NSString *)packagePrefix
                    withJavaUtilSet:(id<JavaUtilSet>)currentPath;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_DefaultScanner, resources_, id<ComGoogleCommonCollectSetMultimap>)

__attribute__((unused)) static void ComGoogleCommonReflectClassPath_DefaultScanner_scanDirectoryWithJavaIoFile_withJavaLangClassLoader_withNSString_withJavaUtilSet_(ComGoogleCommonReflectClassPath_DefaultScanner *self, JavaIoFile *directory, JavaLangClassLoader *classloader, NSString *packagePrefix, id<JavaUtilSet> currentPath);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectClassPath)

@implementation ComGoogleCommonReflectClassPath

- (instancetype)initWithComGoogleCommonCollectImmutableSet:(ComGoogleCommonCollectImmutableSet *)resources {
  ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(self, resources);
  return self;
}

+ (ComGoogleCommonReflectClassPath *)fromWithJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  return ComGoogleCommonReflectClassPath_fromWithJavaLangClassLoader_(classloader);
}

- (ComGoogleCommonCollectImmutableSet *)getResources {
  return resources_;
}

- (ComGoogleCommonCollectImmutableSet *)getAllClasses {
  return [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(resources_))) filterWithIOSClass:ComGoogleCommonReflectClassPath_ClassInfo_class_()])) toSet];
}

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClasses {
  return [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(resources_))) filterWithIOSClass:ComGoogleCommonReflectClassPath_ClassInfo_class_()])) filterWithComGoogleCommonBasePredicate:ComGoogleCommonReflectClassPath_IS_TOP_LEVEL])) toSet];
}

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClassesWithNSString:(NSString *)packageName {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(packageName);
  ComGoogleCommonCollectImmutableSet_Builder *builder = ComGoogleCommonCollectImmutableSet_builder();
  for (ComGoogleCommonReflectClassPath_ClassInfo * __strong classInfo in nil_chk([self getTopLevelClasses])) {
    if ([((NSString *) nil_chk([((ComGoogleCommonReflectClassPath_ClassInfo *) nil_chk(classInfo)) getPackageName])) isEqual:packageName]) {
      (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) addWithId:classInfo];
    }
  }
  return [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) build];
}

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClassesRecursiveWithNSString:(NSString *)packageName {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(packageName);
  NSString *packagePrefix = JreStrcat("$C", packageName, '.');
  ComGoogleCommonCollectImmutableSet_Builder *builder = ComGoogleCommonCollectImmutableSet_builder();
  for (ComGoogleCommonReflectClassPath_ClassInfo * __strong classInfo in nil_chk([self getTopLevelClasses])) {
    if ([((NSString *) nil_chk([((ComGoogleCommonReflectClassPath_ClassInfo *) nil_chk(classInfo)) getName])) java_hasPrefix:packagePrefix]) {
      (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) addWithId:classInfo];
    }
  }
  return [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) build];
}

+ (NSString *)getClassNameWithNSString:(NSString *)filename {
  return ComGoogleCommonReflectClassPath_getClassNameWithNSString_(filename);
}

+ (JavaIoFile *)toFileWithJavaNetURL:(JavaNetURL *)url {
  return ComGoogleCommonReflectClassPath_toFileWithJavaNetURL_(url);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonReflectClassPath;", 0x9, 2, 3, 4, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x1, 10, 8, -1, 9, -1, -1 },
    { NULL, "LNSString;", 0x8, 11, 8, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x8, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectImmutableSet:);
  methods[1].selector = @selector(fromWithJavaLangClassLoader:);
  methods[2].selector = @selector(getResources);
  methods[3].selector = @selector(getAllClasses);
  methods[4].selector = @selector(getTopLevelClasses);
  methods[5].selector = @selector(getTopLevelClassesWithNSString:);
  methods[6].selector = @selector(getTopLevelClassesRecursiveWithNSString:);
  methods[7].selector = @selector(getClassNameWithNSString:);
  methods[8].selector = @selector(toFileWithJavaNetURL:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "IS_TOP_LEVEL", "LComGoogleCommonBasePredicate;", .constantValue.asLong = 0, 0x1a, -1, 15, 16, -1 },
    { "CLASS_PATH_ATTRIBUTE_SEPARATOR", "LComGoogleCommonBaseSplitter;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "CLASS_FILE_NAME_EXTENSION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "resources_", "LComGoogleCommonCollectImmutableSet;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableSet;", "(Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ResourceInfo;>;)V", "from", "LJavaLangClassLoader;", "LJavaIoIOException;", "()Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ResourceInfo;>;", "()Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ClassInfo;>;", "getTopLevelClasses", "LNSString;", "(Ljava/lang/String;)Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ClassInfo;>;", "getTopLevelClassesRecursive", "getClassName", "toFile", "LJavaNetURL;", &ComGoogleCommonReflectClassPath_logger, &ComGoogleCommonReflectClassPath_IS_TOP_LEVEL, "Lcom/google/common/base/Predicate<Lcom/google/common/reflect/ClassPath$ClassInfo;>;", &ComGoogleCommonReflectClassPath_CLASS_PATH_ATTRIBUTE_SEPARATOR, &ComGoogleCommonReflectClassPath_CLASS_FILE_NAME_EXTENSION, "Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ResourceInfo;>;", "LComGoogleCommonReflectClassPath_ResourceInfo;LComGoogleCommonReflectClassPath_ClassInfo;LComGoogleCommonReflectClassPath_Scanner;LComGoogleCommonReflectClassPath_DefaultScanner;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath = { "ClassPath", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x11, 9, 5, -1, 20, -1, -1, -1 };
  return &_ComGoogleCommonReflectClassPath;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectClassPath class]) {
    ComGoogleCommonReflectClassPath_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([ComGoogleCommonReflectClassPath_class_() getName]);
    ComGoogleCommonReflectClassPath_IS_TOP_LEVEL = new_ComGoogleCommonReflectClassPath_1_init();
    ComGoogleCommonReflectClassPath_CLASS_PATH_ATTRIBUTE_SEPARATOR = [((ComGoogleCommonBaseSplitter *) nil_chk(ComGoogleCommonBaseSplitter_onWithNSString_(@" "))) omitEmptyStrings];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectClassPath)
  }
}

@end

void ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonReflectClassPath *self, ComGoogleCommonCollectImmutableSet *resources) {
  NSObject_init(self);
  self->resources_ = resources;
}

ComGoogleCommonReflectClassPath *new_ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableSet *resources) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectClassPath, initWithComGoogleCommonCollectImmutableSet_, resources)
}

ComGoogleCommonReflectClassPath *create_ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_(ComGoogleCommonCollectImmutableSet *resources) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectClassPath, initWithComGoogleCommonCollectImmutableSet_, resources)
}

ComGoogleCommonReflectClassPath *ComGoogleCommonReflectClassPath_fromWithJavaLangClassLoader_(JavaLangClassLoader *classloader) {
  ComGoogleCommonReflectClassPath_initialize();
  ComGoogleCommonReflectClassPath_DefaultScanner *scanner = new_ComGoogleCommonReflectClassPath_DefaultScanner_init();
  ComGoogleCommonReflectClassPath_Scanner_scanWithJavaLangClassLoader_(scanner, classloader);
  return new_ComGoogleCommonReflectClassPath_initWithComGoogleCommonCollectImmutableSet_([scanner getResources]);
}

NSString *ComGoogleCommonReflectClassPath_getClassNameWithNSString_(NSString *filename) {
  ComGoogleCommonReflectClassPath_initialize();
  jint classNameEnd = [((NSString *) nil_chk(filename)) java_length] - [((NSString *) nil_chk(ComGoogleCommonReflectClassPath_CLASS_FILE_NAME_EXTENSION)) java_length];
  return [((NSString *) nil_chk([filename java_substring:0 endIndex:classNameEnd])) java_replace:'/' withChar:'.'];
}

JavaIoFile *ComGoogleCommonReflectClassPath_toFileWithJavaNetURL_(JavaNetURL *url) {
  ComGoogleCommonReflectClassPath_initialize();
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_([((NSString *) nil_chk([((JavaNetURL *) nil_chk(url)) getProtocol])) isEqual:@"file"]);
  @try {
    return new_JavaIoFile_initWithJavaNetURI_([url toURI]);
  }
  @catch (JavaNetURISyntaxException *e) {
    return new_JavaIoFile_initWithNSString_([url getPath]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectClassPath)

@implementation ComGoogleCommonReflectClassPath_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectClassPath_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)applyWithId:(ComGoogleCommonReflectClassPath_ClassInfo *)info {
  return [((NSString *) nil_chk(((ComGoogleCommonReflectClassPath_ClassInfo *) nil_chk(info))->className__)) java_indexOf:'$'] == -1;
}

- (jboolean)testWithId:(ComGoogleCommonReflectClassPath_ClassInfo *)arg0 {
  return ComGoogleCommonBasePredicate_testWithId_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LComGoogleCommonReflectClassPath_ClassInfo;", "LComGoogleCommonReflectClassPath;", "Ljava/lang/Object;Lcom/google/common/base/Predicate<Lcom/google/common/reflect/ClassPath$ClassInfo;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_ComGoogleCommonReflectClassPath_1;
}

@end

void ComGoogleCommonReflectClassPath_1_init(ComGoogleCommonReflectClassPath_1 *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectClassPath_1 *new_ComGoogleCommonReflectClassPath_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectClassPath_1, init)
}

ComGoogleCommonReflectClassPath_1 *create_ComGoogleCommonReflectClassPath_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectClassPath_1, init)
}

@implementation ComGoogleCommonReflectClassPath_ResourceInfo

+ (ComGoogleCommonReflectClassPath_ResourceInfo *)ofWithNSString:(NSString *)resourceName
                                         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return ComGoogleCommonReflectClassPath_ResourceInfo_ofWithNSString_withJavaLangClassLoader_(resourceName, loader);
}

- (instancetype)initWithNSString:(NSString *)resourceName
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(self, resourceName, loader);
  return self;
}

- (JavaNetURL *)url {
  return ComGoogleCommonReflectClassPath_ResourceInfo_url(self);
}

- (ComGoogleCommonIoByteSource *)asByteSource {
  return ComGoogleCommonIoResources_asByteSourceWithJavaNetURL_(ComGoogleCommonReflectClassPath_ResourceInfo_url(self));
}

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return ComGoogleCommonIoResources_asCharSourceWithJavaNetURL_withJavaNioCharsetCharset_(ComGoogleCommonReflectClassPath_ResourceInfo_url(self), charset);
}

- (NSString *)getResourceName {
  return resourceName_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(resourceName_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[ComGoogleCommonReflectClassPath_ResourceInfo class]]) {
    ComGoogleCommonReflectClassPath_ResourceInfo *that = (ComGoogleCommonReflectClassPath_ResourceInfo *) cast_chk(obj, [ComGoogleCommonReflectClassPath_ResourceInfo class]);
    return [((NSString *) nil_chk(resourceName_)) isEqual:((ComGoogleCommonReflectClassPath_ResourceInfo *) nil_chk(that))->resourceName_] && loader_ == that->loader_;
  }
  return false;
}

- (NSString *)description {
  return resourceName_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonReflectClassPath_ResourceInfo;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoByteSource;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonIoCharSource;", 0x11, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(ofWithNSString:withJavaLangClassLoader:);
  methods[1].selector = @selector(initWithNSString:withJavaLangClassLoader:);
  methods[2].selector = @selector(url);
  methods[3].selector = @selector(asByteSource);
  methods[4].selector = @selector(asCharSourceWithJavaNioCharsetCharset:);
  methods[5].selector = @selector(getResourceName);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resourceName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "loader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "of", "LNSString;LJavaLangClassLoader;", "asCharSource", "LJavaNioCharsetCharset;", "hashCode", "equals", "LNSObject;", "toString", "LComGoogleCommonReflectClassPath;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath_ResourceInfo = { "ResourceInfo", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x9, 9, 2, 8, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectClassPath_ResourceInfo;
}

@end

ComGoogleCommonReflectClassPath_ResourceInfo *ComGoogleCommonReflectClassPath_ResourceInfo_ofWithNSString_withJavaLangClassLoader_(NSString *resourceName, JavaLangClassLoader *loader) {
  ComGoogleCommonReflectClassPath_ResourceInfo_initialize();
  if ([((NSString *) nil_chk(resourceName)) java_hasSuffix:ComGoogleCommonReflectClassPath_CLASS_FILE_NAME_EXTENSION]) {
    return new_ComGoogleCommonReflectClassPath_ClassInfo_initWithNSString_withJavaLangClassLoader_(resourceName, loader);
  }
  else {
    return new_ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(resourceName, loader);
  }
}

void ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_ResourceInfo *self, NSString *resourceName, JavaLangClassLoader *loader) {
  NSObject_init(self);
  self->resourceName_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(resourceName);
  self->loader_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(loader);
}

ComGoogleCommonReflectClassPath_ResourceInfo *new_ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(NSString *resourceName, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectClassPath_ResourceInfo, initWithNSString_withJavaLangClassLoader_, resourceName, loader)
}

ComGoogleCommonReflectClassPath_ResourceInfo *create_ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(NSString *resourceName, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectClassPath_ResourceInfo, initWithNSString_withJavaLangClassLoader_, resourceName, loader)
}

JavaNetURL *ComGoogleCommonReflectClassPath_ResourceInfo_url(ComGoogleCommonReflectClassPath_ResourceInfo *self) {
  JavaNetURL *url = [((JavaLangClassLoader *) nil_chk(self->loader_)) getResourceWithNSString:self->resourceName_];
  if (url == nil) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(self->resourceName_);
  }
  return url;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectClassPath_ResourceInfo)

@implementation ComGoogleCommonReflectClassPath_ClassInfo

- (instancetype)initWithNSString:(NSString *)resourceName
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  ComGoogleCommonReflectClassPath_ClassInfo_initWithNSString_withJavaLangClassLoader_(self, resourceName, loader);
  return self;
}

- (NSString *)getPackageName {
  return ComGoogleCommonReflectReflection_getPackageNameWithNSString_(className__);
}

- (NSString *)getSimpleName {
  jint lastDollarSign = [((NSString *) nil_chk(className__)) java_lastIndexOf:'$'];
  if (lastDollarSign != -1) {
    NSString *innerClassName = [className__ java_substring:lastDollarSign + 1];
    return [((ComGoogleCommonBaseCharMatcher *) nil_chk(ComGoogleCommonBaseCharMatcher_digit())) trimLeadingFromWithJavaLangCharSequence:innerClassName];
  }
  NSString *packageName = [self getPackageName];
  if ([((NSString *) nil_chk(packageName)) java_isEmpty]) {
    return className__;
  }
  return [className__ java_substring:[packageName java_length] + 1];
}

- (NSString *)getName {
  return className__;
}

- (IOSClass *)load__ {
  @try {
    return [((JavaLangClassLoader *) nil_chk(loader_)) loadClassWithNSString:className__];
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSException_(e);
  }
}

- (NSString *)description {
  return className__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 1, -1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaLangClassLoader:);
  methods[1].selector = @selector(getPackageName);
  methods[2].selector = @selector(getSimpleName);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(load__);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "className__", "LNSString;", .constantValue.asLong = 0, 0x12, 4, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangClassLoader;", "load", "()Ljava/lang/Class<*>;", "toString", "className", "LComGoogleCommonReflectClassPath;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath_ClassInfo = { "ClassInfo", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x19, 6, 1, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectClassPath_ClassInfo;
}

@end

void ComGoogleCommonReflectClassPath_ClassInfo_initWithNSString_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_ClassInfo *self, NSString *resourceName, JavaLangClassLoader *loader) {
  ComGoogleCommonReflectClassPath_ResourceInfo_initWithNSString_withJavaLangClassLoader_(self, resourceName, loader);
  self->className__ = ComGoogleCommonReflectClassPath_getClassNameWithNSString_(resourceName);
}

ComGoogleCommonReflectClassPath_ClassInfo *new_ComGoogleCommonReflectClassPath_ClassInfo_initWithNSString_withJavaLangClassLoader_(NSString *resourceName, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectClassPath_ClassInfo, initWithNSString_withJavaLangClassLoader_, resourceName, loader)
}

ComGoogleCommonReflectClassPath_ClassInfo *create_ComGoogleCommonReflectClassPath_ClassInfo_initWithNSString_withJavaLangClassLoader_(NSString *resourceName, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectClassPath_ClassInfo, initWithNSString_withJavaLangClassLoader_, resourceName, loader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectClassPath_ClassInfo)

@implementation ComGoogleCommonReflectClassPath_Scanner

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectClassPath_Scanner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)scanWithJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  ComGoogleCommonReflectClassPath_Scanner_scanWithJavaLangClassLoader_(self, classloader);
}

- (void)scanDirectoryWithJavaLangClassLoader:(JavaLangClassLoader *)loader
                              withJavaIoFile:(JavaIoFile *)directory {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)scanJarFileWithJavaLangClassLoader:(JavaLangClassLoader *)loader
                    withJavaUtilJarJarFile:(JavaUtilJarJarFile *)file {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)scanWithJavaIoFile:(JavaIoFile *)file
   withJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  ComGoogleCommonReflectClassPath_Scanner_scanWithJavaIoFile_withJavaLangClassLoader_(self, file, classloader);
}

- (void)scanFromWithJavaIoFile:(JavaIoFile *)file
       withJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  ComGoogleCommonReflectClassPath_Scanner_scanFromWithJavaIoFile_withJavaLangClassLoader_(self, file, classloader);
}

- (void)scanJarWithJavaIoFile:(JavaIoFile *)file
      withJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  ComGoogleCommonReflectClassPath_Scanner_scanJarWithJavaIoFile_withJavaLangClassLoader_(self, file, classloader);
}

+ (ComGoogleCommonCollectImmutableSet *)getClassPathFromManifestWithJavaIoFile:(JavaIoFile *)jarFile
                                                       withJavaUtilJarManifest:(JavaUtilJarManifest *)manifest {
  return ComGoogleCommonReflectClassPath_Scanner_getClassPathFromManifestWithJavaIoFile_withJavaUtilJarManifest_(jarFile, manifest);
}

+ (ComGoogleCommonCollectImmutableMap *)getClassPathEntriesWithJavaLangClassLoader:(JavaLangClassLoader *)classloader {
  return ComGoogleCommonReflectClassPath_Scanner_getClassPathEntriesWithJavaLangClassLoader_(classloader);
}

+ (JavaNetURL *)getClassPathEntryWithJavaIoFile:(JavaIoFile *)jarFile
                                   withNSString:(NSString *)path {
  return ComGoogleCommonReflectClassPath_Scanner_getClassPathEntryWithJavaIoFile_withNSString_(jarFile, path);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x404, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x404, 5, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x10, 0, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 7, 2, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x8, 10, 11, -1, 12, -1, 13 },
    { NULL, "LComGoogleCommonCollectImmutableMap;", 0x8, 14, 1, -1, 15, -1, -1 },
    { NULL, "LJavaNetURL;", 0x8, 16, 17, 18, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(scanWithJavaLangClassLoader:);
  methods[2].selector = @selector(scanDirectoryWithJavaLangClassLoader:withJavaIoFile:);
  methods[3].selector = @selector(scanJarFileWithJavaLangClassLoader:withJavaUtilJarJarFile:);
  methods[4].selector = @selector(scanWithJavaIoFile:withJavaLangClassLoader:);
  methods[5].selector = @selector(scanFromWithJavaIoFile:withJavaLangClassLoader:);
  methods[6].selector = @selector(scanJarWithJavaIoFile:withJavaLangClassLoader:);
  methods[7].selector = @selector(getClassPathFromManifestWithJavaIoFile:withJavaUtilJarManifest:);
  methods[8].selector = @selector(getClassPathEntriesWithJavaLangClassLoader:);
  methods[9].selector = @selector(getClassPathEntryWithJavaIoFile:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scannedUris_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
  };
  static const void *ptrTable[] = { "scan", "LJavaLangClassLoader;", "LJavaIoIOException;", "scanDirectory", "LJavaLangClassLoader;LJavaIoFile;", "scanJarFile", "LJavaLangClassLoader;LJavaUtilJarJarFile;", "LJavaIoFile;LJavaLangClassLoader;", "scanFrom", "scanJar", "getClassPathFromManifest", "LJavaIoFile;LJavaUtilJarManifest;", "(Ljava/io/File;Ljava/util/jar/Manifest;)Lcom/google/common/collect/ImmutableSet<Ljava/io/File;>;", (void *)&ComGoogleCommonReflectClassPath_Scanner__Annotations$0, "getClassPathEntries", "(Ljava/lang/ClassLoader;)Lcom/google/common/collect/ImmutableMap<Ljava/io/File;Ljava/lang/ClassLoader;>;", "getClassPathEntry", "LJavaIoFile;LNSString;", "LJavaNetMalformedURLException;", "Ljava/util/Set<Ljava/io/File;>;", "LComGoogleCommonReflectClassPath;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath_Scanner = { "Scanner", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x408, 10, 1, 20, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectClassPath_Scanner;
}

@end

void ComGoogleCommonReflectClassPath_Scanner_init(ComGoogleCommonReflectClassPath_Scanner *self) {
  NSObject_init(self);
  self->scannedUris_ = ComGoogleCommonCollectSets_newHashSet();
}

void ComGoogleCommonReflectClassPath_Scanner_scanWithJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaLangClassLoader *classloader) {
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((ComGoogleCommonCollectImmutableMap *) nil_chk(ComGoogleCommonReflectClassPath_Scanner_getClassPathEntriesWithJavaLangClassLoader_(classloader))) entrySet])) {
    ComGoogleCommonReflectClassPath_Scanner_scanWithJavaIoFile_withJavaLangClassLoader_(self, [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [entry_ getValue]);
  }
}

void ComGoogleCommonReflectClassPath_Scanner_scanWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader) {
  if ([((id<JavaUtilSet>) nil_chk(self->scannedUris_)) addWithId:[((JavaIoFile *) nil_chk(file)) getCanonicalFile]]) {
    ComGoogleCommonReflectClassPath_Scanner_scanFromWithJavaIoFile_withJavaLangClassLoader_(self, file, classloader);
  }
}

void ComGoogleCommonReflectClassPath_Scanner_scanFromWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader) {
  @try {
    if (![((JavaIoFile *) nil_chk(file)) exists]) {
      return;
    }
  }
  @catch (JavaLangSecurityException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonReflectClassPath, logger))) warningWithNSString:JreStrcat("$@$@", @"Cannot access ", file, @": ", e)];
    return;
  }
  if ([file isDirectory]) {
    [self scanDirectoryWithJavaLangClassLoader:classloader withJavaIoFile:file];
  }
  else {
    ComGoogleCommonReflectClassPath_Scanner_scanJarWithJavaIoFile_withJavaLangClassLoader_(self, file, classloader);
  }
}

void ComGoogleCommonReflectClassPath_Scanner_scanJarWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_Scanner *self, JavaIoFile *file, JavaLangClassLoader *classloader) {
  JavaUtilJarJarFile *jarFile;
  @try {
    jarFile = new_JavaUtilJarJarFile_initWithJavaIoFile_(file);
  }
  @catch (JavaIoIOException *e) {
    return;
  }
  @try {
    for (JavaIoFile * __strong path in nil_chk(ComGoogleCommonReflectClassPath_Scanner_getClassPathFromManifestWithJavaIoFile_withJavaUtilJarManifest_(file, [((JavaUtilJarJarFile *) nil_chk(jarFile)) getManifest]))) {
      ComGoogleCommonReflectClassPath_Scanner_scanWithJavaIoFile_withJavaLangClassLoader_(self, path, classloader);
    }
    [self scanJarFileWithJavaLangClassLoader:classloader withJavaUtilJarJarFile:jarFile];
  }
  @finally {
    @try {
      [jarFile close];
    }
    @catch (JavaIoIOException *ignored) {
    }
  }
}

ComGoogleCommonCollectImmutableSet *ComGoogleCommonReflectClassPath_Scanner_getClassPathFromManifestWithJavaIoFile_withJavaUtilJarManifest_(JavaIoFile *jarFile, JavaUtilJarManifest *manifest) {
  ComGoogleCommonReflectClassPath_Scanner_initialize();
  if (manifest == nil) {
    return ComGoogleCommonCollectImmutableSet_of();
  }
  ComGoogleCommonCollectImmutableSet_Builder *builder = ComGoogleCommonCollectImmutableSet_builder();
  NSString *classpathAttribute = [((JavaUtilJarAttributes *) nil_chk([manifest getMainAttributes])) getValueWithNSString:[((JavaUtilJarAttributes_Name *) nil_chk(JreLoadStatic(JavaUtilJarAttributes_Name, CLASS_PATH))) description]];
  if (classpathAttribute != nil) {
    for (NSString * __strong path in nil_chk([((ComGoogleCommonBaseSplitter *) nil_chk(JreLoadStatic(ComGoogleCommonReflectClassPath, CLASS_PATH_ATTRIBUTE_SEPARATOR))) splitWithJavaLangCharSequence:classpathAttribute])) {
      JavaNetURL *url;
      @try {
        url = ComGoogleCommonReflectClassPath_Scanner_getClassPathEntryWithJavaIoFile_withNSString_(jarFile, path);
      }
      @catch (JavaNetMalformedURLException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonReflectClassPath, logger))) warningWithNSString:JreStrcat("$$", @"Invalid Class-Path entry: ", path)];
        continue;
      }
      if ([((NSString *) nil_chk([((JavaNetURL *) nil_chk(url)) getProtocol])) isEqual:@"file"]) {
        (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) addWithId:ComGoogleCommonReflectClassPath_toFileWithJavaNetURL_(url)];
      }
    }
  }
  return [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) build];
}

ComGoogleCommonCollectImmutableMap *ComGoogleCommonReflectClassPath_Scanner_getClassPathEntriesWithJavaLangClassLoader_(JavaLangClassLoader *classloader) {
  ComGoogleCommonReflectClassPath_Scanner_initialize();
  JavaUtilLinkedHashMap *entries = ComGoogleCommonCollectMaps_newLinkedHashMap();
  JavaLangClassLoader *parent = [((JavaLangClassLoader *) nil_chk(classloader)) getParent];
  if (parent != nil) {
    [((JavaUtilLinkedHashMap *) nil_chk(entries)) putAllWithJavaUtilMap:ComGoogleCommonReflectClassPath_Scanner_getClassPathEntriesWithJavaLangClassLoader_(parent)];
  }
  if ([classloader isKindOfClass:[JavaNetURLClassLoader class]]) {
    JavaNetURLClassLoader *urlClassLoader = (JavaNetURLClassLoader *) cast_chk(classloader, [JavaNetURLClassLoader class]);
    {
      IOSObjectArray *a__ = [urlClassLoader getURLs];
      JavaNetURL * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaNetURL * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaNetURL *entry_ = *b__++;
        if ([((NSString *) nil_chk([((JavaNetURL *) nil_chk(entry_)) getProtocol])) isEqual:@"file"]) {
          JavaIoFile *file = ComGoogleCommonReflectClassPath_toFileWithJavaNetURL_(entry_);
          if (![((JavaUtilLinkedHashMap *) nil_chk(entries)) containsKeyWithId:file]) {
            (void) [entries putWithId:file withId:classloader];
          }
        }
      }
    }
  }
  return ComGoogleCommonCollectImmutableMap_copyOfWithJavaUtilMap_(entries);
}

JavaNetURL *ComGoogleCommonReflectClassPath_Scanner_getClassPathEntryWithJavaIoFile_withNSString_(JavaIoFile *jarFile, NSString *path) {
  ComGoogleCommonReflectClassPath_Scanner_initialize();
  return new_JavaNetURL_initWithJavaNetURL_withNSString_([((JavaNetURI *) nil_chk([((JavaIoFile *) nil_chk(jarFile)) toURI])) toURL], path);
}

IOSObjectArray *ComGoogleCommonReflectClassPath_Scanner__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectClassPath_Scanner)

@implementation ComGoogleCommonReflectClassPath_DefaultScanner

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectClassPath_DefaultScanner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonCollectImmutableSet *)getResources {
  ComGoogleCommonCollectImmutableSet_Builder *builder = ComGoogleCommonCollectImmutableSet_builder();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<ComGoogleCommonCollectSetMultimap>) nil_chk(resources_)) entries])) {
    (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) addWithId:ComGoogleCommonReflectClassPath_ResourceInfo_ofWithNSString_withJavaLangClassLoader_([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue], [entry_ getKey])];
  }
  return [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) build];
}

- (void)scanJarFileWithJavaLangClassLoader:(JavaLangClassLoader *)classloader
                    withJavaUtilJarJarFile:(JavaUtilJarJarFile *)file {
  id<JavaUtilEnumeration> entries = [((JavaUtilJarJarFile *) nil_chk(file)) entries];
  while ([((id<JavaUtilEnumeration>) nil_chk(entries)) hasMoreElements]) {
    JavaUtilJarJarEntry *entry_ = [entries nextElement];
    if ([((JavaUtilJarJarEntry *) nil_chk(entry_)) isDirectory] || [((NSString *) nil_chk([entry_ getName])) isEqual:JavaUtilJarJarFile_MANIFEST_NAME]) {
      continue;
    }
    [((id<JavaUtilSet>) nil_chk([((id<ComGoogleCommonCollectSetMultimap>) nil_chk(resources_)) getWithId:classloader])) addWithId:[entry_ getName]];
  }
}

- (void)scanDirectoryWithJavaLangClassLoader:(JavaLangClassLoader *)classloader
                              withJavaIoFile:(JavaIoFile *)directory {
  id<JavaUtilSet> currentPath = new_JavaUtilHashSet_init();
  [currentPath addWithId:[((JavaIoFile *) nil_chk(directory)) getCanonicalFile]];
  ComGoogleCommonReflectClassPath_DefaultScanner_scanDirectoryWithJavaIoFile_withJavaLangClassLoader_withNSString_withJavaUtilSet_(self, directory, classloader, @"", currentPath);
}

- (void)scanDirectoryWithJavaIoFile:(JavaIoFile *)directory
            withJavaLangClassLoader:(JavaLangClassLoader *)classloader
                       withNSString:(NSString *)packagePrefix
                    withJavaUtilSet:(id<JavaUtilSet>)currentPath {
  ComGoogleCommonReflectClassPath_DefaultScanner_scanDirectoryWithJavaIoFile_withJavaLangClassLoader_withNSString_withJavaUtilSet_(self, directory, classloader, packagePrefix, currentPath);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x0, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 6, 5, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getResources);
  methods[2].selector = @selector(scanJarFileWithJavaLangClassLoader:withJavaUtilJarJarFile:);
  methods[3].selector = @selector(scanDirectoryWithJavaLangClassLoader:withJavaIoFile:);
  methods[4].selector = @selector(scanDirectoryWithJavaIoFile:withJavaLangClassLoader:withNSString:withJavaUtilSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resources_", "LComGoogleCommonCollectSetMultimap;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/ClassPath$ResourceInfo;>;", "scanJarFile", "LJavaLangClassLoader;LJavaUtilJarJarFile;", "scanDirectory", "LJavaLangClassLoader;LJavaIoFile;", "LJavaIoIOException;", "LJavaIoFile;LJavaLangClassLoader;LNSString;LJavaUtilSet;", "(Ljava/io/File;Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/Set<Ljava/io/File;>;)V", "Lcom/google/common/collect/SetMultimap<Ljava/lang/ClassLoader;Ljava/lang/String;>;", "LComGoogleCommonReflectClassPath;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectClassPath_DefaultScanner = { "DefaultScanner", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x18, 5, 1, 9, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectClassPath_DefaultScanner;
}

@end

void ComGoogleCommonReflectClassPath_DefaultScanner_init(ComGoogleCommonReflectClassPath_DefaultScanner *self) {
  ComGoogleCommonReflectClassPath_Scanner_init(self);
  self->resources_ = [((ComGoogleCommonCollectMultimapBuilder_SetMultimapBuilder *) nil_chk([((ComGoogleCommonCollectMultimapBuilder_MultimapBuilderWithKeys *) nil_chk(ComGoogleCommonCollectMultimapBuilder_hashKeys())) linkedHashSetValues])) build];
}

ComGoogleCommonReflectClassPath_DefaultScanner *new_ComGoogleCommonReflectClassPath_DefaultScanner_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectClassPath_DefaultScanner, init)
}

ComGoogleCommonReflectClassPath_DefaultScanner *create_ComGoogleCommonReflectClassPath_DefaultScanner_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectClassPath_DefaultScanner, init)
}

void ComGoogleCommonReflectClassPath_DefaultScanner_scanDirectoryWithJavaIoFile_withJavaLangClassLoader_withNSString_withJavaUtilSet_(ComGoogleCommonReflectClassPath_DefaultScanner *self, JavaIoFile *directory, JavaLangClassLoader *classloader, NSString *packagePrefix, id<JavaUtilSet> currentPath) {
  IOSObjectArray *files = [((JavaIoFile *) nil_chk(directory)) listFiles];
  if (files == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComGoogleCommonReflectClassPath, logger))) warningWithNSString:JreStrcat("$@", @"Cannot read directory ", directory)];
    return;
  }
  {
    IOSObjectArray *a__ = files;
    JavaIoFile * const *b__ = a__->buffer_;
    JavaIoFile * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaIoFile *f = *b__++;
      NSString *name = [((JavaIoFile *) nil_chk(f)) getName];
      if ([f isDirectory]) {
        JavaIoFile *deref = [f getCanonicalFile];
        if ([((id<JavaUtilSet>) nil_chk(currentPath)) addWithId:deref]) {
          ComGoogleCommonReflectClassPath_DefaultScanner_scanDirectoryWithJavaIoFile_withJavaLangClassLoader_withNSString_withJavaUtilSet_(self, deref, classloader, JreStrcat("$$C", packagePrefix, name, '/'), currentPath);
          [currentPath removeWithId:deref];
        }
      }
      else {
        NSString *resourceName = JreStrcat("$$", packagePrefix, name);
        if (![resourceName isEqual:JavaUtilJarJarFile_MANIFEST_NAME]) {
          [((id<JavaUtilSet>) nil_chk([((id<ComGoogleCommonCollectSetMultimap>) nil_chk(self->resources_)) getWithId:classloader])) addWithId:resourceName];
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectClassPath_DefaultScanner)
