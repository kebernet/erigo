//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/reflect/Invokable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/reflect/Element.h"
#include "com/google/common/reflect/Invokable.h"
#include "com/google/common/reflect/Parameter.h"
#include "com/google/common/reflect/TypeToken.h"
#include "com/google/common/reflect/Types.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/AccessibleObject.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Member.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/util/Arrays.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectInvokable_getReturnType(ComGoogleCommonReflectInvokable *self);

__attribute__((unused)) static ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_returningWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectInvokable *self, ComGoogleCommonReflectTypeToken *returnType);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectInvokable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectInvokable__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectInvokable_MethodInvokable__Annotations$0();

@interface ComGoogleCommonReflectInvokable_ConstructorInvokable ()

- (jboolean)mayNeedHiddenThis;

@end

__attribute__((unused)) static jboolean ComGoogleCommonReflectInvokable_ConstructorInvokable_mayNeedHiddenThis(ComGoogleCommonReflectInvokable_ConstructorInvokable *self);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectInvokable_ConstructorInvokable__Annotations$0();

@implementation ComGoogleCommonReflectInvokable

- (instancetype)initWithJavaLangReflectAccessibleObject:(JavaLangReflectAccessibleObject<JavaLangReflectMember> *)member {
  ComGoogleCommonReflectInvokable_initWithJavaLangReflectAccessibleObject_(self, member);
  return self;
}

+ (ComGoogleCommonReflectInvokable *)fromWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return ComGoogleCommonReflectInvokable_fromWithJavaLangReflectMethod_(method);
}

+ (ComGoogleCommonReflectInvokable *)fromWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor {
  return ComGoogleCommonReflectInvokable_fromWithJavaLangReflectConstructor_(constructor);
}

- (jboolean)isOverridable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isVarArgs {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)invokeWithId:(id)receiver
 withNSObjectArray:(IOSObjectArray *)args {
  return [self invokeInternalWithId:receiver withNSObjectArray:ComGoogleCommonBasePreconditions_checkNotNullWithId_(args)];
}

- (ComGoogleCommonReflectTypeToken *)getReturnType {
  return ComGoogleCommonReflectInvokable_getReturnType(self);
}

- (ComGoogleCommonCollectImmutableList *)getParameters {
  IOSObjectArray *parameterTypes = [self getGenericParameterTypes];
  IOSObjectArray *annotations = [self getParameterAnnotations];
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(parameterTypes))->size_; i++) {
    (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:new_ComGoogleCommonReflectParameter_initWithComGoogleCommonReflectInvokable_withInt_withComGoogleCommonReflectTypeToken_withJavaLangAnnotationAnnotationArray_(self, i, ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(IOSObjectArray_Get(parameterTypes, i)), IOSObjectArray_Get(nil_chk(annotations), i))];
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build];
}

- (ComGoogleCommonCollectImmutableList *)getExceptionTypes {
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  {
    IOSObjectArray *a__ = [self getGenericExceptionTypes];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> type = *b__++;
      ComGoogleCommonReflectTypeToken *exceptionType = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(type);
      (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:exceptionType];
    }
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build];
}

- (ComGoogleCommonReflectInvokable *)returningWithIOSClass:(IOSClass *)returnType {
  return ComGoogleCommonReflectInvokable_returningWithComGoogleCommonReflectTypeToken_(self, ComGoogleCommonReflectTypeToken_ofWithIOSClass_(returnType));
}

- (ComGoogleCommonReflectInvokable *)returningWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)returnType {
  return ComGoogleCommonReflectInvokable_returningWithComGoogleCommonReflectTypeToken_(self, returnType);
}

- (IOSClass *)getDeclaringClass {
  return [super getDeclaringClass];
}

- (ComGoogleCommonReflectTypeToken *)getOwnerType {
  return ComGoogleCommonReflectTypeToken_ofWithIOSClass_([self getDeclaringClass]);
}

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getGenericParameterTypes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getGenericExceptionTypes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getParameterAnnotations {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaLangReflectType>)getGenericReturnType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x9, 2, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x91, 7, 8, 9, 10, -1, 11 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, -1, -1, -1, 12, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x11, -1, -1, -1, 13, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x11, -1, -1, -1, 14, -1, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x11, 15, 16, -1, 17, -1, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x11, 15, 18, -1, 19, -1, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 20, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x1, -1, -1, -1, 21, -1, -1 },
    { NULL, "LNSObject;", 0x400, 22, 8, 9, -1, -1, 23 },
    { NULL, "[LJavaLangReflectType;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[LJavaLangAnnotationAnnotation;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x400, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectAccessibleObject:);
  methods[1].selector = @selector(fromWithJavaLangReflectMethod:);
  methods[2].selector = @selector(fromWithJavaLangReflectConstructor:);
  methods[3].selector = @selector(isOverridable);
  methods[4].selector = @selector(isVarArgs);
  methods[5].selector = @selector(invokeWithId:withNSObjectArray:);
  methods[6].selector = @selector(getReturnType);
  methods[7].selector = @selector(getParameters);
  methods[8].selector = @selector(getExceptionTypes);
  methods[9].selector = @selector(returningWithIOSClass:);
  methods[10].selector = @selector(returningWithComGoogleCommonReflectTypeToken:);
  methods[11].selector = @selector(getDeclaringClass);
  methods[12].selector = @selector(getOwnerType);
  methods[13].selector = @selector(invokeInternalWithId:withNSObjectArray:);
  methods[14].selector = @selector(getGenericParameterTypes);
  methods[15].selector = @selector(getGenericExceptionTypes);
  methods[16].selector = @selector(getParameterAnnotations);
  methods[17].selector = @selector(getGenericReturnType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangReflectAccessibleObject;", "<M:Ljava/lang/reflect/AccessibleObject;:Ljava/lang/reflect/Member;>(TM;)V", "from", "LJavaLangReflectMethod;", "(Ljava/lang/reflect/Method;)Lcom/google/common/reflect/Invokable<*Ljava/lang/Object;>;", "LJavaLangReflectConstructor;", "<T:Ljava/lang/Object;>(Ljava/lang/reflect/Constructor<TT;>;)Lcom/google/common/reflect/Invokable<TT;TT;>;", "invoke", "LNSObject;[LNSObject;", "LJavaLangReflectInvocationTargetException;LJavaLangIllegalAccessException;", "(TT;[Ljava/lang/Object;)TR;", (void *)&ComGoogleCommonReflectInvokable__Annotations$0, "()Lcom/google/common/reflect/TypeToken<+TR;>;", "()Lcom/google/common/collect/ImmutableList<Lcom/google/common/reflect/Parameter;>;", "()Lcom/google/common/collect/ImmutableList<Lcom/google/common/reflect/TypeToken<+Ljava/lang/Throwable;>;>;", "returning", "LIOSClass;", "<R1:TR;>(Ljava/lang/Class<TR1;>;)Lcom/google/common/reflect/Invokable<TT;TR1;>;", "LComGoogleCommonReflectTypeToken;", "<R1:TR;>(Lcom/google/common/reflect/TypeToken<TR1;>;)Lcom/google/common/reflect/Invokable<TT;TR1;>;", "()Ljava/lang/Class<-TT;>;", "()Lcom/google/common/reflect/TypeToken<TT;>;", "invokeInternal", (void *)&ComGoogleCommonReflectInvokable__Annotations$1, "LComGoogleCommonReflectInvokable_MethodInvokable;LComGoogleCommonReflectInvokable_ConstructorInvokable;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lcom/google/common/reflect/Element;Ljava/lang/reflect/GenericDeclaration;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectInvokable = { "Invokable", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x401, 18, 0, -1, 24, -1, 25, -1 };
  return &_ComGoogleCommonReflectInvokable;
}

@end

void ComGoogleCommonReflectInvokable_initWithJavaLangReflectAccessibleObject_(ComGoogleCommonReflectInvokable *self, JavaLangReflectAccessibleObject<JavaLangReflectMember> *member) {
  ComGoogleCommonReflectElement_initWithJavaLangReflectAccessibleObject_(self, member);
}

ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_fromWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  ComGoogleCommonReflectInvokable_initialize();
  return new_ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(method);
}

ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_fromWithJavaLangReflectConstructor_(JavaLangReflectConstructor *constructor) {
  ComGoogleCommonReflectInvokable_initialize();
  return new_ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(constructor);
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectInvokable_getReturnType(ComGoogleCommonReflectInvokable *self) {
  return ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([self getGenericReturnType]);
}

ComGoogleCommonReflectInvokable *ComGoogleCommonReflectInvokable_returningWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectInvokable *self, ComGoogleCommonReflectTypeToken *returnType) {
  if (![((ComGoogleCommonReflectTypeToken *) nil_chk(returnType)) isSupertypeOfWithComGoogleCommonReflectTypeToken:ComGoogleCommonReflectInvokable_getReturnType(self)]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Invokable is known to return ", ComGoogleCommonReflectInvokable_getReturnType(self), @", not ", returnType));
  }
  ComGoogleCommonReflectInvokable *specialized = self;
  return specialized;
}

IOSObjectArray *ComGoogleCommonReflectInvokable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonReflectInvokable__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectInvokable)

@implementation ComGoogleCommonReflectInvokable_MethodInvokable

- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(self, method);
  return self;
}

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args {
  return [((JavaLangReflectMethod *) nil_chk(method_)) invokeWithId:receiver withNSObjectArray:args];
}

- (id<JavaLangReflectType>)getGenericReturnType {
  return [((JavaLangReflectMethod *) nil_chk(method_)) getGenericReturnType];
}

- (IOSObjectArray *)getGenericParameterTypes {
  return [((JavaLangReflectMethod *) nil_chk(method_)) getGenericParameterTypes];
}

- (IOSObjectArray *)getGenericExceptionTypes {
  return [((JavaLangReflectMethod *) nil_chk(method_)) getGenericExceptionTypes];
}

- (IOSObjectArray *)getParameterAnnotations {
  return [((JavaLangReflectMethod *) nil_chk(method_)) getParameterAnnotations];
}

- (IOSObjectArray *)getTypeParameters {
  return [((JavaLangReflectMethod *) nil_chk(method_)) getTypeParameters];
}

- (jboolean)isOverridable {
  return !([self isFinal] || [self isPrivate] || [self isStatic] || JavaLangReflectModifier_isFinalWithInt_([((IOSClass *) nil_chk([self getDeclaringClass])) getModifiers]));
}

- (jboolean)isVarArgs {
  return [((JavaLangReflectMethod *) nil_chk(method_)) isVarArgs];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x10, 1, 2, 3, -1, -1, 4 },
    { NULL, "LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[LJavaLangAnnotationAnnotation;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectTypeVariable;", 0x11, -1, -1, -1, 5, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectMethod:);
  methods[1].selector = @selector(invokeInternalWithId:withNSObjectArray:);
  methods[2].selector = @selector(getGenericReturnType);
  methods[3].selector = @selector(getGenericParameterTypes);
  methods[4].selector = @selector(getGenericExceptionTypes);
  methods[5].selector = @selector(getParameterAnnotations);
  methods[6].selector = @selector(getTypeParameters);
  methods[7].selector = @selector(isOverridable);
  methods[8].selector = @selector(isVarArgs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "method_", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectMethod;", "invokeInternal", "LNSObject;[LNSObject;", "LJavaLangReflectInvocationTargetException;LJavaLangIllegalAccessException;", (void *)&ComGoogleCommonReflectInvokable_MethodInvokable__Annotations$0, "()[Ljava/lang/reflect/TypeVariable<*>;", "LComGoogleCommonReflectInvokable;", "<T:Ljava/lang/Object;>Lcom/google/common/reflect/Invokable<TT;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectInvokable_MethodInvokable = { "MethodInvokable", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8, 9, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonReflectInvokable_MethodInvokable;
}

@end

void ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(ComGoogleCommonReflectInvokable_MethodInvokable *self, JavaLangReflectMethod *method) {
  ComGoogleCommonReflectInvokable_initWithJavaLangReflectAccessibleObject_(self, method);
  self->method_ = method;
}

ComGoogleCommonReflectInvokable_MethodInvokable *new_ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectInvokable_MethodInvokable, initWithJavaLangReflectMethod_, method)
}

ComGoogleCommonReflectInvokable_MethodInvokable *create_ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectInvokable_MethodInvokable, initWithJavaLangReflectMethod_, method)
}

IOSObjectArray *ComGoogleCommonReflectInvokable_MethodInvokable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectInvokable_MethodInvokable)

@implementation ComGoogleCommonReflectInvokable_ConstructorInvokable

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor {
  ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(self, constructor);
  return self;
}

- (id)invokeInternalWithId:(id)receiver
         withNSObjectArray:(IOSObjectArray *)args {
  @try {
    return [((JavaLangReflectConstructor *) nil_chk(constructor_)) newInstanceWithNSObjectArray:args];
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("@$", constructor_, @" failed."), e);
  }
}

- (id<JavaLangReflectType>)getGenericReturnType {
  IOSClass *declaringClass = [self getDeclaringClass];
  IOSObjectArray *typeParams = [((IOSClass *) nil_chk(declaringClass)) getTypeParameters];
  if (((IOSObjectArray *) nil_chk(typeParams))->size_ > 0) {
    return ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(declaringClass, typeParams);
  }
  else {
    return declaringClass;
  }
}

- (IOSObjectArray *)getGenericParameterTypes {
  IOSObjectArray *types = [((JavaLangReflectConstructor *) nil_chk(constructor_)) getGenericParameterTypes];
  if (((IOSObjectArray *) nil_chk(types))->size_ > 0 && ComGoogleCommonReflectInvokable_ConstructorInvokable_mayNeedHiddenThis(self)) {
    IOSObjectArray *rawParamTypes = [constructor_ getParameterTypes];
    if (types->size_ == ((IOSObjectArray *) nil_chk(rawParamTypes))->size_ && IOSObjectArray_Get(rawParamTypes, 0) == [((IOSClass *) nil_chk([self getDeclaringClass])) getEnclosingClass]) {
      return JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_(types, 1, types->size_);
    }
  }
  return types;
}

- (IOSObjectArray *)getGenericExceptionTypes {
  return [((JavaLangReflectConstructor *) nil_chk(constructor_)) getGenericExceptionTypes];
}

- (IOSObjectArray *)getParameterAnnotations {
  return [((JavaLangReflectConstructor *) nil_chk(constructor_)) getParameterAnnotations];
}

- (IOSObjectArray *)getTypeParameters {
  IOSObjectArray *declaredByClass = [((IOSClass *) nil_chk([self getDeclaringClass])) getTypeParameters];
  IOSObjectArray *declaredByConstructor = [((JavaLangReflectConstructor *) nil_chk(constructor_)) getTypeParameters];
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(declaredByClass))->size_ + ((IOSObjectArray *) nil_chk(declaredByConstructor))->size_ type:JavaLangReflectTypeVariable_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(declaredByClass, 0, result, 0, declaredByClass->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(declaredByConstructor, 0, result, declaredByClass->size_, declaredByConstructor->size_);
  return result;
}

- (jboolean)isOverridable {
  return false;
}

- (jboolean)isVarArgs {
  return [((JavaLangReflectConstructor *) nil_chk(constructor_)) isVarArgs];
}

- (jboolean)mayNeedHiddenThis {
  return ComGoogleCommonReflectInvokable_ConstructorInvokable_mayNeedHiddenThis(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x10, 2, 3, 4, -1, -1, 5 },
    { NULL, "LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[LJavaLangAnnotationAnnotation;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectTypeVariable;", 0x11, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectConstructor:);
  methods[1].selector = @selector(invokeInternalWithId:withNSObjectArray:);
  methods[2].selector = @selector(getGenericReturnType);
  methods[3].selector = @selector(getGenericParameterTypes);
  methods[4].selector = @selector(getGenericExceptionTypes);
  methods[5].selector = @selector(getParameterAnnotations);
  methods[6].selector = @selector(getTypeParameters);
  methods[7].selector = @selector(isOverridable);
  methods[8].selector = @selector(isVarArgs);
  methods[9].selector = @selector(mayNeedHiddenThis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "constructor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectConstructor;", "(Ljava/lang/reflect/Constructor<*>;)V", "invokeInternal", "LNSObject;[LNSObject;", "LJavaLangReflectInvocationTargetException;LJavaLangIllegalAccessException;", (void *)&ComGoogleCommonReflectInvokable_ConstructorInvokable__Annotations$0, "()[Ljava/lang/reflect/TypeVariable<*>;", "Ljava/lang/reflect/Constructor<*>;", "LComGoogleCommonReflectInvokable;", "<T:Ljava/lang/Object;>Lcom/google/common/reflect/Invokable<TT;TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectInvokable_ConstructorInvokable = { "ConstructorInvokable", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8, 10, 1, 8, -1, -1, 9, -1 };
  return &_ComGoogleCommonReflectInvokable_ConstructorInvokable;
}

@end

void ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(ComGoogleCommonReflectInvokable_ConstructorInvokable *self, JavaLangReflectConstructor *constructor) {
  ComGoogleCommonReflectInvokable_initWithJavaLangReflectAccessibleObject_(self, constructor);
  self->constructor_ = constructor;
}

ComGoogleCommonReflectInvokable_ConstructorInvokable *new_ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *constructor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectInvokable_ConstructorInvokable, initWithJavaLangReflectConstructor_, constructor)
}

ComGoogleCommonReflectInvokable_ConstructorInvokable *create_ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *constructor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectInvokable_ConstructorInvokable, initWithJavaLangReflectConstructor_, constructor)
}

jboolean ComGoogleCommonReflectInvokable_ConstructorInvokable_mayNeedHiddenThis(ComGoogleCommonReflectInvokable_ConstructorInvokable *self) {
  IOSClass *declaringClass = [((JavaLangReflectConstructor *) nil_chk(self->constructor_)) getDeclaringClass];
  if ([((IOSClass *) nil_chk(declaringClass)) getEnclosingConstructor] != nil) {
    return true;
  }
  JavaLangReflectMethod *enclosingMethod = [declaringClass getEnclosingMethod];
  if (enclosingMethod != nil) {
    return !JavaLangReflectModifier_isStaticWithInt_([enclosingMethod getModifiers]);
  }
  else {
    return [declaringClass getEnclosingClass] != nil && !JavaLangReflectModifier_isStaticWithInt_([declaringClass getModifiers]);
  }
}

IOSObjectArray *ComGoogleCommonReflectInvokable_ConstructorInvokable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectInvokable_ConstructorInvokable)
