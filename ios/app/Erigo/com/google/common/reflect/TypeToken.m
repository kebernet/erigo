//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/reflect/TypeToken.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Joiner.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Predicate.h"
#include "com/google/common/collect/FluentIterable.h"
#include "com/google/common/collect/ForwardingSet.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/collect/Ordering.h"
#include "com/google/common/collect/UnmodifiableIterator.h"
#include "com/google/common/primitives/Primitives.h"
#include "com/google/common/reflect/Invokable.h"
#include "com/google/common/reflect/TypeCapture.h"
#include "com/google/common/reflect/TypeParameter.h"
#include "com/google/common/reflect/TypeResolver.h"
#include "com/google/common/reflect/TypeToken.h"
#include "com/google/common/reflect/TypeVisitor.h"
#include "com/google/common/reflect/Types.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Math.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Predicate.h"
#include "javax/annotation/Nullable.h"

static id (*ComGoogleCommonReflectTypeToken_super$_capture)(id, SEL);

@class ComGoogleCommonReflectTypeToken_Bounds;

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonReflectTypeToken () {
 @public
  id<JavaLangReflectType> runtimeType_;
  ComGoogleCommonReflectTypeResolver *typeResolver_;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (IOSObjectArray *)resolveInPlaceWithJavaLangReflectTypeArray:(IOSObjectArray *)types;

- (ComGoogleCommonReflectTypeToken *)resolveSupertypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (ComGoogleCommonReflectTypeToken *)boundAsSuperclassWithJavaLangReflectType:(id<JavaLangReflectType>)bound;

- (ComGoogleCommonCollectImmutableList *)boundsAsInterfacesWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds;

- (jboolean)isWrapper;

- (jboolean)someRawTypeIsSubclassOfWithIOSClass:(IOSClass *)superclass_;

- (jboolean)isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)supertype;

- (jboolean)isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)supertype;

- (jboolean)isSupertypeOfArrayWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)subtype;

- (jboolean)isWithJavaLangReflectType:(id<JavaLangReflectType>)formalType;

+ (ComGoogleCommonReflectTypeToken_Bounds *)everyWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds;

+ (ComGoogleCommonReflectTypeToken_Bounds *)anyWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds;

- (ComGoogleCommonCollectImmutableSet *)getRawTypes;

- (jboolean)isOwnedBySubtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)supertype;

- (id<JavaLangReflectType>)getOwnerTypeIfPresent;

- (ComGoogleCommonReflectTypeToken *)getSupertypeFromUpperBoundsWithIOSClass:(IOSClass *)supertype
                                                withJavaLangReflectTypeArray:(IOSObjectArray *)upperBounds;

- (ComGoogleCommonReflectTypeToken *)getSubtypeFromLowerBoundsWithIOSClass:(IOSClass *)subclass
                                              withJavaLangReflectTypeArray:(IOSObjectArray *)lowerBounds;

- (ComGoogleCommonReflectTypeToken *)getArraySupertypeWithIOSClass:(IOSClass *)supertype;

- (ComGoogleCommonReflectTypeToken *)getArraySubtypeWithIOSClass:(IOSClass *)subclass;

- (id<JavaLangReflectType>)resolveTypeArgsForSubclassWithIOSClass:(IOSClass *)subclass;

+ (id<JavaLangReflectType>)newArrayClassOrGenericArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken, runtimeType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken, typeResolver_, ComGoogleCommonReflectTypeResolver *)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_initWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type);

__attribute__((unused)) static IOSClass *ComGoogleCommonReflectTypeToken_getRawType(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_getType(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_whereWithComGoogleCommonReflectTypeParameter_withComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *self, ComGoogleCommonReflectTypeParameter *typeParam, ComGoogleCommonReflectTypeToken *typeArg);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSObjectArray *types);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getGenericSuperclass(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_boundAsSuperclassWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> bound);

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_getGenericInterfaces(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_boundsAsInterfacesWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSObjectArray *bounds);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeSet *ComGoogleCommonReflectTypeToken_getTypes(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *superclass_);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSubtypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> supertype);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isArray(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isPrimitive(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isWrapper(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getComponentType(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *superclass_);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectParameterizedType> supertype);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectGenericArrayType> supertype);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isSupertypeOfArrayWithJavaLangReflectGenericArrayType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectGenericArrayType> subtype);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> formalType);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_Bounds *ComGoogleCommonReflectTypeToken_everyWithJavaLangReflectTypeArray_(IOSObjectArray *bounds);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_Bounds *ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_(IOSObjectArray *bounds);

__attribute__((unused)) static ComGoogleCommonCollectImmutableSet *ComGoogleCommonReflectTypeToken_getRawTypes(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static jboolean ComGoogleCommonReflectTypeToken_isOwnedBySubtypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> supertype);

__attribute__((unused)) static id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_getOwnerTypeIfPresent(ComGoogleCommonReflectTypeToken *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSupertypeFromUpperBoundsWithIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSClass *supertype, IOSObjectArray *upperBounds);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSubtypeFromLowerBoundsWithIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass, IOSObjectArray *lowerBounds);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getArraySupertypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *supertype);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getArraySubtypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass);

__attribute__((unused)) static id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_resolveTypeArgsForSubclassWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass);

__attribute__((unused)) static id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_newArrayClassOrGenericArrayTypeWithJavaLangReflectType_(id<JavaLangReflectType> componentType);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$4();

@interface ComGoogleCommonReflectTypeToken_1 : ComGoogleCommonReflectInvokable_MethodInvokable {
 @public
  ComGoogleCommonReflectTypeToken *this$0_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
                              withJavaLangReflectMethod:(JavaLangReflectMethod *)method;

- (id<JavaLangReflectType>)getGenericReturnType;

- (IOSObjectArray *)getGenericParameterTypes;

- (IOSObjectArray *)getGenericExceptionTypes;

- (ComGoogleCommonReflectTypeToken *)getOwnerType;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken_1 *self, ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_1 *new_ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_1 *create_ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method);

@interface ComGoogleCommonReflectTypeToken_2 : ComGoogleCommonReflectInvokable_ConstructorInvokable {
 @public
  ComGoogleCommonReflectTypeToken *this$0_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
                         withJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor;

- (id<JavaLangReflectType>)getGenericReturnType;

- (IOSObjectArray *)getGenericParameterTypes;

- (IOSObjectArray *)getGenericExceptionTypes;

- (ComGoogleCommonReflectTypeToken *)getOwnerType;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken_2 *self, ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_2 *new_ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_2 *create_ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor);

@interface ComGoogleCommonReflectTypeToken_TypeSet () {
 @public
  ComGoogleCommonReflectTypeToken *this$0_;
  ComGoogleCommonCollectImmutableSet *types_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_TypeSet, types_, ComGoogleCommonCollectImmutableSet *)

inline jlong ComGoogleCommonReflectTypeToken_TypeSet_get_serialVersionUID();
#define ComGoogleCommonReflectTypeToken_TypeSet_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypeToken_TypeSet, serialVersionUID, jlong)

@interface ComGoogleCommonReflectTypeToken_InterfaceSet : ComGoogleCommonReflectTypeToken_TypeSet {
 @public
  ComGoogleCommonReflectTypeToken *this$1_;
  ComGoogleCommonReflectTypeToken_TypeSet *allTypes_;
  ComGoogleCommonCollectImmutableSet *interfaces_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
            withComGoogleCommonReflectTypeToken_TypeSet:(ComGoogleCommonReflectTypeToken_TypeSet *)allTypes;

- (id<JavaUtilSet>)delegate;

- (ComGoogleCommonReflectTypeToken_TypeSet *)interfaces;

- (id<JavaUtilSet>)rawTypes;

- (ComGoogleCommonReflectTypeToken_TypeSet *)classes;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_InterfaceSet)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_InterfaceSet, allTypes_, ComGoogleCommonReflectTypeToken_TypeSet *)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_InterfaceSet, interfaces_, ComGoogleCommonCollectImmutableSet *)

inline jlong ComGoogleCommonReflectTypeToken_InterfaceSet_get_serialVersionUID();
#define ComGoogleCommonReflectTypeToken_InterfaceSet_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypeToken_InterfaceSet, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken_InterfaceSet *self, ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_InterfaceSet *new_ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_InterfaceSet *create_ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_InterfaceSet)

@interface ComGoogleCommonReflectTypeToken_InterfaceSet_1 : NSObject < ComGoogleCommonBasePredicate >

- (instancetype)init;

- (jboolean)applyWithId:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_InterfaceSet_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_InterfaceSet_1_init(ComGoogleCommonReflectTypeToken_InterfaceSet_1 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_InterfaceSet_1 *new_ComGoogleCommonReflectTypeToken_InterfaceSet_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_InterfaceSet_1 *create_ComGoogleCommonReflectTypeToken_InterfaceSet_1_init();

@interface ComGoogleCommonReflectTypeToken_ClassSet : ComGoogleCommonReflectTypeToken_TypeSet {
 @public
  ComGoogleCommonReflectTypeToken *this$1_;
  ComGoogleCommonCollectImmutableSet *classes_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$;

- (id<JavaUtilSet>)delegate;

- (ComGoogleCommonReflectTypeToken_TypeSet *)classes;

- (id<JavaUtilSet>)rawTypes;

- (ComGoogleCommonReflectTypeToken_TypeSet *)interfaces;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_ClassSet)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_ClassSet, classes_, ComGoogleCommonCollectImmutableSet *)

inline jlong ComGoogleCommonReflectTypeToken_ClassSet_get_serialVersionUID();
#define ComGoogleCommonReflectTypeToken_ClassSet_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypeToken_ClassSet, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken_ClassSet *self, ComGoogleCommonReflectTypeToken *outer$);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_ClassSet *new_ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_ClassSet *create_ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_ClassSet)

typedef NS_ENUM(NSUInteger, ComGoogleCommonReflectTypeToken_TypeFilter_Enum) {
  ComGoogleCommonReflectTypeToken_TypeFilter_Enum_IGNORE_TYPE_VARIABLE_OR_WILDCARD = 0,
  ComGoogleCommonReflectTypeToken_TypeFilter_Enum_INTERFACE_ONLY = 1,
};

@interface ComGoogleCommonReflectTypeToken_TypeFilter : JavaLangEnum < NSCopying, ComGoogleCommonBasePredicate >

+ (IOSObjectArray *)values;

+ (ComGoogleCommonReflectTypeToken_TypeFilter *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeFilter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_values_[];

inline ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_get_IGNORE_TYPE_VARIABLE_OR_WILDCARD();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypeToken_TypeFilter, IGNORE_TYPE_VARIABLE_OR_WILDCARD)

inline ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_get_INTERFACE_ONLY();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypeToken_TypeFilter, INTERFACE_ONLY)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeFilter *new_ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeFilter_values();

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_TypeFilter)

@interface ComGoogleCommonReflectTypeToken_TypeFilter_1 : ComGoogleCommonReflectTypeToken_TypeFilter < NSCopying >

- (jboolean)applyWithId:(ComGoogleCommonReflectTypeToken *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeFilter_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeFilter_1_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeFilter_1 *new_ComGoogleCommonReflectTypeToken_TypeFilter_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonReflectTypeToken_TypeFilter_2 : ComGoogleCommonReflectTypeToken_TypeFilter < NSCopying >

- (jboolean)applyWithId:(ComGoogleCommonReflectTypeToken *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeFilter_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeFilter_2_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeFilter_2 *new_ComGoogleCommonReflectTypeToken_TypeFilter_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonReflectTypeToken_3 : ComGoogleCommonReflectTypeVisitor {
 @public
  ComGoogleCommonReflectTypeToken *this$0_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$;

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)type;

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)type;

- (void)visitParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)type;

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_3)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken_3 *self, ComGoogleCommonReflectTypeToken *outer$);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_3 *new_ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_3 *create_ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$);

@interface ComGoogleCommonReflectTypeToken_Bounds : NSObject {
 @public
  IOSObjectArray *bounds_;
  jboolean target_;
}

- (instancetype)initWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds
                                     withBoolean:(jboolean)target;

- (jboolean)isSubtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)supertype;

- (jboolean)isSupertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)subtype;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_Bounds)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_Bounds, bounds_, IOSObjectArray *)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(ComGoogleCommonReflectTypeToken_Bounds *self, IOSObjectArray *bounds, jboolean target);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_Bounds *new_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(IOSObjectArray *bounds, jboolean target) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_Bounds *create_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(IOSObjectArray *bounds, jboolean target);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_Bounds)

@interface ComGoogleCommonReflectTypeToken_4 : ComGoogleCommonReflectTypeVisitor {
 @public
  ComGoogleCommonCollectImmutableSet_Builder *val$builder_;
}

- (instancetype)initWithComGoogleCommonCollectImmutableSet_Builder:(ComGoogleCommonCollectImmutableSet_Builder *)capture$0;

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)t;

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)t;

- (void)visitParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)t;

- (void)visitClassWithIOSClass:(IOSClass *)t;

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_4)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonReflectTypeToken_4 *self, ComGoogleCommonCollectImmutableSet_Builder *capture$0);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_4 *new_ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonCollectImmutableSet_Builder *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_4 *create_ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonCollectImmutableSet_Builder *capture$0);

@interface ComGoogleCommonReflectTypeToken_SimpleTypeToken : ComGoogleCommonReflectTypeToken

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_SimpleTypeToken)

inline jlong ComGoogleCommonReflectTypeToken_SimpleTypeToken_get_serialVersionUID();
#define ComGoogleCommonReflectTypeToken_SimpleTypeToken_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypeToken_SimpleTypeToken, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken_SimpleTypeToken *self, id<JavaLangReflectType> type);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_SimpleTypeToken *new_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_SimpleTypeToken *create_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_SimpleTypeToken)

@interface ComGoogleCommonReflectTypeToken_TypeCollector : NSObject

- (instancetype)init;

- (ComGoogleCommonReflectTypeToken_TypeCollector *)classesOnly;

- (ComGoogleCommonCollectImmutableList *)collectTypesWithId:(id)type;

- (ComGoogleCommonCollectImmutableList *)collectTypesWithJavaLangIterable:(id<JavaLangIterable>)types;

- (jint)collectTypesWithId:(id)type
           withJavaUtilMap:(id<JavaUtilMap>)map;

+ (ComGoogleCommonCollectImmutableList *)sortKeysByValueWithJavaUtilMap:(id<JavaUtilMap>)map
                                                 withJavaUtilComparator:(id<JavaUtilComparator>)valueComparator;

- (IOSClass *)getRawTypeWithId:(id)type;

- (id<JavaLangIterable>)getInterfacesWithId:(id)type;

- (id)getSuperclassWithId:(id)type;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector)

inline ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_get_FOR_GENERIC_TYPE();
static ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_FOR_GENERIC_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_GENERIC_TYPE, ComGoogleCommonReflectTypeToken_TypeCollector *)

inline ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_get_FOR_RAW_TYPE();
static ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_FOR_RAW_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_RAW_TYPE, ComGoogleCommonReflectTypeToken_TypeCollector *)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_init(ComGoogleCommonReflectTypeToken_TypeCollector *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_classesOnly(ComGoogleCommonReflectTypeToken_TypeCollector *self);

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_(ComGoogleCommonReflectTypeToken_TypeCollector *self, id type);

__attribute__((unused)) static jint ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(ComGoogleCommonReflectTypeToken_TypeCollector *self, id type, id<JavaUtilMap> map);

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_TypeCollector_sortKeysByValueWithJavaUtilMap_withJavaUtilComparator_(id<JavaUtilMap> map, id<JavaUtilComparator> valueComparator);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_TypeCollector)

@interface ComGoogleCommonReflectTypeToken_TypeCollector_1 : ComGoogleCommonReflectTypeToken_TypeCollector

- (instancetype)init;

- (IOSClass *)getRawTypeWithId:(ComGoogleCommonReflectTypeToken *)type;

- (id<JavaLangIterable>)getInterfacesWithId:(ComGoogleCommonReflectTypeToken *)type;

- (ComGoogleCommonReflectTypeToken *)getSuperclassWithId:(ComGoogleCommonReflectTypeToken *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_1_init(ComGoogleCommonReflectTypeToken_TypeCollector_1 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_1 *new_ComGoogleCommonReflectTypeToken_TypeCollector_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_1 *create_ComGoogleCommonReflectTypeToken_TypeCollector_1_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector_1__Annotations$0();

@interface ComGoogleCommonReflectTypeToken_TypeCollector_2 : ComGoogleCommonReflectTypeToken_TypeCollector

- (instancetype)init;

- (IOSClass *)getRawTypeWithId:(IOSClass *)type;

- (id<JavaLangIterable>)getInterfacesWithId:(IOSClass *)type;

- (IOSClass *)getSuperclassWithId:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_2_init(ComGoogleCommonReflectTypeToken_TypeCollector_2 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_2 *new_ComGoogleCommonReflectTypeToken_TypeCollector_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_2 *create_ComGoogleCommonReflectTypeToken_TypeCollector_2_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector_2__Annotations$0();

@interface ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector : ComGoogleCommonReflectTypeToken_TypeCollector {
 @public
  ComGoogleCommonReflectTypeToken_TypeCollector *delegate_;
}

- (instancetype)initWithComGoogleCommonReflectTypeToken_TypeCollector:(ComGoogleCommonReflectTypeToken_TypeCollector *)delegate;

- (IOSClass *)getRawTypeWithId:(id)type;

- (id<JavaLangIterable>)getInterfacesWithId:(id)type;

- (id)getSuperclassWithId:(id)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector, delegate_, ComGoogleCommonReflectTypeToken_TypeCollector *)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *self, ComGoogleCommonReflectTypeToken_TypeCollector *delegate);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *new_ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *create_ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector)

@interface ComGoogleCommonReflectTypeToken_TypeCollector_3 : ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector

- (instancetype)initWithComGoogleCommonReflectTypeToken_TypeCollector:(ComGoogleCommonReflectTypeToken_TypeCollector *)delegate;

- (id<JavaLangIterable>)getInterfacesWithId:(id)type;

- (ComGoogleCommonCollectImmutableList *)collectTypesWithJavaLangIterable:(id<JavaLangIterable>)types;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector_3)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector_3 *self, ComGoogleCommonReflectTypeToken_TypeCollector *delegate);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_3 *new_ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_3 *create_ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate);

@interface ComGoogleCommonReflectTypeToken_TypeCollector_4 : ComGoogleCommonCollectOrdering {
 @public
  id<JavaUtilComparator> val$valueComparator_;
  id<JavaUtilMap> val$map_;
}

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)capture$0
                           withJavaUtilMap:(id<JavaUtilMap>)capture$1;

- (jint)compareWithId:(id)left
               withId:(id)right;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToken_TypeCollector_4)

__attribute__((unused)) static void ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(ComGoogleCommonReflectTypeToken_TypeCollector_4 *self, id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1);

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_4 *new_ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypeToken_TypeCollector_4 *create_ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1);

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypeToken)

@implementation ComGoogleCommonReflectTypeToken

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypeToken_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithIOSClass:(IOSClass *)declaringClass {
  ComGoogleCommonReflectTypeToken_initWithIOSClass_(self, declaringClass);
  return self;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  ComGoogleCommonReflectTypeToken_initWithJavaLangReflectType_(self, type);
  return self;
}

+ (ComGoogleCommonReflectTypeToken *)ofWithIOSClass:(IOSClass *)type {
  return ComGoogleCommonReflectTypeToken_ofWithIOSClass_(type);
}

+ (ComGoogleCommonReflectTypeToken *)ofWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(type);
}

- (IOSClass *)getRawType {
  return ComGoogleCommonReflectTypeToken_getRawType(self);
}

- (id<JavaLangReflectType>)getType {
  return ComGoogleCommonReflectTypeToken_getType(self);
}

- (ComGoogleCommonReflectTypeToken *)whereWithComGoogleCommonReflectTypeParameter:(ComGoogleCommonReflectTypeParameter *)typeParam
                                              withComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)typeArg {
  return ComGoogleCommonReflectTypeToken_whereWithComGoogleCommonReflectTypeParameter_withComGoogleCommonReflectTypeToken_(self, typeParam, typeArg);
}

- (ComGoogleCommonReflectTypeToken *)whereWithComGoogleCommonReflectTypeParameter:(ComGoogleCommonReflectTypeParameter *)typeParam
                                                                     withIOSClass:(IOSClass *)typeArg {
  return ComGoogleCommonReflectTypeToken_whereWithComGoogleCommonReflectTypeParameter_withComGoogleCommonReflectTypeToken_(self, typeParam, ComGoogleCommonReflectTypeToken_ofWithIOSClass_(typeArg));
}

- (ComGoogleCommonReflectTypeToken *)resolveTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(self, type);
}

- (IOSObjectArray *)resolveInPlaceWithJavaLangReflectTypeArray:(IOSObjectArray *)types {
  return ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(self, types);
}

- (ComGoogleCommonReflectTypeToken *)resolveSupertypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(self, type);
}

- (ComGoogleCommonReflectTypeToken *)getGenericSuperclass {
  return ComGoogleCommonReflectTypeToken_getGenericSuperclass(self);
}

- (ComGoogleCommonReflectTypeToken *)boundAsSuperclassWithJavaLangReflectType:(id<JavaLangReflectType>)bound {
  return ComGoogleCommonReflectTypeToken_boundAsSuperclassWithJavaLangReflectType_(self, bound);
}

- (ComGoogleCommonCollectImmutableList *)getGenericInterfaces {
  return ComGoogleCommonReflectTypeToken_getGenericInterfaces(self);
}

- (ComGoogleCommonCollectImmutableList *)boundsAsInterfacesWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypeToken_boundsAsInterfacesWithJavaLangReflectTypeArray_(self, bounds);
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)getTypes {
  return ComGoogleCommonReflectTypeToken_getTypes(self);
}

- (ComGoogleCommonReflectTypeToken *)getSupertypeWithIOSClass:(IOSClass *)superclass_ {
  return ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(self, superclass_);
}

- (ComGoogleCommonReflectTypeToken *)getSubtypeWithIOSClass:(IOSClass *)subclass {
  return ComGoogleCommonReflectTypeToken_getSubtypeWithIOSClass_(self, subclass);
}

- (jboolean)isSupertypeOfWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)type {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(type), ComGoogleCommonReflectTypeToken_getType(self));
}

- (jboolean)isSupertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(type)), ComGoogleCommonReflectTypeToken_getType(self));
}

- (jboolean)isSubtypeOfWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)type {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(self, ComGoogleCommonReflectTypeToken_getType(nil_chk(type)));
}

- (jboolean)isSubtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)supertype {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(self, supertype);
}

- (jboolean)isArray {
  return ComGoogleCommonReflectTypeToken_isArray(self);
}

- (jboolean)isPrimitive {
  return ComGoogleCommonReflectTypeToken_isPrimitive(self);
}

- (ComGoogleCommonReflectTypeToken *)wrap {
  if (ComGoogleCommonReflectTypeToken_isPrimitive(self)) {
    IOSClass *type = (IOSClass *) cast_chk(runtimeType_, [IOSClass class]);
    return ComGoogleCommonReflectTypeToken_ofWithIOSClass_(ComGoogleCommonPrimitivesPrimitives_wrapWithIOSClass_(type));
  }
  return self;
}

- (jboolean)isWrapper {
  return ComGoogleCommonReflectTypeToken_isWrapper(self);
}

- (ComGoogleCommonReflectTypeToken *)unwrap {
  if (ComGoogleCommonReflectTypeToken_isWrapper(self)) {
    IOSClass *type = (IOSClass *) cast_chk(runtimeType_, [IOSClass class]);
    return ComGoogleCommonReflectTypeToken_ofWithIOSClass_(ComGoogleCommonPrimitivesPrimitives_unwrapWithIOSClass_(type));
  }
  return self;
}

- (ComGoogleCommonReflectTypeToken *)getComponentType {
  return ComGoogleCommonReflectTypeToken_getComponentType(self);
}

- (ComGoogleCommonReflectInvokable *)methodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(self, [((JavaLangReflectMethod *) nil_chk(method)) getDeclaringClass]), @"%s not declared by %s", method, self);
  return new_ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(self, method);
}

- (ComGoogleCommonReflectInvokable *)constructorWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_([((JavaLangReflectConstructor *) nil_chk(constructor)) getDeclaringClass] == ComGoogleCommonReflectTypeToken_getRawType(self), @"%s not declared by %s", constructor, ComGoogleCommonReflectTypeToken_getRawType(self));
  return new_ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(self, constructor);
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[ComGoogleCommonReflectTypeToken class]]) {
    ComGoogleCommonReflectTypeToken *that = (ComGoogleCommonReflectTypeToken *) cast_chk(o, [ComGoogleCommonReflectTypeToken class]);
    return [((id<JavaLangReflectType>) nil_chk(runtimeType_)) isEqual:((ComGoogleCommonReflectTypeToken *) nil_chk(that))->runtimeType_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaLangReflectType>) nil_chk(runtimeType_)) hash]);
}

- (NSString *)description {
  return ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(runtimeType_);
}

- (id)writeReplace {
  return ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([new_ComGoogleCommonReflectTypeResolver_init() resolveTypeWithJavaLangReflectType:runtimeType_]);
}

- (ComGoogleCommonReflectTypeToken *)rejectTypeVariables {
  [new_ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(self) visitWithJavaLangReflectTypeArray:[IOSObjectArray newArrayWithObjects:(id[]){ runtimeType_ } count:1 type:JavaLangReflectType_class_()]];
  return self;
}

- (jboolean)someRawTypeIsSubclassOfWithIOSClass:(IOSClass *)superclass_ {
  return ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(self, superclass_);
}

- (jboolean)isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)supertype {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType_(self, supertype);
}

- (jboolean)isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)supertype {
  return ComGoogleCommonReflectTypeToken_isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType_(self, supertype);
}

- (jboolean)isSupertypeOfArrayWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)subtype {
  return ComGoogleCommonReflectTypeToken_isSupertypeOfArrayWithJavaLangReflectGenericArrayType_(self, subtype);
}

- (jboolean)isWithJavaLangReflectType:(id<JavaLangReflectType>)formalType {
  return ComGoogleCommonReflectTypeToken_isWithJavaLangReflectType_(self, formalType);
}

+ (ComGoogleCommonReflectTypeToken_Bounds *)everyWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypeToken_everyWithJavaLangReflectTypeArray_(bounds);
}

+ (ComGoogleCommonReflectTypeToken_Bounds *)anyWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_(bounds);
}

- (ComGoogleCommonCollectImmutableSet *)getRawTypes {
  return ComGoogleCommonReflectTypeToken_getRawTypes(self);
}

- (jboolean)isOwnedBySubtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)supertype {
  return ComGoogleCommonReflectTypeToken_isOwnedBySubtypeOfWithJavaLangReflectType_(self, supertype);
}

- (id<JavaLangReflectType>)getOwnerTypeIfPresent {
  return ComGoogleCommonReflectTypeToken_getOwnerTypeIfPresent(self);
}

+ (ComGoogleCommonReflectTypeToken *)toGenericTypeWithIOSClass:(IOSClass *)cls {
  return ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_(cls);
}

- (ComGoogleCommonReflectTypeToken *)getSupertypeFromUpperBoundsWithIOSClass:(IOSClass *)supertype
                                                withJavaLangReflectTypeArray:(IOSObjectArray *)upperBounds {
  return ComGoogleCommonReflectTypeToken_getSupertypeFromUpperBoundsWithIOSClass_withJavaLangReflectTypeArray_(self, supertype, upperBounds);
}

- (ComGoogleCommonReflectTypeToken *)getSubtypeFromLowerBoundsWithIOSClass:(IOSClass *)subclass
                                              withJavaLangReflectTypeArray:(IOSObjectArray *)lowerBounds {
  return ComGoogleCommonReflectTypeToken_getSubtypeFromLowerBoundsWithIOSClass_withJavaLangReflectTypeArray_(self, subclass, lowerBounds);
}

- (ComGoogleCommonReflectTypeToken *)getArraySupertypeWithIOSClass:(IOSClass *)supertype {
  return ComGoogleCommonReflectTypeToken_getArraySupertypeWithIOSClass_(self, supertype);
}

- (ComGoogleCommonReflectTypeToken *)getArraySubtypeWithIOSClass:(IOSClass *)subclass {
  return ComGoogleCommonReflectTypeToken_getArraySubtypeWithIOSClass_(self, subclass);
}

- (id<JavaLangReflectType>)resolveTypeArgsForSubclassWithIOSClass:(IOSClass *)subclass {
  return ComGoogleCommonReflectTypeToken_resolveTypeArgsForSubclassWithIOSClass_(self, subclass);
}

+ (id<JavaLangReflectType>)newArrayClassOrGenericArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  return ComGoogleCommonReflectTypeToken_newArrayClassOrGenericArrayTypeWithJavaLangReflectType_(componentType);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x9, 3, 0, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x9, 3, 2, -1, 5, -1, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 6, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, 7, 8, -1, 9, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, 7, 10, -1, 11, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, 12, 2, -1, 5, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 15, 2, -1, 5, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x10, -1, -1, -1, 16, 17, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 18, 2, -1, 19, 20, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x10, -1, -1, -1, 21, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x2, 22, 14, -1, 23, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, 24, 0, -1, 25, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, 26, 0, -1, 27, -1, -1 },
    { NULL, "Z", 0x11, 28, 29, -1, 30, -1, -1 },
    { NULL, "Z", 0x11, 28, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 31, 29, -1, 30, -1, -1 },
    { NULL, "Z", 0x11, 31, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, -1, -1, -1, 32, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, -1, -1, -1, 32, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x11, -1, -1, -1, 33, 34, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x11, 35, 36, -1, 37, -1, -1 },
    { NULL, "LComGoogleCommonReflectInvokable;", 0x11, 38, 39, -1, 40, -1, -1 },
    { NULL, "Z", 0x1, 41, 42, -1, -1, -1, 43 },
    { NULL, "I", 0x1, 44, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 45, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x10, -1, -1, -1, 32, -1, -1 },
    { NULL, "Z", 0x2, 46, 0, -1, 47, -1, -1 },
    { NULL, "Z", 0x2, 48, 49, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 50, 51, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 52, 51, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 53, 2, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_Bounds;", 0xa, 54, 14, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_Bounds;", 0xa, 55, 14, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableSet;", 0x2, -1, -1, -1, 56, -1, -1 },
    { NULL, "Z", 0x2, 57, 2, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x2, -1, -1, -1, -1, 58, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x8, 59, 0, -1, 60, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 61, 62, -1, 63, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 64, 62, -1, 65, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 66, 0, -1, 25, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x2, 67, 0, -1, 27, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x2, 68, 0, -1, 69, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0xa, 70, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(initWithJavaLangReflectType:);
  methods[3].selector = @selector(ofWithIOSClass:);
  methods[4].selector = @selector(ofWithJavaLangReflectType:);
  methods[5].selector = @selector(getRawType);
  methods[6].selector = @selector(getType);
  methods[7].selector = @selector(whereWithComGoogleCommonReflectTypeParameter:withComGoogleCommonReflectTypeToken:);
  methods[8].selector = @selector(whereWithComGoogleCommonReflectTypeParameter:withIOSClass:);
  methods[9].selector = @selector(resolveTypeWithJavaLangReflectType:);
  methods[10].selector = @selector(resolveInPlaceWithJavaLangReflectTypeArray:);
  methods[11].selector = @selector(resolveSupertypeWithJavaLangReflectType:);
  methods[12].selector = @selector(getGenericSuperclass);
  methods[13].selector = @selector(boundAsSuperclassWithJavaLangReflectType:);
  methods[14].selector = @selector(getGenericInterfaces);
  methods[15].selector = @selector(boundsAsInterfacesWithJavaLangReflectTypeArray:);
  methods[16].selector = @selector(getTypes);
  methods[17].selector = @selector(getSupertypeWithIOSClass:);
  methods[18].selector = @selector(getSubtypeWithIOSClass:);
  methods[19].selector = @selector(isSupertypeOfWithComGoogleCommonReflectTypeToken:);
  methods[20].selector = @selector(isSupertypeOfWithJavaLangReflectType:);
  methods[21].selector = @selector(isSubtypeOfWithComGoogleCommonReflectTypeToken:);
  methods[22].selector = @selector(isSubtypeOfWithJavaLangReflectType:);
  methods[23].selector = @selector(isArray);
  methods[24].selector = @selector(isPrimitive);
  methods[25].selector = @selector(wrap);
  methods[26].selector = @selector(isWrapper);
  methods[27].selector = @selector(unwrap);
  methods[28].selector = @selector(getComponentType);
  methods[29].selector = @selector(methodWithJavaLangReflectMethod:);
  methods[30].selector = @selector(constructorWithJavaLangReflectConstructor:);
  methods[31].selector = @selector(isEqual:);
  methods[32].selector = @selector(hash);
  methods[33].selector = @selector(description);
  methods[34].selector = @selector(writeReplace);
  methods[35].selector = @selector(rejectTypeVariables);
  methods[36].selector = @selector(someRawTypeIsSubclassOfWithIOSClass:);
  methods[37].selector = @selector(isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType:);
  methods[38].selector = @selector(isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType:);
  methods[39].selector = @selector(isSupertypeOfArrayWithJavaLangReflectGenericArrayType:);
  methods[40].selector = @selector(isWithJavaLangReflectType:);
  methods[41].selector = @selector(everyWithJavaLangReflectTypeArray:);
  methods[42].selector = @selector(anyWithJavaLangReflectTypeArray:);
  methods[43].selector = @selector(getRawTypes);
  methods[44].selector = @selector(isOwnedBySubtypeOfWithJavaLangReflectType:);
  methods[45].selector = @selector(getOwnerTypeIfPresent);
  methods[46].selector = @selector(toGenericTypeWithIOSClass:);
  methods[47].selector = @selector(getSupertypeFromUpperBoundsWithIOSClass:withJavaLangReflectTypeArray:);
  methods[48].selector = @selector(getSubtypeFromLowerBoundsWithIOSClass:withJavaLangReflectTypeArray:);
  methods[49].selector = @selector(getArraySupertypeWithIOSClass:);
  methods[50].selector = @selector(getArraySubtypeWithIOSClass:);
  methods[51].selector = @selector(resolveTypeArgsForSubclassWithIOSClass:);
  methods[52].selector = @selector(newArrayClassOrGenericArrayTypeWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "runtimeType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "typeResolver_", "LComGoogleCommonReflectTypeResolver;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "LJavaLangReflectType;", "of", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lcom/google/common/reflect/TypeToken<TT;>;", "(Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeToken<*>;", "()Ljava/lang/Class<-TT;>;", "where", "LComGoogleCommonReflectTypeParameter;LComGoogleCommonReflectTypeToken;", "<X:Ljava/lang/Object;>(Lcom/google/common/reflect/TypeParameter<TX;>;Lcom/google/common/reflect/TypeToken<TX;>;)Lcom/google/common/reflect/TypeToken<TT;>;", "LComGoogleCommonReflectTypeParameter;LIOSClass;", "<X:Ljava/lang/Object;>(Lcom/google/common/reflect/TypeParameter<TX;>;Ljava/lang/Class<TX;>;)Lcom/google/common/reflect/TypeToken<TT;>;", "resolveType", "resolveInPlace", "[LJavaLangReflectType;", "resolveSupertype", "()Lcom/google/common/reflect/TypeToken<-TT;>;", (void *)&ComGoogleCommonReflectTypeToken__Annotations$0, "boundAsSuperclass", "(Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeToken<-TT;>;", (void *)&ComGoogleCommonReflectTypeToken__Annotations$1, "()Lcom/google/common/collect/ImmutableList<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "boundsAsInterfaces", "([Ljava/lang/reflect/Type;)Lcom/google/common/collect/ImmutableList<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "getSupertype", "(Ljava/lang/Class<-TT;>;)Lcom/google/common/reflect/TypeToken<-TT;>;", "getSubtype", "(Ljava/lang/Class<*>;)Lcom/google/common/reflect/TypeToken<+TT;>;", "isSupertypeOf", "LComGoogleCommonReflectTypeToken;", "(Lcom/google/common/reflect/TypeToken<*>;)Z", "isSubtypeOf", "()Lcom/google/common/reflect/TypeToken<TT;>;", "()Lcom/google/common/reflect/TypeToken<*>;", (void *)&ComGoogleCommonReflectTypeToken__Annotations$2, "method", "LJavaLangReflectMethod;", "(Ljava/lang/reflect/Method;)Lcom/google/common/reflect/Invokable<TT;Ljava/lang/Object;>;", "constructor", "LJavaLangReflectConstructor;", "(Ljava/lang/reflect/Constructor<*>;)Lcom/google/common/reflect/Invokable<TT;TT;>;", "equals", "LNSObject;", (void *)&ComGoogleCommonReflectTypeToken__Annotations$3, "hashCode", "toString", "someRawTypeIsSubclassOf", "(Ljava/lang/Class<*>;)Z", "isSubtypeOfParameterizedType", "LJavaLangReflectParameterizedType;", "isSubtypeOfArrayType", "LJavaLangReflectGenericArrayType;", "isSupertypeOfArray", "is", "every", "any", "()Lcom/google/common/collect/ImmutableSet<Ljava/lang/Class<-TT;>;>;", "isOwnedBySubtypeOf", (void *)&ComGoogleCommonReflectTypeToken__Annotations$4, "toGenericType", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lcom/google/common/reflect/TypeToken<+TT;>;", "getSupertypeFromUpperBounds", "LIOSClass;[LJavaLangReflectType;", "(Ljava/lang/Class<-TT;>;[Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeToken<-TT;>;", "getSubtypeFromLowerBounds", "(Ljava/lang/Class<*>;[Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeToken<+TT;>;", "getArraySupertype", "getArraySubtype", "resolveTypeArgsForSubclass", "(Ljava/lang/Class<*>;)Ljava/lang/reflect/Type;", "newArrayClassOrGenericArrayType", "LComGoogleCommonReflectTypeToken_TypeSet;LComGoogleCommonReflectTypeToken_InterfaceSet;LComGoogleCommonReflectTypeToken_ClassSet;LComGoogleCommonReflectTypeToken_TypeFilter;LComGoogleCommonReflectTypeToken_Bounds;LComGoogleCommonReflectTypeToken_SimpleTypeToken;LComGoogleCommonReflectTypeToken_TypeCollector;", "<T:Ljava/lang/Object;>Lcom/google/common/reflect/TypeCapture<TT;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken = { "TypeToken", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x401, 53, 2, -1, 71, -1, 72, -1 };
  return &_ComGoogleCommonReflectTypeToken;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypeToken class]) {
    ComGoogleCommonReflectTypeToken_super$_capture = (id (*)(id, SEL))[ComGoogleCommonReflectTypeCapture instanceMethodForSelector:@selector(capture)];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypeToken)
  }
}

@end

void ComGoogleCommonReflectTypeToken_init(ComGoogleCommonReflectTypeToken *self) {
  ComGoogleCommonReflectTypeCapture_init(self);
  self->runtimeType_ = [self capture];
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_withNSString_withId_(!([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]), @"Cannot construct a TypeToken for a type variable.\nYou probably meant to call new TypeToken<%s>(getClass()) that can resolve the type variable for you.\nIf you do need to create a TypeToken of a type variable, please use TypeToken.of() instead.", self->runtimeType_);
}

void ComGoogleCommonReflectTypeToken_initWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *declaringClass) {
  ComGoogleCommonReflectTypeCapture_init(self);
  id<JavaLangReflectType> captured = ComGoogleCommonReflectTypeToken_super$_capture(self, @selector(capture));
  if ([captured isKindOfClass:[IOSClass class]]) {
    self->runtimeType_ = captured;
  }
  else {
    self->runtimeType_ = ((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithIOSClass_(declaringClass)), captured)))->runtimeType_;
  }
}

void ComGoogleCommonReflectTypeToken_initWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypeCapture_init(self);
  self->runtimeType_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_ofWithIOSClass_(IOSClass *type) {
  ComGoogleCommonReflectTypeToken_initialize();
  return new_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(type);
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypeToken_initialize();
  return new_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(type);
}

IOSClass *ComGoogleCommonReflectTypeToken_getRawType(ComGoogleCommonReflectTypeToken *self) {
  IOSClass *rawType = [((ComGoogleCommonCollectUnmodifiableIterator *) nil_chk([((ComGoogleCommonCollectImmutableSet *) nil_chk(ComGoogleCommonReflectTypeToken_getRawTypes(self))) iterator])) next];
  IOSClass *result = rawType;
  return result;
}

id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_getType(ComGoogleCommonReflectTypeToken *self) {
  return self->runtimeType_;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_whereWithComGoogleCommonReflectTypeParameter_withComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *self, ComGoogleCommonReflectTypeParameter *typeParam, ComGoogleCommonReflectTypeToken *typeArg) {
  ComGoogleCommonReflectTypeResolver *resolver = [new_ComGoogleCommonReflectTypeResolver_init() whereWithJavaUtilMap:ComGoogleCommonCollectImmutableMap_ofWithId_withId_(new_ComGoogleCommonReflectTypeResolver_TypeVariableKey_initWithJavaLangReflectTypeVariable_(((ComGoogleCommonReflectTypeParameter *) nil_chk(typeParam))->typeVariable_), ((ComGoogleCommonReflectTypeToken *) nil_chk(typeArg))->runtimeType_)];
  return new_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_([((ComGoogleCommonReflectTypeResolver *) nil_chk(resolver)) resolveTypeWithJavaLangReflectType:self->runtimeType_]);
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type) {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  ComGoogleCommonReflectTypeResolver *resolver = self->typeResolver_;
  if (resolver == nil) {
    resolver = (self->typeResolver_ = ComGoogleCommonReflectTypeResolver_accordingToWithJavaLangReflectType_(self->runtimeType_));
  }
  return ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([resolver resolveTypeWithJavaLangReflectType:type]);
}

IOSObjectArray *ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSObjectArray *types) {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(types))->size_; i++) {
    (void) IOSObjectArray_Set(types, i, ComGoogleCommonReflectTypeToken_getType(nil_chk(ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(self, IOSObjectArray_Get(types, i)))));
  }
  return types;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypeToken *supertype = ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(self, type);
  ((ComGoogleCommonReflectTypeToken *) nil_chk(supertype))->typeResolver_ = self->typeResolver_;
  return supertype;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getGenericSuperclass(ComGoogleCommonReflectTypeToken *self) {
  if ([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_boundAsSuperclassWithJavaLangReflectType_(self, IOSObjectArray_Get(nil_chk([((id<JavaLangReflectTypeVariable>) nil_chk(((id<JavaLangReflectTypeVariable>) cast_check(self->runtimeType_, JavaLangReflectTypeVariable_class_())))) getBounds]), 0));
  }
  if ([JavaLangReflectWildcardType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_boundAsSuperclassWithJavaLangReflectType_(self, IOSObjectArray_Get(nil_chk([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(self->runtimeType_, JavaLangReflectWildcardType_class_())))) getUpperBounds]), 0));
  }
  id<JavaLangReflectType> superclass_ = [((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(self))) getGenericSuperclass];
  if (superclass_ == nil) {
    return nil;
  }
  ComGoogleCommonReflectTypeToken *superToken = ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(self, superclass_);
  return superToken;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_boundAsSuperclassWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> bound) {
  ComGoogleCommonReflectTypeToken *token = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(bound);
  if ([((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(nil_chk(token)))) isInterface]) {
    return nil;
  }
  ComGoogleCommonReflectTypeToken *superclass_ = token;
  return superclass_;
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_getGenericInterfaces(ComGoogleCommonReflectTypeToken *self) {
  if ([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_boundsAsInterfacesWithJavaLangReflectTypeArray_(self, [((id<JavaLangReflectTypeVariable>) nil_chk(((id<JavaLangReflectTypeVariable>) cast_check(self->runtimeType_, JavaLangReflectTypeVariable_class_())))) getBounds]);
  }
  if ([JavaLangReflectWildcardType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_boundsAsInterfacesWithJavaLangReflectTypeArray_(self, [((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(self->runtimeType_, JavaLangReflectWildcardType_class_())))) getUpperBounds]);
  }
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  {
    IOSObjectArray *a__ = [((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(self))) getGenericInterfaces];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> interfaceType = *b__++;
      ComGoogleCommonReflectTypeToken *resolvedInterface = ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(self, interfaceType);
      (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:resolvedInterface];
    }
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build];
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_boundsAsInterfacesWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSObjectArray *bounds) {
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  {
    IOSObjectArray *a__ = bounds;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> bound = *b__++;
      ComGoogleCommonReflectTypeToken *boundType = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(bound);
      if ([((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(nil_chk(boundType)))) isInterface]) {
        (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:boundType];
      }
    }
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build];
}

ComGoogleCommonReflectTypeToken_TypeSet *ComGoogleCommonReflectTypeToken_getTypes(ComGoogleCommonReflectTypeToken *self) {
  return new_ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(self);
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *superclass_) {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(self, superclass_), @"%s is not a super class of %s", superclass_, self);
  if ([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_getSupertypeFromUpperBoundsWithIOSClass_withJavaLangReflectTypeArray_(self, superclass_, [((id<JavaLangReflectTypeVariable>) nil_chk(((id<JavaLangReflectTypeVariable>) cast_check(self->runtimeType_, JavaLangReflectTypeVariable_class_())))) getBounds]);
  }
  if ([JavaLangReflectWildcardType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_getSupertypeFromUpperBoundsWithIOSClass_withJavaLangReflectTypeArray_(self, superclass_, [((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(self->runtimeType_, JavaLangReflectWildcardType_class_())))) getUpperBounds]);
  }
  if ([((IOSClass *) nil_chk(superclass_)) isArray]) {
    return ComGoogleCommonReflectTypeToken_getArraySupertypeWithIOSClass_(self, superclass_);
  }
  ComGoogleCommonReflectTypeToken *supertype = ComGoogleCommonReflectTypeToken_resolveSupertypeWithJavaLangReflectType_(self, ((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_(superclass_)))->runtimeType_);
  return supertype;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSubtypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass) {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_(!([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]), @"Cannot get subtype of type variable <%s>", self);
  if ([JavaLangReflectWildcardType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_getSubtypeFromLowerBoundsWithIOSClass_withJavaLangReflectTypeArray_(self, subclass, [((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(self->runtimeType_, JavaLangReflectWildcardType_class_())))) getLowerBounds]);
  }
  if (ComGoogleCommonReflectTypeToken_isArray(self)) {
    return ComGoogleCommonReflectTypeToken_getArraySubtypeWithIOSClass_(self, subclass);
  }
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_([((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(self))) isAssignableFrom:subclass], @"%s isn't a subclass of %s", subclass, self);
  id<JavaLangReflectType> resolvedTypeArgs = ComGoogleCommonReflectTypeToken_resolveTypeArgsForSubclassWithIOSClass_(self, subclass);
  ComGoogleCommonReflectTypeToken *subtype = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(resolvedTypeArgs);
  return subtype;
}

jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> supertype) {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(supertype);
  if ([JavaLangReflectWildcardType_class_() isInstance:supertype]) {
    return [((ComGoogleCommonReflectTypeToken_Bounds *) nil_chk(ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(supertype, JavaLangReflectWildcardType_class_())))) getLowerBounds]))) isSupertypeOfWithJavaLangReflectType:self->runtimeType_];
  }
  if ([JavaLangReflectWildcardType_class_() isInstance:self->runtimeType_]) {
    return [((ComGoogleCommonReflectTypeToken_Bounds *) nil_chk(ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(self->runtimeType_, JavaLangReflectWildcardType_class_())))) getUpperBounds]))) isSubtypeOfWithJavaLangReflectType:supertype];
  }
  if ([JavaLangReflectTypeVariable_class_() isInstance:self->runtimeType_]) {
    return [((id<JavaLangReflectType>) nil_chk(self->runtimeType_)) isEqual:supertype] || [((ComGoogleCommonReflectTypeToken_Bounds *) nil_chk(ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_([((id<JavaLangReflectTypeVariable>) cast_check(self->runtimeType_, JavaLangReflectTypeVariable_class_())) getBounds]))) isSubtypeOfWithJavaLangReflectType:supertype];
  }
  if ([JavaLangReflectGenericArrayType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_isSupertypeOfArrayWithJavaLangReflectGenericArrayType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(supertype)), (id<JavaLangReflectGenericArrayType>) cast_check(self->runtimeType_, JavaLangReflectGenericArrayType_class_()));
  }
  if ([supertype isKindOfClass:[IOSClass class]]) {
    return ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(self, (IOSClass *) cast_chk(supertype, [IOSClass class]));
  }
  else if ([JavaLangReflectParameterizedType_class_() isInstance:supertype]) {
    return ComGoogleCommonReflectTypeToken_isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType_(self, (id<JavaLangReflectParameterizedType>) cast_check(supertype, JavaLangReflectParameterizedType_class_()));
  }
  else if ([JavaLangReflectGenericArrayType_class_() isInstance:supertype]) {
    return ComGoogleCommonReflectTypeToken_isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType_(self, (id<JavaLangReflectGenericArrayType>) cast_check(supertype, JavaLangReflectGenericArrayType_class_()));
  }
  else {
    return false;
  }
}

jboolean ComGoogleCommonReflectTypeToken_isArray(ComGoogleCommonReflectTypeToken *self) {
  return ComGoogleCommonReflectTypeToken_getComponentType(self) != nil;
}

jboolean ComGoogleCommonReflectTypeToken_isPrimitive(ComGoogleCommonReflectTypeToken *self) {
  return ([self->runtimeType_ isKindOfClass:[IOSClass class]]) && [((IOSClass *) nil_chk(((IOSClass *) cast_chk(self->runtimeType_, [IOSClass class])))) isPrimitive];
}

jboolean ComGoogleCommonReflectTypeToken_isWrapper(ComGoogleCommonReflectTypeToken *self) {
  return [((id<JavaUtilSet>) nil_chk(ComGoogleCommonPrimitivesPrimitives_allWrapperTypes())) containsWithId:self->runtimeType_];
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getComponentType(ComGoogleCommonReflectTypeToken *self) {
  id<JavaLangReflectType> componentType = ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(self->runtimeType_);
  if (componentType == nil) {
    return nil;
  }
  return ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(componentType);
}

jboolean ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *superclass_) {
  for (IOSClass * __strong rawType in nil_chk(ComGoogleCommonReflectTypeToken_getRawTypes(self))) {
    if ([((IOSClass *) nil_chk(superclass_)) isAssignableFrom:rawType]) {
      return true;
    }
  }
  return false;
}

jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfParameterizedTypeWithJavaLangReflectParameterizedType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectParameterizedType> supertype) {
  IOSClass *matchedClass = ComGoogleCommonReflectTypeToken_getRawType(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(supertype)));
  if (!ComGoogleCommonReflectTypeToken_someRawTypeIsSubclassOfWithIOSClass_(self, matchedClass)) {
    return false;
  }
  IOSObjectArray *typeParams = [((IOSClass *) nil_chk(matchedClass)) getTypeParameters];
  IOSObjectArray *toTypeArgs = [((id<JavaLangReflectParameterizedType>) nil_chk(supertype)) getActualTypeArguments];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(typeParams))->size_; i++) {
    if (!ComGoogleCommonReflectTypeToken_isWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(self, IOSObjectArray_Get(typeParams, i))), IOSObjectArray_Get(nil_chk(toTypeArgs), i))) {
      return false;
    }
  }
  return JavaLangReflectModifier_isStaticWithInt_([((IOSClass *) nil_chk(((IOSClass *) cast_chk([supertype getRawType], [IOSClass class])))) getModifiers]) || [supertype getOwnerType] == nil || ComGoogleCommonReflectTypeToken_isOwnedBySubtypeOfWithJavaLangReflectType_(self, [supertype getOwnerType]);
}

jboolean ComGoogleCommonReflectTypeToken_isSubtypeOfArrayTypeWithJavaLangReflectGenericArrayType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectGenericArrayType> supertype) {
  if ([self->runtimeType_ isKindOfClass:[IOSClass class]]) {
    IOSClass *fromClass = (IOSClass *) cast_chk(self->runtimeType_, [IOSClass class]);
    if (![((IOSClass *) nil_chk(fromClass)) isArray]) {
      return false;
    }
    return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithIOSClass_([fromClass getComponentType])), [((id<JavaLangReflectGenericArrayType>) nil_chk(supertype)) getGenericComponentType]);
  }
  else if ([JavaLangReflectGenericArrayType_class_() isInstance:self->runtimeType_]) {
    id<JavaLangReflectGenericArrayType> fromArrayType = (id<JavaLangReflectGenericArrayType>) cast_check(self->runtimeType_, JavaLangReflectGenericArrayType_class_());
    return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([((id<JavaLangReflectGenericArrayType>) nil_chk(fromArrayType)) getGenericComponentType])), [((id<JavaLangReflectGenericArrayType>) nil_chk(supertype)) getGenericComponentType]);
  }
  else {
    return false;
  }
}

jboolean ComGoogleCommonReflectTypeToken_isSupertypeOfArrayWithJavaLangReflectGenericArrayType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectGenericArrayType> subtype) {
  if ([self->runtimeType_ isKindOfClass:[IOSClass class]]) {
    IOSClass *thisClass = (IOSClass *) cast_chk(self->runtimeType_, [IOSClass class]);
    if (![((IOSClass *) nil_chk(thisClass)) isArray]) {
      return [thisClass isAssignableFrom:IOSClass_arrayType(NSObject_class_(), 1)];
    }
    return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([((id<JavaLangReflectGenericArrayType>) nil_chk(subtype)) getGenericComponentType])), [thisClass getComponentType]);
  }
  else if ([JavaLangReflectGenericArrayType_class_() isInstance:self->runtimeType_]) {
    return ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([((id<JavaLangReflectGenericArrayType>) nil_chk(subtype)) getGenericComponentType])), [((id<JavaLangReflectGenericArrayType>) nil_chk(((id<JavaLangReflectGenericArrayType>) cast_check(self->runtimeType_, JavaLangReflectGenericArrayType_class_())))) getGenericComponentType]);
  }
  else {
    return false;
  }
}

jboolean ComGoogleCommonReflectTypeToken_isWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> formalType) {
  if ([((id<JavaLangReflectType>) nil_chk(self->runtimeType_)) isEqual:formalType]) {
    return true;
  }
  if ([JavaLangReflectWildcardType_class_() isInstance:formalType]) {
    return [((ComGoogleCommonReflectTypeToken_Bounds *) nil_chk(ComGoogleCommonReflectTypeToken_everyWithJavaLangReflectTypeArray_([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(formalType, JavaLangReflectWildcardType_class_())))) getUpperBounds]))) isSupertypeOfWithJavaLangReflectType:self->runtimeType_] && [((ComGoogleCommonReflectTypeToken_Bounds *) nil_chk(ComGoogleCommonReflectTypeToken_everyWithJavaLangReflectTypeArray_([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(formalType, JavaLangReflectWildcardType_class_())))) getLowerBounds]))) isSubtypeOfWithJavaLangReflectType:self->runtimeType_];
  }
  return false;
}

ComGoogleCommonReflectTypeToken_Bounds *ComGoogleCommonReflectTypeToken_everyWithJavaLangReflectTypeArray_(IOSObjectArray *bounds) {
  ComGoogleCommonReflectTypeToken_initialize();
  return new_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(bounds, false);
}

ComGoogleCommonReflectTypeToken_Bounds *ComGoogleCommonReflectTypeToken_anyWithJavaLangReflectTypeArray_(IOSObjectArray *bounds) {
  ComGoogleCommonReflectTypeToken_initialize();
  return new_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(bounds, true);
}

ComGoogleCommonCollectImmutableSet *ComGoogleCommonReflectTypeToken_getRawTypes(ComGoogleCommonReflectTypeToken *self) {
  ComGoogleCommonCollectImmutableSet_Builder *builder = ComGoogleCommonCollectImmutableSet_builder();
  [new_ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(builder) visitWithJavaLangReflectTypeArray:[IOSObjectArray newArrayWithObjects:(id[]){ self->runtimeType_ } count:1 type:JavaLangReflectType_class_()]];
  ComGoogleCommonCollectImmutableSet *result = [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(builder)) build];
  return result;
}

jboolean ComGoogleCommonReflectTypeToken_isOwnedBySubtypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken *self, id<JavaLangReflectType> supertype) {
  for (ComGoogleCommonReflectTypeToken * __strong type in nil_chk(ComGoogleCommonReflectTypeToken_getTypes(self))) {
    id<JavaLangReflectType> ownerType = ComGoogleCommonReflectTypeToken_getOwnerTypeIfPresent(nil_chk(type));
    if (ownerType != nil && ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(ownerType)), supertype)) {
      return true;
    }
  }
  return false;
}

id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_getOwnerTypeIfPresent(ComGoogleCommonReflectTypeToken *self) {
  if ([JavaLangReflectParameterizedType_class_() isInstance:self->runtimeType_]) {
    return [((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(self->runtimeType_, JavaLangReflectParameterizedType_class_())))) getOwnerType];
  }
  else if ([self->runtimeType_ isKindOfClass:[IOSClass class]]) {
    return [((IOSClass *) nil_chk(((IOSClass *) cast_chk(self->runtimeType_, [IOSClass class])))) getEnclosingClass];
  }
  else {
    return nil;
  }
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_(IOSClass *cls) {
  ComGoogleCommonReflectTypeToken_initialize();
  if ([((IOSClass *) nil_chk(cls)) isArray]) {
    id<JavaLangReflectType> arrayOfGenericType = ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_([cls getComponentType])))->runtimeType_);
    ComGoogleCommonReflectTypeToken *result = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(arrayOfGenericType);
    return result;
  }
  IOSObjectArray *typeParams = [cls getTypeParameters];
  id<JavaLangReflectType> ownerType = [cls isMemberClass] && !JavaLangReflectModifier_isStaticWithInt_([cls getModifiers]) ? ((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_([cls getEnclosingClass])))->runtimeType_ : nil;
  if ((((IOSObjectArray *) nil_chk(typeParams))->size_ > 0) || ((ownerType != nil) && ownerType != (id) [cls getEnclosingClass])) {
    ComGoogleCommonReflectTypeToken *type = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(ComGoogleCommonReflectTypes_newParameterizedTypeWithOwnerWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(ownerType, cls, typeParams));
    return type;
  }
  else {
    return ComGoogleCommonReflectTypeToken_ofWithIOSClass_(cls);
  }
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSupertypeFromUpperBoundsWithIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSClass *supertype, IOSObjectArray *upperBounds) {
  {
    IOSObjectArray *a__ = upperBounds;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> upperBound = *b__++;
      ComGoogleCommonReflectTypeToken *bound = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(upperBound);
      if (ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(bound), supertype)) {
        ComGoogleCommonReflectTypeToken *result = ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(bound, supertype);
        return result;
      }
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$@", supertype, @" isn't a super type of ", self));
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getSubtypeFromLowerBoundsWithIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass, IOSObjectArray *lowerBounds) {
  {
    IOSObjectArray *a__ = lowerBounds;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> lowerBound = *b__++;
      ComGoogleCommonReflectTypeToken *bound = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(lowerBound);
      return ComGoogleCommonReflectTypeToken_getSubtypeWithIOSClass_(nil_chk(bound), subclass);
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$@", subclass, @" isn't a subclass of ", self));
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getArraySupertypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *supertype) {
  ComGoogleCommonReflectTypeToken *componentType = ComGoogleCommonBasePreconditions_checkNotNullWithId_withNSString_withId_withId_(ComGoogleCommonReflectTypeToken_getComponentType(self), @"%s isn't a super type of %s", supertype, self);
  ComGoogleCommonReflectTypeToken *componentSupertype = ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(nil_chk(componentType), [((IOSClass *) nil_chk(supertype)) getComponentType]);
  ComGoogleCommonReflectTypeToken *result = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken_newArrayClassOrGenericArrayTypeWithJavaLangReflectType_(((ComGoogleCommonReflectTypeToken *) nil_chk(componentSupertype))->runtimeType_));
  return result;
}

ComGoogleCommonReflectTypeToken *ComGoogleCommonReflectTypeToken_getArraySubtypeWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass) {
  ComGoogleCommonReflectTypeToken *componentSubtype = ComGoogleCommonReflectTypeToken_getSubtypeWithIOSClass_(nil_chk(ComGoogleCommonReflectTypeToken_getComponentType(self)), [((IOSClass *) nil_chk(subclass)) getComponentType]);
  ComGoogleCommonReflectTypeToken *result = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken_newArrayClassOrGenericArrayTypeWithJavaLangReflectType_(((ComGoogleCommonReflectTypeToken *) nil_chk(componentSubtype))->runtimeType_));
  return result;
}

id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_resolveTypeArgsForSubclassWithIOSClass_(ComGoogleCommonReflectTypeToken *self, IOSClass *subclass) {
  if ([self->runtimeType_ isKindOfClass:[IOSClass class]] && ((((IOSObjectArray *) nil_chk([((IOSClass *) nil_chk(subclass)) getTypeParameters]))->size_ == 0) || (((IOSObjectArray *) nil_chk([((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(self))) getTypeParameters]))->size_ != 0))) {
    return subclass;
  }
  ComGoogleCommonReflectTypeToken *genericSubtype = ComGoogleCommonReflectTypeToken_toGenericTypeWithIOSClass_(subclass);
  id<JavaLangReflectType> supertypeWithArgsFromSubtype = ((ComGoogleCommonReflectTypeToken *) nil_chk(ComGoogleCommonReflectTypeToken_getSupertypeWithIOSClass_(nil_chk(genericSubtype), ComGoogleCommonReflectTypeToken_getRawType(self))))->runtimeType_;
  return [((ComGoogleCommonReflectTypeResolver *) nil_chk([new_ComGoogleCommonReflectTypeResolver_init() whereWithJavaLangReflectType:supertypeWithArgsFromSubtype withJavaLangReflectType:self->runtimeType_])) resolveTypeWithJavaLangReflectType:genericSubtype->runtimeType_];
}

id<JavaLangReflectType> ComGoogleCommonReflectTypeToken_newArrayClassOrGenericArrayTypeWithJavaLangReflectType_(id<JavaLangReflectType> componentType) {
  ComGoogleCommonReflectTypeToken_initialize();
  return [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7))) newArrayTypeWithJavaLangReflectType:componentType];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken)

@implementation ComGoogleCommonReflectTypeToken_1

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
                              withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(self, outer$, method);
  return self;
}

- (id<JavaLangReflectType>)getGenericReturnType {
  return ComGoogleCommonReflectTypeToken_getType(nil_chk(ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(this$0_, [super getGenericReturnType])));
}

- (IOSObjectArray *)getGenericParameterTypes {
  return ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(this$0_, [super getGenericParameterTypes]);
}

- (IOSObjectArray *)getGenericExceptionTypes {
  return ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(this$0_, [super getGenericExceptionTypes]);
}

- (ComGoogleCommonReflectTypeToken *)getOwnerType {
  return this$0_;
}

- (NSString *)description {
  return JreStrcat("@C$", [self getOwnerType], '.', [super description]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:withJavaLangReflectMethod:);
  methods[1].selector = @selector(getGenericReturnType);
  methods[2].selector = @selector(getGenericParameterTypes);
  methods[3].selector = @selector(getGenericExceptionTypes);
  methods[4].selector = @selector(getOwnerType);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectMethod;", "()Lcom/google/common/reflect/TypeToken<TT;>;", "toString", "Lcom/google/common/reflect/TypeToken<TT;>;", "LComGoogleCommonReflectTypeToken;", "methodWithJavaLangReflectMethod:", "Lcom/google/common/reflect/Invokable$MethodInvokable<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_1 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 6, 1, 4, -1, 5, 6, -1 };
  return &_ComGoogleCommonReflectTypeToken_1;
}

@end

void ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken_1 *self, ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method) {
  self->this$0_ = outer$;
  ComGoogleCommonReflectInvokable_MethodInvokable_initWithJavaLangReflectMethod_(self, method);
}

ComGoogleCommonReflectTypeToken_1 *new_ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_1, initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_, outer$, method)
}

ComGoogleCommonReflectTypeToken_1 *create_ComGoogleCommonReflectTypeToken_1_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectMethod *method) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_1, initWithComGoogleCommonReflectTypeToken_withJavaLangReflectMethod_, outer$, method)
}

@implementation ComGoogleCommonReflectTypeToken_2

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
                         withJavaLangReflectConstructor:(JavaLangReflectConstructor *)constructor {
  ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(self, outer$, constructor);
  return self;
}

- (id<JavaLangReflectType>)getGenericReturnType {
  return ComGoogleCommonReflectTypeToken_getType(nil_chk(ComGoogleCommonReflectTypeToken_resolveTypeWithJavaLangReflectType_(this$0_, [super getGenericReturnType])));
}

- (IOSObjectArray *)getGenericParameterTypes {
  return ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(this$0_, [super getGenericParameterTypes]);
}

- (IOSObjectArray *)getGenericExceptionTypes {
  return ComGoogleCommonReflectTypeToken_resolveInPlaceWithJavaLangReflectTypeArray_(this$0_, [super getGenericExceptionTypes]);
}

- (ComGoogleCommonReflectTypeToken *)getOwnerType {
  return this$0_;
}

- (NSString *)description {
  return JreStrcat("@C$C", [self getOwnerType], '(', [((ComGoogleCommonBaseJoiner *) nil_chk(ComGoogleCommonBaseJoiner_onWithNSString_(@", "))) joinWithNSObjectArray:[self getGenericParameterTypes]], ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:withJavaLangReflectConstructor:);
  methods[1].selector = @selector(getGenericReturnType);
  methods[2].selector = @selector(getGenericParameterTypes);
  methods[3].selector = @selector(getGenericExceptionTypes);
  methods[4].selector = @selector(getOwnerType);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectConstructor;", "(Ljava/lang/reflect/Constructor<*>;)V", "()Lcom/google/common/reflect/TypeToken<TT;>;", "toString", "Lcom/google/common/reflect/TypeToken<TT;>;", "LComGoogleCommonReflectTypeToken;", "constructorWithJavaLangReflectConstructor:", "Lcom/google/common/reflect/Invokable$ConstructorInvokable<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_2 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 6, 1, 5, -1, 6, 7, -1 };
  return &_ComGoogleCommonReflectTypeToken_2;
}

@end

void ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken_2 *self, ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor) {
  self->this$0_ = outer$;
  ComGoogleCommonReflectInvokable_ConstructorInvokable_initWithJavaLangReflectConstructor_(self, constructor);
}

ComGoogleCommonReflectTypeToken_2 *new_ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_2, initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_, outer$, constructor)
}

ComGoogleCommonReflectTypeToken_2 *create_ComGoogleCommonReflectTypeToken_2_initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_(ComGoogleCommonReflectTypeToken *outer$, JavaLangReflectConstructor *constructor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_2, initWithComGoogleCommonReflectTypeToken_withJavaLangReflectConstructor_, outer$, constructor)
}

@implementation ComGoogleCommonReflectTypeToken_TypeSet

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$ {
  ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(self, outer$);
  return self;
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)interfaces {
  return new_ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(this$0_, self);
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)classes {
  return new_ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(this$0_);
}

- (id<JavaUtilSet>)delegate {
  ComGoogleCommonCollectImmutableSet *filteredTypes = types_;
  if (filteredTypes == nil) {
    ComGoogleCommonCollectImmutableList *collectedTypes = ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_(nil_chk(JreLoadStatic(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_GENERIC_TYPE)), this$0_);
    return (types_ = [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(collectedTypes))) filterWithComGoogleCommonBasePredicate:JreLoadEnum(ComGoogleCommonReflectTypeToken_TypeFilter, IGNORE_TYPE_VARIABLE_OR_WILDCARD)])) toSet]);
  }
  else {
    return filteredTypes;
  }
}

- (id<JavaUtilSet>)rawTypes {
  ComGoogleCommonCollectImmutableList *collectedTypes = [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_RAW_TYPE))) collectTypesWithJavaLangIterable:ComGoogleCommonReflectTypeToken_getRawTypes(this$0_)];
  return ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(collectedTypes);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:);
  methods[1].selector = @selector(interfaces);
  methods[2].selector = @selector(classes);
  methods[3].selector = @selector(delegate);
  methods[4].selector = @selector(rawTypes);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "types_", "LComGoogleCommonCollectImmutableSet;", .constantValue.asLong = 0, 0x82, -1, -1, 3, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypeToken_TypeSet_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Set<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "()Ljava/util/Set<Ljava/lang/Class<-TT;>;>;", "Lcom/google/common/reflect/TypeToken<TT;>;", "Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "LComGoogleCommonReflectTypeToken;", "Lcom/google/common/collect/ForwardingSet<Lcom/google/common/reflect/TypeToken<-TT;>;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeSet = { "TypeSet", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1, 5, 3, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeSet;
}

@end

void ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken_TypeSet *self, ComGoogleCommonReflectTypeToken *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonCollectForwardingSet_init(self);
}

ComGoogleCommonReflectTypeToken_TypeSet *new_ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeSet, initWithComGoogleCommonReflectTypeToken_, outer$)
}

ComGoogleCommonReflectTypeToken_TypeSet *create_ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeSet, initWithComGoogleCommonReflectTypeToken_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_TypeSet)

@implementation ComGoogleCommonReflectTypeToken_InterfaceSet

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$
            withComGoogleCommonReflectTypeToken_TypeSet:(ComGoogleCommonReflectTypeToken_TypeSet *)allTypes {
  ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(self, outer$, allTypes);
  return self;
}

- (id<JavaUtilSet>)delegate {
  ComGoogleCommonCollectImmutableSet *result = interfaces_;
  if (result == nil) {
    return (interfaces_ = [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(allTypes_))) filterWithComGoogleCommonBasePredicate:JreLoadEnum(ComGoogleCommonReflectTypeToken_TypeFilter, INTERFACE_ONLY)])) toSet]);
  }
  else {
    return result;
  }
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)interfaces {
  return self;
}

- (id<JavaUtilSet>)rawTypes {
  ComGoogleCommonCollectImmutableList *collectedTypes = [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_RAW_TYPE))) collectTypesWithJavaLangIterable:ComGoogleCommonReflectTypeToken_getRawTypes(this$1_)];
  return [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(collectedTypes))) filterWithComGoogleCommonBasePredicate:new_ComGoogleCommonReflectTypeToken_InterfaceSet_1_init()])) toSet];
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)classes {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"interfaces().classes() not supported.");
}

- (id)readResolve {
  return [((ComGoogleCommonReflectTypeToken_TypeSet *) nil_chk(ComGoogleCommonReflectTypeToken_getTypes(this$1_))) interfaces];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:withComGoogleCommonReflectTypeToken_TypeSet:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(interfaces);
  methods[3].selector = @selector(rawTypes);
  methods[4].selector = @selector(classes);
  methods[5].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "allTypes_", "LComGoogleCommonReflectTypeToken_TypeSet;", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
    { "interfaces_", "LComGoogleCommonCollectImmutableSet;", .constantValue.asLong = 0, 0x82, -1, -1, 4, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypeToken_InterfaceSet_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypeToken_TypeSet;", "()Ljava/util/Set<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "()Ljava/util/Set<Ljava/lang/Class<-TT;>;>;", "Lcom/google/common/reflect/TypeToken<TT;>;", "Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "LComGoogleCommonReflectTypeToken;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_InterfaceSet = { "InterfaceSet", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x12, 6, 4, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_InterfaceSet;
}

@end

void ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken_InterfaceSet *self, ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes) {
  self->this$1_ = outer$;
  ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(self, outer$);
  self->allTypes_ = allTypes;
}

ComGoogleCommonReflectTypeToken_InterfaceSet *new_ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_InterfaceSet, initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_, outer$, allTypes)
}

ComGoogleCommonReflectTypeToken_InterfaceSet *create_ComGoogleCommonReflectTypeToken_InterfaceSet_initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_(ComGoogleCommonReflectTypeToken *outer$, ComGoogleCommonReflectTypeToken_TypeSet *allTypes) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_InterfaceSet, initWithComGoogleCommonReflectTypeToken_withComGoogleCommonReflectTypeToken_TypeSet_, outer$, allTypes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_InterfaceSet)

@implementation ComGoogleCommonReflectTypeToken_InterfaceSet_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypeToken_InterfaceSet_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)applyWithId:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isInterface];
}

- (jboolean)testWithId:(IOSClass *)arg0 {
  return ComGoogleCommonBasePredicate_testWithId_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "LComGoogleCommonReflectTypeToken_InterfaceSet;", "rawTypes", "Ljava/lang/Object;Lcom/google/common/base/Predicate<Ljava/lang/Class<*>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_InterfaceSet_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_ComGoogleCommonReflectTypeToken_InterfaceSet_1;
}

@end

void ComGoogleCommonReflectTypeToken_InterfaceSet_1_init(ComGoogleCommonReflectTypeToken_InterfaceSet_1 *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypeToken_InterfaceSet_1 *new_ComGoogleCommonReflectTypeToken_InterfaceSet_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_InterfaceSet_1, init)
}

ComGoogleCommonReflectTypeToken_InterfaceSet_1 *create_ComGoogleCommonReflectTypeToken_InterfaceSet_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_InterfaceSet_1, init)
}

@implementation ComGoogleCommonReflectTypeToken_ClassSet

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$ {
  ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(self, outer$);
  return self;
}

- (id<JavaUtilSet>)delegate {
  ComGoogleCommonCollectImmutableSet *result = classes_;
  if (result == nil) {
    ComGoogleCommonCollectImmutableList *collectedTypes = ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_(nil_chk(ComGoogleCommonReflectTypeToken_TypeCollector_classesOnly(nil_chk(JreLoadStatic(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_GENERIC_TYPE)))), this$1_);
    return (classes_ = [((ComGoogleCommonCollectFluentIterable *) nil_chk([((ComGoogleCommonCollectFluentIterable *) nil_chk(ComGoogleCommonCollectFluentIterable_fromWithJavaLangIterable_(collectedTypes))) filterWithComGoogleCommonBasePredicate:JreLoadEnum(ComGoogleCommonReflectTypeToken_TypeFilter, IGNORE_TYPE_VARIABLE_OR_WILDCARD)])) toSet]);
  }
  else {
    return result;
  }
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)classes {
  return self;
}

- (id<JavaUtilSet>)rawTypes {
  ComGoogleCommonCollectImmutableList *collectedTypes = [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(ComGoogleCommonReflectTypeToken_TypeCollector_classesOnly(nil_chk(JreLoadStatic(ComGoogleCommonReflectTypeToken_TypeCollector, FOR_RAW_TYPE))))) collectTypesWithJavaLangIterable:ComGoogleCommonReflectTypeToken_getRawTypes(this$1_)];
  return ComGoogleCommonCollectImmutableSet_copyOfWithJavaUtilCollection_(collectedTypes);
}

- (ComGoogleCommonReflectTypeToken_TypeSet *)interfaces {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"classes().interfaces() not supported.");
}

- (id)readResolve {
  return [((ComGoogleCommonReflectTypeToken_TypeSet *) nil_chk(ComGoogleCommonReflectTypeToken_getTypes(this$1_))) classes];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:);
  methods[1].selector = @selector(delegate);
  methods[2].selector = @selector(classes);
  methods[3].selector = @selector(rawTypes);
  methods[4].selector = @selector(interfaces);
  methods[5].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "classes_", "LComGoogleCommonCollectImmutableSet;", .constantValue.asLong = 0, 0x82, -1, -1, 3, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypeToken_ClassSet_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Set<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "()Ljava/util/Set<Ljava/lang/Class<-TT;>;>;", "Lcom/google/common/reflect/TypeToken<TT;>;", "Lcom/google/common/collect/ImmutableSet<Lcom/google/common/reflect/TypeToken<-TT;>;>;", "LComGoogleCommonReflectTypeToken;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_ClassSet = { "ClassSet", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x12, 6, 3, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_ClassSet;
}

@end

void ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken_ClassSet *self, ComGoogleCommonReflectTypeToken *outer$) {
  self->this$1_ = outer$;
  ComGoogleCommonReflectTypeToken_TypeSet_initWithComGoogleCommonReflectTypeToken_(self, outer$);
}

ComGoogleCommonReflectTypeToken_ClassSet *new_ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_ClassSet, initWithComGoogleCommonReflectTypeToken_, outer$)
}

ComGoogleCommonReflectTypeToken_ClassSet *create_ComGoogleCommonReflectTypeToken_ClassSet_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_ClassSet, initWithComGoogleCommonReflectTypeToken_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_ClassSet)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypeToken_TypeFilter)

ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_values_[2];

@implementation ComGoogleCommonReflectTypeToken_TypeFilter

- (jboolean)testWithId:(ComGoogleCommonReflectTypeToken *)arg0 {
  return ComGoogleCommonBasePredicate_testWithId_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonReflectTypeToken_TypeFilter_values();
}

+ (ComGoogleCommonReflectTypeToken_TypeFilter *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonReflectTypeToken_TypeFilter_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComGoogleCommonReflectTypeToken_TypeFilter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeFilter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IGNORE_TYPE_VARIABLE_OR_WILDCARD", "LComGoogleCommonReflectTypeToken_TypeFilter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "INTERFACE_ONLY", "LComGoogleCommonReflectTypeToken_TypeFilter;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleCommonReflectTypeToken_TypeFilter, IGNORE_TYPE_VARIABLE_OR_WILDCARD), &JreEnum(ComGoogleCommonReflectTypeToken_TypeFilter, INTERFACE_ONLY), "LComGoogleCommonReflectTypeToken;", "Ljava/lang/Enum<Lcom/google/common/reflect/TypeToken$TypeFilter;>;Lcom/google/common/base/Predicate<Lcom/google/common/reflect/TypeToken<*>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeFilter = { "TypeFilter", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x440a, 2, 2, 4, -1, -1, 5, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeFilter;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypeToken_TypeFilter class]) {
    JreEnum(ComGoogleCommonReflectTypeToken_TypeFilter, IGNORE_TYPE_VARIABLE_OR_WILDCARD) = new_ComGoogleCommonReflectTypeToken_TypeFilter_1_initWithNSString_withInt_(@"IGNORE_TYPE_VARIABLE_OR_WILDCARD", 0);
    JreEnum(ComGoogleCommonReflectTypeToken_TypeFilter, INTERFACE_ONLY) = new_ComGoogleCommonReflectTypeToken_TypeFilter_2_initWithNSString_withInt_(@"INTERFACE_ONLY", 1);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypeToken_TypeFilter)
  }
}

@end

void ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypeToken_TypeFilter *new_ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeFilter, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeFilter_values() {
  ComGoogleCommonReflectTypeToken_TypeFilter_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonReflectTypeToken_TypeFilter_values_ count:2 type:ComGoogleCommonReflectTypeToken_TypeFilter_class_()];
}

ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonReflectTypeToken_TypeFilter_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonReflectTypeToken_TypeFilter *e = ComGoogleCommonReflectTypeToken_TypeFilter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonReflectTypeToken_TypeFilter *ComGoogleCommonReflectTypeToken_TypeFilter_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonReflectTypeToken_TypeFilter_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonReflectTypeToken_TypeFilter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_TypeFilter)

@implementation ComGoogleCommonReflectTypeToken_TypeFilter_1

- (jboolean)applyWithId:(ComGoogleCommonReflectTypeToken *)type {
  return !([JavaLangReflectTypeVariable_class_() isInstance:((ComGoogleCommonReflectTypeToken *) nil_chk(type))->runtimeType_] || [JavaLangReflectWildcardType_class_() isInstance:type->runtimeType_]);
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypeToken_TypeFilter_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LComGoogleCommonReflectTypeToken;", "(Lcom/google/common/reflect/TypeToken<*>;)Z", "LComGoogleCommonReflectTypeToken_TypeFilter;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeFilter_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeFilter_1;
}

@end

void ComGoogleCommonReflectTypeToken_TypeFilter_1_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypeToken_TypeFilter_1 *new_ComGoogleCommonReflectTypeToken_TypeFilter_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeFilter_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonReflectTypeToken_TypeFilter_2

- (jboolean)applyWithId:(ComGoogleCommonReflectTypeToken *)type {
  return [((IOSClass *) nil_chk(ComGoogleCommonReflectTypeToken_getRawType(nil_chk(type)))) isInterface];
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypeToken_TypeFilter_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LComGoogleCommonReflectTypeToken;", "(Lcom/google/common/reflect/TypeToken<*>;)Z", "LComGoogleCommonReflectTypeToken_TypeFilter;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeFilter_2 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeFilter_2;
}

@end

void ComGoogleCommonReflectTypeToken_TypeFilter_2_initWithNSString_withInt_(ComGoogleCommonReflectTypeToken_TypeFilter_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypeToken_TypeFilter_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypeToken_TypeFilter_2 *new_ComGoogleCommonReflectTypeToken_TypeFilter_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeFilter_2, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonReflectTypeToken_3

- (instancetype)initWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken *)outer$ {
  ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(self, outer$);
  return self;
}

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)type {
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("@$", this$0_->runtimeType_, @"contains a type variable and is not safe for the operation"));
}

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)type {
  [self visitWithJavaLangReflectTypeArray:[((id<JavaLangReflectWildcardType>) nil_chk(type)) getLowerBounds]];
  [self visitWithJavaLangReflectTypeArray:[type getUpperBounds]];
}

- (void)visitParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)type {
  [self visitWithJavaLangReflectTypeArray:[((id<JavaLangReflectParameterizedType>) nil_chk(type)) getActualTypeArguments]];
  [self visitWithJavaLangReflectTypeArray:[IOSObjectArray newArrayWithObjects:(id[]){ [type getOwnerType] } count:1 type:JavaLangReflectType_class_()]];
}

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)type {
  [self visitWithJavaLangReflectTypeArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((id<JavaLangReflectGenericArrayType>) nil_chk(type)) getGenericComponentType] } count:1 type:JavaLangReflectType_class_()]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken:);
  methods[1].selector = @selector(visitTypeVariableWithJavaLangReflectTypeVariable:);
  methods[2].selector = @selector(visitWildcardTypeWithJavaLangReflectWildcardType:);
  methods[3].selector = @selector(visitParameterizedTypeWithJavaLangReflectParameterizedType:);
  methods[4].selector = @selector(visitGenericArrayTypeWithJavaLangReflectGenericArrayType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonReflectTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "visitTypeVariable", "LJavaLangReflectTypeVariable;", "(Ljava/lang/reflect/TypeVariable<*>;)V", "visitWildcardType", "LJavaLangReflectWildcardType;", "visitParameterizedType", "LJavaLangReflectParameterizedType;", "visitGenericArrayType", "LJavaLangReflectGenericArrayType;", "Lcom/google/common/reflect/TypeToken<TT;>;", "LComGoogleCommonReflectTypeToken;", "rejectTypeVariables" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_3 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 5, 1, 10, -1, 11, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_3;
}

@end

void ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken_3 *self, ComGoogleCommonReflectTypeToken *outer$) {
  self->this$0_ = outer$;
  ComGoogleCommonReflectTypeVisitor_init(self);
}

ComGoogleCommonReflectTypeToken_3 *new_ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_3, initWithComGoogleCommonReflectTypeToken_, outer$)
}

ComGoogleCommonReflectTypeToken_3 *create_ComGoogleCommonReflectTypeToken_3_initWithComGoogleCommonReflectTypeToken_(ComGoogleCommonReflectTypeToken *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_3, initWithComGoogleCommonReflectTypeToken_, outer$)
}

@implementation ComGoogleCommonReflectTypeToken_Bounds

- (instancetype)initWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds
                                     withBoolean:(jboolean)target {
  ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(self, bounds, target);
  return self;
}

- (jboolean)isSubtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)supertype {
  {
    IOSObjectArray *a__ = bounds_;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> bound = *b__++;
      if (ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(bound)), supertype) == target_) {
        return target_;
      }
    }
  }
  return !target_;
}

- (jboolean)isSupertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)subtype {
  ComGoogleCommonReflectTypeToken *type = ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_(subtype);
  {
    IOSObjectArray *a__ = bounds_;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> bound = *b__++;
      if (ComGoogleCommonReflectTypeToken_isSubtypeOfWithJavaLangReflectType_(nil_chk(type), bound) == target_) {
        return target_;
      }
    }
  }
  return !target_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectTypeArray:withBoolean:);
  methods[1].selector = @selector(isSubtypeOfWithJavaLangReflectType:);
  methods[2].selector = @selector(isSupertypeOfWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bounds_", "[LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "target_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LJavaLangReflectType;Z", "isSubtypeOf", "LJavaLangReflectType;", "isSupertypeOf", "LComGoogleCommonReflectTypeToken;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_Bounds = { "Bounds", "com.google.common.reflect", ptrTable, methods, fields, 7, 0xa, 3, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_Bounds;
}

@end

void ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(ComGoogleCommonReflectTypeToken_Bounds *self, IOSObjectArray *bounds, jboolean target) {
  NSObject_init(self);
  self->bounds_ = bounds;
  self->target_ = target;
}

ComGoogleCommonReflectTypeToken_Bounds *new_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(IOSObjectArray *bounds, jboolean target) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_Bounds, initWithJavaLangReflectTypeArray_withBoolean_, bounds, target)
}

ComGoogleCommonReflectTypeToken_Bounds *create_ComGoogleCommonReflectTypeToken_Bounds_initWithJavaLangReflectTypeArray_withBoolean_(IOSObjectArray *bounds, jboolean target) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_Bounds, initWithJavaLangReflectTypeArray_withBoolean_, bounds, target)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_Bounds)

@implementation ComGoogleCommonReflectTypeToken_4

- (instancetype)initWithComGoogleCommonCollectImmutableSet_Builder:(ComGoogleCommonCollectImmutableSet_Builder *)capture$0 {
  ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(self, capture$0);
  return self;
}

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)t {
  [self visitWithJavaLangReflectTypeArray:[((id<JavaLangReflectTypeVariable>) nil_chk(t)) getBounds]];
}

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)t {
  [self visitWithJavaLangReflectTypeArray:[((id<JavaLangReflectWildcardType>) nil_chk(t)) getUpperBounds]];
}

- (void)visitParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)t {
  (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(val$builder_)) addWithId:(IOSClass *) cast_chk([((id<JavaLangReflectParameterizedType>) nil_chk(t)) getRawType], [IOSClass class])];
}

- (void)visitClassWithIOSClass:(IOSClass *)t {
  (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(val$builder_)) addWithId:t];
}

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)t {
  (void) [((ComGoogleCommonCollectImmutableSet_Builder *) nil_chk(val$builder_)) addWithId:ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_(ComGoogleCommonReflectTypeToken_getRawType(nil_chk(ComGoogleCommonReflectTypeToken_ofWithJavaLangReflectType_([((id<JavaLangReflectGenericArrayType>) nil_chk(t)) getGenericComponentType]))))];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x0, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectImmutableSet_Builder:);
  methods[1].selector = @selector(visitTypeVariableWithJavaLangReflectTypeVariable:);
  methods[2].selector = @selector(visitWildcardTypeWithJavaLangReflectWildcardType:);
  methods[3].selector = @selector(visitParameterizedTypeWithJavaLangReflectParameterizedType:);
  methods[4].selector = @selector(visitClassWithIOSClass:);
  methods[5].selector = @selector(visitGenericArrayTypeWithJavaLangReflectGenericArrayType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$builder_", "LComGoogleCommonCollectImmutableSet_Builder;", .constantValue.asLong = 0, 0x1012, -1, -1, 12, -1 },
  };
  static const void *ptrTable[] = { "visitTypeVariable", "LJavaLangReflectTypeVariable;", "(Ljava/lang/reflect/TypeVariable<*>;)V", "visitWildcardType", "LJavaLangReflectWildcardType;", "visitParameterizedType", "LJavaLangReflectParameterizedType;", "visitClass", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "visitGenericArrayType", "LJavaLangReflectGenericArrayType;", "Lcom/google/common/collect/ImmutableSet$Builder<Ljava/lang/Class<*>;>;", "LComGoogleCommonReflectTypeToken;", "getRawTypes" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_4 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 6, 1, 13, -1, 14, -1, -1 };
  return &_ComGoogleCommonReflectTypeToken_4;
}

@end

void ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonReflectTypeToken_4 *self, ComGoogleCommonCollectImmutableSet_Builder *capture$0) {
  self->val$builder_ = capture$0;
  ComGoogleCommonReflectTypeVisitor_init(self);
}

ComGoogleCommonReflectTypeToken_4 *new_ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonCollectImmutableSet_Builder *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_4, initWithComGoogleCommonCollectImmutableSet_Builder_, capture$0)
}

ComGoogleCommonReflectTypeToken_4 *create_ComGoogleCommonReflectTypeToken_4_initWithComGoogleCommonCollectImmutableSet_Builder_(ComGoogleCommonCollectImmutableSet_Builder *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_4, initWithComGoogleCommonCollectImmutableSet_Builder_, capture$0)
}

@implementation ComGoogleCommonReflectTypeToken_SimpleTypeToken

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(self, type);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypeToken_SimpleTypeToken_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;", "LComGoogleCommonReflectTypeToken;", "<T:Ljava/lang/Object;>Lcom/google/common/reflect/TypeToken<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_SimpleTypeToken = { "SimpleTypeToken", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1a, 1, 1, 1, -1, -1, 2, -1 };
  return &_ComGoogleCommonReflectTypeToken_SimpleTypeToken;
}

@end

void ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(ComGoogleCommonReflectTypeToken_SimpleTypeToken *self, id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypeToken_initWithJavaLangReflectType_(self, type);
}

ComGoogleCommonReflectTypeToken_SimpleTypeToken *new_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_SimpleTypeToken, initWithJavaLangReflectType_, type)
}

ComGoogleCommonReflectTypeToken_SimpleTypeToken *create_ComGoogleCommonReflectTypeToken_SimpleTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_SimpleTypeToken, initWithJavaLangReflectType_, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_SimpleTypeToken)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypeToken_TypeCollector)

@implementation ComGoogleCommonReflectTypeToken_TypeCollector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypeToken_TypeCollector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleCommonReflectTypeToken_TypeCollector *)classesOnly {
  return ComGoogleCommonReflectTypeToken_TypeCollector_classesOnly(self);
}

- (ComGoogleCommonCollectImmutableList *)collectTypesWithId:(id)type {
  return ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_(self, type);
}

- (ComGoogleCommonCollectImmutableList *)collectTypesWithJavaLangIterable:(id<JavaLangIterable>)types {
  id<JavaUtilMap> map = ComGoogleCommonCollectMaps_newHashMap();
  for (id __strong type in nil_chk(types)) {
    ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(self, type, map);
  }
  return ComGoogleCommonReflectTypeToken_TypeCollector_sortKeysByValueWithJavaUtilMap_withJavaUtilComparator_(map, [((ComGoogleCommonCollectOrdering *) nil_chk(ComGoogleCommonCollectOrdering_natural())) reverse]);
}

- (jint)collectTypesWithId:(id)type
           withJavaUtilMap:(id<JavaUtilMap>)map {
  return ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(self, type, map);
}

+ (ComGoogleCommonCollectImmutableList *)sortKeysByValueWithJavaUtilMap:(id<JavaUtilMap>)map
                                                 withJavaUtilComparator:(id<JavaUtilComparator>)valueComparator {
  return ComGoogleCommonReflectTypeToken_TypeCollector_sortKeysByValueWithJavaUtilMap_withJavaUtilComparator_(map, valueComparator);
}

- (IOSClass *)getRawTypeWithId:(id)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaLangIterable>)getInterfacesWithId:(id)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getSuperclassWithId:(id)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken_TypeCollector;", 0x10, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x10, 1, 2, -1, 3, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x0, 1, 4, -1, 5, -1, -1 },
    { NULL, "I", 0x2, 1, 6, -1, 7, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0xa, 8, 9, -1, 10, -1, -1 },
    { NULL, "LIOSClass;", 0x400, 11, 2, -1, 12, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x400, 13, 2, -1, 14, -1, -1 },
    { NULL, "LNSObject;", 0x400, 15, 2, -1, 16, 17, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(classesOnly);
  methods[2].selector = @selector(collectTypesWithId:);
  methods[3].selector = @selector(collectTypesWithJavaLangIterable:);
  methods[4].selector = @selector(collectTypesWithId:withJavaUtilMap:);
  methods[5].selector = @selector(sortKeysByValueWithJavaUtilMap:withJavaUtilComparator:);
  methods[6].selector = @selector(getRawTypeWithId:);
  methods[7].selector = @selector(getInterfacesWithId:);
  methods[8].selector = @selector(getSuperclassWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FOR_GENERIC_TYPE", "LComGoogleCommonReflectTypeToken_TypeCollector;", .constantValue.asLong = 0, 0x18, -1, 18, 19, -1 },
    { "FOR_RAW_TYPE", "LComGoogleCommonReflectTypeToken_TypeCollector;", .constantValue.asLong = 0, 0x18, -1, 20, 21, -1 },
  };
  static const void *ptrTable[] = { "()Lcom/google/common/reflect/TypeToken$TypeCollector<TK;>;", "collectTypes", "LNSObject;", "(TK;)Lcom/google/common/collect/ImmutableList<TK;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<+TK;>;)Lcom/google/common/collect/ImmutableList<TK;>;", "LNSObject;LJavaUtilMap;", "(TK;Ljava/util/Map<-TK;Ljava/lang/Integer;>;)I", "sortKeysByValue", "LJavaUtilMap;LJavaUtilComparator;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Comparator<-TV;>;)Lcom/google/common/collect/ImmutableList<TK;>;", "getRawType", "(TK;)Ljava/lang/Class<*>;", "getInterfaces", "(TK;)Ljava/lang/Iterable<+TK;>;", "getSuperclass", "(TK;)TK;", (void *)&ComGoogleCommonReflectTypeToken_TypeCollector__Annotations$0, &ComGoogleCommonReflectTypeToken_TypeCollector_FOR_GENERIC_TYPE, "Lcom/google/common/reflect/TypeToken$TypeCollector<Lcom/google/common/reflect/TypeToken<*>;>;", &ComGoogleCommonReflectTypeToken_TypeCollector_FOR_RAW_TYPE, "Lcom/google/common/reflect/TypeToken$TypeCollector<Ljava/lang/Class<*>;>;", "LComGoogleCommonReflectTypeToken;", "LComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector;", "<K:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector = { "TypeCollector", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x40a, 9, 2, 22, 23, -1, 24, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypeToken_TypeCollector class]) {
    ComGoogleCommonReflectTypeToken_TypeCollector_FOR_GENERIC_TYPE = new_ComGoogleCommonReflectTypeToken_TypeCollector_1_init();
    ComGoogleCommonReflectTypeToken_TypeCollector_FOR_RAW_TYPE = new_ComGoogleCommonReflectTypeToken_TypeCollector_2_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypeToken_TypeCollector)
  }
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_init(ComGoogleCommonReflectTypeToken_TypeCollector *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypeToken_TypeCollector *ComGoogleCommonReflectTypeToken_TypeCollector_classesOnly(ComGoogleCommonReflectTypeToken_TypeCollector *self) {
  return new_ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(self);
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_(ComGoogleCommonReflectTypeToken_TypeCollector *self, id type) {
  return [self collectTypesWithJavaLangIterable:ComGoogleCommonCollectImmutableList_ofWithId_(type)];
}

jint ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(ComGoogleCommonReflectTypeToken_TypeCollector *self, id type, id<JavaUtilMap> map) {
  JavaLangInteger *existing = [((id<JavaUtilMap>) nil_chk(map)) getWithId:type];
  if (existing != nil) {
    return [existing intValue];
  }
  jint aboveMe = [((IOSClass *) nil_chk([self getRawTypeWithId:type])) isInterface] ? 1 : 0;
  for (id __strong interfaceType in nil_chk([self getInterfacesWithId:type])) {
    aboveMe = JavaLangMath_maxWithInt_withInt_(aboveMe, ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(self, interfaceType, map));
  }
  id superclass_ = [self getSuperclassWithId:type];
  if (superclass_ != nil) {
    aboveMe = JavaLangMath_maxWithInt_withInt_(aboveMe, ComGoogleCommonReflectTypeToken_TypeCollector_collectTypesWithId_withJavaUtilMap_(self, superclass_, map));
  }
  (void) [map putWithId:type withId:JavaLangInteger_valueOfWithInt_(aboveMe + 1)];
  return aboveMe + 1;
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypeToken_TypeCollector_sortKeysByValueWithJavaUtilMap_withJavaUtilComparator_(id<JavaUtilMap> map, id<JavaUtilComparator> valueComparator) {
  ComGoogleCommonReflectTypeToken_TypeCollector_initialize();
  ComGoogleCommonCollectOrdering *keyOrdering = new_ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(valueComparator, map);
  return [keyOrdering immutableSortedCopyWithJavaLangIterable:[((id<JavaUtilMap>) nil_chk(map)) keySet]];
}

IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_TypeCollector)

@implementation ComGoogleCommonReflectTypeToken_TypeCollector_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypeToken_TypeCollector_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)getRawTypeWithId:(ComGoogleCommonReflectTypeToken *)type {
  return ComGoogleCommonReflectTypeToken_getRawType(nil_chk(type));
}

- (id<JavaLangIterable>)getInterfacesWithId:(ComGoogleCommonReflectTypeToken *)type {
  return ComGoogleCommonReflectTypeToken_getGenericInterfaces(nil_chk(type));
}

- (ComGoogleCommonReflectTypeToken *)getSuperclassWithId:(ComGoogleCommonReflectTypeToken *)type {
  return ComGoogleCommonReflectTypeToken_getGenericSuperclass(nil_chk(type));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 3, 1, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypeToken;", 0x0, 5, 1, -1, 6, 7, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getRawTypeWithId:);
  methods[2].selector = @selector(getInterfacesWithId:);
  methods[3].selector = @selector(getSuperclassWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getRawType", "LComGoogleCommonReflectTypeToken;", "(Lcom/google/common/reflect/TypeToken<*>;)Ljava/lang/Class<*>;", "getInterfaces", "(Lcom/google/common/reflect/TypeToken<*>;)Ljava/lang/Iterable<+Lcom/google/common/reflect/TypeToken<*>;>;", "getSuperclass", "(Lcom/google/common/reflect/TypeToken<*>;)Lcom/google/common/reflect/TypeToken<*>;", (void *)&ComGoogleCommonReflectTypeToken_TypeCollector_1__Annotations$0, "LComGoogleCommonReflectTypeToken_TypeCollector;", "Lcom/google/common/reflect/TypeToken$TypeCollector<Lcom/google/common/reflect/TypeToken<*>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 4, 0, 8, -1, -1, 9, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector_1;
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_1_init(ComGoogleCommonReflectTypeToken_TypeCollector_1 *self) {
  ComGoogleCommonReflectTypeToken_TypeCollector_init(self);
}

ComGoogleCommonReflectTypeToken_TypeCollector_1 *new_ComGoogleCommonReflectTypeToken_TypeCollector_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_1, init)
}

ComGoogleCommonReflectTypeToken_TypeCollector_1 *create_ComGoogleCommonReflectTypeToken_TypeCollector_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_1, init)
}

IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector_1__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

@implementation ComGoogleCommonReflectTypeToken_TypeCollector_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypeToken_TypeCollector_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)getRawTypeWithId:(IOSClass *)type {
  return type;
}

- (id<JavaLangIterable>)getInterfacesWithId:(IOSClass *)type {
  return JavaUtilArrays_asListWithNSObjectArray_([((IOSClass *) nil_chk(type)) getInterfaces]);
}

- (IOSClass *)getSuperclassWithId:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) getSuperclass];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 3, 1, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x0, 5, 1, -1, 2, 6, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getRawTypeWithId:);
  methods[2].selector = @selector(getInterfacesWithId:);
  methods[3].selector = @selector(getSuperclassWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getRawType", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", "getInterfaces", "(Ljava/lang/Class<*>;)Ljava/lang/Iterable<+Ljava/lang/Class<*>;>;", "getSuperclass", (void *)&ComGoogleCommonReflectTypeToken_TypeCollector_2__Annotations$0, "LComGoogleCommonReflectTypeToken_TypeCollector;", "Lcom/google/common/reflect/TypeToken$TypeCollector<Ljava/lang/Class<*>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector_2 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 4, 0, 7, -1, -1, 8, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector_2;
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_2_init(ComGoogleCommonReflectTypeToken_TypeCollector_2 *self) {
  ComGoogleCommonReflectTypeToken_TypeCollector_init(self);
}

ComGoogleCommonReflectTypeToken_TypeCollector_2 *new_ComGoogleCommonReflectTypeToken_TypeCollector_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_2, init)
}

ComGoogleCommonReflectTypeToken_TypeCollector_2 *create_ComGoogleCommonReflectTypeToken_TypeCollector_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_2, init)
}

IOSObjectArray *ComGoogleCommonReflectTypeToken_TypeCollector_2__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

@implementation ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector

- (instancetype)initWithComGoogleCommonReflectTypeToken_TypeCollector:(ComGoogleCommonReflectTypeToken_TypeCollector *)delegate {
  ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(self, delegate);
  return self;
}

- (IOSClass *)getRawTypeWithId:(id)type {
  return [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(delegate_)) getRawTypeWithId:type];
}

- (id<JavaLangIterable>)getInterfacesWithId:(id)type {
  return [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(delegate_)) getInterfacesWithId:type];
}

- (id)getSuperclassWithId:(id)type {
  return [((ComGoogleCommonReflectTypeToken_TypeCollector *) nil_chk(delegate_)) getSuperclassWithId:type];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIOSClass;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 5, 3, -1, 6, -1, -1 },
    { NULL, "LNSObject;", 0x0, 7, 3, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken_TypeCollector:);
  methods[1].selector = @selector(getRawTypeWithId:);
  methods[2].selector = @selector(getInterfacesWithId:);
  methods[3].selector = @selector(getSuperclassWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LComGoogleCommonReflectTypeToken_TypeCollector;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypeToken_TypeCollector;", "(Lcom/google/common/reflect/TypeToken$TypeCollector<TK;>;)V", "getRawType", "LNSObject;", "(TK;)Ljava/lang/Class<*>;", "getInterfaces", "(TK;)Ljava/lang/Iterable<+TK;>;", "getSuperclass", "(TK;)TK;", "Lcom/google/common/reflect/TypeToken$TypeCollector<TK;>;", "<K:Ljava/lang/Object;>Lcom/google/common/reflect/TypeToken$TypeCollector<TK;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector = { "ForwardingTypeCollector", "com.google.common.reflect", ptrTable, methods, fields, 7, 0xa, 4, 1, 0, -1, -1, 10, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector;
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *self, ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  ComGoogleCommonReflectTypeToken_TypeCollector_init(self);
  self->delegate_ = delegate;
}

ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *new_ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector, initWithComGoogleCommonReflectTypeToken_TypeCollector_, delegate)
}

ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector *create_ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector, initWithComGoogleCommonReflectTypeToken_TypeCollector_, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector)

@implementation ComGoogleCommonReflectTypeToken_TypeCollector_3

- (instancetype)initWithComGoogleCommonReflectTypeToken_TypeCollector:(ComGoogleCommonReflectTypeToken_TypeCollector *)delegate {
  ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(self, delegate);
  return self;
}

- (id<JavaLangIterable>)getInterfacesWithId:(id)type {
  return ComGoogleCommonCollectImmutableSet_of();
}

- (ComGoogleCommonCollectImmutableList *)collectTypesWithJavaLangIterable:(id<JavaLangIterable>)types {
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  for (id __strong type in nil_chk(types)) {
    if (![((IOSClass *) nil_chk([self getRawTypeWithId:type])) isInterface]) {
      (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:type];
    }
  }
  return [super collectTypesWithJavaLangIterable:[((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x0, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypeToken_TypeCollector:);
  methods[1].selector = @selector(getInterfacesWithId:);
  methods[2].selector = @selector(collectTypesWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypeToken_TypeCollector;", "(Lcom/google/common/reflect/TypeToken$TypeCollector<TK;>;)V", "getInterfaces", "LNSObject;", "(TK;)Ljava/lang/Iterable<+TK;>;", "collectTypes", "LJavaLangIterable;", "(Ljava/lang/Iterable<+TK;>;)Lcom/google/common/collect/ImmutableList<TK;>;", "classesOnly", "Lcom/google/common/reflect/TypeToken$TypeCollector$ForwardingTypeCollector<TK;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector_3 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 0, -1, 8, 9, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector_3;
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector_3 *self, ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  ComGoogleCommonReflectTypeToken_TypeCollector_ForwardingTypeCollector_initWithComGoogleCommonReflectTypeToken_TypeCollector_(self, delegate);
}

ComGoogleCommonReflectTypeToken_TypeCollector_3 *new_ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_3, initWithComGoogleCommonReflectTypeToken_TypeCollector_, delegate)
}

ComGoogleCommonReflectTypeToken_TypeCollector_3 *create_ComGoogleCommonReflectTypeToken_TypeCollector_3_initWithComGoogleCommonReflectTypeToken_TypeCollector_(ComGoogleCommonReflectTypeToken_TypeCollector *delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_3, initWithComGoogleCommonReflectTypeToken_TypeCollector_, delegate)
}

@implementation ComGoogleCommonReflectTypeToken_TypeCollector_4

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)capture$0
                           withJavaUtilMap:(id<JavaUtilMap>)capture$1 {
  ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(self, capture$0, capture$1);
  return self;
}

- (jint)compareWithId:(id)left
               withId:(id)right {
  return [((id<JavaUtilComparator>) nil_chk(val$valueComparator_)) compareWithId:[((id<JavaUtilMap>) nil_chk(val$map_)) getWithId:left] withId:[val$map_ getWithId:right]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilComparator:withJavaUtilMap:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$valueComparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "(TK;TK;)I", "Ljava/util/Comparator<-TV;>;", "Ljava/util/Map<TK;TV;>;", "LComGoogleCommonReflectTypeToken_TypeCollector;", "sortKeysByValueWithJavaUtilMap:withJavaUtilComparator:", "Lcom/google/common/collect/Ordering<TK;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypeToken_TypeCollector_4 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, 7, -1 };
  return &_ComGoogleCommonReflectTypeToken_TypeCollector_4;
}

@end

void ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(ComGoogleCommonReflectTypeToken_TypeCollector_4 *self, id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1) {
  self->val$valueComparator_ = capture$0;
  self->val$map_ = capture$1;
  ComGoogleCommonCollectOrdering_init(self);
}

ComGoogleCommonReflectTypeToken_TypeCollector_4 *new_ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_4, initWithJavaUtilComparator_withJavaUtilMap_, capture$0, capture$1)
}

ComGoogleCommonReflectTypeToken_TypeCollector_4 *create_ComGoogleCommonReflectTypeToken_TypeCollector_4_initWithJavaUtilComparator_withJavaUtilMap_(id<JavaUtilComparator> capture$0, id<JavaUtilMap> capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypeToken_TypeCollector_4, initWithJavaUtilComparator_withJavaUtilMap_, capture$0, capture$1)
}
