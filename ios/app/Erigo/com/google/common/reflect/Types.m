//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/reflect/Types.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/Joiner.h"
#include "com/google/common/base/Objects.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/base/Predicate.h"
#include "com/google/common/base/Predicates.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableMap.h"
#include "com/google/common/collect/Iterables.h"
#include "com/google/common/reflect/Reflection.h"
#include "com/google/common/reflect/TypeCapture.h"
#include "com/google/common/reflect/TypeVisitor.h"
#include "com/google/common/reflect/Types.h"
#include "java/io/Serializable.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/AnnotatedElement.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/GenericDeclaration.h"
#include "java/lang/reflect/InvocationHandler.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Proxy.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/security/AccessControlException.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "java/util/function/Function.h"
#include "javax/annotation/Nullable.h"

@class ComGoogleCommonReflectTypes_TypeVariableImpl;

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonReflectTypes ()

+ (id<JavaLangReflectType>)subtypeOfComponentTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds;

+ (id<JavaLangReflectTypeVariable>)newTypeVariableImplWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)genericDeclaration
                                                                               withNSString:(NSString *)name
                                                               withJavaLangReflectTypeArray:(IOSObjectArray *)bounds OBJC_METHOD_FAMILY_NONE;

+ (IOSObjectArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)types;

+ (id<JavaLangIterable>)filterUpperBoundsWithJavaLangIterable:(id<JavaLangIterable>)bounds;

+ (void)disallowPrimitiveTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)types
                                             withNSString:(NSString *)usedAs;

- (instancetype)init;

@end

inline id<ComGoogleCommonBaseFunction> ComGoogleCommonReflectTypes_get_TYPE_NAME();
static id<ComGoogleCommonBaseFunction> ComGoogleCommonReflectTypes_TYPE_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypes, TYPE_NAME, id<ComGoogleCommonBaseFunction>)

inline ComGoogleCommonBaseJoiner *ComGoogleCommonReflectTypes_get_COMMA_JOINER();
static ComGoogleCommonBaseJoiner *ComGoogleCommonReflectTypes_COMMA_JOINER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypes, COMMA_JOINER, ComGoogleCommonBaseJoiner *)

__attribute__((unused)) static id<JavaLangReflectType> ComGoogleCommonReflectTypes_subtypeOfComponentTypeWithJavaLangReflectTypeArray_(IOSObjectArray *bounds);

__attribute__((unused)) static id<JavaLangReflectTypeVariable> ComGoogleCommonReflectTypes_newTypeVariableImplWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> types);

__attribute__((unused)) static id<JavaLangIterable> ComGoogleCommonReflectTypes_filterUpperBoundsWithJavaLangIterable_(id<JavaLangIterable> bounds);

__attribute__((unused)) static void ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(IOSObjectArray *types, NSString *usedAs);

__attribute__((unused)) static void ComGoogleCommonReflectTypes_init(ComGoogleCommonReflectTypes *self);

__attribute__((unused)) static ComGoogleCommonReflectTypes *new_ComGoogleCommonReflectTypes_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes *create_ComGoogleCommonReflectTypes_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$2();

@interface ComGoogleCommonReflectTypes_1 : NSObject < ComGoogleCommonBaseFunction >

- (instancetype)init;

- (NSString *)applyWithId:(id<JavaLangReflectType>)from;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_1_init(ComGoogleCommonReflectTypes_1 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypes_1 *new_ComGoogleCommonReflectTypes_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_1 *create_ComGoogleCommonReflectTypes_1_init();

typedef NS_ENUM(NSUInteger, ComGoogleCommonReflectTypes_ClassOwnership_Enum) {
  ComGoogleCommonReflectTypes_ClassOwnership_Enum_OWNED_BY_ENCLOSING_CLASS = 0,
  ComGoogleCommonReflectTypes_ClassOwnership_Enum_LOCAL_CLASS_HAS_NO_OWNER = 1,
};

@interface ComGoogleCommonReflectTypes_ClassOwnership : JavaLangEnum < NSCopying >

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType;

+ (ComGoogleCommonReflectTypes_ClassOwnership *)detectJvmBehavior;

+ (IOSObjectArray *)values;

+ (ComGoogleCommonReflectTypes_ClassOwnership *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_ClassOwnership)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_values_[];

inline ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_get_OWNED_BY_ENCLOSING_CLASS();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypes_ClassOwnership, OWNED_BY_ENCLOSING_CLASS)

inline ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_get_LOCAL_CLASS_HAS_NO_OWNER();
J2OBJC_ENUM_CONSTANT(ComGoogleCommonReflectTypes_ClassOwnership, LOCAL_CLASS_HAS_NO_OWNER)

inline ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_get_JVM_BEHAVIOR();
static ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_JVM_BEHAVIOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypes_ClassOwnership, JVM_BEHAVIOR, ComGoogleCommonReflectTypes_ClassOwnership *)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership *new_ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_detectJvmBehavior();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_values();

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_fromOrdinal(NSUInteger ordinal);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_ClassOwnership)

@interface ComGoogleCommonReflectTypes_ClassOwnership_1 : ComGoogleCommonReflectTypes_ClassOwnership < NSCopying >

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_ClassOwnership_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ClassOwnership_1_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_1 *new_ComGoogleCommonReflectTypes_ClassOwnership_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_1__Annotations$0();

@interface ComGoogleCommonReflectTypes_ClassOwnership_2 : ComGoogleCommonReflectTypes_ClassOwnership < NSCopying >

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_ClassOwnership_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ClassOwnership_2_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_2 *new_ComGoogleCommonReflectTypes_ClassOwnership_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_2__Annotations$0();

@interface ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass : NSObject

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *self);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *new_ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *create_ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass)

@interface ComGoogleCommonReflectTypes_ClassOwnership_3 : ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_ClassOwnership_3)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ClassOwnership_3_init(ComGoogleCommonReflectTypes_ClassOwnership_3 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_3 *new_ComGoogleCommonReflectTypes_ClassOwnership_3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_ClassOwnership_3 *create_ComGoogleCommonReflectTypes_ClassOwnership_3_init();

@interface ComGoogleCommonReflectTypes_2 : ComGoogleCommonReflectTypeVisitor {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$result_;
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)t;

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)t;

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)t;

- (void)visitClassWithIOSClass:(IOSClass *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(ComGoogleCommonReflectTypes_2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static ComGoogleCommonReflectTypes_2 *new_ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_2 *create_ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface ComGoogleCommonReflectTypes_GenericArrayTypeImpl : NSObject < JavaLangReflectGenericArrayType, JavaIoSerializable > {
 @public
  id<JavaLangReflectType> componentType_;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)componentType;

- (id<JavaLangReflectType>)getGenericComponentType;

- (NSString *)description;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_GenericArrayTypeImpl)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_GenericArrayTypeImpl, componentType_, id<JavaLangReflectType>)

inline jlong ComGoogleCommonReflectTypes_GenericArrayTypeImpl_get_serialVersionUID();
#define ComGoogleCommonReflectTypes_GenericArrayTypeImpl_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypes_GenericArrayTypeImpl, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(ComGoogleCommonReflectTypes_GenericArrayTypeImpl *self, id<JavaLangReflectType> componentType);

__attribute__((unused)) static ComGoogleCommonReflectTypes_GenericArrayTypeImpl *new_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(id<JavaLangReflectType> componentType) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_GenericArrayTypeImpl *create_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(id<JavaLangReflectType> componentType);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_GenericArrayTypeImpl)

@interface ComGoogleCommonReflectTypes_ParameterizedTypeImpl : NSObject < JavaLangReflectParameterizedType, JavaIoSerializable > {
 @public
  id<JavaLangReflectType> ownerType_;
  ComGoogleCommonCollectImmutableList *argumentsList_;
  IOSClass *rawType_;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)ownerType
                               withIOSClass:(IOSClass *)rawType
               withJavaLangReflectTypeArray:(IOSObjectArray *)typeArguments;

- (IOSObjectArray *)getActualTypeArguments;

- (id<JavaLangReflectType>)getRawType;

- (id<JavaLangReflectType>)getOwnerType;

- (NSString *)description;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)other;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_ParameterizedTypeImpl)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, ownerType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, argumentsList_, ComGoogleCommonCollectImmutableList *)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, rawType_, IOSClass *)

inline jlong ComGoogleCommonReflectTypes_ParameterizedTypeImpl_get_serialVersionUID();
#define ComGoogleCommonReflectTypes_ParameterizedTypeImpl_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_ParameterizedTypeImpl *self, id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments);

__attribute__((unused)) static ComGoogleCommonReflectTypes_ParameterizedTypeImpl *new_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_ParameterizedTypeImpl *create_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonReflectTypes_ParameterizedTypeImpl__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_ParameterizedTypeImpl)

@interface ComGoogleCommonReflectTypes_TypeVariableInvocationHandler : NSObject < JavaLangReflectInvocationHandler > {
 @public
  ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl_;
}

- (instancetype)initWithComGoogleCommonReflectTypes_TypeVariableImpl:(ComGoogleCommonReflectTypes_TypeVariableImpl *)typeVariableImpl;

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler, typeVariableImpl_, ComGoogleCommonReflectTypes_TypeVariableImpl *)

inline ComGoogleCommonCollectImmutableMap *ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_get_typeVariableMethods();
static ComGoogleCommonCollectImmutableMap *ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_typeVariableMethods;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler, typeVariableMethods, ComGoogleCommonCollectImmutableMap *)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *self, ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl);

__attribute__((unused)) static ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *new_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *create_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler)

@interface ComGoogleCommonReflectTypes_TypeVariableImpl : NSObject {
 @public
  id<JavaLangReflectGenericDeclaration> genericDeclaration_;
  NSString *name_;
  ComGoogleCommonCollectImmutableList *bounds_;
}

- (instancetype)initWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)genericDeclaration
                                             withNSString:(NSString *)name
                             withJavaLangReflectTypeArray:(IOSObjectArray *)bounds;

- (IOSObjectArray *)getBounds;

- (id<JavaLangReflectGenericDeclaration>)getGenericDeclaration;

- (NSString *)getName;

- (NSString *)getTypeName;

- (NSString *)description;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_TypeVariableImpl)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_TypeVariableImpl, genericDeclaration_, id<JavaLangReflectGenericDeclaration>)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_TypeVariableImpl, name_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_TypeVariableImpl, bounds_, ComGoogleCommonCollectImmutableList *)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_TypeVariableImpl *self, id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds);

__attribute__((unused)) static ComGoogleCommonReflectTypes_TypeVariableImpl *new_ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_TypeVariableImpl *create_ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypes_TypeVariableImpl)

@interface ComGoogleCommonReflectTypes_WildcardTypeImpl () {
 @public
  ComGoogleCommonCollectImmutableList *lowerBounds_;
  ComGoogleCommonCollectImmutableList *upperBounds_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_WildcardTypeImpl, lowerBounds_, ComGoogleCommonCollectImmutableList *)
J2OBJC_FIELD_SETTER(ComGoogleCommonReflectTypes_WildcardTypeImpl, upperBounds_, ComGoogleCommonCollectImmutableList *)

inline jlong ComGoogleCommonReflectTypes_WildcardTypeImpl_get_serialVersionUID();
#define ComGoogleCommonReflectTypes_WildcardTypeImpl_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonReflectTypes_WildcardTypeImpl, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion *new_ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_JavaVersion *self, IOSObjectArray *types);

@interface ComGoogleCommonReflectTypes_JavaVersion_1 : ComGoogleCommonReflectTypes_JavaVersion < NSCopying >

- (id<JavaLangReflectGenericArrayType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersion_1)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_JavaVersion_1_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion_1 *new_ComGoogleCommonReflectTypes_JavaVersion_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonReflectTypes_JavaVersion_2 : ComGoogleCommonReflectTypes_JavaVersion < NSCopying >

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersion_2)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_JavaVersion_2_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion_2 *new_ComGoogleCommonReflectTypes_JavaVersion_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonReflectTypes_JavaVersion_3 : ComGoogleCommonReflectTypes_JavaVersion < NSCopying >

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType OBJC_METHOD_FAMILY_NONE;

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (NSString *)typeNameWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersion_3)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_JavaVersion_3_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_3 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion_3 *new_ComGoogleCommonReflectTypes_JavaVersion_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonReflectTypes_JavaVersion_4 : ComGoogleCommonReflectTypeCapture

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypes_JavaVersion_4)

__attribute__((unused)) static void ComGoogleCommonReflectTypes_JavaVersion_4_init(ComGoogleCommonReflectTypes_JavaVersion_4 *self);

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion_4 *new_ComGoogleCommonReflectTypes_JavaVersion_4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonReflectTypes_JavaVersion_4 *create_ComGoogleCommonReflectTypes_JavaVersion_4_init();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypes)

@implementation ComGoogleCommonReflectTypes

+ (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  return ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(componentType);
}

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithOwnerWithJavaLangReflectType:(id<JavaLangReflectType>)ownerType
                                                                                withIOSClass:(IOSClass *)rawType
                                                                withJavaLangReflectTypeArray:(IOSObjectArray *)arguments {
  return ComGoogleCommonReflectTypes_newParameterizedTypeWithOwnerWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(ownerType, rawType, arguments);
}

+ (id<JavaLangReflectParameterizedType>)newParameterizedTypeWithIOSClass:(IOSClass *)rawType
                                            withJavaLangReflectTypeArray:(IOSObjectArray *)arguments {
  return ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(rawType, arguments);
}

+ (id<JavaLangReflectTypeVariable>)newArtificialTypeVariableWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)declaration
                                                                                     withNSString:(NSString *)name
                                                                     withJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypes_newArtificialTypeVariableWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(declaration, name, bounds);
}

+ (id<JavaLangReflectWildcardType>)subtypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)upperBound {
  return ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(upperBound);
}

+ (id<JavaLangReflectWildcardType>)supertypeOfWithJavaLangReflectType:(id<JavaLangReflectType>)lowerBound {
  return ComGoogleCommonReflectTypes_supertypeOfWithJavaLangReflectType_(lowerBound);
}

+ (NSString *)toStringWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(type);
}

+ (id<JavaLangReflectType>)getComponentTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(type);
}

+ (id<JavaLangReflectType>)subtypeOfComponentTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypes_subtypeOfComponentTypeWithJavaLangReflectTypeArray_(bounds);
}

+ (id<JavaLangReflectTypeVariable>)newTypeVariableImplWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)genericDeclaration
                                                                               withNSString:(NSString *)name
                                                               withJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  return ComGoogleCommonReflectTypes_newTypeVariableImplWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(genericDeclaration, name, bounds);
}

+ (IOSObjectArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)types {
  return ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(types);
}

+ (id<JavaLangIterable>)filterUpperBoundsWithJavaLangIterable:(id<JavaLangIterable>)bounds {
  return ComGoogleCommonReflectTypes_filterUpperBoundsWithJavaLangIterable_(bounds);
}

+ (void)disallowPrimitiveTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)types
                                             withNSString:(NSString *)usedAs {
  ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(types, usedAs);
}

+ (IOSClass *)getArrayClassWithIOSClass:(IOSClass *)componentType {
  return ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_(componentType);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangReflectType;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectParameterizedType;", 0x88, 2, 3, -1, 4, -1, 5 },
    { NULL, "LJavaLangReflectParameterizedType;", 0x88, 6, 7, -1, 8, -1, -1 },
    { NULL, "LJavaLangReflectTypeVariable;", 0x88, 9, 10, -1, 11, -1, -1 },
    { NULL, "LJavaLangReflectWildcardType;", 0x8, 12, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectWildcardType;", 0x8, 13, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 14, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x8, 15, 1, -1, -1, 16, -1 },
    { NULL, "LJavaLangReflectType;", 0xa, 17, 18, -1, -1, 19, -1 },
    { NULL, "LJavaLangReflectTypeVariable;", 0xa, 20, 10, -1, 11, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0xa, 21, 22, -1, 23, -1, -1 },
    { NULL, "LJavaLangIterable;", 0xa, 24, 25, -1, 26, -1, -1 },
    { NULL, "V", 0xa, 27, 28, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x8, 29, 30, -1, 31, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newArrayTypeWithJavaLangReflectType:);
  methods[1].selector = @selector(newParameterizedTypeWithOwnerWithJavaLangReflectType:withIOSClass:withJavaLangReflectTypeArray:);
  methods[2].selector = @selector(newParameterizedTypeWithIOSClass:withJavaLangReflectTypeArray:);
  methods[3].selector = @selector(newArtificialTypeVariableWithJavaLangReflectGenericDeclaration:withNSString:withJavaLangReflectTypeArray:);
  methods[4].selector = @selector(subtypeOfWithJavaLangReflectType:);
  methods[5].selector = @selector(supertypeOfWithJavaLangReflectType:);
  methods[6].selector = @selector(toStringWithJavaLangReflectType:);
  methods[7].selector = @selector(getComponentTypeWithJavaLangReflectType:);
  methods[8].selector = @selector(subtypeOfComponentTypeWithJavaLangReflectTypeArray:);
  methods[9].selector = @selector(newTypeVariableImplWithJavaLangReflectGenericDeclaration:withNSString:withJavaLangReflectTypeArray:);
  methods[10].selector = @selector(toArrayWithJavaUtilCollection:);
  methods[11].selector = @selector(filterUpperBoundsWithJavaLangIterable:);
  methods[12].selector = @selector(disallowPrimitiveTypeWithJavaLangReflectTypeArray:withNSString:);
  methods[13].selector = @selector(getArrayClassWithIOSClass:);
  methods[14].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_NAME", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x1a, -1, 32, 33, -1 },
    { "COMMA_JOINER", "LComGoogleCommonBaseJoiner;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
  };
  static const void *ptrTable[] = { "newArrayType", "LJavaLangReflectType;", "newParameterizedTypeWithOwner", "LJavaLangReflectType;LIOSClass;[LJavaLangReflectType;", "(Ljava/lang/reflect/Type;Ljava/lang/Class<*>;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;", (void *)&ComGoogleCommonReflectTypes__Annotations$0, "newParameterizedType", "LIOSClass;[LJavaLangReflectType;", "(Ljava/lang/Class<*>;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;", "newArtificialTypeVariable", "LJavaLangReflectGenericDeclaration;LNSString;[LJavaLangReflectType;", "<D::Ljava/lang/reflect/GenericDeclaration;>(TD;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable<TD;>;", "subtypeOf", "supertypeOf", "toString", "getComponentType", (void *)&ComGoogleCommonReflectTypes__Annotations$1, "subtypeOfComponentType", "[LJavaLangReflectType;", (void *)&ComGoogleCommonReflectTypes__Annotations$2, "newTypeVariableImpl", "toArray", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/reflect/Type;>;)[Ljava/lang/reflect/Type;", "filterUpperBounds", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/reflect/Type;>;)Ljava/lang/Iterable<Ljava/lang/reflect/Type;>;", "disallowPrimitiveType", "[LJavaLangReflectType;LNSString;", "getArrayClass", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", &ComGoogleCommonReflectTypes_TYPE_NAME, "Lcom/google/common/base/Function<Ljava/lang/reflect/Type;Ljava/lang/String;>;", &ComGoogleCommonReflectTypes_COMMA_JOINER, "LComGoogleCommonReflectTypes_ClassOwnership;LComGoogleCommonReflectTypes_GenericArrayTypeImpl;LComGoogleCommonReflectTypes_ParameterizedTypeImpl;LComGoogleCommonReflectTypes_TypeVariableInvocationHandler;LComGoogleCommonReflectTypes_TypeVariableImpl;LComGoogleCommonReflectTypes_WildcardTypeImpl;LComGoogleCommonReflectTypes_JavaVersion;LComGoogleCommonReflectTypes_NativeTypeVariableEquals;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes = { "Types", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x10, 15, 2, -1, 35, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypes class]) {
    ComGoogleCommonReflectTypes_TYPE_NAME = new_ComGoogleCommonReflectTypes_1_init();
    ComGoogleCommonReflectTypes_COMMA_JOINER = [((ComGoogleCommonBaseJoiner *) nil_chk(ComGoogleCommonBaseJoiner_onWithNSString_(@", "))) useForNullWithNSString:@"null"];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypes)
  }
}

@end

id<JavaLangReflectType> ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(id<JavaLangReflectType> componentType) {
  ComGoogleCommonReflectTypes_initialize();
  if ([JavaLangReflectWildcardType_class_() isInstance:componentType]) {
    id<JavaLangReflectWildcardType> wildcard = (id<JavaLangReflectWildcardType>) cast_check(componentType, JavaLangReflectWildcardType_class_());
    IOSObjectArray *lowerBounds = [((id<JavaLangReflectWildcardType>) nil_chk(wildcard)) getLowerBounds];
    ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(((IOSObjectArray *) nil_chk(lowerBounds))->size_ <= 1, @"Wildcard cannot have more than one lower bounds.");
    if (lowerBounds->size_ == 1) {
      return ComGoogleCommonReflectTypes_supertypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(IOSObjectArray_Get(lowerBounds, 0)));
    }
    else {
      IOSObjectArray *upperBounds = [wildcard getUpperBounds];
      ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withId_(((IOSObjectArray *) nil_chk(upperBounds))->size_ == 1, @"Wildcard should have only one upper bound.");
      return ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(ComGoogleCommonReflectTypes_newArrayTypeWithJavaLangReflectType_(IOSObjectArray_Get(upperBounds, 0)));
    }
  }
  return [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) newArrayTypeWithJavaLangReflectType:componentType];
}

id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithOwnerWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *arguments) {
  ComGoogleCommonReflectTypes_initialize();
  if (ownerType == nil) {
    return ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(rawType, arguments);
  }
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(arguments);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_([((IOSClass *) nil_chk(rawType)) getEnclosingClass] != nil, @"Owner type for unenclosed %s", rawType);
  return new_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(ownerType, rawType, arguments);
}

id<JavaLangReflectParameterizedType> ComGoogleCommonReflectTypes_newParameterizedTypeWithIOSClass_withJavaLangReflectTypeArray_(IOSClass *rawType, IOSObjectArray *arguments) {
  ComGoogleCommonReflectTypes_initialize();
  return new_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_([((ComGoogleCommonReflectTypes_ClassOwnership *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_ClassOwnership, JVM_BEHAVIOR))) getOwnerTypeWithIOSClass:rawType], rawType, arguments);
}

id<JavaLangReflectTypeVariable> ComGoogleCommonReflectTypes_newArtificialTypeVariableWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> declaration, NSString *name, IOSObjectArray *bounds) {
  ComGoogleCommonReflectTypes_initialize();
  return ComGoogleCommonReflectTypes_newTypeVariableImplWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(declaration, name, (((IOSObjectArray *) nil_chk(bounds))->size_ == 0) ? [IOSObjectArray newArrayWithObjects:(id[]){ NSObject_class_() } count:1 type:JavaLangReflectType_class_()] : bounds);
}

id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(id<JavaLangReflectType> upperBound) {
  ComGoogleCommonReflectTypes_initialize();
  return new_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_([IOSObjectArray newArrayWithLength:0 type:JavaLangReflectType_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ upperBound } count:1 type:JavaLangReflectType_class_()]);
}

id<JavaLangReflectWildcardType> ComGoogleCommonReflectTypes_supertypeOfWithJavaLangReflectType_(id<JavaLangReflectType> lowerBound) {
  ComGoogleCommonReflectTypes_initialize();
  return new_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_([IOSObjectArray newArrayWithObjects:(id[]){ lowerBound } count:1 type:JavaLangReflectType_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ NSObject_class_() } count:1 type:JavaLangReflectType_class_()]);
}

NSString *ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypes_initialize();
  return ([type isKindOfClass:[IOSClass class]]) ? [((IOSClass *) nil_chk(((IOSClass *) cast_chk(type, [IOSClass class])))) getName] : [((id<JavaLangReflectType>) nil_chk(type)) description];
}

id<JavaLangReflectType> ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  ComGoogleCommonReflectTypes_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  JavaUtilConcurrentAtomicAtomicReference *result = new_JavaUtilConcurrentAtomicAtomicReference_init();
  [new_ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(result) visitWithJavaLangReflectTypeArray:[IOSObjectArray newArrayWithObjects:(id[]){ type } count:1 type:JavaLangReflectType_class_()]];
  return [result get];
}

id<JavaLangReflectType> ComGoogleCommonReflectTypes_subtypeOfComponentTypeWithJavaLangReflectTypeArray_(IOSObjectArray *bounds) {
  ComGoogleCommonReflectTypes_initialize();
  {
    IOSObjectArray *a__ = bounds;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> bound = *b__++;
      id<JavaLangReflectType> componentType = ComGoogleCommonReflectTypes_getComponentTypeWithJavaLangReflectType_(bound);
      if (componentType != nil) {
        if ([componentType isKindOfClass:[IOSClass class]]) {
          IOSClass *componentClass = (IOSClass *) cast_chk(componentType, [IOSClass class]);
          if ([componentClass isPrimitive]) {
            return componentClass;
          }
        }
        return ComGoogleCommonReflectTypes_subtypeOfWithJavaLangReflectType_(componentType);
      }
    }
  }
  return nil;
}

id<JavaLangReflectTypeVariable> ComGoogleCommonReflectTypes_newTypeVariableImplWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds) {
  ComGoogleCommonReflectTypes_initialize();
  ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl = new_ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(genericDeclaration, name, bounds);
  id<JavaLangReflectTypeVariable> typeVariable = ComGoogleCommonReflectReflection_newProxyWithIOSClass_withJavaLangReflectInvocationHandler_(JavaLangReflectTypeVariable_class_(), new_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(typeVariableImpl));
  return typeVariable;
}

IOSObjectArray *ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> types) {
  ComGoogleCommonReflectTypes_initialize();
  return [((id<JavaUtilCollection>) nil_chk(types)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[types size] type:JavaLangReflectType_class_()]];
}

id<JavaLangIterable> ComGoogleCommonReflectTypes_filterUpperBoundsWithJavaLangIterable_(id<JavaLangIterable> bounds) {
  ComGoogleCommonReflectTypes_initialize();
  return ComGoogleCommonCollectIterables_filterWithJavaLangIterable_withComGoogleCommonBasePredicate_(bounds, ComGoogleCommonBasePredicates_not__WithComGoogleCommonBasePredicate_(ComGoogleCommonBasePredicates_equalToWithId_(NSObject_class_())));
}

void ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(IOSObjectArray *types, NSString *usedAs) {
  ComGoogleCommonReflectTypes_initialize();
  {
    IOSObjectArray *a__ = types;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> type = *b__++;
      if ([type isKindOfClass:[IOSClass class]]) {
        IOSClass *cls = (IOSClass *) cast_chk(type, [IOSClass class]);
        ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withId_withId_(![((IOSClass *) nil_chk(cls)) isPrimitive], @"Primitive type '%s' used as %s", cls, usedAs);
      }
    }
  }
}

IOSClass *ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_(IOSClass *componentType) {
  ComGoogleCommonReflectTypes_initialize();
  return [nil_chk(JavaLangReflectArray_newInstanceWithIOSClass_withInt_(componentType, 0)) java_getClass];
}

void ComGoogleCommonReflectTypes_init(ComGoogleCommonReflectTypes *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypes *new_ComGoogleCommonReflectTypes_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes, init)
}

ComGoogleCommonReflectTypes *create_ComGoogleCommonReflectTypes_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes, init)
}

IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonReflectTypes__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes)

@implementation ComGoogleCommonReflectTypes_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)applyWithId:(id<JavaLangReflectType>)from {
  return [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) typeNameWithJavaLangReflectType:from];
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LJavaLangReflectType;", "LComGoogleCommonReflectTypes;", "Ljava/lang/Object;Lcom/google/common/base/Function<Ljava/lang/reflect/Type;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_ComGoogleCommonReflectTypes_1;
}

@end

void ComGoogleCommonReflectTypes_1_init(ComGoogleCommonReflectTypes_1 *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypes_1 *new_ComGoogleCommonReflectTypes_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_1, init)
}

ComGoogleCommonReflectTypes_1 *create_ComGoogleCommonReflectTypes_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_1, init)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypes_ClassOwnership)

ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_values_[2];

@implementation ComGoogleCommonReflectTypes_ClassOwnership

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (ComGoogleCommonReflectTypes_ClassOwnership *)detectJvmBehavior {
  return ComGoogleCommonReflectTypes_ClassOwnership_detectJvmBehavior();
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonReflectTypes_ClassOwnership_values();
}

+ (ComGoogleCommonReflectTypes_ClassOwnership *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonReflectTypes_ClassOwnership_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x400, 0, 1, -1, 2, 3, -1 },
    { NULL, "LComGoogleCommonReflectTypes_ClassOwnership;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonReflectTypes_ClassOwnership;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypes_ClassOwnership;", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getOwnerTypeWithIOSClass:);
  methods[1].selector = @selector(detectJvmBehavior);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OWNED_BY_ENCLOSING_CLASS", "LComGoogleCommonReflectTypes_ClassOwnership;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "LOCAL_CLASS_HAS_NO_OWNER", "LComGoogleCommonReflectTypes_ClassOwnership;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "JVM_BEHAVIOR", "LComGoogleCommonReflectTypes_ClassOwnership;", .constantValue.asLong = 0, 0x18, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "getOwnerType", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", (void *)&ComGoogleCommonReflectTypes_ClassOwnership__Annotations$0, "valueOf", "LNSString;", &JreEnum(ComGoogleCommonReflectTypes_ClassOwnership, OWNED_BY_ENCLOSING_CLASS), &JreEnum(ComGoogleCommonReflectTypes_ClassOwnership, LOCAL_CLASS_HAS_NO_OWNER), &ComGoogleCommonReflectTypes_ClassOwnership_JVM_BEHAVIOR, "LComGoogleCommonReflectTypes;", "Ljava/lang/Enum<Lcom/google/common/reflect/Types$ClassOwnership;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ClassOwnership = { "ClassOwnership", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x440a, 4, 3, 9, -1, -1, 10, -1 };
  return &_ComGoogleCommonReflectTypes_ClassOwnership;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypes_ClassOwnership class]) {
    JreEnum(ComGoogleCommonReflectTypes_ClassOwnership, OWNED_BY_ENCLOSING_CLASS) = new_ComGoogleCommonReflectTypes_ClassOwnership_1_initWithNSString_withInt_(@"OWNED_BY_ENCLOSING_CLASS", 0);
    JreEnum(ComGoogleCommonReflectTypes_ClassOwnership, LOCAL_CLASS_HAS_NO_OWNER) = new_ComGoogleCommonReflectTypes_ClassOwnership_2_initWithNSString_withInt_(@"LOCAL_CLASS_HAS_NO_OWNER", 1);
    ComGoogleCommonReflectTypes_ClassOwnership_JVM_BEHAVIOR = ComGoogleCommonReflectTypes_ClassOwnership_detectJvmBehavior();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypes_ClassOwnership)
  }
}

@end

void ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_ClassOwnership *new_ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ClassOwnership, initWithNSString_withInt_, __name, __ordinal)
}

ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_detectJvmBehavior() {
  ComGoogleCommonReflectTypes_ClassOwnership_initialize();
  IOSClass *subclass = [new_ComGoogleCommonReflectTypes_ClassOwnership_3_init() java_getClass];
  id<JavaLangReflectParameterizedType> parameterizedType = (id<JavaLangReflectParameterizedType>) cast_check([subclass getGenericSuperclass], JavaLangReflectParameterizedType_class_());
  {
    IOSObjectArray *a__ = ComGoogleCommonReflectTypes_ClassOwnership_values();
    ComGoogleCommonReflectTypes_ClassOwnership * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComGoogleCommonReflectTypes_ClassOwnership * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComGoogleCommonReflectTypes_ClassOwnership *behavior = *b__++;
      if ([((ComGoogleCommonReflectTypes_ClassOwnership *) nil_chk(behavior)) getOwnerTypeWithIOSClass:ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_class_()] == (id) [((id<JavaLangReflectParameterizedType>) nil_chk(parameterizedType)) getOwnerType]) {
        return behavior;
      }
    }
  }
  @throw new_JavaLangAssertionError_init();
}

IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_values() {
  ComGoogleCommonReflectTypes_ClassOwnership_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonReflectTypes_ClassOwnership_values_ count:2 type:ComGoogleCommonReflectTypes_ClassOwnership_class_()];
}

ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonReflectTypes_ClassOwnership_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleCommonReflectTypes_ClassOwnership *e = ComGoogleCommonReflectTypes_ClassOwnership_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonReflectTypes_ClassOwnership *ComGoogleCommonReflectTypes_ClassOwnership_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonReflectTypes_ClassOwnership_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleCommonReflectTypes_ClassOwnership_values_[ordinal];
}

IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_ClassOwnership)

@implementation ComGoogleCommonReflectTypes_ClassOwnership_1

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType {
  return [((IOSClass *) nil_chk(rawType)) getEnclosingClass];
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypes_ClassOwnership_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x0, 0, 1, -1, 2, 3, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getOwnerTypeWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getOwnerType", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", (void *)&ComGoogleCommonReflectTypes_ClassOwnership_1__Annotations$0, "LComGoogleCommonReflectTypes_ClassOwnership;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ClassOwnership_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_ClassOwnership_1;
}

@end

void ComGoogleCommonReflectTypes_ClassOwnership_1_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_ClassOwnership_1 *new_ComGoogleCommonReflectTypes_ClassOwnership_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_1, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_1__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

@implementation ComGoogleCommonReflectTypes_ClassOwnership_2

- (IOSClass *)getOwnerTypeWithIOSClass:(IOSClass *)rawType {
  if ([((IOSClass *) nil_chk(rawType)) isLocalClass]) {
    return nil;
  }
  else {
    return [rawType getEnclosingClass];
  }
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypes_ClassOwnership_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x0, 0, 1, -1, 2, 3, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getOwnerTypeWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getOwnerType", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", (void *)&ComGoogleCommonReflectTypes_ClassOwnership_2__Annotations$0, "LComGoogleCommonReflectTypes_ClassOwnership;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ClassOwnership_2 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_ClassOwnership_2;
}

@end

void ComGoogleCommonReflectTypes_ClassOwnership_2_initWithNSString_withInt_(ComGoogleCommonReflectTypes_ClassOwnership_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypes_ClassOwnership_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_ClassOwnership_2 *new_ComGoogleCommonReflectTypes_ClassOwnership_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_2, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonReflectTypes_ClassOwnership_2__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

@implementation ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypes_ClassOwnership;", "detectJvmBehavior", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass = { "LocalClass", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x0, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass;
}

@end

void ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *new_ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass, init)
}

ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass *create_ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass)

@implementation ComGoogleCommonReflectTypes_ClassOwnership_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_ClassOwnership_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypes_ClassOwnership;", "detectJvmBehavior", "Lcom/google/common/reflect/Types$ClassOwnership$1LocalClass<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ClassOwnership_3 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleCommonReflectTypes_ClassOwnership_3;
}

@end

void ComGoogleCommonReflectTypes_ClassOwnership_3_init(ComGoogleCommonReflectTypes_ClassOwnership_3 *self) {
  ComGoogleCommonReflectTypes_ClassOwnership_1LocalClass_init(self);
}

ComGoogleCommonReflectTypes_ClassOwnership_3 *new_ComGoogleCommonReflectTypes_ClassOwnership_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_3, init)
}

ComGoogleCommonReflectTypes_ClassOwnership_3 *create_ComGoogleCommonReflectTypes_ClassOwnership_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_ClassOwnership_3, init)
}

@implementation ComGoogleCommonReflectTypes_2

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)visitTypeVariableWithJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)t {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$result_)) setWithId:ComGoogleCommonReflectTypes_subtypeOfComponentTypeWithJavaLangReflectTypeArray_([((id<JavaLangReflectTypeVariable>) nil_chk(t)) getBounds])];
}

- (void)visitWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)t {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$result_)) setWithId:ComGoogleCommonReflectTypes_subtypeOfComponentTypeWithJavaLangReflectTypeArray_([((id<JavaLangReflectWildcardType>) nil_chk(t)) getUpperBounds])];
}

- (void)visitGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)t {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$result_)) setWithId:[((id<JavaLangReflectGenericArrayType>) nil_chk(t)) getGenericComponentType]];
}

- (void)visitClassWithIOSClass:(IOSClass *)t {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$result_)) setWithId:[((IOSClass *) nil_chk(t)) getComponentType]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  methods[1].selector = @selector(visitTypeVariableWithJavaLangReflectTypeVariable:);
  methods[2].selector = @selector(visitWildcardTypeWithJavaLangReflectWildcardType:);
  methods[3].selector = @selector(visitGenericArrayTypeWithJavaLangReflectGenericArrayType:);
  methods[4].selector = @selector(visitClassWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$result_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "visitTypeVariable", "LJavaLangReflectTypeVariable;", "(Ljava/lang/reflect/TypeVariable<*>;)V", "visitWildcardType", "LJavaLangReflectWildcardType;", "visitGenericArrayType", "LJavaLangReflectGenericArrayType;", "visitClass", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/reflect/Type;>;", "LComGoogleCommonReflectTypes;", "getComponentTypeWithJavaLangReflectType:" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_2 = { "", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x8018, 5, 1, 11, -1, 12, -1, -1 };
  return &_ComGoogleCommonReflectTypes_2;
}

@end

void ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(ComGoogleCommonReflectTypes_2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  self->val$result_ = capture$0;
  ComGoogleCommonReflectTypeVisitor_init(self);
}

ComGoogleCommonReflectTypes_2 *new_ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_2, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

ComGoogleCommonReflectTypes_2 *create_ComGoogleCommonReflectTypes_2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_2, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation ComGoogleCommonReflectTypes_GenericArrayTypeImpl

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(self, componentType);
  return self;
}

- (id<JavaLangReflectType>)getGenericComponentType {
  return componentType_;
}

- (NSString *)description {
  return JreStrcat("$$", ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(componentType_), @"[]");
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaLangReflectType>) nil_chk(componentType_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if ([JavaLangReflectGenericArrayType_class_() isInstance:obj]) {
    id<JavaLangReflectGenericArrayType> that = (id<JavaLangReflectGenericArrayType>) cast_check(obj, JavaLangReflectGenericArrayType_class_());
    return ComGoogleCommonBaseObjects_equalWithId_withId_([self getGenericComponentType], [((id<JavaLangReflectGenericArrayType>) nil_chk(that)) getGenericComponentType]);
  }
  return false;
}

- (NSString *)getTypeName {
  return JavaLangReflectType_getTypeName(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectType:);
  methods[1].selector = @selector(getGenericComponentType);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "componentType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypes_GenericArrayTypeImpl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;", "toString", "hashCode", "equals", "LNSObject;", "LComGoogleCommonReflectTypes;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_GenericArrayTypeImpl = { "GenericArrayTypeImpl", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1a, 5, 2, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_GenericArrayTypeImpl;
}

@end

void ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(ComGoogleCommonReflectTypes_GenericArrayTypeImpl *self, id<JavaLangReflectType> componentType) {
  NSObject_init(self);
  self->componentType_ = [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) usedInGenericTypeWithJavaLangReflectType:componentType];
}

ComGoogleCommonReflectTypes_GenericArrayTypeImpl *new_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(id<JavaLangReflectType> componentType) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_GenericArrayTypeImpl, initWithJavaLangReflectType_, componentType)
}

ComGoogleCommonReflectTypes_GenericArrayTypeImpl *create_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(id<JavaLangReflectType> componentType) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_GenericArrayTypeImpl, initWithJavaLangReflectType_, componentType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_GenericArrayTypeImpl)

@implementation ComGoogleCommonReflectTypes_ParameterizedTypeImpl

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)ownerType
                               withIOSClass:(IOSClass *)rawType
               withJavaLangReflectTypeArray:(IOSObjectArray *)typeArguments {
  ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(self, ownerType, rawType, typeArguments);
  return self;
}

- (IOSObjectArray *)getActualTypeArguments {
  return ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(argumentsList_);
}

- (id<JavaLangReflectType>)getRawType {
  return rawType_;
}

- (id<JavaLangReflectType>)getOwnerType {
  return ownerType_;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_init();
  if (ownerType_ != nil) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:[((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) typeNameWithJavaLangReflectType:ownerType_]])) appendWithChar:'.'];
  }
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:[((IOSClass *) nil_chk(rawType_)) getName]])) appendWithChar:'<'])) appendWithNSString:[((ComGoogleCommonBaseJoiner *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes, COMMA_JOINER))) joinWithJavaLangIterable:ComGoogleCommonCollectIterables_transformWithJavaLangIterable_withComGoogleCommonBaseFunction_(argumentsList_, JreLoadStatic(ComGoogleCommonReflectTypes, TYPE_NAME))]])) appendWithChar:'>'])) description];
}

- (NSUInteger)hash {
  return (ownerType_ == nil ? 0 : ((jint) [ownerType_ hash])) ^ ((jint) [((ComGoogleCommonCollectImmutableList *) nil_chk(argumentsList_)) hash]) ^ ((jint) [((IOSClass *) nil_chk(rawType_)) hash]);
}

- (jboolean)isEqual:(id)other {
  if (!([JavaLangReflectParameterizedType_class_() isInstance:other])) {
    return false;
  }
  id<JavaLangReflectParameterizedType> that = (id<JavaLangReflectParameterizedType>) cast_check(other, JavaLangReflectParameterizedType_class_());
  return [((id<JavaLangReflectType>) nil_chk([self getRawType])) isEqual:[((id<JavaLangReflectParameterizedType>) nil_chk(that)) getRawType]] && ComGoogleCommonBaseObjects_equalWithId_withId_([self getOwnerType], [that getOwnerType]) && JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_([self getActualTypeArguments], [that getActualTypeArguments]);
}

- (NSString *)getTypeName {
  return JavaLangReflectType_getTypeName(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
    { NULL, "[LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectType:withIOSClass:withJavaLangReflectTypeArray:);
  methods[1].selector = @selector(getActualTypeArguments);
  methods[2].selector = @selector(getRawType);
  methods[3].selector = @selector(getOwnerType);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ownerType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "argumentsList_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "rawType_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypes_ParameterizedTypeImpl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;LIOSClass;[LJavaLangReflectType;", "(Ljava/lang/reflect/Type;Ljava/lang/Class<*>;[Ljava/lang/reflect/Type;)V", (void *)&ComGoogleCommonReflectTypes_ParameterizedTypeImpl__Annotations$0, "toString", "hashCode", "equals", "LNSObject;", "Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Type;>;", "Ljava/lang/Class<*>;", "LComGoogleCommonReflectTypes;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_ParameterizedTypeImpl = { "ParameterizedTypeImpl", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1a, 7, 4, 9, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_ParameterizedTypeImpl;
}

@end

void ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_ParameterizedTypeImpl *self, id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments) {
  NSObject_init(self);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(rawType);
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_(((IOSObjectArray *) nil_chk(typeArguments))->size_ == ((IOSObjectArray *) nil_chk([((IOSClass *) nil_chk(rawType)) getTypeParameters]))->size_);
  ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(typeArguments, @"type parameter");
  self->ownerType_ = ownerType;
  self->rawType_ = rawType;
  self->argumentsList_ = ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT)), typeArguments);
}

ComGoogleCommonReflectTypes_ParameterizedTypeImpl *new_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_, ownerType, rawType, typeArguments)
}

ComGoogleCommonReflectTypes_ParameterizedTypeImpl *create_ComGoogleCommonReflectTypes_ParameterizedTypeImpl_initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_(id<JavaLangReflectType> ownerType, IOSClass *rawType, IOSObjectArray *typeArguments) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_ParameterizedTypeImpl, initWithJavaLangReflectType_withIOSClass_withJavaLangReflectTypeArray_, ownerType, rawType, typeArguments)
}

IOSObjectArray *ComGoogleCommonReflectTypes_ParameterizedTypeImpl__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_ParameterizedTypeImpl)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler)

@implementation ComGoogleCommonReflectTypes_TypeVariableInvocationHandler

- (instancetype)initWithComGoogleCommonReflectTypes_TypeVariableImpl:(ComGoogleCommonReflectTypes_TypeVariableImpl *)typeVariableImpl {
  ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(self, typeVariableImpl);
  return self;
}

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args {
  NSString *methodName = [((JavaLangReflectMethod *) nil_chk(method)) getName];
  JavaLangReflectMethod *typeVariableMethod = [((ComGoogleCommonCollectImmutableMap *) nil_chk(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_typeVariableMethods)) getWithId:methodName];
  if (typeVariableMethod == nil) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(methodName);
  }
  else {
    @try {
      return [typeVariableMethod invokeWithId:typeVariableImpl_ withNSObjectArray:args];
    }
    @catch (JavaLangReflectInvocationTargetException *e) {
      @throw nil_chk([e getCause]);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonReflectTypes_TypeVariableImpl:);
  methods[1].selector = @selector(invokeWithId:withJavaLangReflectMethod:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "typeVariableMethods", "LComGoogleCommonCollectImmutableMap;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
    { "typeVariableImpl_", "LComGoogleCommonReflectTypes_TypeVariableImpl;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypes_TypeVariableImpl;", "(Lcom/google/common/reflect/Types$TypeVariableImpl<*>;)V", "invoke", "LNSObject;LJavaLangReflectMethod;[LNSObject;", "LNSException;", &ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_typeVariableMethods, "Lcom/google/common/collect/ImmutableMap<Ljava/lang/String;Ljava/lang/reflect/Method;>;", "Lcom/google/common/reflect/Types$TypeVariableImpl<*>;", "LComGoogleCommonReflectTypes;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_TypeVariableInvocationHandler = { "TypeVariableInvocationHandler", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1a, 2, 2, 8, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypes_TypeVariableInvocationHandler class]) {
    {
      ComGoogleCommonCollectImmutableMap_Builder *builder = ComGoogleCommonCollectImmutableMap_builder();
      {
        IOSObjectArray *a__ = [ComGoogleCommonReflectTypes_TypeVariableImpl_class_() getMethods];
        JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        JavaLangReflectMethod * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          JavaLangReflectMethod *method = *b__++;
          if ([((IOSClass *) nil_chk([((JavaLangReflectMethod *) nil_chk(method)) getDeclaringClass])) isEqual:ComGoogleCommonReflectTypes_TypeVariableImpl_class_()]) {
            @try {
              [method setAccessibleWithBoolean:true];
            }
            @catch (JavaSecurityAccessControlException *e) {
            }
            (void) [((ComGoogleCommonCollectImmutableMap_Builder *) nil_chk(builder)) putWithId:[method getName] withId:method];
          }
        }
      }
      ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_typeVariableMethods = [((ComGoogleCommonCollectImmutableMap_Builder *) nil_chk(builder)) build];
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler)
  }
}

@end

void ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *self, ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl) {
  NSObject_init(self);
  self->typeVariableImpl_ = typeVariableImpl;
}

ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *new_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler, initWithComGoogleCommonReflectTypes_TypeVariableImpl_, typeVariableImpl)
}

ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *create_ComGoogleCommonReflectTypes_TypeVariableInvocationHandler_initWithComGoogleCommonReflectTypes_TypeVariableImpl_(ComGoogleCommonReflectTypes_TypeVariableImpl *typeVariableImpl) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler, initWithComGoogleCommonReflectTypes_TypeVariableImpl_, typeVariableImpl)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_TypeVariableInvocationHandler)

@implementation ComGoogleCommonReflectTypes_TypeVariableImpl

- (instancetype)initWithJavaLangReflectGenericDeclaration:(id<JavaLangReflectGenericDeclaration>)genericDeclaration
                                             withNSString:(NSString *)name
                             withJavaLangReflectTypeArray:(IOSObjectArray *)bounds {
  ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(self, genericDeclaration, name, bounds);
  return self;
}

- (IOSObjectArray *)getBounds {
  return ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(bounds_);
}

- (id<JavaLangReflectGenericDeclaration>)getGenericDeclaration {
  return genericDeclaration_;
}

- (NSString *)getName {
  return name_;
}

- (NSString *)getTypeName {
  return name_;
}

- (NSString *)description {
  return name_;
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaLangReflectGenericDeclaration>) nil_chk(genericDeclaration_)) hash]) ^ ((jint) [((NSString *) nil_chk(name_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (JreLoadStatic(ComGoogleCommonReflectTypes_NativeTypeVariableEquals, NATIVE_TYPE_VARIABLE_ONLY)) {
    if (obj != nil && JavaLangReflectProxy_isProxyClassWithIOSClass_([obj java_getClass]) && [JavaLangReflectProxy_getInvocationHandlerWithId_(obj) isKindOfClass:[ComGoogleCommonReflectTypes_TypeVariableInvocationHandler class]]) {
      ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *typeVariableInvocationHandler = (ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *) cast_chk(JavaLangReflectProxy_getInvocationHandlerWithId_(obj), [ComGoogleCommonReflectTypes_TypeVariableInvocationHandler class]);
      ComGoogleCommonReflectTypes_TypeVariableImpl *that = ((ComGoogleCommonReflectTypes_TypeVariableInvocationHandler *) nil_chk(typeVariableInvocationHandler))->typeVariableImpl_;
      return [((NSString *) nil_chk(name_)) isEqual:[((ComGoogleCommonReflectTypes_TypeVariableImpl *) nil_chk(that)) getName]] && [((id<JavaLangReflectGenericDeclaration>) nil_chk(genericDeclaration_)) isEqual:[that getGenericDeclaration]] && [((ComGoogleCommonCollectImmutableList *) nil_chk(bounds_)) isEqual:that->bounds_];
    }
    return false;
  }
  else {
    if ([JavaLangReflectTypeVariable_class_() isInstance:obj]) {
      id<JavaLangReflectTypeVariable> that = (id<JavaLangReflectTypeVariable>) cast_check(obj, JavaLangReflectTypeVariable_class_());
      return [((NSString *) nil_chk(name_)) isEqual:[((id<JavaLangReflectTypeVariable>) nil_chk(that)) getName]] && [((id<JavaLangReflectGenericDeclaration>) nil_chk(genericDeclaration_)) isEqual:[that getGenericDeclaration]];
    }
    return false;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectGenericDeclaration;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectGenericDeclaration:withNSString:withJavaLangReflectTypeArray:);
  methods[1].selector = @selector(getBounds);
  methods[2].selector = @selector(getGenericDeclaration);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(getTypeName);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "genericDeclaration_", "LJavaLangReflectGenericDeclaration;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bounds_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectGenericDeclaration;LNSString;[LJavaLangReflectType;", "(TD;Ljava/lang/String;[Ljava/lang/reflect/Type;)V", "()TD;", "toString", "hashCode", "equals", "LNSObject;", "TD;", "Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Type;>;", "LComGoogleCommonReflectTypes;", "<D::Ljava/lang/reflect/GenericDeclaration;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_TypeVariableImpl = { "TypeVariableImpl", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x1a, 8, 3, 9, -1, -1, 10, -1 };
  return &_ComGoogleCommonReflectTypes_TypeVariableImpl;
}

@end

void ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_TypeVariableImpl *self, id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds) {
  NSObject_init(self);
  ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(bounds, @"bound for type variable");
  self->genericDeclaration_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(genericDeclaration);
  self->name_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(name);
  self->bounds_ = ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(bounds);
}

ComGoogleCommonReflectTypes_TypeVariableImpl *new_ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_TypeVariableImpl, initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_, genericDeclaration, name, bounds)
}

ComGoogleCommonReflectTypes_TypeVariableImpl *create_ComGoogleCommonReflectTypes_TypeVariableImpl_initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(id<JavaLangReflectGenericDeclaration> genericDeclaration, NSString *name, IOSObjectArray *bounds) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_TypeVariableImpl, initWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_, genericDeclaration, name, bounds)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_TypeVariableImpl)

@implementation ComGoogleCommonReflectTypes_WildcardTypeImpl

- (instancetype)initWithJavaLangReflectTypeArray:(IOSObjectArray *)lowerBounds
                    withJavaLangReflectTypeArray:(IOSObjectArray *)upperBounds {
  ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(self, lowerBounds, upperBounds);
  return self;
}

- (IOSObjectArray *)getLowerBounds {
  return ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(lowerBounds_);
}

- (IOSObjectArray *)getUpperBounds {
  return ComGoogleCommonReflectTypes_toArrayWithJavaUtilCollection_(upperBounds_);
}

- (jboolean)isEqual:(id)obj {
  if ([JavaLangReflectWildcardType_class_() isInstance:obj]) {
    id<JavaLangReflectWildcardType> that = (id<JavaLangReflectWildcardType>) cast_check(obj, JavaLangReflectWildcardType_class_());
    return [((ComGoogleCommonCollectImmutableList *) nil_chk(lowerBounds_)) isEqual:JavaUtilArrays_asListWithNSObjectArray_([((id<JavaLangReflectWildcardType>) nil_chk(that)) getLowerBounds])] && [((ComGoogleCommonCollectImmutableList *) nil_chk(upperBounds_)) isEqual:JavaUtilArrays_asListWithNSObjectArray_([that getUpperBounds])];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((ComGoogleCommonCollectImmutableList *) nil_chk(lowerBounds_)) hash]) ^ ((jint) [((ComGoogleCommonCollectImmutableList *) nil_chk(upperBounds_)) hash]);
}

- (NSString *)description {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithNSString_(@"?");
  for (id<JavaLangReflectType> __strong lowerBound in nil_chk(lowerBounds_)) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@" super "])) appendWithNSString:[((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) typeNameWithJavaLangReflectType:lowerBound]];
  }
  for (id<JavaLangReflectType> __strong upperBound in nil_chk(ComGoogleCommonReflectTypes_filterUpperBoundsWithJavaLangIterable_(upperBounds_))) {
    (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@" extends "])) appendWithNSString:[((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT))) typeNameWithJavaLangReflectType:upperBound]];
  }
  return [builder description];
}

- (NSString *)getTypeName {
  return JavaLangReflectType_getTypeName(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectTypeArray:withJavaLangReflectTypeArray:);
  methods[1].selector = @selector(getLowerBounds);
  methods[2].selector = @selector(getUpperBounds);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lowerBounds_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "upperBounds_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleCommonReflectTypes_WildcardTypeImpl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LJavaLangReflectType;[LJavaLangReflectType;", "equals", "LNSObject;", "hashCode", "toString", "Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Type;>;", "LComGoogleCommonReflectTypes;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_WildcardTypeImpl = { "WildcardTypeImpl", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x18, 6, 3, 6, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_WildcardTypeImpl;
}

@end

void ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_WildcardTypeImpl *self, IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds) {
  NSObject_init(self);
  ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(lowerBounds, @"lower bound for wildcard");
  ComGoogleCommonReflectTypes_disallowPrimitiveTypeWithJavaLangReflectTypeArray_withNSString_(upperBounds, @"upper bound for wildcard");
  self->lowerBounds_ = ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(nil_chk(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT)), lowerBounds);
  self->upperBounds_ = ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(JreLoadStatic(ComGoogleCommonReflectTypes_JavaVersion, CURRENT), upperBounds);
}

ComGoogleCommonReflectTypes_WildcardTypeImpl *new_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_WildcardTypeImpl, initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_, lowerBounds, upperBounds)
}

ComGoogleCommonReflectTypes_WildcardTypeImpl *create_ComGoogleCommonReflectTypes_WildcardTypeImpl_initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_(IOSObjectArray *lowerBounds, IOSObjectArray *upperBounds) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_WildcardTypeImpl, initWithJavaLangReflectTypeArray_withJavaLangReflectTypeArray_, lowerBounds, upperBounds)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_WildcardTypeImpl)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypes_JavaVersion)

ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_CURRENT;

ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_values_[3];

@implementation ComGoogleCommonReflectTypes_JavaVersion

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)typeNameWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonReflectTypes_toStringWithJavaLangReflectType_(type);
}

- (ComGoogleCommonCollectImmutableList *)usedInGenericTypeWithJavaLangReflectTypeArray:(IOSObjectArray *)types {
  return ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(self, types);
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonReflectTypes_JavaVersion_values();
}

+ (ComGoogleCommonReflectTypes_JavaVersion *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonReflectTypes_JavaVersion_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangReflectType;", 0x400, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x400, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 3, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x10, 2, 4, -1, 5, -1, -1 },
    { NULL, "[LComGoogleCommonReflectTypes_JavaVersion;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonReflectTypes_JavaVersion;", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newArrayTypeWithJavaLangReflectType:);
  methods[1].selector = @selector(usedInGenericTypeWithJavaLangReflectType:);
  methods[2].selector = @selector(typeNameWithJavaLangReflectType:);
  methods[3].selector = @selector(usedInGenericTypeWithJavaLangReflectTypeArray:);
  methods[4].selector = @selector(values);
  methods[5].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "JAVA6", "LComGoogleCommonReflectTypes_JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "JAVA7", "LComGoogleCommonReflectTypes_JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "JAVA8", "LComGoogleCommonReflectTypes_JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "CURRENT", "LComGoogleCommonReflectTypes_JavaVersion;", .constantValue.asLong = 0, 0x18, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "newArrayType", "LJavaLangReflectType;", "usedInGenericType", "typeName", "[LJavaLangReflectType;", "([Ljava/lang/reflect/Type;)Lcom/google/common/collect/ImmutableList<Ljava/lang/reflect/Type;>;", "valueOf", "LNSString;", &JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA6), &JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7), &JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA8), &ComGoogleCommonReflectTypes_JavaVersion_CURRENT, "LComGoogleCommonReflectTypes;", "Ljava/lang/Enum<Lcom/google/common/reflect/Types$JavaVersion;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_JavaVersion = { "JavaVersion", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x4408, 6, 4, 12, -1, -1, 13, -1 };
  return &_ComGoogleCommonReflectTypes_JavaVersion;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypes_JavaVersion class]) {
    JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA6) = new_ComGoogleCommonReflectTypes_JavaVersion_1_initWithNSString_withInt_(@"JAVA6", 0);
    JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7) = new_ComGoogleCommonReflectTypes_JavaVersion_2_initWithNSString_withInt_(@"JAVA7", 1);
    JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA8) = new_ComGoogleCommonReflectTypes_JavaVersion_3_initWithNSString_withInt_(@"JAVA8", 2);
    {
      if ([JavaLangReflectAnnotatedElement_class_() isAssignableFrom:JavaLangReflectTypeVariable_class_()]) {
        ComGoogleCommonReflectTypes_JavaVersion_CURRENT = JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA8);
      }
      else if ([[new_ComGoogleCommonReflectTypes_JavaVersion_4_init() capture] isKindOfClass:[IOSClass class]]) {
        ComGoogleCommonReflectTypes_JavaVersion_CURRENT = JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7);
      }
      else {
        ComGoogleCommonReflectTypes_JavaVersion_CURRENT = JreEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA6);
      }
    }
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypes_JavaVersion)
  }
}

@end

void ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_JavaVersion *new_ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_JavaVersion, initWithNSString_withInt_, __name, __ordinal)
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectTypes_JavaVersion_usedInGenericTypeWithJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_JavaVersion *self, IOSObjectArray *types) {
  ComGoogleCommonCollectImmutableList_Builder *builder = ComGoogleCommonCollectImmutableList_builder();
  {
    IOSObjectArray *a__ = types;
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> type = *b__++;
      (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) addWithId:[self usedInGenericTypeWithJavaLangReflectType:type]];
    }
  }
  return [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(builder)) build];
}

IOSObjectArray *ComGoogleCommonReflectTypes_JavaVersion_values() {
  ComGoogleCommonReflectTypes_JavaVersion_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonReflectTypes_JavaVersion_values_ count:3 type:ComGoogleCommonReflectTypes_JavaVersion_class_()];
}

ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonReflectTypes_JavaVersion_initialize();
  for (int i = 0; i < 3; i++) {
    ComGoogleCommonReflectTypes_JavaVersion *e = ComGoogleCommonReflectTypes_JavaVersion_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonReflectTypes_JavaVersion *ComGoogleCommonReflectTypes_JavaVersion_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonReflectTypes_JavaVersion_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ComGoogleCommonReflectTypes_JavaVersion_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_JavaVersion)

@implementation ComGoogleCommonReflectTypes_JavaVersion_1

- (id<JavaLangReflectGenericArrayType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  return new_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(componentType);
}

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
  if ([type isKindOfClass:[IOSClass class]]) {
    IOSClass *cls = (IOSClass *) cast_chk(type, [IOSClass class]);
    if ([((IOSClass *) nil_chk(cls)) isArray]) {
      return new_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_([cls getComponentType]);
    }
  }
  return type;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypes_JavaVersion_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangReflectGenericArrayType;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x0, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newArrayTypeWithJavaLangReflectType:);
  methods[1].selector = @selector(usedInGenericTypeWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newArrayType", "LJavaLangReflectType;", "usedInGenericType", "LComGoogleCommonReflectTypes_JavaVersion;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_JavaVersion_1 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_JavaVersion_1;
}

@end

void ComGoogleCommonReflectTypes_JavaVersion_1_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_JavaVersion_1 *new_ComGoogleCommonReflectTypes_JavaVersion_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_JavaVersion_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonReflectTypes_JavaVersion_2

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  if ([componentType isKindOfClass:[IOSClass class]]) {
    return ComGoogleCommonReflectTypes_getArrayClassWithIOSClass_((IOSClass *) cast_chk(componentType, [IOSClass class]));
  }
  else {
    return new_ComGoogleCommonReflectTypes_GenericArrayTypeImpl_initWithJavaLangReflectType_(componentType);
  }
}

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleCommonBasePreconditions_checkNotNullWithId_(type);
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypes_JavaVersion_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangReflectType;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x0, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newArrayTypeWithJavaLangReflectType:);
  methods[1].selector = @selector(usedInGenericTypeWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newArrayType", "LJavaLangReflectType;", "usedInGenericType", "LComGoogleCommonReflectTypes_JavaVersion;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_JavaVersion_2 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_JavaVersion_2;
}

@end

void ComGoogleCommonReflectTypes_JavaVersion_2_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_JavaVersion_2 *new_ComGoogleCommonReflectTypes_JavaVersion_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_JavaVersion_2, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonReflectTypes_JavaVersion_3

- (id<JavaLangReflectType>)newArrayTypeWithJavaLangReflectType:(id<JavaLangReflectType>)componentType {
  return [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7))) newArrayTypeWithJavaLangReflectType:componentType];
}

- (id<JavaLangReflectType>)usedInGenericTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return [((ComGoogleCommonReflectTypes_JavaVersion *) nil_chk(JreLoadEnum(ComGoogleCommonReflectTypes_JavaVersion, JAVA7))) usedInGenericTypeWithJavaLangReflectType:type];
}

- (NSString *)typeNameWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  @try {
    JavaLangReflectMethod *getTypeName = [JavaLangReflectType_class_() getMethod:@"getTypeName" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
    return (NSString *) cast_chk([((JavaLangReflectMethod *) nil_chk(getTypeName)) invokeWithId:type withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], [NSString class]);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_JavaLangAssertionError_initWithId_(@"Type.getTypeName should be available in Java 8");
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonReflectTypes_JavaVersion_3 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangReflectType;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x0, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newArrayTypeWithJavaLangReflectType:);
  methods[1].selector = @selector(usedInGenericTypeWithJavaLangReflectType:);
  methods[2].selector = @selector(typeNameWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newArrayType", "LJavaLangReflectType;", "usedInGenericType", "typeName", "LComGoogleCommonReflectTypes_JavaVersion;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_JavaVersion_3 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 4, -1, -1, -1, -1 };
  return &_ComGoogleCommonReflectTypes_JavaVersion_3;
}

@end

void ComGoogleCommonReflectTypes_JavaVersion_3_initWithNSString_withInt_(ComGoogleCommonReflectTypes_JavaVersion_3 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonReflectTypes_JavaVersion_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonReflectTypes_JavaVersion_3 *new_ComGoogleCommonReflectTypes_JavaVersion_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_JavaVersion_3, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonReflectTypes_JavaVersion_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_JavaVersion_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonReflectTypes_JavaVersion;", "Lcom/google/common/reflect/TypeCapture<[I>;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_JavaVersion_4 = { "", "com.google.common.reflect", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, -1, 1, -1 };
  return &_ComGoogleCommonReflectTypes_JavaVersion_4;
}

@end

void ComGoogleCommonReflectTypes_JavaVersion_4_init(ComGoogleCommonReflectTypes_JavaVersion_4 *self) {
  ComGoogleCommonReflectTypeCapture_init(self);
}

ComGoogleCommonReflectTypes_JavaVersion_4 *new_ComGoogleCommonReflectTypes_JavaVersion_4_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_JavaVersion_4, init)
}

ComGoogleCommonReflectTypes_JavaVersion_4 *create_ComGoogleCommonReflectTypes_JavaVersion_4_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_JavaVersion_4, init)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)

jboolean ComGoogleCommonReflectTypes_NativeTypeVariableEquals_NATIVE_TYPE_VARIABLE_ONLY;

@implementation ComGoogleCommonReflectTypes_NativeTypeVariableEquals

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NATIVE_TYPE_VARIABLE_ONLY", "Z", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleCommonReflectTypes_NativeTypeVariableEquals_NATIVE_TYPE_VARIABLE_ONLY, "LComGoogleCommonReflectTypes;", "<X:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonReflectTypes_NativeTypeVariableEquals = { "NativeTypeVariableEquals", "com.google.common.reflect", ptrTable, methods, fields, 7, 0x18, 1, 1, 1, -1, -1, 2, -1 };
  return &_ComGoogleCommonReflectTypes_NativeTypeVariableEquals;
}

+ (void)initialize {
  if (self == [ComGoogleCommonReflectTypes_NativeTypeVariableEquals class]) {
    ComGoogleCommonReflectTypes_NativeTypeVariableEquals_NATIVE_TYPE_VARIABLE_ONLY = ![((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(nil_chk([ComGoogleCommonReflectTypes_NativeTypeVariableEquals_class_() getTypeParameters]), 0))) isEqual:ComGoogleCommonReflectTypes_newArtificialTypeVariableWithJavaLangReflectGenericDeclaration_withNSString_withJavaLangReflectTypeArray_(ComGoogleCommonReflectTypes_NativeTypeVariableEquals_class_(), @"X", [IOSObjectArray newArrayWithLength:0 type:JavaLangReflectType_class_()])];
    J2OBJC_SET_INITIALIZED(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)
  }
}

@end

void ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init(ComGoogleCommonReflectTypes_NativeTypeVariableEquals *self) {
  NSObject_init(self);
}

ComGoogleCommonReflectTypes_NativeTypeVariableEquals *new_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonReflectTypes_NativeTypeVariableEquals, init)
}

ComGoogleCommonReflectTypes_NativeTypeVariableEquals *create_ComGoogleCommonReflectTypes_NativeTypeVariableEquals_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonReflectTypes_NativeTypeVariableEquals, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonReflectTypes_NativeTypeVariableEquals)
