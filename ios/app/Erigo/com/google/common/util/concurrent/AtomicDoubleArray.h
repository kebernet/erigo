//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/AtomicDoubleArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDoubleArray")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentAtomicDoubleArray
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDoubleArray 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDoubleArray 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentAtomicDoubleArray

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentAtomicDoubleArray_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDoubleArray || defined(INCLUDE_ComGoogleCommonUtilConcurrentAtomicDoubleArray))
#define ComGoogleCommonUtilConcurrentAtomicDoubleArray_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSDoubleArray;

@interface ComGoogleCommonUtilConcurrentAtomicDoubleArray : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array;

- (instancetype)initWithInt:(jint)length;

- (jdouble)addAndGetWithInt:(jint)i
                 withDouble:(jdouble)delta;

- (jboolean)compareAndSetWithInt:(jint)i
                      withDouble:(jdouble)expect
                      withDouble:(jdouble)update;

- (jdouble)getWithInt:(jint)i;

- (jdouble)getAndAddWithInt:(jint)i
                 withDouble:(jdouble)delta;

- (jdouble)getAndSetWithInt:(jint)i
                 withDouble:(jdouble)newValue;

- (void)lazySetWithInt:(jint)i
            withDouble:(jdouble)newValue;

- (jint)length;

- (void)setWithInt:(jint)i
        withDouble:(jdouble)newValue;

- (NSString *)description;

- (jboolean)weakCompareAndSetWithInt:(jint)i
                          withDouble:(jdouble)expect
                          withDouble:(jdouble)update;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicDoubleArray)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithInt_(ComGoogleCommonUtilConcurrentAtomicDoubleArray *self, jint length);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDoubleArray *new_ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithInt_(jint length) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDoubleArray *create_ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithInt_(jint length);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithDoubleArray_(ComGoogleCommonUtilConcurrentAtomicDoubleArray *self, IOSDoubleArray *array);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDoubleArray *new_ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithDoubleArray_(IOSDoubleArray *array) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDoubleArray *create_ComGoogleCommonUtilConcurrentAtomicDoubleArray_initWithDoubleArray_(IOSDoubleArray *array);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAtomicDoubleArray)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDoubleArray")
