//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/AtomicLongMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicLongMap")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentAtomicLongMap
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicLongMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicLongMap 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentAtomicLongMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentAtomicLongMap_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicLongMap || defined(INCLUDE_ComGoogleCommonUtilConcurrentAtomicLongMap))
#define ComGoogleCommonUtilConcurrentAtomicLongMap_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol JavaUtilFunctionLongBinaryOperator;
@protocol JavaUtilFunctionLongUnaryOperator;
@protocol JavaUtilMap;

@interface ComGoogleCommonUtilConcurrentAtomicLongMap : NSObject < JavaIoSerializable >

#pragma mark Public

- (jlong)accumulateAndGetWithId:(id)key
                       withLong:(jlong)x
withJavaUtilFunctionLongBinaryOperator:(id<JavaUtilFunctionLongBinaryOperator>)accumulatorFunction;

- (jlong)addAndGetWithId:(id)key
                withLong:(jlong)delta;

- (id<JavaUtilMap>)asMap;

- (void)clear;

- (jboolean)containsKeyWithId:(id)key;

+ (ComGoogleCommonUtilConcurrentAtomicLongMap *)create;

+ (ComGoogleCommonUtilConcurrentAtomicLongMap *)createWithJavaUtilMap:(id<JavaUtilMap>)m;

- (jlong)decrementAndGetWithId:(id)key;

- (jlong)getWithId:(id)key;

- (jlong)getAndAccumulateWithId:(id)key
                       withLong:(jlong)x
withJavaUtilFunctionLongBinaryOperator:(id<JavaUtilFunctionLongBinaryOperator>)accumulatorFunction;

- (jlong)getAndAddWithId:(id)key
                withLong:(jlong)delta;

- (jlong)getAndDecrementWithId:(id)key;

- (jlong)getAndIncrementWithId:(id)key;

- (jlong)getAndUpdateWithId:(id)key
withJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)updaterFunction;

- (jlong)incrementAndGetWithId:(id)key;

- (jboolean)isEmpty;

- (jlong)putWithId:(id)key
          withLong:(jlong)newValue;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)m;

- (jlong)removeWithId:(id)key;

- (void)removeAllZeros;

- (jboolean)removeIfZeroWithId:(id)key;

- (jint)size;

- (jlong)sum;

- (NSString *)description;

- (jlong)updateAndGetWithId:(id)key
withJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)updaterFunction;

#pragma mark Package-Private

- (jlong)putIfAbsentWithId:(id)key
                  withLong:(jlong)newValue;

- (jboolean)removeWithId:(id)key
                withLong:(jlong)value;

- (jboolean)replaceWithId:(id)key
                 withLong:(jlong)expectedOldValue
                 withLong:(jlong)newValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicLongMap *ComGoogleCommonUtilConcurrentAtomicLongMap_create();

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicLongMap *ComGoogleCommonUtilConcurrentAtomicLongMap_createWithJavaUtilMap_(id<JavaUtilMap> m);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAtomicLongMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicLongMap")
