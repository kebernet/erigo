//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/AtomicLongMap.java
//

#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/util/concurrent/AtomicLongMap.h"
#include "java/lang/Long.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/function/BiConsumer.h"
#include "java/util/function/BiFunction.h"
#include "java/util/function/Function.h"
#include "java/util/function/LongBinaryOperator.h"
#include "java/util/function/LongUnaryOperator.h"
#include "java/util/function/Predicate.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/stream/LongStream.h"
#include "java/util/stream/Stream.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComGoogleCommonUtilConcurrentAtomicLongMap () {
 @public
  JavaUtilConcurrentConcurrentHashMap *map_;
  id<JavaUtilMap> asMap_;
}

- (instancetype)initWithJavaUtilConcurrentConcurrentHashMap:(JavaUtilConcurrentConcurrentHashMap *)map;

- (id<JavaUtilMap>)createAsMap;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentAtomicLongMap, map_, JavaUtilConcurrentConcurrentHashMap *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentAtomicLongMap, asMap_, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *self, JavaUtilConcurrentConcurrentHashMap *map);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap *new_ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *map) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap *create_ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *map);

__attribute__((unused)) static id<JavaUtilMap> ComGoogleCommonUtilConcurrentAtomicLongMap_createAsMap(ComGoogleCommonUtilConcurrentAtomicLongMap *self);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 : NSObject < JavaUtilFunctionLongBinaryOperator >

- (jlong)applyAsLongWithLong:(jlong)a
                    withLong:(jlong)b;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1)

inline ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_get_instance();
static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1, instance, ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init();

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 : NSObject < JavaUtilFunctionLongBinaryOperator >

- (jlong)applyAsLongWithLong:(jlong)a
                    withLong:(jlong)b;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2)

inline ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_get_instance();
static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2, instance, ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init();

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 : NSObject < JavaUtilFunctionBiFunction > {
 @public
  id<JavaUtilFunctionLongUnaryOperator> val$updaterFunction_;
}

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *self, id<JavaUtilFunctionLongUnaryOperator> capture$0);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(id<JavaUtilFunctionLongUnaryOperator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(id<JavaUtilFunctionLongUnaryOperator> capture$0);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 : NSObject < JavaUtilFunctionBiFunction > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$holder_;
  id<JavaUtilFunctionLongUnaryOperator> val$updaterFunction_;
}

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 : NSObject < JavaUtilFunctionLongUnaryOperator > {
 @public
  id<JavaUtilFunctionLongBinaryOperator> val$accumulatorFunction_;
  jlong val$x_;
}

- (jlong)applyAsLongWithLong:(jlong)oldValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *self, id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 : NSObject < JavaUtilFunctionLongUnaryOperator > {
 @public
  id<JavaUtilFunctionLongBinaryOperator> val$accumulatorFunction_;
  jlong val$x_;
}

- (jlong)applyAsLongWithLong:(jlong)oldValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *self, id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 : NSObject < JavaUtilFunctionLongUnaryOperator > {
 @public
  jlong val$newValue_;
}

- (jlong)applyAsLongWithLong:(jlong)x;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *self, jlong capture$0);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(jlong capture$0);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 : NSObject < JavaUtilFunctionBiConsumer > {
 @public
  ComGoogleCommonUtilConcurrentAtomicLongMap *target$_;
}

- (void)acceptWithId:(id)a
              withId:(JavaLangLong *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *self, ComGoogleCommonUtilConcurrentAtomicLongMap *outer$);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *outer$);

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 : NSObject < JavaUtilFunctionPredicate >

- (jboolean)testWithId:(JavaLangLong *)x;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9)

inline ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_get_instance();
static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9, instance, ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init();

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 : NSObject < JavaUtilFunctionToLongFunction >

- (jlong)applyAsLongWithId:(JavaLangLong *)a;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10)

inline ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_get_instance();
static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10, instance, ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init();

@interface ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 : NSObject < JavaUtilFunctionBiFunction > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$noValue_;
  jlong val$newValue_;
}

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)oldValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1);

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap

- (instancetype)initWithJavaUtilConcurrentConcurrentHashMap:(JavaUtilConcurrentConcurrentHashMap *)map {
  ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(self, map);
  return self;
}

+ (ComGoogleCommonUtilConcurrentAtomicLongMap *)create {
  return ComGoogleCommonUtilConcurrentAtomicLongMap_create();
}

+ (ComGoogleCommonUtilConcurrentAtomicLongMap *)createWithJavaUtilMap:(id<JavaUtilMap>)m {
  return ComGoogleCommonUtilConcurrentAtomicLongMap_createWithJavaUtilMap_(m);
}

- (jlong)getWithId:(id)key {
  return [((JavaLangLong *) nil_chk([((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) getOrDefaultWithId:key withId:JavaLangLong_valueOfWithLong_(0LL)])) longLongValue];
}

- (jlong)incrementAndGetWithId:(id)key {
  return [self addAndGetWithId:key withLong:1];
}

- (jlong)decrementAndGetWithId:(id)key {
  return [self addAndGetWithId:key withLong:-1];
}

- (jlong)addAndGetWithId:(id)key
                withLong:(jlong)delta {
  return [self accumulateAndGetWithId:key withLong:delta withJavaUtilFunctionLongBinaryOperator:JreLoadStatic(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1, instance)];
}

- (jlong)getAndIncrementWithId:(id)key {
  return [self getAndAddWithId:key withLong:1];
}

- (jlong)getAndDecrementWithId:(id)key {
  return [self getAndAddWithId:key withLong:-1];
}

- (jlong)getAndAddWithId:(id)key
                withLong:(jlong)delta {
  return [self getAndAccumulateWithId:key withLong:delta withJavaUtilFunctionLongBinaryOperator:JreLoadStatic(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2, instance)];
}

- (jlong)updateAndGetWithId:(id)key
withJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)updaterFunction {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(updaterFunction);
  return [((JavaLangLong *) nil_chk([((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) computeWithId:key withJavaUtilFunctionBiFunction:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(updaterFunction)])) longLongValue];
}

- (jlong)getAndUpdateWithId:(id)key
withJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)updaterFunction {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(updaterFunction);
  JavaUtilConcurrentAtomicAtomicLong *holder = new_JavaUtilConcurrentAtomicAtomicLong_init();
  (void) [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) computeWithId:key withJavaUtilFunctionBiFunction:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(holder, updaterFunction)];
  return [holder get];
}

- (jlong)accumulateAndGetWithId:(id)key
                       withLong:(jlong)x
withJavaUtilFunctionLongBinaryOperator:(id<JavaUtilFunctionLongBinaryOperator>)accumulatorFunction {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(accumulatorFunction);
  return [self updateAndGetWithId:key withJavaUtilFunctionLongUnaryOperator:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(accumulatorFunction, x)];
}

- (jlong)getAndAccumulateWithId:(id)key
                       withLong:(jlong)x
withJavaUtilFunctionLongBinaryOperator:(id<JavaUtilFunctionLongBinaryOperator>)accumulatorFunction {
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(accumulatorFunction);
  return [self getAndUpdateWithId:key withJavaUtilFunctionLongUnaryOperator:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(accumulatorFunction, x)];
}

- (jlong)putWithId:(id)key
          withLong:(jlong)newValue {
  return [self getAndUpdateWithId:key withJavaUtilFunctionLongUnaryOperator:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(newValue)];
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)m {
  [((id<JavaUtilMap>) nil_chk(m)) forEachWithJavaUtilFunctionBiConsumer:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(self)];
}

- (jlong)removeWithId:(id)key {
  JavaLangLong *result = [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) removeWithId:key];
  return (result == nil) ? 0LL : [((JavaLangLong *) nil_chk(result)) longLongValue];
}

- (jboolean)removeIfZeroWithId:(id)key {
  return [self removeWithId:key withLong:0];
}

- (void)removeAllZeros {
  [((id<JavaUtilCollection>) nil_chk([((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) values])) removeIfWithJavaUtilFunctionPredicate:JreLoadStatic(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9, instance)];
}

- (jlong)sum {
  return [((id<JavaUtilStreamLongStream>) nil_chk([((id<JavaUtilStreamStream>) nil_chk([((id<JavaUtilCollection>) nil_chk([((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) values])) stream])) mapToLongWithJavaUtilFunctionToLongFunction:JreLoadStatic(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10, instance)])) sum];
}

- (id<JavaUtilMap>)asMap {
  id<JavaUtilMap> result = asMap_;
  return (result == nil) ? asMap_ = ComGoogleCommonUtilConcurrentAtomicLongMap_createAsMap(self) : result;
}

- (id<JavaUtilMap>)createAsMap {
  return ComGoogleCommonUtilConcurrentAtomicLongMap_createAsMap(self);
}

- (jboolean)containsKeyWithId:(id)key {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) containsKeyWithId:key];
}

- (jint)size {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) size];
}

- (jboolean)isEmpty {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) isEmpty];
}

- (void)clear {
  [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) clear];
}

- (NSString *)description {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) description];
}

- (jlong)putIfAbsentWithId:(id)key
                  withLong:(jlong)newValue {
  JavaUtilConcurrentAtomicAtomicBoolean *noValue = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  JavaLangLong *result = [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) computeWithId:key withJavaUtilFunctionBiFunction:new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(noValue, newValue)];
  return [noValue get] ? 0LL : [((JavaLangLong *) nil_chk(result)) longLongValue];
}

- (jboolean)replaceWithId:(id)key
                 withLong:(jlong)expectedOldValue
                 withLong:(jlong)newValue {
  if (expectedOldValue == 0LL) {
    return [self putIfAbsentWithId:key withLong:newValue] == 0LL;
  }
  else {
    return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) replaceWithId:key withId:JavaLangLong_valueOfWithLong_(expectedOldValue) withId:JavaLangLong_valueOfWithLong_(newValue)];
  }
}

- (jboolean)removeWithId:(id)key
                withLong:(jlong)value {
  return [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(map_)) removeWithId:key withId:JavaLangLong_valueOfWithLong_(value)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentAtomicLongMap;", 0x9, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentAtomicLongMap;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "J", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "J", 0x1, 9, 7, -1, 8, -1, -1 },
    { NULL, "J", 0x1, 10, 7, -1, 8, -1, -1 },
    { NULL, "J", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "J", 0x1, 14, 7, -1, 8, -1, -1 },
    { NULL, "J", 0x1, 15, 7, -1, 8, -1, -1 },
    { NULL, "J", 0x1, 16, 12, -1, 13, -1, -1 },
    { NULL, "J", 0x1, 17, 18, -1, 19, -1, -1 },
    { NULL, "J", 0x1, 20, 18, -1, 19, -1, -1 },
    { NULL, "J", 0x1, 21, 22, -1, 23, -1, -1 },
    { NULL, "J", 0x1, 24, 22, -1, 23, -1, -1 },
    { NULL, "J", 0x1, 25, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x1, 26, 4, -1, 27, -1, -1 },
    { NULL, "J", 0x1, 28, 7, -1, 8, -1, -1 },
    { NULL, "Z", 0x1, 29, 7, -1, 30, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 31, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, -1, -1, -1, 31, -1, -1 },
    { NULL, "Z", 0x1, 32, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 33, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, 34, 12, -1, 13, -1, -1 },
    { NULL, "Z", 0x0, 35, 36, -1, 37, -1, -1 },
    { NULL, "Z", 0x0, 28, 12, -1, 38, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentConcurrentHashMap:);
  methods[1].selector = @selector(create);
  methods[2].selector = @selector(createWithJavaUtilMap:);
  methods[3].selector = @selector(getWithId:);
  methods[4].selector = @selector(incrementAndGetWithId:);
  methods[5].selector = @selector(decrementAndGetWithId:);
  methods[6].selector = @selector(addAndGetWithId:withLong:);
  methods[7].selector = @selector(getAndIncrementWithId:);
  methods[8].selector = @selector(getAndDecrementWithId:);
  methods[9].selector = @selector(getAndAddWithId:withLong:);
  methods[10].selector = @selector(updateAndGetWithId:withJavaUtilFunctionLongUnaryOperator:);
  methods[11].selector = @selector(getAndUpdateWithId:withJavaUtilFunctionLongUnaryOperator:);
  methods[12].selector = @selector(accumulateAndGetWithId:withLong:withJavaUtilFunctionLongBinaryOperator:);
  methods[13].selector = @selector(getAndAccumulateWithId:withLong:withJavaUtilFunctionLongBinaryOperator:);
  methods[14].selector = @selector(putWithId:withLong:);
  methods[15].selector = @selector(putAllWithJavaUtilMap:);
  methods[16].selector = @selector(removeWithId:);
  methods[17].selector = @selector(removeIfZeroWithId:);
  methods[18].selector = @selector(removeAllZeros);
  methods[19].selector = @selector(sum);
  methods[20].selector = @selector(asMap);
  methods[21].selector = @selector(createAsMap);
  methods[22].selector = @selector(containsKeyWithId:);
  methods[23].selector = @selector(size);
  methods[24].selector = @selector(isEmpty);
  methods[25].selector = @selector(clear);
  methods[26].selector = @selector(description);
  methods[27].selector = @selector(putIfAbsentWithId:withLong:);
  methods[28].selector = @selector(replaceWithId:withLong:withLong:);
  methods[29].selector = @selector(removeWithId:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilConcurrentConcurrentHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 39, -1 },
    { "asMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x82, -1, -1, 40, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentConcurrentHashMap;", "(Ljava/util/concurrent/ConcurrentHashMap<TK;Ljava/lang/Long;>;)V", "<K:Ljava/lang/Object;>()Lcom/google/common/util/concurrent/AtomicLongMap<TK;>;", "create", "LJavaUtilMap;", "<K:Ljava/lang/Object;>(Ljava/util/Map<+TK;+Ljava/lang/Long;>;)Lcom/google/common/util/concurrent/AtomicLongMap<TK;>;", "get", "LNSObject;", "(TK;)J", "incrementAndGet", "decrementAndGet", "addAndGet", "LNSObject;J", "(TK;J)J", "getAndIncrement", "getAndDecrement", "getAndAdd", "updateAndGet", "LNSObject;LJavaUtilFunctionLongUnaryOperator;", "(TK;Ljava/util/function/LongUnaryOperator;)J", "getAndUpdate", "accumulateAndGet", "LNSObject;JLJavaUtilFunctionLongBinaryOperator;", "(TK;JLjava/util/function/LongBinaryOperator;)J", "getAndAccumulate", "put", "putAll", "(Ljava/util/Map<+TK;+Ljava/lang/Long;>;)V", "remove", "removeIfZero", "(TK;)Z", "()Ljava/util/Map<TK;Ljava/lang/Long;>;", "containsKey", "toString", "putIfAbsent", "replace", "LNSObject;JJ", "(TK;JJ)Z", "(TK;J)Z", "Ljava/util/concurrent/ConcurrentHashMap<TK;Ljava/lang/Long;>;", "Ljava/util/Map<TK;Ljava/lang/Long;>;", "<K:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentAtomicLongMap = { "AtomicLongMap", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x11, 30, 2, -1, -1, -1, 41, -1 };
  return &_ComGoogleCommonUtilConcurrentAtomicLongMap;
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *self, JavaUtilConcurrentConcurrentHashMap *map) {
  NSObject_init(self);
  self->map_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(map);
}

ComGoogleCommonUtilConcurrentAtomicLongMap *new_ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *map) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap, initWithJavaUtilConcurrentConcurrentHashMap_, map)
}

ComGoogleCommonUtilConcurrentAtomicLongMap *create_ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *map) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap, initWithJavaUtilConcurrentConcurrentHashMap_, map)
}

ComGoogleCommonUtilConcurrentAtomicLongMap *ComGoogleCommonUtilConcurrentAtomicLongMap_create() {
  ComGoogleCommonUtilConcurrentAtomicLongMap_initialize();
  return new_ComGoogleCommonUtilConcurrentAtomicLongMap_initWithJavaUtilConcurrentConcurrentHashMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
}

ComGoogleCommonUtilConcurrentAtomicLongMap *ComGoogleCommonUtilConcurrentAtomicLongMap_createWithJavaUtilMap_(id<JavaUtilMap> m) {
  ComGoogleCommonUtilConcurrentAtomicLongMap_initialize();
  ComGoogleCommonUtilConcurrentAtomicLongMap *result = ComGoogleCommonUtilConcurrentAtomicLongMap_create();
  [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk(result)) putAllWithJavaUtilMap:m];
  return result;
}

id<JavaUtilMap> ComGoogleCommonUtilConcurrentAtomicLongMap_createAsMap(ComGoogleCommonUtilConcurrentAtomicLongMap *self) {
  return JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(self->map_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentAtomicLongMap)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1)

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1

- (jlong)applyAsLongWithLong:(jlong)a
                    withLong:(jlong)b {
  return JavaLangLong_sumWithLong_withLong_(a, b);
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 class]) {
    ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_instance = new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1)
  }
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1, init)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2)

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2

- (jlong)applyAsLongWithLong:(jlong)a
                    withLong:(jlong)b {
  return JavaLangLong_sumWithLong_withLong_(a, b);
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 class]) {
    ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_instance = new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2)
  }
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2, init)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$2, init)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)value {
  return JavaLangLong_valueOfWithLong_([((id<JavaUtilFunctionLongUnaryOperator>) nil_chk(val$updaterFunction_)) applyAsLongWithLong:(value == nil) ? 0LL : [((JavaLangLong *) nil_chk(value)) longLongValue]]);
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *self, id<JavaUtilFunctionLongUnaryOperator> capture$0) {
  self->val$updaterFunction_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(id<JavaUtilFunctionLongUnaryOperator> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3, initWithJavaUtilFunctionLongUnaryOperator_, capture$0)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3_initWithJavaUtilFunctionLongUnaryOperator_(id<JavaUtilFunctionLongUnaryOperator> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$3, initWithJavaUtilFunctionLongUnaryOperator_, capture$0)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)value {
  jlong oldValue = (value == nil) ? 0LL : [((JavaLangLong *) nil_chk(value)) longLongValue];
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$holder_)) setWithLong:oldValue];
  return JavaLangLong_valueOfWithLong_([((id<JavaUtilFunctionLongUnaryOperator>) nil_chk(val$updaterFunction_)) applyAsLongWithLong:oldValue]);
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1) {
  self->val$holder_ = capture$0;
  self->val$updaterFunction_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4, initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_, capture$0, capture$1)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4_initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_(JavaUtilConcurrentAtomicAtomicLong *capture$0, id<JavaUtilFunctionLongUnaryOperator> capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$4, initWithJavaUtilConcurrentAtomicAtomicLong_withJavaUtilFunctionLongUnaryOperator_, capture$0, capture$1)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5

- (jlong)applyAsLongWithLong:(jlong)oldValue {
  return [((id<JavaUtilFunctionLongBinaryOperator>) nil_chk(val$accumulatorFunction_)) applyAsLongWithLong:oldValue withLong:val$x_];
}

- (id<JavaUtilFunctionLongUnaryOperator>)composeWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_composeWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

- (id<JavaUtilFunctionLongUnaryOperator>)andThenWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_andThenWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *self, id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  self->val$accumulatorFunction_ = capture$0;
  self->val$x_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5, initWithJavaUtilFunctionLongBinaryOperator_withLong_, capture$0, capture$1)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$5, initWithJavaUtilFunctionLongBinaryOperator_withLong_, capture$0, capture$1)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6

- (jlong)applyAsLongWithLong:(jlong)oldValue {
  return [((id<JavaUtilFunctionLongBinaryOperator>) nil_chk(val$accumulatorFunction_)) applyAsLongWithLong:oldValue withLong:val$x_];
}

- (id<JavaUtilFunctionLongUnaryOperator>)composeWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_composeWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

- (id<JavaUtilFunctionLongUnaryOperator>)andThenWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_andThenWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *self, id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  self->val$accumulatorFunction_ = capture$0;
  self->val$x_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6, initWithJavaUtilFunctionLongBinaryOperator_withLong_, capture$0, capture$1)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6_initWithJavaUtilFunctionLongBinaryOperator_withLong_(id<JavaUtilFunctionLongBinaryOperator> capture$0, jlong capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$6, initWithJavaUtilFunctionLongBinaryOperator_withLong_, capture$0, capture$1)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7

- (jlong)applyAsLongWithLong:(jlong)x {
  return val$newValue_;
}

- (id<JavaUtilFunctionLongUnaryOperator>)composeWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_composeWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

- (id<JavaUtilFunctionLongUnaryOperator>)andThenWithJavaUtilFunctionLongUnaryOperator:(id<JavaUtilFunctionLongUnaryOperator>)arg0 {
  return JavaUtilFunctionLongUnaryOperator_andThenWithJavaUtilFunctionLongUnaryOperator_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *self, jlong capture$0) {
  self->val$newValue_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(jlong capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7, initWithLong_, capture$0)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7_initWithLong_(jlong capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$7, initWithLong_, capture$0)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8

- (void)acceptWithId:(id)a
              withId:(JavaLangLong *)b {
  [target$_ putWithId:a withLong:[((JavaLangLong *) nil_chk(b)) longLongValue]];
}

- (id<JavaUtilFunctionBiConsumer>)andThenWithJavaUtilFunctionBiConsumer:(id<JavaUtilFunctionBiConsumer>)arg0 {
  return JavaUtilFunctionBiConsumer_andThenWithJavaUtilFunctionBiConsumer_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *self, ComGoogleCommonUtilConcurrentAtomicLongMap *outer$) {
  self->target$_ = outer$;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8, initWithComGoogleCommonUtilConcurrentAtomicLongMap_, outer$)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8_initWithComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonUtilConcurrentAtomicLongMap *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$8, initWithComGoogleCommonUtilConcurrentAtomicLongMap_, outer$)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9)

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9

- (jboolean)testWithId:(JavaLangLong *)x {
  return [((JavaLangLong *) nil_chk(x)) longLongValue] == 0;
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 class]) {
    ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_instance = new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9)
  }
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9, init)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$9, init)
}

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10)

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10

- (jlong)applyAsLongWithId:(JavaLangLong *)a {
  return [((JavaLangLong *) nil_chk(a)) longLongValue];
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 class]) {
    ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_instance = new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10)
  }
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10, init)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$10, init)
}

@implementation ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11

- (id)applyWithId:(id)k
           withId:(JavaLangLong *)oldValue {
  if (oldValue == nil || [oldValue longLongValue] == 0) {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$noValue_)) setWithBoolean:true];
    return JavaLangLong_valueOfWithLong_(val$newValue_);
  }
  else {
    return oldValue;
  }
}

- (id<JavaUtilFunctionBiFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionBiFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

@end

void ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1) {
  self->val$noValue_ = capture$0;
  self->val$newValue_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *new_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11, initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_, capture$0, capture$1)
}

ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11 *create_ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11_initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, jlong capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomicLongMap_$Lambda$11, initWithJavaUtilConcurrentAtomicAtomicBoolean_withLong_, capture$0, capture$1)
}
