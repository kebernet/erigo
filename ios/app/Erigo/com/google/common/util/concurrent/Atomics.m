//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/Atomics.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/util/concurrent/Atomics.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "java/util/concurrent/atomic/AtomicReferenceArray.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonUtilConcurrentAtomics ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentAtomics_init(ComGoogleCommonUtilConcurrentAtomics *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomics *new_ComGoogleCommonUtilConcurrentAtomics_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentAtomics *create_ComGoogleCommonUtilConcurrentAtomics_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentAtomics__Annotations$0();

@implementation ComGoogleCommonUtilConcurrentAtomics

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentAtomics_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaUtilConcurrentAtomicAtomicReference *)newReference {
  return ComGoogleCommonUtilConcurrentAtomics_newReference();
}

+ (JavaUtilConcurrentAtomicAtomicReference *)newReferenceWithId:(id)initialValue {
  return ComGoogleCommonUtilConcurrentAtomics_newReferenceWithId_(initialValue);
}

+ (JavaUtilConcurrentAtomicAtomicReferenceArray *)newReferenceArrayWithInt:(jint)length {
  return ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithInt_(length);
}

+ (JavaUtilConcurrentAtomicAtomicReferenceArray *)newReferenceArrayWithNSObjectArray:(IOSObjectArray *)array {
  return ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithNSObjectArray_(array);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicReference;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicReference;", 0x9, 1, 2, -1, 3, -1, 4 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicReferenceArray;", 0x9, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicReferenceArray;", 0x9, 5, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newReference);
  methods[2].selector = @selector(newReferenceWithId:);
  methods[3].selector = @selector(newReferenceArrayWithInt:);
  methods[4].selector = @selector(newReferenceArrayWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "<V:Ljava/lang/Object;>()Ljava/util/concurrent/atomic/AtomicReference<TV;>;", "newReference", "LNSObject;", "<V:Ljava/lang/Object;>(TV;)Ljava/util/concurrent/atomic/AtomicReference<TV;>;", (void *)&ComGoogleCommonUtilConcurrentAtomics__Annotations$0, "newReferenceArray", "I", "<E:Ljava/lang/Object;>(I)Ljava/util/concurrent/atomic/AtomicReferenceArray<TE;>;", "[LNSObject;", "<E:Ljava/lang/Object;>([TE;)Ljava/util/concurrent/atomic/AtomicReferenceArray<TE;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentAtomics = { "Atomics", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentAtomics;
}

@end

void ComGoogleCommonUtilConcurrentAtomics_init(ComGoogleCommonUtilConcurrentAtomics *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentAtomics *new_ComGoogleCommonUtilConcurrentAtomics_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentAtomics, init)
}

ComGoogleCommonUtilConcurrentAtomics *create_ComGoogleCommonUtilConcurrentAtomics_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentAtomics, init)
}

JavaUtilConcurrentAtomicAtomicReference *ComGoogleCommonUtilConcurrentAtomics_newReference() {
  ComGoogleCommonUtilConcurrentAtomics_initialize();
  return new_JavaUtilConcurrentAtomicAtomicReference_init();
}

JavaUtilConcurrentAtomicAtomicReference *ComGoogleCommonUtilConcurrentAtomics_newReferenceWithId_(id initialValue) {
  ComGoogleCommonUtilConcurrentAtomics_initialize();
  return new_JavaUtilConcurrentAtomicAtomicReference_initWithId_(initialValue);
}

JavaUtilConcurrentAtomicAtomicReferenceArray *ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithInt_(jint length) {
  ComGoogleCommonUtilConcurrentAtomics_initialize();
  return new_JavaUtilConcurrentAtomicAtomicReferenceArray_initWithInt_(length);
}

JavaUtilConcurrentAtomicAtomicReferenceArray *ComGoogleCommonUtilConcurrentAtomics_newReferenceArrayWithNSObjectArray_(IOSObjectArray *array) {
  ComGoogleCommonUtilConcurrentAtomics_initialize();
  return new_JavaUtilConcurrentAtomicAtomicReferenceArray_initWithNSObjectArray_(array);
}

IOSObjectArray *ComGoogleCommonUtilConcurrentAtomics__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentAtomics)
