//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/CollectionFuture.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Optional.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableCollection.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/Lists.h"
#include "com/google/common/util/concurrent/AggregateFuture.h"
#include "com/google/common/util/concurrent/CollectionFuture.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState () {
 @public
  ComGoogleCommonUtilConcurrentCollectionFuture *this$1_;
  id<JavaUtilList> values_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState, values_, id<JavaUtilList>)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState__Annotations$0();

@interface ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState : ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState

- (instancetype)initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture:(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *)outer$
                                   withComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                                     withBoolean:(jboolean)allMustSucceed;

- (id<JavaUtilList>)combineWithJavaUtilList:(id<JavaUtilList>)values;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *self, ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *create_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState)

@implementation ComGoogleCommonUtilConcurrentCollectionFuture

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentCollectionFuture_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState;LComGoogleCommonUtilConcurrentCollectionFuture_ListFuture;", "<V:Ljava/lang/Object;C:Ljava/lang/Object;>Lcom/google/common/util/concurrent/AggregateFuture<TV;TC;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentCollectionFuture = { "CollectionFuture", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x400, 1, 0, -1, 0, -1, 1, -1 };
  return &_ComGoogleCommonUtilConcurrentCollectionFuture;
}

@end

void ComGoogleCommonUtilConcurrentCollectionFuture_init(ComGoogleCommonUtilConcurrentCollectionFuture *self) {
  ComGoogleCommonUtilConcurrentAggregateFuture_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentCollectionFuture)

@implementation ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState

- (instancetype)initWithComGoogleCommonUtilConcurrentCollectionFuture:(ComGoogleCommonUtilConcurrentCollectionFuture *)outer$
                        withComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                          withBoolean:(jboolean)allMustSucceed {
  ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(self, outer$, futures, allMustSucceed);
  return self;
}

- (void)collectOneValueWithBoolean:(jboolean)allMustSucceed
                           withInt:(jint)index
                            withId:(id)returnValue {
  id<JavaUtilList> localValues = values_;
  if (localValues != nil) {
    (void) [localValues setWithInt:index withId:ComGoogleCommonBaseOptional_fromNullableWithId_(returnValue)];
  }
  else {
    ComGoogleCommonBasePreconditions_checkStateWithBoolean_withId_(allMustSucceed || [this$1_ isCancelled], @"Future was done before all dependencies completed");
  }
}

- (void)handleAllCompleted {
  id<JavaUtilList> localValues = values_;
  if (localValues != nil) {
    [this$1_ setWithId:[self combineWithJavaUtilList:localValues]];
  }
  else {
    ComGoogleCommonBasePreconditions_checkStateWithBoolean_([this$1_ isDone]);
  }
}

- (void)releaseResourcesAfterFailure {
  [super releaseResourcesAfterFailure];
  self->values_ = nil;
}

- (id)combineWithJavaUtilList:(id<JavaUtilList>)values {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x10, 2, 3, -1, 4, -1, 5 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x400, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentCollectionFuture:withComGoogleCommonCollectImmutableCollection:withBoolean:);
  methods[1].selector = @selector(collectOneValueWithBoolean:withInt:withId:);
  methods[2].selector = @selector(handleAllCompleted);
  methods[3].selector = @selector(releaseResourcesAfterFailure);
  methods[4].selector = @selector(combineWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LComGoogleCommonUtilConcurrentCollectionFuture;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "values_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableCollection;Z", "(Lcom/google/common/collect/ImmutableCollection<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;Z)V", "collectOneValue", "ZILNSObject;", "(ZITV;)V", (void *)&ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState__Annotations$0, "combine", "LJavaUtilList;", "(Ljava/util/List<Lcom/google/common/base/Optional<TV;>;>;)TC;", "Lcom/google/common/util/concurrent/CollectionFuture<TV;TC;>;", "Ljava/util/List<Lcom/google/common/base/Optional<TV;>;>;", "LComGoogleCommonUtilConcurrentCollectionFuture;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState = { "CollectionFutureRunningState", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x400, 5, 2, 11, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState;
}

@end

void ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState *self, ComGoogleCommonUtilConcurrentCollectionFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  self->this$1_ = outer$;
  ComGoogleCommonUtilConcurrentAggregateFuture_RunningState_initWithComGoogleCommonUtilConcurrentAggregateFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_withBoolean_(self, outer$, futures, allMustSucceed, true);
  self->values_ = [((ComGoogleCommonCollectImmutableCollection *) nil_chk(futures)) isEmpty] ? ComGoogleCommonCollectImmutableList_of() : (id) ComGoogleCommonCollectLists_newArrayListWithCapacityWithInt_([futures size]);
  for (jint i = 0; i < [futures size]; ++i) {
    [((id<JavaUtilList>) nil_chk(self->values_)) addWithId:nil];
  }
}

IOSObjectArray *ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState)

@implementation ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture

- (instancetype)initWithComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                      withBoolean:(jboolean)allMustSucceed {
  ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(self, futures, allMustSucceed);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonCollectImmutableCollection:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableCollection;Z", "(Lcom/google/common/collect/ImmutableCollection<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;Z)V", "LComGoogleCommonUtilConcurrentCollectionFuture;", "LComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState;", "<V:Ljava/lang/Object;>Lcom/google/common/util/concurrent/CollectionFuture<TV;Ljava/util/List<TV;>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture = { "ListFuture", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x18, 1, 0, 2, 3, -1, 4, -1 };
  return &_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture;
}

@end

void ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *self, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  ComGoogleCommonUtilConcurrentCollectionFuture_init(self);
  [self init__WithComGoogleCommonUtilConcurrentAggregateFuture_RunningState:new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(self, futures, allMustSucceed)];
}

ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture, initWithComGoogleCommonCollectImmutableCollection_withBoolean_, futures, allMustSucceed)
}

ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *create_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture, initWithComGoogleCommonCollectImmutableCollection_withBoolean_, futures, allMustSucceed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture)

@implementation ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState

- (instancetype)initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture:(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *)outer$
                                   withComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                                     withBoolean:(jboolean)allMustSucceed {
  ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(self, outer$, futures, allMustSucceed);
  return self;
}

- (id<JavaUtilList>)combineWithJavaUtilList:(id<JavaUtilList>)values {
  id<JavaUtilList> result = ComGoogleCommonCollectLists_newArrayListWithCapacityWithInt_([((id<JavaUtilList>) nil_chk(values)) size]);
  for (ComGoogleCommonBaseOptional * __strong element in values) {
    [((id<JavaUtilList>) nil_chk(result)) addWithId:element != nil ? [element orNull] : nil];
  }
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(result);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture:withComGoogleCommonCollectImmutableCollection:withBoolean:);
  methods[1].selector = @selector(combineWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonCollectImmutableCollection;Z", "(Lcom/google/common/collect/ImmutableCollection<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;Z)V", "combine", "LJavaUtilList;", "(Ljava/util/List<Lcom/google/common/base/Optional<TV;>;>;)Ljava/util/List<TV;>;", "LComGoogleCommonUtilConcurrentCollectionFuture_ListFuture;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState = { "ListFutureRunningState", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x12, 2, 0, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState;
}

@end

void ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *self, ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  ComGoogleCommonUtilConcurrentCollectionFuture_CollectionFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(self, outer$, futures, allMustSucceed);
}

ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState, initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_, outer$, futures, allMustSucceed)
}

ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState *create_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState_initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture *outer$, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState, initWithComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_withComGoogleCommonCollectImmutableCollection_withBoolean_, outer$, futures, allMustSucceed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_ListFutureRunningState)
