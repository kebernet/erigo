//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/Futures.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Function.h"
#include "com/google/common/base/MoreObjects.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/util/concurrent/AbstractCatchingFuture.h"
#include "com/google/common/util/concurrent/AbstractCheckedFuture.h"
#include "com/google/common/util/concurrent/AbstractFuture.h"
#include "com/google/common/util/concurrent/AbstractTransformFuture.h"
#include "com/google/common/util/concurrent/AsyncCallable.h"
#include "com/google/common/util/concurrent/AsyncFunction.h"
#include "com/google/common/util/concurrent/CheckedFuture.h"
#include "com/google/common/util/concurrent/CollectionFuture.h"
#include "com/google/common/util/concurrent/CombinedFuture.h"
#include "com/google/common/util/concurrent/ExecutionError.h"
#include "com/google/common/util/concurrent/FutureCallback.h"
#include "com/google/common/util/concurrent/Futures.h"
#include "com/google/common/util/concurrent/FuturesGetChecked.h"
#include "com/google/common/util/concurrent/GwtFuturesCatchingSpecialization.h"
#include "com/google/common/util/concurrent/ImmediateFuture.h"
#include "com/google/common/util/concurrent/ListenableFuture.h"
#include "com/google/common/util/concurrent/MoreExecutors.h"
#include "com/google/common/util/concurrent/SettableFuture.h"
#include "com/google/common/util/concurrent/TimeoutFuture.h"
#include "com/google/common/util/concurrent/UncheckedExecutionException.h"
#include "com/google/common/util/concurrent/Uninterruptibles.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/Iterable.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SafeVarargs.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/ExecutionException.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/ScheduledExecutorService.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonUtilConcurrentFutures ()

- (instancetype)init;

+ (void)wrapAndThrowUncheckedWithNSException:(NSException *)cause;
#define wrapAndThrowUncheckedWithJavaLangThrowable wrapAndThrowUncheckedWithNSException

@end

inline id<ComGoogleCommonUtilConcurrentAsyncFunction> ComGoogleCommonUtilConcurrentFutures_get_DEREFERENCER();
static id<ComGoogleCommonUtilConcurrentAsyncFunction> ComGoogleCommonUtilConcurrentFutures_DEREFERENCER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentFutures, DEREFERENCER, id<ComGoogleCommonUtilConcurrentAsyncFunction>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_init(ComGoogleCommonUtilConcurrentFutures *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures *new_ComGoogleCommonUtilConcurrentFutures_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures *create_ComGoogleCommonUtilConcurrentFutures_init();

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_wrapAndThrowUncheckedWithNSException_(NSException *cause);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$3();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$4();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$5();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$6();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$7();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$8();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$9();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$10();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$11();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$12();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$13();

@interface ComGoogleCommonUtilConcurrentFutures_1 : NSObject < JavaUtilConcurrentFuture > {
 @public
  id<JavaUtilConcurrentFuture> val$input_;
  id<ComGoogleCommonBaseFunction> val$function_;
}

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)capture$0
                 withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$1;

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (jboolean)isCancelled;

- (jboolean)isDone;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (id)applyTransformationWithId:(id)input;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_1)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(ComGoogleCommonUtilConcurrentFutures_1 *self, id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_1 *new_ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_1 *create_ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1);

__attribute__((unused)) static id ComGoogleCommonUtilConcurrentFutures_1_applyTransformationWithId_(ComGoogleCommonUtilConcurrentFutures_1 *self, id input);

@interface ComGoogleCommonUtilConcurrentFutures_2 : NSObject < ComGoogleCommonUtilConcurrentAsyncFunction >

- (instancetype)init;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_2)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_2_init(ComGoogleCommonUtilConcurrentFutures_2 *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_2 *new_ComGoogleCommonUtilConcurrentFutures_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_2 *create_ComGoogleCommonUtilConcurrentFutures_2_init();

@interface ComGoogleCommonUtilConcurrentFutures_FutureCombiner () {
 @public
  jboolean allMustSucceed_;
  ComGoogleCommonCollectImmutableList *futures_;
}

- (instancetype)initWithBoolean:(jboolean)allMustSucceed
withComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)futures;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_FutureCombiner, futures_, ComGoogleCommonCollectImmutableList *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(ComGoogleCommonUtilConcurrentFutures_FutureCombiner *self, jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_FutureCombiner *new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_FutureCombiner *create_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$1();

@interface ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture : ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *create_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture)

@interface ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *this$0_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$delegate_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture:(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *)outer$
                                            withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *self, ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *create_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0);

@interface ComGoogleCommonUtilConcurrentFutures_3 : NSObject < JavaLangRunnable > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$delegateIndex_;
  ComGoogleCommonCollectImmutableList *val$delegates_;
  id<ComGoogleCommonUtilConcurrentListenableFuture> val$future_;
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                      withComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)capture$1
            withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$2;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_3)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_3 *new_ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_3 *create_ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2);

@interface ComGoogleCommonUtilConcurrentFutures_CallbackListener : NSObject < JavaLangRunnable > {
 @public
  id<JavaUtilConcurrentFuture> future_;
  id<ComGoogleCommonUtilConcurrentFutureCallback> callback_;
}

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
 withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback;

- (void)run;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_CallbackListener)

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CallbackListener, future_, id<JavaUtilConcurrentFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CallbackListener, callback_, id<ComGoogleCommonUtilConcurrentFutureCallback>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(ComGoogleCommonUtilConcurrentFutures_CallbackListener *self, id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_CallbackListener *new_ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_CallbackListener *create_ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutures_CallbackListener)

@interface ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture : ComGoogleCommonUtilConcurrentAbstractCheckedFuture {
 @public
  id<ComGoogleCommonBaseFunction> mapper_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                      withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper;

- (JavaLangException *)mapExceptionWithJavaLangException:(JavaLangException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture)

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture, mapper_, id<ComGoogleCommonBaseFunction>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *new_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *create_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentFutures)

@implementation ComGoogleCommonUtilConcurrentFutures

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentFutures_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper {
  return ComGoogleCommonUtilConcurrentFutures_makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(future, mapper);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFutureWithId:(id)value {
  return ComGoogleCommonUtilConcurrentFutures_immediateFutureWithId_(value);
}

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateCheckedFutureWithId:(id)value {
  return ComGoogleCommonUtilConcurrentFutures_immediateCheckedFutureWithId_(value);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFailedFutureWithNSException:(NSException *)throwable {
  return ComGoogleCommonUtilConcurrentFutures_immediateFailedFutureWithNSException_(throwable);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateCancelledFuture {
  return ComGoogleCommonUtilConcurrentFutures_immediateCancelledFuture();
}

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateFailedCheckedFutureWithJavaLangException:(JavaLangException *)exception {
  return ComGoogleCommonUtilConcurrentFutures_immediateFailedCheckedFutureWithJavaLangException_(exception);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                  withIOSClass:(IOSClass *)exceptionType
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)fallback {
  return ComGoogleCommonUtilConcurrentFutures_catchingWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_(input, exceptionType, fallback);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                  withIOSClass:(IOSClass *)exceptionType
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)fallback
                                                                                withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return ComGoogleCommonUtilConcurrentFutures_catchingWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(input, exceptionType, fallback, executor);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                       withIOSClass:(IOSClass *)exceptionType
                                                                     withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)fallback {
  return ComGoogleCommonUtilConcurrentFutures_catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_(input, exceptionType, fallback);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                       withIOSClass:(IOSClass *)exceptionType
                                                                     withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)fallback
                                                                                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return ComGoogleCommonUtilConcurrentFutures_catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(input, exceptionType, fallback, executor);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                                                                                         withLong:(jlong)time
                                                                                   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                                   withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)scheduledExecutor {
  return ComGoogleCommonUtilConcurrentFutures_withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(delegate, time, unit, scheduledExecutor);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                      withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function {
  return ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_(input, function);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                      withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function
                                                                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(input, function, executor);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function {
  return ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(input, function);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(input, function, executor);
}

+ (id<JavaUtilConcurrentFuture>)lazyTransformWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)input
                                          withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function {
  return ComGoogleCommonUtilConcurrentFutures_lazyTransformWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(input, function);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)dereferenceWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)nested {
  return ComGoogleCommonUtilConcurrentFutures_dereferenceWithComGoogleCommonUtilConcurrentListenableFuture_(nested);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures {
  return ComGoogleCommonUtilConcurrentFutures_allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(futures);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithJavaLangIterable:(id<JavaLangIterable>)futures {
  return ComGoogleCommonUtilConcurrentFutures_allAsListWithJavaLangIterable_(futures);
}

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures {
  return ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray_(futures);
}

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllCompleteWithJavaLangIterable:(id<JavaLangIterable>)futures {
  return ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithJavaLangIterable_(futures);
}

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures {
  return ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray_(futures);
}

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllSucceedWithJavaLangIterable:(id<JavaLangIterable>)futures {
  return ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithJavaLangIterable_(futures);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future {
  return ComGoogleCommonUtilConcurrentFutures_nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture_(future);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures {
  return ComGoogleCommonUtilConcurrentFutures_successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(futures);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithJavaLangIterable:(id<JavaLangIterable>)futures {
  return ComGoogleCommonUtilConcurrentFutures_successfulAsListWithJavaLangIterable_(futures);
}

+ (ComGoogleCommonCollectImmutableList *)inCompletionOrderWithJavaLangIterable:(id<JavaLangIterable>)futures {
  return ComGoogleCommonUtilConcurrentFutures_inCompletionOrderWithJavaLangIterable_(futures);
}

+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback {
  ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_(future, callback);
}

+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_withJavaUtilConcurrentExecutor_(future, callback, executor);
}

+ (id)getDoneWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return ComGoogleCommonUtilConcurrentFutures_getDoneWithJavaUtilConcurrentFuture_(future);
}

+ (id)getCheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                withIOSClass:(IOSClass *)exceptionClass {
  return ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_(future, exceptionClass);
}

+ (id)getCheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                withIOSClass:(IOSClass *)exceptionClass
                                    withLong:(jlong)timeout
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_withLong_withJavaUtilConcurrentTimeUnit_(future, exceptionClass, timeout, unit);
}

+ (id)getUncheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return ComGoogleCommonUtilConcurrentFutures_getUncheckedWithJavaUtilConcurrentFuture_(future);
}

+ (void)wrapAndThrowUncheckedWithNSException:(NSException *)cause {
  ComGoogleCommonUtilConcurrentFutures_wrapAndThrowUncheckedWithNSException_(cause);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentCheckedFuture;", 0x9, 0, 1, -1, 2, 3, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 4, 5, -1, 6, -1, 7 },
    { NULL, "LComGoogleCommonUtilConcurrentCheckedFuture;", 0x9, 8, 5, -1, 9, 10, 11 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, -1, -1, -1, 15, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentCheckedFuture;", 0x9, 16, 17, -1, 18, 19, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 20, 21, -1, 22, 23, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 20, 24, -1, 25, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 26, 27, -1, 28, 29, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 26, 30, -1, 31, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 32, 33, -1, 34, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 35, 36, -1, 37, 38, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 35, 39, -1, 40, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 41, 1, -1, 42, 43, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 41, 44, -1, 45, -1, -1 },
    { NULL, "LJavaUtilConcurrentFuture;", 0x9, 46, 47, -1, 48, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 49, 50, -1, 51, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x89, 52, 53, -1, 54, 55, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 52, 56, -1, 57, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentFutures_FutureCombiner;", 0x89, 58, 53, -1, 59, 60, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentFutures_FutureCombiner;", 0x9, 58, 56, -1, 61, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentFutures_FutureCombiner;", 0x89, 62, 53, -1, 59, 63, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentFutures_FutureCombiner;", 0x9, 62, 56, -1, 61, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 64, 50, -1, 65, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x89, 66, 53, -1, 54, 67, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 66, 56, -1, 57, -1, -1 },
    { NULL, "LComGoogleCommonCollectImmutableList;", 0x9, 68, 56, -1, 69, -1, -1 },
    { NULL, "V", 0x9, 70, 71, -1, 72, 73, -1 },
    { NULL, "V", 0x9, 70, 74, -1, 75, -1, -1 },
    { NULL, "LNSObject;", 0x9, 76, 77, 78, 79, -1, -1 },
    { NULL, "LNSObject;", 0x9, 80, 81, 17, 82, -1, -1 },
    { NULL, "LNSObject;", 0x9, 80, 83, 17, 84, -1, -1 },
    { NULL, "LNSObject;", 0x9, 85, 77, -1, 79, -1, -1 },
    { NULL, "V", 0xa, 86, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonBaseFunction:);
  methods[2].selector = @selector(immediateFutureWithId:);
  methods[3].selector = @selector(immediateCheckedFutureWithId:);
  methods[4].selector = @selector(immediateFailedFutureWithNSException:);
  methods[5].selector = @selector(immediateCancelledFuture);
  methods[6].selector = @selector(immediateFailedCheckedFutureWithJavaLangException:);
  methods[7].selector = @selector(catchingWithComGoogleCommonUtilConcurrentListenableFuture:withIOSClass:withComGoogleCommonBaseFunction:);
  methods[8].selector = @selector(catchingWithComGoogleCommonUtilConcurrentListenableFuture:withIOSClass:withComGoogleCommonBaseFunction:withJavaUtilConcurrentExecutor:);
  methods[9].selector = @selector(catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:withIOSClass:withComGoogleCommonUtilConcurrentAsyncFunction:);
  methods[10].selector = @selector(catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:withIOSClass:withComGoogleCommonUtilConcurrentAsyncFunction:withJavaUtilConcurrentExecutor:);
  methods[11].selector = @selector(withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:withLong:withJavaUtilConcurrentTimeUnit:withJavaUtilConcurrentScheduledExecutorService:);
  methods[12].selector = @selector(transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonUtilConcurrentAsyncFunction:);
  methods[13].selector = @selector(transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonUtilConcurrentAsyncFunction:withJavaUtilConcurrentExecutor:);
  methods[14].selector = @selector(transformWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonBaseFunction:);
  methods[15].selector = @selector(transformWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonBaseFunction:withJavaUtilConcurrentExecutor:);
  methods[16].selector = @selector(lazyTransformWithJavaUtilConcurrentFuture:withComGoogleCommonBaseFunction:);
  methods[17].selector = @selector(dereferenceWithComGoogleCommonUtilConcurrentListenableFuture:);
  methods[18].selector = @selector(allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:);
  methods[19].selector = @selector(allAsListWithJavaLangIterable:);
  methods[20].selector = @selector(whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray:);
  methods[21].selector = @selector(whenAllCompleteWithJavaLangIterable:);
  methods[22].selector = @selector(whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray:);
  methods[23].selector = @selector(whenAllSucceedWithJavaLangIterable:);
  methods[24].selector = @selector(nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture:);
  methods[25].selector = @selector(successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:);
  methods[26].selector = @selector(successfulAsListWithJavaLangIterable:);
  methods[27].selector = @selector(inCompletionOrderWithJavaLangIterable:);
  methods[28].selector = @selector(addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonUtilConcurrentFutureCallback:);
  methods[29].selector = @selector(addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonUtilConcurrentFutureCallback:withJavaUtilConcurrentExecutor:);
  methods[30].selector = @selector(getDoneWithJavaUtilConcurrentFuture:);
  methods[31].selector = @selector(getCheckedWithJavaUtilConcurrentFuture:withIOSClass:);
  methods[32].selector = @selector(getCheckedWithJavaUtilConcurrentFuture:withIOSClass:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[33].selector = @selector(getUncheckedWithJavaUtilConcurrentFuture:);
  methods[34].selector = @selector(wrapAndThrowUncheckedWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEREFERENCER", "LComGoogleCommonUtilConcurrentAsyncFunction;", .constantValue.asLong = 0, 0x1a, -1, 87, 88, -1 },
  };
  static const void *ptrTable[] = { "makeChecked", "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonBaseFunction;", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;Lcom/google/common/base/Function<-Ljava/lang/Exception;TX;>;)Lcom/google/common/util/concurrent/CheckedFuture<TV;TX;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$0, "immediateFuture", "LNSObject;", "<V:Ljava/lang/Object;>(TV;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$1, "immediateCheckedFuture", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>(TV;)Lcom/google/common/util/concurrent/CheckedFuture<TV;TX;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$2, (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$3, "immediateFailedFuture", "LNSException;", "<V:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "<V:Ljava/lang/Object;>()Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "immediateFailedCheckedFuture", "LJavaLangException;", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>(TX;)Lcom/google/common/util/concurrent/CheckedFuture<TV;TX;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$4, "catching", "LComGoogleCommonUtilConcurrentListenableFuture;LIOSClass;LComGoogleCommonBaseFunction;", "<V:Ljava/lang/Object;X:Ljava/lang/Throwable;>(Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;Ljava/lang/Class<TX;>;Lcom/google/common/base/Function<-TX;+TV;>;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$5, "LComGoogleCommonUtilConcurrentListenableFuture;LIOSClass;LComGoogleCommonBaseFunction;LJavaUtilConcurrentExecutor;", "<V:Ljava/lang/Object;X:Ljava/lang/Throwable;>(Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;Ljava/lang/Class<TX;>;Lcom/google/common/base/Function<-TX;+TV;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "catchingAsync", "LComGoogleCommonUtilConcurrentListenableFuture;LIOSClass;LComGoogleCommonUtilConcurrentAsyncFunction;", "<V:Ljava/lang/Object;X:Ljava/lang/Throwable;>(Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;Ljava/lang/Class<TX;>;Lcom/google/common/util/concurrent/AsyncFunction<-TX;+TV;>;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$6, "LComGoogleCommonUtilConcurrentListenableFuture;LIOSClass;LComGoogleCommonUtilConcurrentAsyncFunction;LJavaUtilConcurrentExecutor;", "<V:Ljava/lang/Object;X:Ljava/lang/Throwable;>(Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;Ljava/lang/Class<TX;>;Lcom/google/common/util/concurrent/AsyncFunction<-TX;+TV;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "withTimeout", "LComGoogleCommonUtilConcurrentListenableFuture;JLJavaUtilConcurrentTimeUnit;LJavaUtilConcurrentScheduledExecutorService;", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "transformAsync", "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonUtilConcurrentAsyncFunction;", "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TI;>;Lcom/google/common/util/concurrent/AsyncFunction<-TI;+TO;>;)Lcom/google/common/util/concurrent/ListenableFuture<TO;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$7, "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonUtilConcurrentAsyncFunction;LJavaUtilConcurrentExecutor;", "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TI;>;Lcom/google/common/util/concurrent/AsyncFunction<-TI;+TO;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TO;>;", "transform", "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TI;>;Lcom/google/common/base/Function<-TI;+TO;>;)Lcom/google/common/util/concurrent/ListenableFuture<TO;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$8, "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonBaseFunction;LJavaUtilConcurrentExecutor;", "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TI;>;Lcom/google/common/base/Function<-TI;+TO;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TO;>;", "lazyTransform", "LJavaUtilConcurrentFuture;LComGoogleCommonBaseFunction;", "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Ljava/util/concurrent/Future<TI;>;Lcom/google/common/base/Function<-TI;+TO;>;)Ljava/util/concurrent/Future<TO;>;", "dereference", "LComGoogleCommonUtilConcurrentListenableFuture;", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "allAsList", "[LComGoogleCommonUtilConcurrentListenableFuture;", "<V:Ljava/lang/Object;>([Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;)Lcom/google/common/util/concurrent/ListenableFuture<Ljava/util/List<TV;>;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$9, "LJavaLangIterable;", "<V:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;)Lcom/google/common/util/concurrent/ListenableFuture<Ljava/util/List<TV;>;>;", "whenAllComplete", "<V:Ljava/lang/Object;>([Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;)Lcom/google/common/util/concurrent/Futures$FutureCombiner<TV;>;", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$10, "<V:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;)Lcom/google/common/util/concurrent/Futures$FutureCombiner<TV;>;", "whenAllSucceed", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$11, "nonCancellationPropagating", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "successfulAsList", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$12, "inCompletionOrder", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lcom/google/common/util/concurrent/ListenableFuture<+TT;>;>;)Lcom/google/common/collect/ImmutableList<Lcom/google/common/util/concurrent/ListenableFuture<TT;>;>;", "addCallback", "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonUtilConcurrentFutureCallback;", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;Lcom/google/common/util/concurrent/FutureCallback<-TV;>;)V", (void *)&ComGoogleCommonUtilConcurrentFutures__Annotations$13, "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonUtilConcurrentFutureCallback;LJavaUtilConcurrentExecutor;", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;Lcom/google/common/util/concurrent/FutureCallback<-TV;>;Ljava/util/concurrent/Executor;)V", "getDone", "LJavaUtilConcurrentFuture;", "LJavaUtilConcurrentExecutionException;", "<V:Ljava/lang/Object;>(Ljava/util/concurrent/Future<TV;>;)TV;", "getChecked", "LJavaUtilConcurrentFuture;LIOSClass;", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>(Ljava/util/concurrent/Future<TV;>;Ljava/lang/Class<TX;>;)TV;^TX;", "LJavaUtilConcurrentFuture;LIOSClass;JLJavaUtilConcurrentTimeUnit;", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>(Ljava/util/concurrent/Future<TV;>;Ljava/lang/Class<TX;>;JLjava/util/concurrent/TimeUnit;)TV;^TX;", "getUnchecked", "wrapAndThrowUnchecked", &ComGoogleCommonUtilConcurrentFutures_DEREFERENCER, "Lcom/google/common/util/concurrent/AsyncFunction<Lcom/google/common/util/concurrent/ListenableFuture<Ljava/lang/Object;>;Ljava/lang/Object;>;", "LComGoogleCommonUtilConcurrentFutures_FutureCombiner;LComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture;LComGoogleCommonUtilConcurrentFutures_CallbackListener;LComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures = { "Futures", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x11, 35, 1, -1, 89, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures;
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentFutures class]) {
    ComGoogleCommonUtilConcurrentFutures_DEREFERENCER = new_ComGoogleCommonUtilConcurrentFutures_2_init();
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentFutures)
  }
}

@end

void ComGoogleCommonUtilConcurrentFutures_init(ComGoogleCommonUtilConcurrentFutures *self) {
  ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization_init(self);
}

ComGoogleCommonUtilConcurrentFutures *new_ComGoogleCommonUtilConcurrentFutures_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures, init)
}

ComGoogleCommonUtilConcurrentFutures *create_ComGoogleCommonUtilConcurrentFutures_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures, init)
}

id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonBaseFunction> mapper) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(ComGoogleCommonBasePreconditions_checkNotNullWithId_(future), mapper);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFutureWithId_(id value) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  if (value == nil) {
    id<ComGoogleCommonUtilConcurrentListenableFuture> typedNull = JreLoadStatic(ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateSuccessfulFuture, NULL);
    return typedNull;
  }
  return new_ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateSuccessfulFuture_initWithId_(value);
}

id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_immediateCheckedFutureWithId_(id value) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateSuccessfulCheckedFuture_initWithId_(value);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFailedFutureWithNSException_(NSException *throwable) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(throwable);
  return new_ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateFailedFuture_initWithNSException_(throwable);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateCancelledFuture() {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateCancelledFuture_init();
}

id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_immediateFailedCheckedFutureWithJavaLangException_(JavaLangException *exception) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(exception);
  return new_ComGoogleCommonUtilConcurrentImmediateFuture_ImmediateFailedCheckedFuture_initWithJavaLangException_(exception);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonBaseFunction> fallback) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractCatchingFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_(input, exceptionType, fallback);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonBaseFunction> fallback, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractCatchingFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(input, exceptionType, fallback, executor);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonUtilConcurrentAsyncFunction> fallback) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractCatchingFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_(input, exceptionType, fallback);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonUtilConcurrentAsyncFunction> fallback, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractCatchingFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(input, exceptionType, fallback, executor);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, jlong time, JavaUtilConcurrentTimeUnit *unit, id<JavaUtilConcurrentScheduledExecutorService> scheduledExecutor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentTimeoutFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(delegate, time, unit, scheduledExecutor);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentAsyncFunction> function) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractTransformFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_(input, function);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentAsyncFunction> function, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractTransformFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(input, function, executor);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonBaseFunction> function) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractTransformFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(input, function);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonBaseFunction> function, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentAbstractTransformFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(input, function, executor);
}

id<JavaUtilConcurrentFuture> ComGoogleCommonUtilConcurrentFutures_lazyTransformWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> input, id<ComGoogleCommonBaseFunction> function) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(input);
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(function);
  return new_ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(input, function);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_dereferenceWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> nested) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(nested, ComGoogleCommonUtilConcurrentFutures_DEREFERENCER, ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor());
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(futures), true);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithJavaLangIterable_(id<JavaLangIterable> futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(futures), true);
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(false, ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(futures));
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithJavaLangIterable_(id<JavaLangIterable> futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(false, ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(futures));
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(true, ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(futures));
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithJavaLangIterable_(id<JavaLangIterable> futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(true, ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(futures));
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> future) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  if ([((id<ComGoogleCommonUtilConcurrentListenableFuture>) nil_chk(future)) isDone]) {
    return future;
  }
  return new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(future);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableList_copyOfWithNSObjectArray_(futures), false);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithJavaLangIterable_(id<JavaLangIterable> futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return new_ComGoogleCommonUtilConcurrentCollectionFuture_ListFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_(ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(futures), false);
}

ComGoogleCommonCollectImmutableList *ComGoogleCommonUtilConcurrentFutures_inCompletionOrderWithJavaLangIterable_(id<JavaLangIterable> futures) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  ComGoogleCommonCollectImmutableList *copy_ = ComGoogleCommonCollectImmutableList_copyOfWithJavaLangIterable_(futures);
  ComGoogleCommonCollectImmutableList_Builder *delegatesBuilder = ComGoogleCommonCollectImmutableList_builder();
  for (jint i = 0; i < [((ComGoogleCommonCollectImmutableList *) nil_chk(copy_)) size]; i++) {
    (void) [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(delegatesBuilder)) addWithId:ComGoogleCommonUtilConcurrentSettableFuture_create()];
  }
  ComGoogleCommonCollectImmutableList *delegates = [((ComGoogleCommonCollectImmutableList_Builder *) nil_chk(delegatesBuilder)) build];
  JavaUtilConcurrentAtomicAtomicInteger *delegateIndex = new_JavaUtilConcurrentAtomicAtomicInteger_init();
  for (id<ComGoogleCommonUtilConcurrentListenableFuture> __strong future in copy_) {
    [((id<ComGoogleCommonUtilConcurrentListenableFuture>) nil_chk(future)) addListenerWithJavaLangRunnable:new_ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(delegateIndex, delegates, future) withJavaUtilConcurrentExecutor:ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor()];
  }
  ComGoogleCommonCollectImmutableList *delegatesCast = delegates;
  return delegatesCast;
}

void ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_withJavaUtilConcurrentExecutor_(future, callback, ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor());
}

void ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(callback);
  [((id<ComGoogleCommonUtilConcurrentListenableFuture>) nil_chk(future)) addListenerWithJavaLangRunnable:new_ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(future, callback) withJavaUtilConcurrentExecutor:executor];
}

id ComGoogleCommonUtilConcurrentFutures_getDoneWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  ComGoogleCommonBasePreconditions_checkStateWithBoolean_withNSString_withId_([((id<JavaUtilConcurrentFuture>) nil_chk(future)) isDone], @"Future was expected to be done: %s", future);
  return ComGoogleCommonUtilConcurrentUninterruptibles_getUninterruptiblyWithJavaUtilConcurrentFuture_(future);
}

id ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentFuturesGetChecked_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_(future, exceptionClass);
}

id ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass, jlong timeout, JavaUtilConcurrentTimeUnit *unit) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  return ComGoogleCommonUtilConcurrentFuturesGetChecked_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_withLong_withJavaUtilConcurrentTimeUnit_(future, exceptionClass, timeout, unit);
}

id ComGoogleCommonUtilConcurrentFutures_getUncheckedWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(future);
  @try {
    return ComGoogleCommonUtilConcurrentUninterruptibles_getUninterruptiblyWithJavaUtilConcurrentFuture_(future);
  }
  @catch (JavaUtilConcurrentExecutionException *e) {
    ComGoogleCommonUtilConcurrentFutures_wrapAndThrowUncheckedWithNSException_([e getCause]);
    @throw new_JavaLangAssertionError_init();
  }
}

void ComGoogleCommonUtilConcurrentFutures_wrapAndThrowUncheckedWithNSException_(NSException *cause) {
  ComGoogleCommonUtilConcurrentFutures_initialize();
  if ([cause isKindOfClass:[JavaLangError class]]) {
    @throw new_ComGoogleCommonUtilConcurrentExecutionError_initWithJavaLangError_((JavaLangError *) cast_chk(cause, [JavaLangError class]));
  }
  @throw new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSException_(cause);
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$7() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$8() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$9() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$10() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$11() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$12() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures__Annotations$13() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentFutures)

@implementation ComGoogleCommonUtilConcurrentFutures_1

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)capture$0
                 withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$1 {
  ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(self, capture$0, capture$1);
  return self;
}

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning {
  return [((id<JavaUtilConcurrentFuture>) nil_chk(val$input_)) cancelWithBoolean:mayInterruptIfRunning];
}

- (jboolean)isCancelled {
  return [((id<JavaUtilConcurrentFuture>) nil_chk(val$input_)) isCancelled];
}

- (jboolean)isDone {
  return [((id<JavaUtilConcurrentFuture>) nil_chk(val$input_)) isDone];
}

- (id)get {
  return ComGoogleCommonUtilConcurrentFutures_1_applyTransformationWithId_(self, [((id<JavaUtilConcurrentFuture>) nil_chk(val$input_)) get]);
}

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return ComGoogleCommonUtilConcurrentFutures_1_applyTransformationWithId_(self, [((id<JavaUtilConcurrentFuture>) nil_chk(val$input_)) getWithLong:timeout withJavaUtilConcurrentTimeUnit:unit]);
}

- (id)applyTransformationWithId:(id)input {
  return ComGoogleCommonUtilConcurrentFutures_1_applyTransformationWithId_(self, input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, 6, 7, -1, -1 },
    { NULL, "LNSObject;", 0x2, 8, 9, 10, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentFuture:withComGoogleCommonBaseFunction:);
  methods[1].selector = @selector(cancelWithBoolean:);
  methods[2].selector = @selector(isCancelled);
  methods[3].selector = @selector(isDone);
  methods[4].selector = @selector(get);
  methods[5].selector = @selector(getWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[6].selector = @selector(applyTransformationWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$input_", "LJavaUtilConcurrentFuture;", .constantValue.asLong = 0, 0x1012, -1, -1, 12, -1 },
    { "val$function_", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x1012, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "cancel", "Z", "LJavaLangInterruptedException;LJavaUtilConcurrentExecutionException;", "()TO;", "get", "JLJavaUtilConcurrentTimeUnit;", "LJavaLangInterruptedException;LJavaUtilConcurrentExecutionException;LJavaUtilConcurrentTimeoutException;", "(JLjava/util/concurrent/TimeUnit;)TO;", "applyTransformation", "LNSObject;", "LJavaUtilConcurrentExecutionException;", "(TI;)TO;", "Ljava/util/concurrent/Future<TI;>;", "Lcom/google/common/base/Function<-TI;+TO;>;", "LComGoogleCommonUtilConcurrentFutures;", "lazyTransformWithJavaUtilConcurrentFuture:withComGoogleCommonBaseFunction:", "Ljava/lang/Object;Ljava/util/concurrent/Future<TO;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_1 = { "", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x8018, 7, 2, 14, -1, 15, 16, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_1;
}

@end

void ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(ComGoogleCommonUtilConcurrentFutures_1 *self, id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1) {
  self->val$input_ = capture$0;
  self->val$function_ = capture$1;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentFutures_1 *new_ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_1, initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_, capture$0, capture$1)
}

ComGoogleCommonUtilConcurrentFutures_1 *create_ComGoogleCommonUtilConcurrentFutures_1_initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> capture$0, id<ComGoogleCommonBaseFunction> capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_1, initWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_, capture$0, capture$1)
}

id ComGoogleCommonUtilConcurrentFutures_1_applyTransformationWithId_(ComGoogleCommonUtilConcurrentFutures_1 *self, id input) {
  @try {
    return [((id<ComGoogleCommonBaseFunction>) nil_chk(self->val$function_)) applyWithId:input];
  }
  @catch (NSException *t) {
    @throw new_JavaUtilConcurrentExecutionException_initWithNSException_(t);
  }
}

@implementation ComGoogleCommonUtilConcurrentFutures_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentFutures_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input {
  return input;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LComGoogleCommonUtilConcurrentListenableFuture;", "(Lcom/google/common/util/concurrent/ListenableFuture<Ljava/lang/Object;>;)Lcom/google/common/util/concurrent/ListenableFuture<Ljava/lang/Object;>;", "LComGoogleCommonUtilConcurrentFutures;", "Ljava/lang/Object;Lcom/google/common/util/concurrent/AsyncFunction<Lcom/google/common/util/concurrent/ListenableFuture<Ljava/lang/Object;>;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_2 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, 4, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_2;
}

@end

void ComGoogleCommonUtilConcurrentFutures_2_init(ComGoogleCommonUtilConcurrentFutures_2 *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentFutures_2 *new_ComGoogleCommonUtilConcurrentFutures_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_2, init)
}

ComGoogleCommonUtilConcurrentFutures_2 *create_ComGoogleCommonUtilConcurrentFutures_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_2, init)
}

@implementation ComGoogleCommonUtilConcurrentFutures_FutureCombiner

- (instancetype)initWithBoolean:(jboolean)allMustSucceed
withComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)futures {
  ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(self, allMustSucceed, futures);
  return self;
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)combiner
                                                                              withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return new_ComGoogleCommonUtilConcurrentCombinedFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_withJavaUtilConcurrentExecutor_withComGoogleCommonUtilConcurrentAsyncCallable_(futures_, allMustSucceed_, executor, combiner);
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)combiner {
  return [self callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:combiner withJavaUtilConcurrentExecutor:ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor()];
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)combiner
                                                         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return new_ComGoogleCommonUtilConcurrentCombinedFuture_initWithComGoogleCommonCollectImmutableCollection_withBoolean_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentCallable_(futures_, allMustSucceed_, executor, combiner);
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)combiner {
  return [self callWithJavaUtilConcurrentCallable:combiner withJavaUtilConcurrentExecutor:ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x1, 2, 5, -1, 6, 7, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x1, 8, 11, -1, 12, 13, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithBoolean:withComGoogleCommonCollectImmutableList:);
  methods[1].selector = @selector(callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:withJavaUtilConcurrentExecutor:);
  methods[2].selector = @selector(callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:);
  methods[3].selector = @selector(callWithJavaUtilConcurrentCallable:withJavaUtilConcurrentExecutor:);
  methods[4].selector = @selector(callWithJavaUtilConcurrentCallable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "allMustSucceed_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "futures_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
  };
  static const void *ptrTable[] = { "ZLComGoogleCommonCollectImmutableList;", "(ZLcom/google/common/collect/ImmutableList<Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;)V", "callAsync", "LComGoogleCommonUtilConcurrentAsyncCallable;LJavaUtilConcurrentExecutor;", "<C:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/AsyncCallable<TC;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TC;>;", "LComGoogleCommonUtilConcurrentAsyncCallable;", "<C:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/AsyncCallable<TC;>;)Lcom/google/common/util/concurrent/ListenableFuture<TC;>;", (void *)&ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$0, "call", "LJavaUtilConcurrentCallable;LJavaUtilConcurrentExecutor;", "<C:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TC;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TC;>;", "LJavaUtilConcurrentCallable;", "<C:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TC;>;)Lcom/google/common/util/concurrent/ListenableFuture<TC;>;", (void *)&ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$1, "Lcom/google/common/collect/ImmutableList<Lcom/google/common/util/concurrent/ListenableFuture<+TV;>;>;", "LComGoogleCommonUtilConcurrentFutures;", "<V:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_FutureCombiner = { "FutureCombiner", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x19, 5, 2, 15, -1, -1, 16, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_FutureCombiner;
}

@end

void ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(ComGoogleCommonUtilConcurrentFutures_FutureCombiner *self, jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures) {
  NSObject_init(self);
  self->allMustSucceed_ = allMustSucceed;
  self->futures_ = futures;
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *new_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_FutureCombiner, initWithBoolean_withComGoogleCommonCollectImmutableList_, allMustSucceed, futures)
}

ComGoogleCommonUtilConcurrentFutures_FutureCombiner *create_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_initWithBoolean_withComGoogleCommonCollectImmutableList_(jboolean allMustSucceed, ComGoogleCommonCollectImmutableList *futures) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_FutureCombiner, initWithBoolean_withComGoogleCommonCollectImmutableList_, allMustSucceed, futures)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentFutures_FutureCombiner__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentFutures_FutureCombiner)

@implementation ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate {
  ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(self, delegate);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentListenableFuture:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentListenableFuture;", "(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;)V", "LComGoogleCommonUtilConcurrentFutures;", "<V:Ljava/lang/Object;>Lcom/google/common/util/concurrent/AbstractFuture$TrustedFuture<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture = { "NonCancellationPropagatingFuture", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 2, -1, -1, 3, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture;
}

@end

void ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture_init(self);
  [((id<ComGoogleCommonUtilConcurrentListenableFuture>) nil_chk(delegate)) addListenerWithJavaLangRunnable:new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(self, delegate) withJavaUtilConcurrentExecutor:ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor()];
}

ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_, delegate)
}

ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *create_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture)

@implementation ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture:(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *)outer$
                                            withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0 {
  ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(self, outer$, capture$0);
  return self;
}

- (void)run {
  [this$0_ setFutureWithComGoogleCommonUtilConcurrentListenableFuture:val$delegate_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture:withComGoogleCommonUtilConcurrentListenableFuture:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
    { "val$delegate_", "LComGoogleCommonUtilConcurrentListenableFuture;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "Lcom/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture<TV;>;", "Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "LComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture;", "initWithComGoogleCommonUtilConcurrentListenableFuture:" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 = { "", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1;
}

@end

void ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *self, ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0) {
  self->this$0_ = outer$;
  self->val$delegate_ = capture$0;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *new_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1, initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_, outer$, capture$0)
}

ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1 *create_ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1_initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture *outer$, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_1, initWithComGoogleCommonUtilConcurrentFutures_NonCancellationPropagatingFuture_withComGoogleCommonUtilConcurrentListenableFuture_, outer$, capture$0)
}

@implementation ComGoogleCommonUtilConcurrentFutures_3

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                      withComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)capture$1
            withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$2 {
  ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(self, capture$0, capture$1, capture$2);
  return self;
}

- (void)run {
  for (jint i = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$delegateIndex_)) get]; i < [((ComGoogleCommonCollectImmutableList *) nil_chk(val$delegates_)) size]; i++) {
    if ([((ComGoogleCommonUtilConcurrentSettableFuture *) nil_chk([val$delegates_ getWithInt:i])) setFutureWithComGoogleCommonUtilConcurrentListenableFuture:val$future_]) {
      [val$delegateIndex_ setWithInt:i + 1];
      return;
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withComGoogleCommonCollectImmutableList:withComGoogleCommonUtilConcurrentListenableFuture:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delegateIndex_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delegates_", "LComGoogleCommonCollectImmutableList;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
    { "val$future_", "LComGoogleCommonUtilConcurrentListenableFuture;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "Lcom/google/common/collect/ImmutableList<Lcom/google/common/util/concurrent/SettableFuture<TT;>;>;", "Lcom/google/common/util/concurrent/ListenableFuture<+TT;>;", "LComGoogleCommonUtilConcurrentFutures;", "inCompletionOrderWithJavaLangIterable:" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_3 = { "", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_3;
}

@end

void ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentFutures_3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2) {
  self->val$delegateIndex_ = capture$0;
  self->val$delegates_ = capture$1;
  self->val$future_ = capture$2;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentFutures_3 *new_ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_3, initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_, capture$0, capture$1, capture$2)
}

ComGoogleCommonUtilConcurrentFutures_3 *create_ComGoogleCommonUtilConcurrentFutures_3_initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, ComGoogleCommonCollectImmutableList *capture$1, id<ComGoogleCommonUtilConcurrentListenableFuture> capture$2) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_3, initWithJavaUtilConcurrentAtomicAtomicInteger_withComGoogleCommonCollectImmutableList_withComGoogleCommonUtilConcurrentListenableFuture_, capture$0, capture$1, capture$2)
}

@implementation ComGoogleCommonUtilConcurrentFutures_CallbackListener

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
 withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback {
  ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(self, future, callback);
  return self;
}

- (void)run {
  id value;
  @try {
    value = ComGoogleCommonUtilConcurrentFutures_getDoneWithJavaUtilConcurrentFuture_(future_);
  }
  @catch (JavaUtilConcurrentExecutionException *e) {
    [((id<ComGoogleCommonUtilConcurrentFutureCallback>) nil_chk(callback_)) onFailureWithNSException:[e getCause]];
    return;
  }
  @catch (JavaLangRuntimeException *e) {
    [((id<ComGoogleCommonUtilConcurrentFutureCallback>) nil_chk(callback_)) onFailureWithNSException:e];
    return;
  }
  @catch (JavaLangError *e) {
    [((id<ComGoogleCommonUtilConcurrentFutureCallback>) nil_chk(callback_)) onFailureWithNSException:e];
    return;
  }
  [((id<ComGoogleCommonUtilConcurrentFutureCallback>) nil_chk(callback_)) onSuccessWithId:value];
}

- (NSString *)description {
  return [((ComGoogleCommonBaseMoreObjects_ToStringHelper *) nil_chk([((ComGoogleCommonBaseMoreObjects_ToStringHelper *) nil_chk(ComGoogleCommonBaseMoreObjects_toStringHelperWithId_(self))) addValueWithId:callback_])) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentFuture:withComGoogleCommonUtilConcurrentFutureCallback:);
  methods[1].selector = @selector(run);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "future_", "LJavaUtilConcurrentFuture;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
    { "callback_", "LComGoogleCommonUtilConcurrentFutureCallback;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentFuture;LComGoogleCommonUtilConcurrentFutureCallback;", "(Ljava/util/concurrent/Future<TV;>;Lcom/google/common/util/concurrent/FutureCallback<-TV;>;)V", "toString", "Ljava/util/concurrent/Future<TV;>;", "Lcom/google/common/util/concurrent/FutureCallback<-TV;>;", "LComGoogleCommonUtilConcurrentFutures;", "<V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Runnable;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_CallbackListener = { "CallbackListener", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x1a, 3, 2, 5, -1, -1, 6, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_CallbackListener;
}

@end

void ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(ComGoogleCommonUtilConcurrentFutures_CallbackListener *self, id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback) {
  NSObject_init(self);
  self->future_ = future;
  self->callback_ = callback;
}

ComGoogleCommonUtilConcurrentFutures_CallbackListener *new_ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_CallbackListener, initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_, future, callback)
}

ComGoogleCommonUtilConcurrentFutures_CallbackListener *create_ComGoogleCommonUtilConcurrentFutures_CallbackListener_initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<JavaUtilConcurrentFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_CallbackListener, initWithJavaUtilConcurrentFuture_withComGoogleCommonUtilConcurrentFutureCallback_, future, callback)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentFutures_CallbackListener)

@implementation ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                      withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper {
  ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(self, delegate, mapper);
  return self;
}

- (JavaLangException *)mapExceptionWithJavaLangException:(JavaLangException *)e {
  return [((id<ComGoogleCommonBaseFunction>) nil_chk(mapper_)) applyWithId:e];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangException;", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentListenableFuture:withComGoogleCommonBaseFunction:);
  methods[1].selector = @selector(mapExceptionWithJavaLangException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentListenableFuture;LComGoogleCommonBaseFunction;", "(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;Lcom/google/common/base/Function<-Ljava/lang/Exception;TX;>;)V", "mapException", "LJavaLangException;", "(Ljava/lang/Exception;)TX;", "Lcom/google/common/base/Function<-Ljava/lang/Exception;TX;>;", "LComGoogleCommonUtilConcurrentFutures;", "<V:Ljava/lang/Object;X:Ljava/lang/Exception;>Lcom/google/common/util/concurrent/AbstractCheckedFuture<TV;TX;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture = { "MappingCheckedFuture", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0xa, 2, 1, 6, -1, -1, 7, -1 };
  return &_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture;
}

@end

void ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper) {
  ComGoogleCommonUtilConcurrentAbstractCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(self, delegate);
  self->mapper_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(mapper);
}

ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *new_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_, delegate, mapper)
}

ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture *create_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, id<ComGoogleCommonBaseFunction> mapper) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_, delegate, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture)
