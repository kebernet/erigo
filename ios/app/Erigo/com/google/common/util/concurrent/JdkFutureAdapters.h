//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/JdkFutureAdapters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentJdkFutureAdapters")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentJdkFutureAdapters
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentJdkFutureAdapters 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentJdkFutureAdapters 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentJdkFutureAdapters

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentJdkFutureAdapters_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentJdkFutureAdapters || defined(INCLUDE_ComGoogleCommonUtilConcurrentJdkFutureAdapters))
#define ComGoogleCommonUtilConcurrentJdkFutureAdapters_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;

@interface ComGoogleCommonUtilConcurrentJdkFutureAdapters : NSObject

#pragma mark Public

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                                                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentJdkFutureAdapters)

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> future, id<JavaUtilConcurrentExecutor> executor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentJdkFutureAdapters)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentJdkFutureAdapters")
