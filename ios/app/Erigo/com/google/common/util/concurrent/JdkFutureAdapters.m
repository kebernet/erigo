//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/JdkFutureAdapters.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/util/concurrent/ExecutionList.h"
#include "com/google/common/util/concurrent/ForwardingFuture.h"
#include "com/google/common/util/concurrent/JdkFutureAdapters.h"
#include "com/google/common/util/concurrent/ListenableFuture.h"
#include "com/google/common/util/concurrent/ThreadFactoryBuilder.h"
#include "com/google/common/util/concurrent/Uninterruptibles.h"
#include "java/lang/Runnable.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/ThreadFactory.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"

@interface ComGoogleCommonUtilConcurrentJdkFutureAdapters ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentJdkFutureAdapters_init(ComGoogleCommonUtilConcurrentJdkFutureAdapters *self);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_init();

@interface ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter : ComGoogleCommonUtilConcurrentForwardingFuture < ComGoogleCommonUtilConcurrentListenableFuture > {
 @public
  id<JavaUtilConcurrentExecutor> adapterExecutor_;
  ComGoogleCommonUtilConcurrentExecutionList *executionList_;
  JavaUtilConcurrentAtomicAtomicBoolean *hasListeners_;
  id<JavaUtilConcurrentFuture> delegate_;
}

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)delegate;

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)delegate
                  withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)adapterExecutor;

- (id<JavaUtilConcurrentFuture>)delegate;

- (void)addListenerWithJavaLangRunnable:(id<JavaLangRunnable>)listener
         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)exec;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter)

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, adapterExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, executionList_, ComGoogleCommonUtilConcurrentExecutionList *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, hasListeners_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, delegate_, id<JavaUtilConcurrentFuture>)

inline id<JavaUtilConcurrentThreadFactory> ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_get_threadFactory();
static id<JavaUtilConcurrentThreadFactory> ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_threadFactory;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, threadFactory, id<JavaUtilConcurrentThreadFactory>)

inline id<JavaUtilConcurrentExecutor> ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_get_defaultAdapterExecutor();
static id<JavaUtilConcurrentExecutor> ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_defaultAdapterExecutor;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, defaultAdapterExecutor, id<JavaUtilConcurrentExecutor>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *self, id<JavaUtilConcurrentFuture> delegate);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> delegate);

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *self, id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter)

@interface ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *this$0_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter:(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *self, ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$);

@implementation ComGoogleCommonUtilConcurrentJdkFutureAdapters

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_(future);
}

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)listenInPoolThreadWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                                                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor {
  return ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(future, executor);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(listenInPoolThreadWithJavaUtilConcurrentFuture:);
  methods[1].selector = @selector(listenInPoolThreadWithJavaUtilConcurrentFuture:withJavaUtilConcurrentExecutor:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "listenInPoolThread", "LJavaUtilConcurrentFuture;", "<V:Ljava/lang/Object;>(Ljava/util/concurrent/Future<TV;>;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "LJavaUtilConcurrentFuture;LJavaUtilConcurrentExecutor;", "<V:Ljava/lang/Object;>(Ljava/util/concurrent/Future<TV;>;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "LComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentJdkFutureAdapters = { "JdkFutureAdapters", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, 5, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentJdkFutureAdapters;
}

@end

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_initialize();
  if ([ComGoogleCommonUtilConcurrentListenableFuture_class_() isInstance:future]) {
    return (id<ComGoogleCommonUtilConcurrentListenableFuture>) cast_check(future, ComGoogleCommonUtilConcurrentListenableFuture_class_());
  }
  return new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(future);
}

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentJdkFutureAdapters_listenInPoolThreadWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> future, id<JavaUtilConcurrentExecutor> executor) {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_initialize();
  (void) ComGoogleCommonBasePreconditions_checkNotNullWithId_(executor);
  if ([ComGoogleCommonUtilConcurrentListenableFuture_class_() isInstance:future]) {
    return (id<ComGoogleCommonUtilConcurrentListenableFuture>) cast_check(future, ComGoogleCommonUtilConcurrentListenableFuture_class_());
  }
  return new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(future, executor);
}

void ComGoogleCommonUtilConcurrentJdkFutureAdapters_init(ComGoogleCommonUtilConcurrentJdkFutureAdapters *self) {
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters, init)
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentJdkFutureAdapters)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter)

@implementation ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)delegate {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(self, delegate);
  return self;
}

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)delegate
                  withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)adapterExecutor {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(self, delegate, adapterExecutor);
  return self;
}

- (id<JavaUtilConcurrentFuture>)delegate {
  return delegate_;
}

- (void)addListenerWithJavaLangRunnable:(id<JavaLangRunnable>)listener
         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)exec {
  [((ComGoogleCommonUtilConcurrentExecutionList *) nil_chk(executionList_)) addWithJavaLangRunnable:listener withJavaUtilConcurrentExecutor:exec];
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(hasListeners_)) compareAndSetWithBoolean:false withBoolean:true]) {
    if ([((id<JavaUtilConcurrentFuture>) nil_chk(delegate_)) isDone]) {
      [executionList_ execute];
      return;
    }
    [((id<JavaUtilConcurrentExecutor>) nil_chk(adapterExecutor_)) executeWithJavaLangRunnable:new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(self)];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilConcurrentFuture;", 0x4, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentFuture:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentFuture:withJavaUtilConcurrentExecutor:);
  methods[2].selector = @selector(delegate);
  methods[3].selector = @selector(addListenerWithJavaLangRunnable:withJavaUtilConcurrentExecutor:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "threadFactory", "LJavaUtilConcurrentThreadFactory;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "defaultAdapterExecutor", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "adapterExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "executionList_", "LComGoogleCommonUtilConcurrentExecutionList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hasListeners_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "delegate_", "LJavaUtilConcurrentFuture;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentFuture;", "(Ljava/util/concurrent/Future<TV;>;)V", "LJavaUtilConcurrentFuture;LJavaUtilConcurrentExecutor;", "(Ljava/util/concurrent/Future<TV;>;Ljava/util/concurrent/Executor;)V", "()Ljava/util/concurrent/Future<TV;>;", "addListener", "LJavaLangRunnable;LJavaUtilConcurrentExecutor;", &ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_threadFactory, &ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_defaultAdapterExecutor, "Ljava/util/concurrent/Future<TV;>;", "LComGoogleCommonUtilConcurrentJdkFutureAdapters;", "<V:Ljava/lang/Object;>Lcom/google/common/util/concurrent/ForwardingFuture<TV;>;Lcom/google/common/util/concurrent/ListenableFuture<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter = { "ListenableFutureAdapter", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0xa, 4, 6, 10, -1, -1, 11, -1 };
  return &_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter;
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter class]) {
    ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_threadFactory = [((ComGoogleCommonUtilConcurrentThreadFactoryBuilder *) nil_chk([((ComGoogleCommonUtilConcurrentThreadFactoryBuilder *) nil_chk([new_ComGoogleCommonUtilConcurrentThreadFactoryBuilder_init() setDaemonWithBoolean:true])) setNameFormatWithNSString:@"ListenableFutureAdapter-thread-%d"])) build];
    ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_defaultAdapterExecutor = JavaUtilConcurrentExecutors_newCachedThreadPoolWithJavaUtilConcurrentThreadFactory_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_threadFactory);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter)
  }
}

@end

void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *self, id<JavaUtilConcurrentFuture> delegate) {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(self, delegate, ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_defaultAdapterExecutor);
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, initWithJavaUtilConcurrentFuture_, delegate)
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, initWithJavaUtilConcurrentFuture_, delegate)
}

void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *self, id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor) {
  ComGoogleCommonUtilConcurrentForwardingFuture_init(self);
  self->executionList_ = new_ComGoogleCommonUtilConcurrentExecutionList_init();
  self->hasListeners_ = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  self->delegate_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate);
  self->adapterExecutor_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(adapterExecutor);
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_, delegate, adapterExecutor)
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentFuture> delegate, id<JavaUtilConcurrentExecutor> adapterExecutor) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter, initWithJavaUtilConcurrentFuture_withJavaUtilConcurrentExecutor_, delegate, adapterExecutor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter)

@implementation ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1

- (instancetype)initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter:(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *)outer$ {
  ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(self, outer$);
  return self;
}

- (void)run {
  @try {
    (void) ComGoogleCommonUtilConcurrentUninterruptibles_getUninterruptiblyWithJavaUtilConcurrentFuture_(this$0_->delegate_);
  }
  @catch (NSException *e) {
  }
  [((ComGoogleCommonUtilConcurrentExecutionList *) nil_chk(this$0_->executionList_)) execute];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lcom/google/common/util/concurrent/JdkFutureAdapters$ListenableFutureAdapter<TV;>;", "LComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter;", "addListenerWithJavaLangRunnable:withJavaUtilConcurrentExecutor:" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 = { "", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1;
}

@end

void ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *self, ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *new_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1, initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_, outer$)
}

ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1 *create_ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1_initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_1, initWithComGoogleCommonUtilConcurrentJdkFutureAdapters_ListenableFutureAdapter_, outer$)
}
