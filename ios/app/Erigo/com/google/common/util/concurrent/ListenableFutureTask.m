//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/ListenableFutureTask.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/util/concurrent/ExecutionList.h"
#include "com/google/common/util/concurrent/ListenableFutureTask.h"
#include "java/lang/Runnable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/FutureTask.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonUtilConcurrentListenableFutureTask () {
 @public
  ComGoogleCommonUtilConcurrentExecutionList *executionList_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentListenableFutureTask, executionList_, ComGoogleCommonUtilConcurrentExecutionList *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$1();

@implementation ComGoogleCommonUtilConcurrentListenableFutureTask

+ (ComGoogleCommonUtilConcurrentListenableFutureTask *)createWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  return ComGoogleCommonUtilConcurrentListenableFutureTask_createWithJavaUtilConcurrentCallable_(callable);
}

+ (ComGoogleCommonUtilConcurrentListenableFutureTask *)createWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                                           withId:(id)result {
  return ComGoogleCommonUtilConcurrentListenableFutureTask_createWithJavaLangRunnable_withId_(runnable, result);
}

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaUtilConcurrentCallable_(self, callable);
  return self;
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                  withId:(id)result {
  ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaLangRunnable_withId_(self, runnable, result);
  return self;
}

- (void)addListenerWithJavaLangRunnable:(id<JavaLangRunnable>)listener
         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)exec {
  [((ComGoogleCommonUtilConcurrentExecutionList *) nil_chk(executionList_)) addWithJavaLangRunnable:listener withJavaUtilConcurrentExecutor:exec];
}

- (void)done {
  [((ComGoogleCommonUtilConcurrentExecutionList *) nil_chk(executionList_)) execute];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonUtilConcurrentListenableFutureTask;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentListenableFutureTask;", 0x9, 0, 3, -1, 4, -1, 5 },
    { NULL, NULL, 0x0, -1, 1, -1, 6, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 7, -1, 8 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithJavaUtilConcurrentCallable:);
  methods[1].selector = @selector(createWithJavaLangRunnable:withId:);
  methods[2].selector = @selector(initWithJavaUtilConcurrentCallable:);
  methods[3].selector = @selector(initWithJavaLangRunnable:withId:);
  methods[4].selector = @selector(addListenerWithJavaLangRunnable:withJavaUtilConcurrentExecutor:);
  methods[5].selector = @selector(done);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "executionList_", "LComGoogleCommonUtilConcurrentExecutionList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LJavaUtilConcurrentCallable;", "<V:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TV;>;)Lcom/google/common/util/concurrent/ListenableFutureTask<TV;>;", "LJavaLangRunnable;LNSObject;", "<V:Ljava/lang/Object;>(Ljava/lang/Runnable;TV;)Lcom/google/common/util/concurrent/ListenableFutureTask<TV;>;", (void *)&ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$0, "(Ljava/util/concurrent/Callable<TV;>;)V", "(Ljava/lang/Runnable;TV;)V", (void *)&ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$1, "addListener", "LJavaLangRunnable;LJavaUtilConcurrentExecutor;", "<V:Ljava/lang/Object;>Ljava/util/concurrent/FutureTask<TV;>;Lcom/google/common/util/concurrent/ListenableFuture<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentListenableFutureTask = { "ListenableFutureTask", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, 11, -1 };
  return &_ComGoogleCommonUtilConcurrentListenableFutureTask;
}

@end

ComGoogleCommonUtilConcurrentListenableFutureTask *ComGoogleCommonUtilConcurrentListenableFutureTask_createWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  ComGoogleCommonUtilConcurrentListenableFutureTask_initialize();
  return new_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaUtilConcurrentCallable_(callable);
}

ComGoogleCommonUtilConcurrentListenableFutureTask *ComGoogleCommonUtilConcurrentListenableFutureTask_createWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result) {
  ComGoogleCommonUtilConcurrentListenableFutureTask_initialize();
  return new_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaLangRunnable_withId_(runnable, result);
}

void ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentListenableFutureTask *self, id<JavaUtilConcurrentCallable> callable) {
  JavaUtilConcurrentFutureTask_initWithJavaUtilConcurrentCallable_(self, callable);
  self->executionList_ = new_ComGoogleCommonUtilConcurrentExecutionList_init();
}

ComGoogleCommonUtilConcurrentListenableFutureTask *new_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentListenableFutureTask, initWithJavaUtilConcurrentCallable_, callable)
}

ComGoogleCommonUtilConcurrentListenableFutureTask *create_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentListenableFutureTask, initWithJavaUtilConcurrentCallable_, callable)
}

void ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaLangRunnable_withId_(ComGoogleCommonUtilConcurrentListenableFutureTask *self, id<JavaLangRunnable> runnable, id result) {
  JavaUtilConcurrentFutureTask_initWithJavaLangRunnable_withId_(self, runnable, result);
  self->executionList_ = new_ComGoogleCommonUtilConcurrentExecutionList_init();
}

ComGoogleCommonUtilConcurrentListenableFutureTask *new_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentListenableFutureTask, initWithJavaLangRunnable_withId_, runnable, result)
}

ComGoogleCommonUtilConcurrentListenableFutureTask *create_ComGoogleCommonUtilConcurrentListenableFutureTask_initWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentListenableFutureTask, initWithJavaLangRunnable_withId_, runnable, result)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentListenableFutureTask__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentListenableFutureTask)
