//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/Service.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/util/concurrent/Service.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface ComGoogleCommonUtilConcurrentService : NSObject

@end

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State *new_ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_1 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_1)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_1_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_1 *new_ComGoogleCommonUtilConcurrentService_State_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_2 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_2)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_2_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_2 *new_ComGoogleCommonUtilConcurrentService_State_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_3 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_3)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_3_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_3 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_3 *new_ComGoogleCommonUtilConcurrentService_State_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_4 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_4)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_4_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_4 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_4 *new_ComGoogleCommonUtilConcurrentService_State_4_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_5 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_5)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_5_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_5 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_5 *new_ComGoogleCommonUtilConcurrentService_State_5_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComGoogleCommonUtilConcurrentService_State_6 : ComGoogleCommonUtilConcurrentService_State < NSCopying >

- (jboolean)isTerminal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentService_State_6)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentService_State_6_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_6 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentService_State_6 *new_ComGoogleCommonUtilConcurrentService_State_6_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation ComGoogleCommonUtilConcurrentService

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonUtilConcurrentService;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentService_State;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentService;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSException;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(startAsync);
  methods[1].selector = @selector(isRunning);
  methods[2].selector = @selector(state);
  methods[3].selector = @selector(stopAsync);
  methods[4].selector = @selector(awaitRunning);
  methods[5].selector = @selector(awaitRunningWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[6].selector = @selector(awaitTerminated);
  methods[7].selector = @selector(awaitTerminatedWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[8].selector = @selector(failureCause);
  methods[9].selector = @selector(addListenerWithComGoogleCommonUtilConcurrentService_Listener:withJavaUtilConcurrentExecutor:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "awaitRunning", "JLJavaUtilConcurrentTimeUnit;", "LJavaUtilConcurrentTimeoutException;", "awaitTerminated", "addListener", "LComGoogleCommonUtilConcurrentService_Listener;LJavaUtilConcurrentExecutor;", "LComGoogleCommonUtilConcurrentService_State;LComGoogleCommonUtilConcurrentService_Listener;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService = { "Service", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x609, 10, 0, -1, 6, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentService)

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonUtilConcurrentService_State)

ComGoogleCommonUtilConcurrentService_State *ComGoogleCommonUtilConcurrentService_State_values_[6];

@implementation ComGoogleCommonUtilConcurrentService_State

- (jboolean)isTerminal {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return ComGoogleCommonUtilConcurrentService_State_values();
}

+ (ComGoogleCommonUtilConcurrentService_State *)valueOfWithNSString:(NSString *)name {
  return ComGoogleCommonUtilConcurrentService_State_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComGoogleCommonUtilConcurrentService_State;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentService_State;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NEW", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "STARTING", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "RUNNING", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "STOPPING", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "TERMINATED", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "FAILED", "LComGoogleCommonUtilConcurrentService_State;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleCommonUtilConcurrentService_State, NEW), &JreEnum(ComGoogleCommonUtilConcurrentService_State, STARTING), &JreEnum(ComGoogleCommonUtilConcurrentService_State, RUNNING), &JreEnum(ComGoogleCommonUtilConcurrentService_State, STOPPING), &JreEnum(ComGoogleCommonUtilConcurrentService_State, TERMINATED), &JreEnum(ComGoogleCommonUtilConcurrentService_State, FAILED), "LComGoogleCommonUtilConcurrentService;", "Ljava/lang/Enum<Lcom/google/common/util/concurrent/Service$State;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State = { "State", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x4409, 3, 6, 8, -1, -1, 9, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State;
}

+ (void)initialize {
  if (self == [ComGoogleCommonUtilConcurrentService_State class]) {
    JreEnum(ComGoogleCommonUtilConcurrentService_State, NEW) = new_ComGoogleCommonUtilConcurrentService_State_1_initWithNSString_withInt_(@"NEW", 0);
    JreEnum(ComGoogleCommonUtilConcurrentService_State, STARTING) = new_ComGoogleCommonUtilConcurrentService_State_2_initWithNSString_withInt_(@"STARTING", 1);
    JreEnum(ComGoogleCommonUtilConcurrentService_State, RUNNING) = new_ComGoogleCommonUtilConcurrentService_State_3_initWithNSString_withInt_(@"RUNNING", 2);
    JreEnum(ComGoogleCommonUtilConcurrentService_State, STOPPING) = new_ComGoogleCommonUtilConcurrentService_State_4_initWithNSString_withInt_(@"STOPPING", 3);
    JreEnum(ComGoogleCommonUtilConcurrentService_State, TERMINATED) = new_ComGoogleCommonUtilConcurrentService_State_5_initWithNSString_withInt_(@"TERMINATED", 4);
    JreEnum(ComGoogleCommonUtilConcurrentService_State, FAILED) = new_ComGoogleCommonUtilConcurrentService_State_6_initWithNSString_withInt_(@"FAILED", 5);
    J2OBJC_SET_INITIALIZED(ComGoogleCommonUtilConcurrentService_State)
  }
}

@end

void ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State *new_ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentService_State_values() {
  ComGoogleCommonUtilConcurrentService_State_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleCommonUtilConcurrentService_State_values_ count:6 type:ComGoogleCommonUtilConcurrentService_State_class_()];
}

ComGoogleCommonUtilConcurrentService_State *ComGoogleCommonUtilConcurrentService_State_valueOfWithNSString_(NSString *name) {
  ComGoogleCommonUtilConcurrentService_State_initialize();
  for (int i = 0; i < 6; i++) {
    ComGoogleCommonUtilConcurrentService_State *e = ComGoogleCommonUtilConcurrentService_State_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleCommonUtilConcurrentService_State *ComGoogleCommonUtilConcurrentService_State_fromOrdinal(NSUInteger ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ComGoogleCommonUtilConcurrentService_State_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentService_State)

@implementation ComGoogleCommonUtilConcurrentService_State_1

- (jboolean)isTerminal {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_1 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_1;
}

@end

void ComGoogleCommonUtilConcurrentService_State_1_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_1 *new_ComGoogleCommonUtilConcurrentService_State_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_State_2

- (jboolean)isTerminal {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_2 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_2;
}

@end

void ComGoogleCommonUtilConcurrentService_State_2_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_2 *new_ComGoogleCommonUtilConcurrentService_State_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_2, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_State_3

- (jboolean)isTerminal {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_3 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_3 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_3;
}

@end

void ComGoogleCommonUtilConcurrentService_State_3_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_3 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_3 *new_ComGoogleCommonUtilConcurrentService_State_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_3, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_State_4

- (jboolean)isTerminal {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_4 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_4 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_4;
}

@end

void ComGoogleCommonUtilConcurrentService_State_4_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_4 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_4 *new_ComGoogleCommonUtilConcurrentService_State_4_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_4, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_State_5

- (jboolean)isTerminal {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_5 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_5 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_5;
}

@end

void ComGoogleCommonUtilConcurrentService_State_5_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_5 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_5 *new_ComGoogleCommonUtilConcurrentService_State_5_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_5, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_State_6

- (jboolean)isTerminal {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleCommonUtilConcurrentService_State_6 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isTerminal);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentService_State;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_State_6 = { "", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_State_6;
}

@end

void ComGoogleCommonUtilConcurrentService_State_6_initWithNSString_withInt_(ComGoogleCommonUtilConcurrentService_State_6 *self, NSString *__name, jint __ordinal) {
  ComGoogleCommonUtilConcurrentService_State_initWithNSString_withInt_(self, __name, __ordinal);
}

ComGoogleCommonUtilConcurrentService_State_6 *new_ComGoogleCommonUtilConcurrentService_State_6_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentService_State_6, initWithNSString_withInt_, __name, __ordinal)
}

@implementation ComGoogleCommonUtilConcurrentService_Listener

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonUtilConcurrentService_Listener_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)starting {
}

- (void)running {
}

- (void)stoppingWithComGoogleCommonUtilConcurrentService_State:(ComGoogleCommonUtilConcurrentService_State *)from {
}

- (void)terminatedWithComGoogleCommonUtilConcurrentService_State:(ComGoogleCommonUtilConcurrentService_State *)from {
}

- (void)failedWithComGoogleCommonUtilConcurrentService_State:(ComGoogleCommonUtilConcurrentService_State *)from
                                             withNSException:(NSException *)failure {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(starting);
  methods[2].selector = @selector(running);
  methods[3].selector = @selector(stoppingWithComGoogleCommonUtilConcurrentService_State:);
  methods[4].selector = @selector(terminatedWithComGoogleCommonUtilConcurrentService_State:);
  methods[5].selector = @selector(failedWithComGoogleCommonUtilConcurrentService_State:withNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "stopping", "LComGoogleCommonUtilConcurrentService_State;", "terminated", "failed", "LComGoogleCommonUtilConcurrentService_State;LNSException;", "LComGoogleCommonUtilConcurrentService;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentService_Listener = { "Listener", "com.google.common.util.concurrent", ptrTable, methods, NULL, 7, 0x409, 6, 0, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentService_Listener;
}

@end

void ComGoogleCommonUtilConcurrentService_Listener_init(ComGoogleCommonUtilConcurrentService_Listener *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentService_Listener)
