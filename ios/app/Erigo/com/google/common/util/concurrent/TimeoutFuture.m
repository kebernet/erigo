//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/TimeoutFuture.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/util/concurrent/AbstractFuture.h"
#include "com/google/common/util/concurrent/ListenableFuture.h"
#include "com/google/common/util/concurrent/MoreExecutors.h"
#include "com/google/common/util/concurrent/TimeoutFuture.h"
#include "java/lang/Runnable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/ScheduledExecutorService.h"
#include "java/util/concurrent/ScheduledFuture.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonUtilConcurrentTimeoutFuture () {
 @public
  id<ComGoogleCommonUtilConcurrentListenableFuture> delegateRef_;
  id<JavaUtilConcurrentFuture> timer_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentTimeoutFuture, delegateRef_, id<ComGoogleCommonUtilConcurrentListenableFuture>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentTimeoutFuture, timer_, id<JavaUtilConcurrentFuture>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTimeoutFuture *new_ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTimeoutFuture *create_ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$1();

@interface ComGoogleCommonUtilConcurrentTimeoutFuture_Fire : NSObject < JavaLangRunnable > {
 @public
  ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFutureRef_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentTimeoutFuture:(ComGoogleCommonUtilConcurrentTimeoutFuture *)timeoutFuture;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire)

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire, timeoutFutureRef_, ComGoogleCommonUtilConcurrentTimeoutFuture *)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *self, ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *new_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *create_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture_Fire__Annotations$0();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire)

@implementation ComGoogleCommonUtilConcurrentTimeoutFuture

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)createWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                                                                                    withLong:(jlong)time
                                                                              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                              withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)scheduledExecutor {
  return ComGoogleCommonUtilConcurrentTimeoutFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(delegate, time, unit, scheduledExecutor);
}

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate {
  ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(self, delegate);
  return self;
}

- (void)afterDone {
  [self maybePropagateCancellationWithJavaUtilConcurrentFuture:delegateRef_];
  id<JavaUtilConcurrentFuture> localTimer = timer_;
  if (localTimer != nil) {
    [localTimer cancelWithBoolean:false];
  }
  delegateRef_ = nil;
  timer_ = nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonUtilConcurrentListenableFuture;", 0x8, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithComGoogleCommonUtilConcurrentListenableFuture:withLong:withJavaUtilConcurrentTimeUnit:withJavaUtilConcurrentScheduledExecutorService:);
  methods[1].selector = @selector(initWithComGoogleCommonUtilConcurrentListenableFuture:);
  methods[2].selector = @selector(afterDone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegateRef_", "LComGoogleCommonUtilConcurrentListenableFuture;", .constantValue.asLong = 0, 0x2, -1, -1, 5, 6 },
    { "timer_", "LJavaUtilConcurrentFuture;", .constantValue.asLong = 0, 0x2, -1, -1, 7, 8 },
  };
  static const void *ptrTable[] = { "create", "LComGoogleCommonUtilConcurrentListenableFuture;JLJavaUtilConcurrentTimeUnit;LJavaUtilConcurrentScheduledExecutorService;", "<V:Ljava/lang/Object;>(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", "LComGoogleCommonUtilConcurrentListenableFuture;", "(Lcom/google/common/util/concurrent/ListenableFuture<TV;>;)V", "Lcom/google/common/util/concurrent/ListenableFuture<TV;>;", (void *)&ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$0, "Ljava/util/concurrent/Future<*>;", (void *)&ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$1, "LComGoogleCommonUtilConcurrentTimeoutFuture_Fire;", "<V:Ljava/lang/Object;>Lcom/google/common/util/concurrent/AbstractFuture$TrustedFuture<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentTimeoutFuture = { "TimeoutFuture", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x10, 3, 2, -1, 9, -1, 10, -1 };
  return &_ComGoogleCommonUtilConcurrentTimeoutFuture;
}

@end

id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentTimeoutFuture_createWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, jlong time, JavaUtilConcurrentTimeUnit *unit, id<JavaUtilConcurrentScheduledExecutorService> scheduledExecutor) {
  ComGoogleCommonUtilConcurrentTimeoutFuture_initialize();
  ComGoogleCommonUtilConcurrentTimeoutFuture *result = new_ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(delegate);
  ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *fire = new_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(result);
  result->timer_ = [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(scheduledExecutor)) scheduleWithJavaLangRunnable:fire withLong:time withJavaUtilConcurrentTimeUnit:unit];
  [((id<ComGoogleCommonUtilConcurrentListenableFuture>) nil_chk(delegate)) addListenerWithJavaLangRunnable:fire withJavaUtilConcurrentExecutor:ComGoogleCommonUtilConcurrentMoreExecutors_directExecutor()];
  return result;
}

void ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *self, id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture_init(self);
  self->delegateRef_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate);
}

ComGoogleCommonUtilConcurrentTimeoutFuture *new_ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentTimeoutFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_, delegate)
}

ComGoogleCommonUtilConcurrentTimeoutFuture *create_ComGoogleCommonUtilConcurrentTimeoutFuture_initWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentTimeoutFuture, initWithComGoogleCommonUtilConcurrentListenableFuture_, delegate)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentTimeoutFuture)

@implementation ComGoogleCommonUtilConcurrentTimeoutFuture_Fire

- (instancetype)initWithComGoogleCommonUtilConcurrentTimeoutFuture:(ComGoogleCommonUtilConcurrentTimeoutFuture *)timeoutFuture {
  ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(self, timeoutFuture);
  return self;
}

- (void)run {
  ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture = timeoutFutureRef_;
  if (timeoutFuture == nil) {
    return;
  }
  id<ComGoogleCommonUtilConcurrentListenableFuture> delegate = timeoutFuture->delegateRef_;
  if (delegate == nil) {
    return;
  }
  timeoutFutureRef_ = nil;
  if ([delegate isDone]) {
    [timeoutFuture setFutureWithComGoogleCommonUtilConcurrentListenableFuture:delegate];
  }
  else {
    @try {
      [timeoutFuture setExceptionWithNSException:new_JavaUtilConcurrentTimeoutException_initWithNSString_(JreStrcat("$@", @"Future timed out: ", delegate))];
    }
    @finally {
      [delegate cancelWithBoolean:true];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentTimeoutFuture:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "timeoutFutureRef_", "LComGoogleCommonUtilConcurrentTimeoutFuture;", .constantValue.asLong = 0, 0x0, -1, -1, 2, 3 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonUtilConcurrentTimeoutFuture;", "(Lcom/google/common/util/concurrent/TimeoutFuture<TV;>;)V", "Lcom/google/common/util/concurrent/TimeoutFuture<TV;>;", (void *)&ComGoogleCommonUtilConcurrentTimeoutFuture_Fire__Annotations$0, "<V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Runnable;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentTimeoutFuture_Fire = { "Fire", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, 4, -1 };
  return &_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire;
}

@end

void ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *self, ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture) {
  NSObject_init(self);
  self->timeoutFutureRef_ = timeoutFuture;
}

ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *new_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire, initWithComGoogleCommonUtilConcurrentTimeoutFuture_, timeoutFuture)
}

ComGoogleCommonUtilConcurrentTimeoutFuture_Fire *create_ComGoogleCommonUtilConcurrentTimeoutFuture_Fire_initWithComGoogleCommonUtilConcurrentTimeoutFuture_(ComGoogleCommonUtilConcurrentTimeoutFuture *timeoutFuture) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire, initWithComGoogleCommonUtilConcurrentTimeoutFuture_, timeoutFuture)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentTimeoutFuture_Fire__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentTimeoutFuture_Fire)
