//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/TrustedListenableFutureTask.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/util/concurrent/AbstractFuture.h"
#include "com/google/common/util/concurrent/InterruptibleTask.h"
#include "com/google/common/util/concurrent/TrustedListenableFutureTask.h"
#include "java/lang/Runnable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/Executors.h"
#include "javax/annotation/Nullable.h"

@class ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask;

@interface ComGoogleCommonUtilConcurrentTrustedListenableFutureTask () {
 @public
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *task_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask, task_, ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask__Annotations$0();

@interface ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask : ComGoogleCommonUtilConcurrentInterruptibleTask {
 @public
  __unsafe_unretained ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *this$0_;
  id<JavaUtilConcurrentCallable> callable_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask:(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)outer$
                                                  withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (void)runInterruptibly;

- (jboolean)wasInterrupted;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask)

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask, callable_, id<JavaUtilConcurrentCallable>)

__attribute__((unused)) static void ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *self, ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable);

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *create_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask)

@implementation ComGoogleCommonUtilConcurrentTrustedListenableFutureTask

+ (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)createWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  return ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaUtilConcurrentCallable_(callable);
}

+ (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)createWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                                                  withId:(id)result {
  return ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaLangRunnable_withId_(runnable, result);
}

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(self, callable);
  return self;
}

- (void)run {
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *localTask = task_;
  if (localTask != nil) {
    [localTask run];
  }
}

- (void)afterDone {
  [super afterDone];
  if ([self wasInterrupted]) {
    ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *localTask = task_;
    if (localTask != nil) {
      [localTask interruptTask];
    }
  }
  self->task_ = nil;
}

- (NSString *)description {
  return JreStrcat("$$@C", [super description], @" (delegate = ", task_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask;", 0x8, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask;", 0x8, 0, 3, -1, 4, -1, 5 },
    { NULL, NULL, 0x0, -1, 1, -1, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithJavaUtilConcurrentCallable:);
  methods[1].selector = @selector(createWithJavaLangRunnable:withId:);
  methods[2].selector = @selector(initWithJavaUtilConcurrentCallable:);
  methods[3].selector = @selector(run);
  methods[4].selector = @selector(afterDone);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "task_", "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LJavaUtilConcurrentCallable;", "<V:Ljava/lang/Object;>(Ljava/util/concurrent/Callable<TV;>;)Lcom/google/common/util/concurrent/TrustedListenableFutureTask<TV;>;", "LJavaLangRunnable;LNSObject;", "<V:Ljava/lang/Object;>(Ljava/lang/Runnable;TV;)Lcom/google/common/util/concurrent/TrustedListenableFutureTask<TV;>;", (void *)&ComGoogleCommonUtilConcurrentTrustedListenableFutureTask__Annotations$0, "(Ljava/util/concurrent/Callable<TV;>;)V", "toString", "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask;", "<V:Ljava/lang/Object;>Lcom/google/common/util/concurrent/AbstractFuture$TrustedFuture<TV;>;Ljava/util/concurrent/RunnableFuture<TV;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentTrustedListenableFutureTask = { "TrustedListenableFutureTask", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x0, 6, 1, -1, 8, -1, 9, -1 };
  return &_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask;
}

@end

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initialize();
  return new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(callable);
}

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result) {
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initialize();
  return new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(JavaUtilConcurrentExecutors_callableWithJavaLangRunnable_withId_(runnable, result));
}

void ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *self, id<JavaUtilConcurrentCallable> callable) {
  ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture_init(self);
  self->task_ = new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(self, callable);
}

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask, initWithJavaUtilConcurrentCallable_, callable)
}

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *create_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask, initWithJavaUtilConcurrentCallable_, callable)
}

IOSObjectArray *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask)

@implementation ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask

- (instancetype)initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask:(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)outer$
                                                  withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(self, outer$, callable);
  return self;
}

- (void)runInterruptibly {
  if (![this$0_ isDone]) {
    @try {
      [this$0_ setWithId:[((id<JavaUtilConcurrentCallable>) nil_chk(callable_)) call]];
    }
    @catch (NSException *t) {
      [this$0_ setExceptionWithNSException:t];
    }
  }
}

- (jboolean)wasInterrupted {
  return [this$0_ wasInterrupted];
}

- (NSString *)description {
  return [((id<JavaUtilConcurrentCallable>) nil_chk(callable_)) description];
}

- (void)__javaClone:(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *)original {
  [super __javaClone:original];
  JreRelease(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask:withJavaUtilConcurrentCallable:);
  methods[1].selector = @selector(runInterruptibly);
  methods[2].selector = @selector(wasInterrupted);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "callable_", "LJavaUtilConcurrentCallable;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentCallable;", "(Ljava/util/concurrent/Callable<TV;>;)V", "toString", "Lcom/google/common/util/concurrent/TrustedListenableFutureTask<TV;>;", "Ljava/util/concurrent/Callable<TV;>;", "LComGoogleCommonUtilConcurrentTrustedListenableFutureTask;" };
  static const J2ObjcClassInfo _ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask = { "TrustedFutureInterruptibleTask", "com.google.common.util.concurrent", ptrTable, methods, fields, 7, 0x12, 4, 2, 5, -1, -1, -1, -1 };
  return &_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask;
}

@end

void ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *self, ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable) {
  self->this$0_ = outer$;
  ComGoogleCommonUtilConcurrentInterruptibleTask_init(self);
  self->callable_ = ComGoogleCommonBasePreconditions_checkNotNullWithId_(callable);
}

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_NEW_IMPL(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask, initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_, outer$, callable)
}

ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask *create_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask_initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *outer$, id<JavaUtilConcurrentCallable> callable) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask, initWithComGoogleCommonUtilConcurrentTrustedListenableFutureTask_withJavaUtilConcurrentCallable_, outer$, callable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_TrustedFutureInterruptibleTask)
