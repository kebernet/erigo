//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/UncheckedExecutionException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedExecutionException")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentUncheckedExecutionException
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedExecutionException 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedExecutionException 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentUncheckedExecutionException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentUncheckedExecutionException_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedExecutionException || defined(INCLUDE_ComGoogleCommonUtilConcurrentUncheckedExecutionException))
#define ComGoogleCommonUtilConcurrentUncheckedExecutionException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface ComGoogleCommonUtilConcurrentUncheckedExecutionException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;
#define withJavaLangThrowable withNSException

- (instancetype)initWithNSException:(NSException *)cause;
#define initWithJavaLangThrowable initWithNSException

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentUncheckedExecutionException)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedExecutionException_init(ComGoogleCommonUtilConcurrentUncheckedExecutionException *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *create_ComGoogleCommonUtilConcurrentUncheckedExecutionException_init();

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_(ComGoogleCommonUtilConcurrentUncheckedExecutionException *self, NSString *message);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *create_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_withNSException_(ComGoogleCommonUtilConcurrentUncheckedExecutionException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *create_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSException_(ComGoogleCommonUtilConcurrentUncheckedExecutionException *self, NSException *cause);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *new_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedExecutionException *create_ComGoogleCommonUtilConcurrentUncheckedExecutionException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentUncheckedExecutionException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedExecutionException")
