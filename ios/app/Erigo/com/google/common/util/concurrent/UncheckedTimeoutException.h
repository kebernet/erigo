//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/com/google/common/util/concurrent/UncheckedTimeoutException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedTimeoutException")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentUncheckedTimeoutException
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedTimeoutException 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedTimeoutException 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentUncheckedTimeoutException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentUncheckedTimeoutException_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedTimeoutException || defined(INCLUDE_ComGoogleCommonUtilConcurrentUncheckedTimeoutException))
#define ComGoogleCommonUtilConcurrentUncheckedTimeoutException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface ComGoogleCommonUtilConcurrentUncheckedTimeoutException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;
#define withJavaLangThrowable withNSException

- (instancetype)initWithNSException:(NSException *)cause;
#define initWithJavaLangThrowable initWithNSException

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentUncheckedTimeoutException)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedTimeoutException_init(ComGoogleCommonUtilConcurrentUncheckedTimeoutException *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *new_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *create_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_init();

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_(ComGoogleCommonUtilConcurrentUncheckedTimeoutException *self, NSString *message);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *new_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *create_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSException_(ComGoogleCommonUtilConcurrentUncheckedTimeoutException *self, NSException *cause);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *new_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *create_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSException_(NSException *cause);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_withNSException_(ComGoogleCommonUtilConcurrentUncheckedTimeoutException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *new_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentUncheckedTimeoutException *create_ComGoogleCommonUtilConcurrentUncheckedTimeoutException_initWithNSString_withNSException_(NSString *message, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentUncheckedTimeoutException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentUncheckedTimeoutException")
