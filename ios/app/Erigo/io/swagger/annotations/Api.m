//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/io/swagger/annotations/Api.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/swagger/annotations/Api.h"
#include "io/swagger/annotations/Authorization.h"
#include "io/swagger/annotations/AuthorizationScope.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Inherited.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *IoSwaggerAnnotationsApi__Annotations$0();

@implementation IoSwaggerAnnotationsApi

@synthesize value = value_;
@synthesize tags = tags_;
@synthesize description__ = description___;
@synthesize basePath = basePath_;
@synthesize position = position_;
@synthesize produces = produces_;
@synthesize consumes = consumes_;
@synthesize protocols = protocols_;
@synthesize authorizations = authorizations_;
@synthesize hidden = hidden_;

+ (NSString *)valueDefault {
  return @"";
}

+ (IOSObjectArray *)tagsDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ @"" } count:1 type:NSString_class_()];
}

+ (NSString *)description__Default {
  return @"";
}

+ (NSString *)basePathDefault {
  return @"";
}

+ (jint)positionDefault {
  return 0;
}

+ (NSString *)producesDefault {
  return @"";
}

+ (NSString *)consumesDefault {
  return @"";
}

+ (NSString *)protocolsDefault {
  return @"";
}

+ (IOSObjectArray *)authorizationsDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsAuthorization([IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsAuthorizationScope(@"", @"") } count:1 type:IoSwaggerAnnotationsAuthorizationScope_class_()], @"") } count:1 type:IoSwaggerAnnotationsAuthorization_class_()];
}

+ (jboolean)hiddenDefault {
  return false;
}

- (IOSClass *)annotationType {
  return IoSwaggerAnnotationsApi_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@io.swagger.annotations.Api(value=%@, tags=%@, description__=%@, basePath=%@, position=%d, produces=%@, consumes=%@, protocols=%@, authorizations=%@, hidden=%d)", value_, tags_, description___, basePath_, position_, produces_, consumes_, protocols_, authorizations_, hidden_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIoSwaggerAnnotationsAuthorization;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(tags);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(basePath);
  methods[4].selector = @selector(position);
  methods[5].selector = @selector(produces);
  methods[6].selector = @selector(consumes);
  methods[7].selector = @selector(protocols);
  methods[8].selector = @selector(authorizations);
  methods[9].selector = @selector(hidden);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "tags_", "[LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "description___", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "basePath_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "produces_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "consumes_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "protocols_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "authorizations_", "[LIoSwaggerAnnotationsAuthorization;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "hidden_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&IoSwaggerAnnotationsApi__Annotations$0 };
  static const J2ObjcClassInfo _IoSwaggerAnnotationsApi = { "Api", "io.swagger.annotations", ptrTable, methods, fields, 7, 0x2609, 10, 10, -1, -1, -1, -1, 0 };
  return &_IoSwaggerAnnotationsApi;
}

@end

id<IoSwaggerAnnotationsApi> create_IoSwaggerAnnotationsApi(IOSObjectArray *authorizations, NSString *basePath, NSString *consumes, NSString *description__, jboolean hidden, jint position, NSString *produces, NSString *protocols, IOSObjectArray *tags, NSString *value) {
  IoSwaggerAnnotationsApi *self = AUTORELEASE([[IoSwaggerAnnotationsApi alloc] init]);
  self->authorizations_ = RETAIN_(authorizations);
  self->basePath_ = RETAIN_(basePath);
  self->consumes_ = RETAIN_(consumes);
  self->description___ = RETAIN_(description__);
  self->hidden_ = hidden;
  self->position_ = position;
  self->produces_ = RETAIN_(produces);
  self->protocols_ = RETAIN_(protocols);
  self->tags_ = RETAIN_(tags);
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *IoSwaggerAnnotationsApi__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationInherited() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoSwaggerAnnotationsApi)
