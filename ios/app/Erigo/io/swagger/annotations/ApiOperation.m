//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/io/swagger/annotations/ApiOperation.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/swagger/annotations/ApiOperation.h"
#include "io/swagger/annotations/Authorization.h"
#include "io/swagger/annotations/AuthorizationScope.h"
#include "io/swagger/annotations/Extension.h"
#include "io/swagger/annotations/ExtensionProperty.h"
#include "io/swagger/annotations/ResponseHeader.h"
#include "java/lang/Void.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *IoSwaggerAnnotationsApiOperation__Annotations$0();

@implementation IoSwaggerAnnotationsApiOperation

@synthesize value = value_;
@synthesize notes = notes_;
@synthesize tags = tags_;
@synthesize response = response_;
@synthesize responseContainer = responseContainer_;
@synthesize responseReference = responseReference_;
@synthesize httpMethod = httpMethod_;
@synthesize position = position_;
@synthesize nickname = nickname_;
@synthesize produces = produces_;
@synthesize consumes = consumes_;
@synthesize protocols = protocols_;
@synthesize authorizations = authorizations_;
@synthesize hidden = hidden_;
@synthesize responseHeaders = responseHeaders_;
@synthesize code = code_;
@synthesize extensions = extensions_;

+ (NSString *)notesDefault {
  return @"";
}

+ (IOSObjectArray *)tagsDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ @"" } count:1 type:NSString_class_()];
}

+ (IOSClass *)responseDefault {
  return JavaLangVoid_class_();
}

+ (NSString *)responseContainerDefault {
  return @"";
}

+ (NSString *)responseReferenceDefault {
  return @"";
}

+ (NSString *)httpMethodDefault {
  return @"";
}

+ (jint)positionDefault {
  return 0;
}

+ (NSString *)nicknameDefault {
  return @"";
}

+ (NSString *)producesDefault {
  return @"";
}

+ (NSString *)consumesDefault {
  return @"";
}

+ (NSString *)protocolsDefault {
  return @"";
}

+ (IOSObjectArray *)authorizationsDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsAuthorization([IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsAuthorizationScope(@"", @"") } count:1 type:IoSwaggerAnnotationsAuthorizationScope_class_()], @"") } count:1 type:IoSwaggerAnnotationsAuthorization_class_()];
}

+ (jboolean)hiddenDefault {
  return false;
}

+ (IOSObjectArray *)responseHeadersDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsResponseHeader(@"", @"", JavaLangVoid_class_(), @"") } count:1 type:IoSwaggerAnnotationsResponseHeader_class_()];
}

+ (jint)codeDefault {
  return 200;
}

+ (IOSObjectArray *)extensionsDefault {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsExtension(@"", [IOSObjectArray newArrayWithObjects:(id[]){ create_IoSwaggerAnnotationsExtensionProperty(@"", @"") } count:1 type:IoSwaggerAnnotationsExtensionProperty_class_()]) } count:1 type:IoSwaggerAnnotationsExtension_class_()];
}

- (IOSClass *)annotationType {
  return IoSwaggerAnnotationsApiOperation_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@io.swagger.annotations.ApiOperation(value=%@, notes=%@, tags=%@, response=%@, responseContainer=%@, responseReference=%@, httpMethod=%@, position=%d, nickname=%@, produces=%@, consumes=%@, protocols=%@, authorizations=%@, hidden=%d, responseHeaders=%@, code=%d, extensions=%@)", value_, notes_, tags_, response_, responseContainer_, responseReference_, httpMethod_, position_, nickname_, produces_, consumes_, protocols_, authorizations_, hidden_, responseHeaders_, code_, extensions_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIoSwaggerAnnotationsAuthorization;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIoSwaggerAnnotationsResponseHeader;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIoSwaggerAnnotationsExtension;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(notes);
  methods[2].selector = @selector(tags);
  methods[3].selector = @selector(response);
  methods[4].selector = @selector(responseContainer);
  methods[5].selector = @selector(responseReference);
  methods[6].selector = @selector(httpMethod);
  methods[7].selector = @selector(position);
  methods[8].selector = @selector(nickname);
  methods[9].selector = @selector(produces);
  methods[10].selector = @selector(consumes);
  methods[11].selector = @selector(protocols);
  methods[12].selector = @selector(authorizations);
  methods[13].selector = @selector(hidden);
  methods[14].selector = @selector(responseHeaders);
  methods[15].selector = @selector(code);
  methods[16].selector = @selector(extensions);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "notes_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "tags_", "[LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "response_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
    { "responseContainer_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "responseReference_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "httpMethod_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "nickname_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "produces_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "consumes_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "protocols_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "authorizations_", "[LIoSwaggerAnnotationsAuthorization;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "hidden_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "responseHeaders_", "[LIoSwaggerAnnotationsResponseHeader;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "code_", "I", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "extensions_", "[LIoSwaggerAnnotationsExtension;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Ljava/lang/Class<*>;", (void *)&IoSwaggerAnnotationsApiOperation__Annotations$0 };
  static const J2ObjcClassInfo _IoSwaggerAnnotationsApiOperation = { "ApiOperation", "io.swagger.annotations", ptrTable, methods, fields, 7, 0x2609, 17, 17, -1, -1, -1, -1, 1 };
  return &_IoSwaggerAnnotationsApiOperation;
}

@end

id<IoSwaggerAnnotationsApiOperation> create_IoSwaggerAnnotationsApiOperation(IOSObjectArray *authorizations, jint code, NSString *consumes, IOSObjectArray *extensions, jboolean hidden, NSString *httpMethod, NSString *nickname, NSString *notes, jint position, NSString *produces, NSString *protocols, IOSClass *response, NSString *responseContainer, IOSObjectArray *responseHeaders, NSString *responseReference, IOSObjectArray *tags, NSString *value) {
  IoSwaggerAnnotationsApiOperation *self = AUTORELEASE([[IoSwaggerAnnotationsApiOperation alloc] init]);
  self->authorizations_ = RETAIN_(authorizations);
  self->code_ = code;
  self->consumes_ = RETAIN_(consumes);
  self->extensions_ = RETAIN_(extensions);
  self->hidden_ = hidden;
  self->httpMethod_ = RETAIN_(httpMethod);
  self->nickname_ = RETAIN_(nickname);
  self->notes_ = RETAIN_(notes);
  self->position_ = position;
  self->produces_ = RETAIN_(produces);
  self->protocols_ = RETAIN_(protocols);
  self->response_ = RETAIN_(response);
  self->responseContainer_ = RETAIN_(responseContainer);
  self->responseHeaders_ = RETAIN_(responseHeaders);
  self->responseReference_ = RETAIN_(responseReference);
  self->tags_ = RETAIN_(tags);
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *IoSwaggerAnnotationsApiOperation__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoSwaggerAnnotationsApiOperation)
