//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/io/swagger/annotations/AuthorizationScope.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/swagger/annotations/AuthorizationScope.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *IoSwaggerAnnotationsAuthorizationScope__Annotations$0();

@implementation IoSwaggerAnnotationsAuthorizationScope

@synthesize scope = scope_;
@synthesize description__ = description___;

- (IOSClass *)annotationType {
  return IoSwaggerAnnotationsAuthorizationScope_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@io.swagger.annotations.AuthorizationScope(scope=%@, description__=%@)", scope_, description___];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(scope);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scope_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "description___", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&IoSwaggerAnnotationsAuthorizationScope__Annotations$0 };
  static const J2ObjcClassInfo _IoSwaggerAnnotationsAuthorizationScope = { "AuthorizationScope", "io.swagger.annotations", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, -1, -1, -1, 0 };
  return &_IoSwaggerAnnotationsAuthorizationScope;
}

@end

id<IoSwaggerAnnotationsAuthorizationScope> create_IoSwaggerAnnotationsAuthorizationScope(NSString *description__, NSString *scope) {
  IoSwaggerAnnotationsAuthorizationScope *self = AUTORELEASE([[IoSwaggerAnnotationsAuthorizationScope alloc] init]);
  self->description___ = RETAIN_(description__);
  self->scope_ = RETAIN_(scope);
  return self;
}

IOSObjectArray *IoSwaggerAnnotationsAuthorizationScope__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:1 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoSwaggerAnnotationsAuthorizationScope)
