//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/io/swagger/annotations/OAuth2Definition.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/swagger/annotations/OAuth2Definition.h"
#include "io/swagger/annotations/Scope.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface IoSwaggerAnnotationsOAuth2Definition : NSObject

@end

__attribute__((unused)) static void IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(IoSwaggerAnnotationsOAuth2Definition_Flow *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IoSwaggerAnnotationsOAuth2Definition_Flow *new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation IoSwaggerAnnotationsOAuth2Definition

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoSwaggerAnnotationsOAuth2Definition_Flow;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIoSwaggerAnnotationsScope;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(key);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(flow);
  methods[3].selector = @selector(authorizationUrl);
  methods[4].selector = @selector(tokenUrl);
  methods[5].selector = @selector(scopes);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIoSwaggerAnnotationsOAuth2Definition_Flow;" };
  static const J2ObjcClassInfo _IoSwaggerAnnotationsOAuth2Definition = { "OAuth2Definition", "io.swagger.annotations", ptrTable, methods, NULL, 7, 0x2609, 6, 0, -1, 0, -1, -1, -1 };
  return &_IoSwaggerAnnotationsOAuth2Definition;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoSwaggerAnnotationsOAuth2Definition)

J2OBJC_INITIALIZED_DEFN(IoSwaggerAnnotationsOAuth2Definition_Flow)

IoSwaggerAnnotationsOAuth2Definition_Flow *IoSwaggerAnnotationsOAuth2Definition_Flow_values_[4];

@implementation IoSwaggerAnnotationsOAuth2Definition_Flow

+ (IOSObjectArray *)values {
  return IoSwaggerAnnotationsOAuth2Definition_Flow_values();
}

+ (IoSwaggerAnnotationsOAuth2Definition_Flow *)valueOfWithNSString:(NSString *)name {
  return IoSwaggerAnnotationsOAuth2Definition_Flow_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIoSwaggerAnnotationsOAuth2Definition_Flow;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoSwaggerAnnotationsOAuth2Definition_Flow;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IMPLICIT", "LIoSwaggerAnnotationsOAuth2Definition_Flow;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "ACCESS_CODE", "LIoSwaggerAnnotationsOAuth2Definition_Flow;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PASSWORD", "LIoSwaggerAnnotationsOAuth2Definition_Flow;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "APPLICATION", "LIoSwaggerAnnotationsOAuth2Definition_Flow;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, IMPLICIT), &JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, ACCESS_CODE), &JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, PASSWORD), &JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, APPLICATION), "LIoSwaggerAnnotationsOAuth2Definition;", "Ljava/lang/Enum<Lio/swagger/annotations/OAuth2Definition$Flow;>;" };
  static const J2ObjcClassInfo _IoSwaggerAnnotationsOAuth2Definition_Flow = { "Flow", "io.swagger.annotations", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
  return &_IoSwaggerAnnotationsOAuth2Definition_Flow;
}

+ (void)initialize {
  if (self == [IoSwaggerAnnotationsOAuth2Definition_Flow class]) {
    JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, IMPLICIT) = new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(@"IMPLICIT", 0);
    JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, ACCESS_CODE) = new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(@"ACCESS_CODE", 1);
    JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, PASSWORD) = new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(@"PASSWORD", 2);
    JreEnum(IoSwaggerAnnotationsOAuth2Definition_Flow, APPLICATION) = new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(@"APPLICATION", 3);
    J2OBJC_SET_INITIALIZED(IoSwaggerAnnotationsOAuth2Definition_Flow)
  }
}

@end

void IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(IoSwaggerAnnotationsOAuth2Definition_Flow *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IoSwaggerAnnotationsOAuth2Definition_Flow *new_IoSwaggerAnnotationsOAuth2Definition_Flow_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(IoSwaggerAnnotationsOAuth2Definition_Flow, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *IoSwaggerAnnotationsOAuth2Definition_Flow_values() {
  IoSwaggerAnnotationsOAuth2Definition_Flow_initialize();
  return [IOSObjectArray arrayWithObjects:IoSwaggerAnnotationsOAuth2Definition_Flow_values_ count:4 type:IoSwaggerAnnotationsOAuth2Definition_Flow_class_()];
}

IoSwaggerAnnotationsOAuth2Definition_Flow *IoSwaggerAnnotationsOAuth2Definition_Flow_valueOfWithNSString_(NSString *name) {
  IoSwaggerAnnotationsOAuth2Definition_Flow_initialize();
  for (int i = 0; i < 4; i++) {
    IoSwaggerAnnotationsOAuth2Definition_Flow *e = IoSwaggerAnnotationsOAuth2Definition_Flow_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoSwaggerAnnotationsOAuth2Definition_Flow *IoSwaggerAnnotationsOAuth2Definition_Flow_fromOrdinal(NSUInteger ordinal) {
  IoSwaggerAnnotationsOAuth2Definition_Flow_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return IoSwaggerAnnotationsOAuth2Definition_Flow_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoSwaggerAnnotationsOAuth2Definition_Flow)
