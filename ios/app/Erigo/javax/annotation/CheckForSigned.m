//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/annotation/CheckForSigned.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/Documented.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "javax/annotation/CheckForSigned.h"
#include "javax/annotation/Nonnegative.h"
#include "javax/annotation/meta/When.h"

__attribute__((unused)) static IOSObjectArray *JavaxAnnotationCheckForSigned__Annotations$0();

@implementation JavaxAnnotationCheckForSigned

- (IOSClass *)annotationType {
  return JavaxAnnotationCheckForSigned_class_();
}

- (NSString *)description {
  return @"@javax.annotation.CheckForSigned()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { (void *)&JavaxAnnotationCheckForSigned__Annotations$0 };
  static const J2ObjcClassInfo _JavaxAnnotationCheckForSigned = { "CheckForSigned", "javax.annotation", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
  return &_JavaxAnnotationCheckForSigned;
}

@end

id<JavaxAnnotationCheckForSigned> create_JavaxAnnotationCheckForSigned() {
  JavaxAnnotationCheckForSigned *self = AUTORELEASE([[JavaxAnnotationCheckForSigned alloc] init]);
  return self;
}

IOSObjectArray *JavaxAnnotationCheckForSigned__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaxAnnotationNonnegative(JreLoadEnum(JavaxAnnotationMetaWhen, MAYBE)), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(JavaxAnnotationCheckForSigned)
