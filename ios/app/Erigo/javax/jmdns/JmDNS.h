//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/JmDNS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsJmDNS")
#ifdef RESTRICT_JavaxJmdnsJmDNS
#define INCLUDE_ALL_JavaxJmdnsJmDNS 0
#else
#define INCLUDE_ALL_JavaxJmdnsJmDNS 1
#endif
#undef RESTRICT_JavaxJmdnsJmDNS

#if !defined (JavaxJmdnsJmDNS_) && (INCLUDE_ALL_JavaxJmdnsJmDNS || defined(INCLUDE_JavaxJmdnsJmDNS))
#define JavaxJmdnsJmDNS_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaxJmdnsServiceInfo;
@protocol JavaUtilMap;
@protocol JavaxJmdnsJmDNS_Delegate;
@protocol JavaxJmdnsServiceListener;
@protocol JavaxJmdnsServiceTypeListener;

@interface JavaxJmdnsJmDNS : NSObject < JavaIoCloseable >

#pragma mark Public

- (instancetype)init;

- (void)addServiceListenerWithNSString:(NSString *)type
         withJavaxJmdnsServiceListener:(id<JavaxJmdnsServiceListener>)listener;

- (void)addServiceTypeListenerWithJavaxJmdnsServiceTypeListener:(id<JavaxJmdnsServiceTypeListener>)listener;

+ (JavaxJmdnsJmDNS *)create;

+ (JavaxJmdnsJmDNS *)createWithJavaNetInetAddress:(JavaNetInetAddress *)addr;

+ (JavaxJmdnsJmDNS *)createWithJavaNetInetAddress:(JavaNetInetAddress *)addr
                                     withNSString:(NSString *)name;

+ (JavaxJmdnsJmDNS *)createWithNSString:(NSString *)name;

- (id<JavaxJmdnsJmDNS_Delegate>)getDelegate;

- (NSString *)getHostName;

- (JavaNetInetAddress *)getInterface;

- (NSString *)getName;

- (JavaxJmdnsServiceInfo *)getServiceInfoWithNSString:(NSString *)type
                                         withNSString:(NSString *)name;

- (JavaxJmdnsServiceInfo *)getServiceInfoWithNSString:(NSString *)type
                                         withNSString:(NSString *)name
                                          withBoolean:(jboolean)persistent;

- (JavaxJmdnsServiceInfo *)getServiceInfoWithNSString:(NSString *)type
                                         withNSString:(NSString *)name
                                          withBoolean:(jboolean)persistent
                                             withLong:(jlong)timeout;

- (JavaxJmdnsServiceInfo *)getServiceInfoWithNSString:(NSString *)type
                                         withNSString:(NSString *)name
                                             withLong:(jlong)timeout;

- (IOSObjectArray *)listWithNSString:(NSString *)type;

- (IOSObjectArray *)listWithNSString:(NSString *)type
                            withLong:(jlong)timeout;

- (id<JavaUtilMap>)listBySubtypeWithNSString:(NSString *)type;

- (id<JavaUtilMap>)listBySubtypeWithNSString:(NSString *)type
                                    withLong:(jlong)timeout;

- (void)printServices;

- (void)registerServiceWithJavaxJmdnsServiceInfo:(JavaxJmdnsServiceInfo *)info;

- (jboolean)registerServiceTypeWithNSString:(NSString *)type;

- (void)removeServiceListenerWithNSString:(NSString *)type
            withJavaxJmdnsServiceListener:(id<JavaxJmdnsServiceListener>)listener;

- (void)removeServiceTypeListenerWithJavaxJmdnsServiceTypeListener:(id<JavaxJmdnsServiceTypeListener>)listener;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                           withBoolean:(jboolean)persistent;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                           withBoolean:(jboolean)persistent
                              withLong:(jlong)timeout;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                              withLong:(jlong)timeout;

- (id<JavaxJmdnsJmDNS_Delegate>)setDelegateWithJavaxJmdnsJmDNS_Delegate:(id<JavaxJmdnsJmDNS_Delegate>)value;

- (void)unregisterAllServices;

- (void)unregisterServiceWithJavaxJmdnsServiceInfo:(JavaxJmdnsServiceInfo *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsJmDNS)

inline NSString *JavaxJmdnsJmDNS_get_VERSION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxJmdnsJmDNS_VERSION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxJmdnsJmDNS, VERSION, NSString *)

FOUNDATION_EXPORT void JavaxJmdnsJmDNS_init(JavaxJmdnsJmDNS *self);

FOUNDATION_EXPORT JavaxJmdnsJmDNS *JavaxJmdnsJmDNS_create();

FOUNDATION_EXPORT JavaxJmdnsJmDNS *JavaxJmdnsJmDNS_createWithJavaNetInetAddress_(JavaNetInetAddress *addr);

FOUNDATION_EXPORT JavaxJmdnsJmDNS *JavaxJmdnsJmDNS_createWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaxJmdnsJmDNS *JavaxJmdnsJmDNS_createWithJavaNetInetAddress_withNSString_(JavaNetInetAddress *addr, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsJmDNS)

#endif

#if !defined (JavaxJmdnsJmDNS_Delegate_) && (INCLUDE_ALL_JavaxJmdnsJmDNS || defined(INCLUDE_JavaxJmdnsJmDNS_Delegate))
#define JavaxJmdnsJmDNS_Delegate_

@class JavaxJmdnsJmDNS;
@protocol JavaUtilCollection;

@protocol JavaxJmdnsJmDNS_Delegate < JavaObject >

- (void)cannotRecoverFromIOErrorWithJavaxJmdnsJmDNS:(JavaxJmdnsJmDNS *)dns
                             withJavaUtilCollection:(id<JavaUtilCollection>)infos;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsJmDNS_Delegate)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsJmDNS_Delegate)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsJmDNS")
