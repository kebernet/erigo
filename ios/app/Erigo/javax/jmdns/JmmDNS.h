//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/JmmDNS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsJmmDNS")
#ifdef RESTRICT_JavaxJmdnsJmmDNS
#define INCLUDE_ALL_JavaxJmdnsJmmDNS 0
#else
#define INCLUDE_ALL_JavaxJmdnsJmmDNS 1
#endif
#undef RESTRICT_JavaxJmdnsJmmDNS

#if !defined (JavaxJmdnsJmmDNS_) && (INCLUDE_ALL_JavaxJmdnsJmmDNS || defined(INCLUDE_JavaxJmdnsJmmDNS))
#define JavaxJmdnsJmmDNS_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSObjectArray;
@class JavaxJmdnsServiceInfo;
@protocol JavaUtilMap;
@protocol JavaxJmdnsNetworkTopologyListener;
@protocol JavaxJmdnsServiceListener;
@protocol JavaxJmdnsServiceTypeListener;

@protocol JavaxJmdnsJmmDNS < JavaIoCloseable, JavaObject >

- (IOSObjectArray *)getNames;

- (IOSObjectArray *)getHostNames;

- (IOSObjectArray *)getInterfaces;

- (IOSObjectArray *)getServiceInfosWithNSString:(NSString *)type
                                   withNSString:(NSString *)name;

- (IOSObjectArray *)getServiceInfosWithNSString:(NSString *)type
                                   withNSString:(NSString *)name
                                       withLong:(jlong)timeout;

- (IOSObjectArray *)getServiceInfosWithNSString:(NSString *)type
                                   withNSString:(NSString *)name
                                    withBoolean:(jboolean)persistent;

- (IOSObjectArray *)getServiceInfosWithNSString:(NSString *)type
                                   withNSString:(NSString *)name
                                    withBoolean:(jboolean)persistent
                                       withLong:(jlong)timeout;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                           withBoolean:(jboolean)persistent;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                              withLong:(jlong)timeout;

- (void)requestServiceInfoWithNSString:(NSString *)type
                          withNSString:(NSString *)name
                           withBoolean:(jboolean)persistent
                              withLong:(jlong)timeout;

- (void)addServiceTypeListenerWithJavaxJmdnsServiceTypeListener:(id<JavaxJmdnsServiceTypeListener>)listener;

- (void)removeServiceTypeListenerWithJavaxJmdnsServiceTypeListener:(id<JavaxJmdnsServiceTypeListener>)listener;

- (void)addServiceListenerWithNSString:(NSString *)type
         withJavaxJmdnsServiceListener:(id<JavaxJmdnsServiceListener>)listener;

- (void)removeServiceListenerWithNSString:(NSString *)type
            withJavaxJmdnsServiceListener:(id<JavaxJmdnsServiceListener>)listener;

- (void)registerServiceWithJavaxJmdnsServiceInfo:(JavaxJmdnsServiceInfo *)info;

- (void)unregisterServiceWithJavaxJmdnsServiceInfo:(JavaxJmdnsServiceInfo *)info;

- (void)unregisterAllServices;

- (void)registerServiceTypeWithNSString:(NSString *)type;

- (IOSObjectArray *)listWithNSString:(NSString *)type;

- (IOSObjectArray *)listWithNSString:(NSString *)type
                            withLong:(jlong)timeout;

- (id<JavaUtilMap>)listBySubtypeWithNSString:(NSString *)type;

- (id<JavaUtilMap>)listBySubtypeWithNSString:(NSString *)type
                                    withLong:(jlong)timeout;

- (void)addNetworkTopologyListenerWithJavaxJmdnsNetworkTopologyListener:(id<JavaxJmdnsNetworkTopologyListener>)listener;

- (void)removeNetworkTopologyListenerWithJavaxJmdnsNetworkTopologyListener:(id<JavaxJmdnsNetworkTopologyListener>)listener;

- (IOSObjectArray *)networkListeners;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsJmmDNS)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsJmmDNS)

#endif

#if !defined (JavaxJmdnsJmmDNS_Factory_) && (INCLUDE_ALL_JavaxJmdnsJmmDNS || defined(INCLUDE_JavaxJmdnsJmmDNS_Factory))
#define JavaxJmdnsJmmDNS_Factory_

@protocol JavaxJmdnsJmmDNS;
@protocol JavaxJmdnsJmmDNS_Factory_ClassDelegate;

@interface JavaxJmdnsJmmDNS_Factory : NSObject

#pragma mark Public

+ (id<JavaxJmdnsJmmDNS_Factory_ClassDelegate>)classDelegate;

+ (id<JavaxJmdnsJmmDNS>)getInstance;

+ (void)setClassDelegateWithJavaxJmdnsJmmDNS_Factory_ClassDelegate:(id<JavaxJmdnsJmmDNS_Factory_ClassDelegate>)delegate;

#pragma mark Protected

+ (id<JavaxJmdnsJmmDNS>)newJmmDNS OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsJmmDNS_Factory)

FOUNDATION_EXPORT void JavaxJmdnsJmmDNS_Factory_setClassDelegateWithJavaxJmdnsJmmDNS_Factory_ClassDelegate_(id<JavaxJmdnsJmmDNS_Factory_ClassDelegate> delegate);

FOUNDATION_EXPORT id<JavaxJmdnsJmmDNS_Factory_ClassDelegate> JavaxJmdnsJmmDNS_Factory_classDelegate();

FOUNDATION_EXPORT id<JavaxJmdnsJmmDNS> JavaxJmdnsJmmDNS_Factory_newJmmDNS();

FOUNDATION_EXPORT id<JavaxJmdnsJmmDNS> JavaxJmdnsJmmDNS_Factory_getInstance();

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsJmmDNS_Factory)

#endif

#if !defined (JavaxJmdnsJmmDNS_Factory_ClassDelegate_) && (INCLUDE_ALL_JavaxJmdnsJmmDNS || defined(INCLUDE_JavaxJmdnsJmmDNS_Factory_ClassDelegate))
#define JavaxJmdnsJmmDNS_Factory_ClassDelegate_

@protocol JavaxJmdnsJmmDNS;

@protocol JavaxJmdnsJmmDNS_Factory_ClassDelegate < JavaObject >

- (id<JavaxJmdnsJmmDNS>)newJmmDNS OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsJmmDNS_Factory_ClassDelegate)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsJmmDNS_Factory_ClassDelegate)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsJmmDNS")
