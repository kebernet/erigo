//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/NetworkTopologyDiscovery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery")
#ifdef RESTRICT_JavaxJmdnsNetworkTopologyDiscovery
#define INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery 0
#else
#define INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery 1
#endif
#undef RESTRICT_JavaxJmdnsNetworkTopologyDiscovery

#if !defined (JavaxJmdnsNetworkTopologyDiscovery_) && (INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery || defined(INCLUDE_JavaxJmdnsNetworkTopologyDiscovery))
#define JavaxJmdnsNetworkTopologyDiscovery_

@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaNetNetworkInterface;

@protocol JavaxJmdnsNetworkTopologyDiscovery < JavaObject >

- (IOSObjectArray *)getInetAddresses;

- (jboolean)useInetAddressWithJavaNetNetworkInterface:(JavaNetNetworkInterface *)networkInterface
                               withJavaNetInetAddress:(JavaNetInetAddress *)interfaceAddress;

- (void)lockInetAddressWithJavaNetInetAddress:(JavaNetInetAddress *)interfaceAddress;

- (void)unlockInetAddressWithJavaNetInetAddress:(JavaNetInetAddress *)interfaceAddress;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsNetworkTopologyDiscovery)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsNetworkTopologyDiscovery)

#endif

#if !defined (JavaxJmdnsNetworkTopologyDiscovery_Factory_) && (INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery || defined(INCLUDE_JavaxJmdnsNetworkTopologyDiscovery_Factory))
#define JavaxJmdnsNetworkTopologyDiscovery_Factory_

@protocol JavaxJmdnsNetworkTopologyDiscovery;
@protocol JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate;

@interface JavaxJmdnsNetworkTopologyDiscovery_Factory : NSObject

#pragma mark Public

+ (id<JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate>)classDelegate;

+ (id<JavaxJmdnsNetworkTopologyDiscovery>)getInstance;

+ (void)setClassDelegateWithJavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate:(id<JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate>)delegate;

#pragma mark Protected

+ (id<JavaxJmdnsNetworkTopologyDiscovery>)newNetworkTopologyDiscovery OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsNetworkTopologyDiscovery_Factory)

FOUNDATION_EXPORT void JavaxJmdnsNetworkTopologyDiscovery_Factory_setClassDelegateWithJavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate_(id<JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate> delegate);

FOUNDATION_EXPORT id<JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate> JavaxJmdnsNetworkTopologyDiscovery_Factory_classDelegate();

FOUNDATION_EXPORT id<JavaxJmdnsNetworkTopologyDiscovery> JavaxJmdnsNetworkTopologyDiscovery_Factory_newNetworkTopologyDiscovery();

FOUNDATION_EXPORT id<JavaxJmdnsNetworkTopologyDiscovery> JavaxJmdnsNetworkTopologyDiscovery_Factory_getInstance();

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsNetworkTopologyDiscovery_Factory)

#endif

#if !defined (JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate_) && (INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery || defined(INCLUDE_JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate))
#define JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate_

@protocol JavaxJmdnsNetworkTopologyDiscovery;

@protocol JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate < JavaObject >

- (id<JavaxJmdnsNetworkTopologyDiscovery>)newNetworkTopologyDiscovery OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsNetworkTopologyDiscovery_Factory_ClassDelegate)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsNetworkTopologyDiscovery")
