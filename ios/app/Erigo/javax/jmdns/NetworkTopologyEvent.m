//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/NetworkTopologyEvent.java
//

#include "J2ObjC_source.h"
#include "java/net/InetAddress.h"
#include "java/util/EventObject.h"
#include "javax/jmdns/JmDNS.h"
#include "javax/jmdns/NetworkTopologyEvent.h"

inline jlong JavaxJmdnsNetworkTopologyEvent_get_serialVersionUID();
#define JavaxJmdnsNetworkTopologyEvent_serialVersionUID -8630033521752540987LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsNetworkTopologyEvent, serialVersionUID, jlong)

@implementation JavaxJmdnsNetworkTopologyEvent

- (instancetype)initWithId:(id)eventSource {
  JavaxJmdnsNetworkTopologyEvent_initWithId_(self, eventSource);
  return self;
}

- (JavaxJmdnsJmDNS *)getDNS {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaNetInetAddress *)getInetAddress {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsJmDNS;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(getDNS);
  methods[2].selector = @selector(getInetAddress);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = JavaxJmdnsNetworkTopologyEvent_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;" };
  static const J2ObjcClassInfo _JavaxJmdnsNetworkTopologyEvent = { "NetworkTopologyEvent", "javax.jmdns", ptrTable, methods, fields, 7, 0x401, 3, 1, -1, -1, -1, -1, -1 };
  return &_JavaxJmdnsNetworkTopologyEvent;
}

@end

void JavaxJmdnsNetworkTopologyEvent_initWithId_(JavaxJmdnsNetworkTopologyEvent *self, id eventSource) {
  JavaUtilEventObject_initWithId_(self, eventSource);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxJmdnsNetworkTopologyEvent)
