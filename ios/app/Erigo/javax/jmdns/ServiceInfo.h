//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/ServiceInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsServiceInfo")
#ifdef RESTRICT_JavaxJmdnsServiceInfo
#define INCLUDE_ALL_JavaxJmdnsServiceInfo 0
#else
#define INCLUDE_ALL_JavaxJmdnsServiceInfo 1
#endif
#undef RESTRICT_JavaxJmdnsServiceInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxJmdnsServiceInfo_) && (INCLUDE_ALL_JavaxJmdnsServiceInfo || defined(INCLUDE_JavaxJmdnsServiceInfo))
#define JavaxJmdnsServiceInfo_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaNetInet4Address;
@class JavaNetInet6Address;
@class JavaNetInetAddress;
@protocol JavaUtilEnumeration;
@protocol JavaUtilMap;

@interface JavaxJmdnsServiceInfo : NSObject < NSCopying >

#pragma mark Public

- (instancetype)init;

- (JavaxJmdnsServiceInfo *)java_clone;

+ (JavaxJmdnsServiceInfo *)createWithJavaUtilMap:(id<JavaUtilMap>)qualifiedNameMap
                                         withInt:(jint)port
                                         withInt:(jint)weight
                                         withInt:(jint)priority
                                     withBoolean:(jboolean)persistent
                                 withJavaUtilMap:(id<JavaUtilMap>)props;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                                withByteArray:(IOSByteArray *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                              withJavaUtilMap:(id<JavaUtilMap>)props;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                                 withNSString:(NSString *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                withByteArray:(IOSByteArray *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                              withJavaUtilMap:(id<JavaUtilMap>)props;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                 withNSString:(NSString *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                      withInt:(jint)port
                                 withNSString:(NSString *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                                withByteArray:(IOSByteArray *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                              withJavaUtilMap:(id<JavaUtilMap>)props;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                  withBoolean:(jboolean)persistent
                                 withNSString:(NSString *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                withByteArray:(IOSByteArray *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                              withJavaUtilMap:(id<JavaUtilMap>)props;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                      withInt:(jint)weight
                                      withInt:(jint)priority
                                 withNSString:(NSString *)text;

+ (JavaxJmdnsServiceInfo *)createWithNSString:(NSString *)type
                                 withNSString:(NSString *)name
                                 withNSString:(NSString *)subtype
                                      withInt:(jint)port
                                 withNSString:(NSString *)text;

- (JavaNetInetAddress *)getAddress;

- (NSString *)getApplication;

- (NSString *)getDomain;

- (NSString *)getHostAddress;

- (IOSObjectArray *)getHostAddresses;

- (JavaNetInet4Address *)getInet4Address;

- (IOSObjectArray *)getInet4Addresses;

- (JavaNetInet6Address *)getInet6Address;

- (IOSObjectArray *)getInet6Addresses;

- (JavaNetInetAddress *)getInetAddress;

- (IOSObjectArray *)getInetAddresses;

- (NSString *)getKey;

- (NSString *)getName;

- (NSString *)getNiceTextString;

- (jint)getPort;

- (jint)getPriority;

- (IOSByteArray *)getPropertyBytesWithNSString:(NSString *)name;

- (id<JavaUtilEnumeration>)getPropertyNames;

- (NSString *)getPropertyStringWithNSString:(NSString *)name;

- (NSString *)getProtocol;

- (NSString *)getQualifiedName;

- (id<JavaUtilMap>)getQualifiedNameMap;

- (NSString *)getServer;

- (NSString *)getSubtype;

- (IOSByteArray *)getTextBytes;

- (NSString *)getTextString;

- (NSString *)getType;

- (NSString *)getTypeWithSubtype;

- (NSString *)getURL;

- (NSString *)getURLWithNSString:(NSString *)protocol;

- (IOSObjectArray *)getURLs;

- (IOSObjectArray *)getURLsWithNSString:(NSString *)protocol;

- (jint)getWeight;

- (jboolean)hasData;

- (jboolean)isPersistent;

- (void)setTextWithByteArray:(IOSByteArray *)text;

- (void)setTextWithJavaUtilMap:(id<JavaUtilMap>)props;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsServiceInfo)

inline IOSByteArray *JavaxJmdnsServiceInfo_get_NO_VALUE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *JavaxJmdnsServiceInfo_NO_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxJmdnsServiceInfo, NO_VALUE, IOSByteArray *)

FOUNDATION_EXPORT void JavaxJmdnsServiceInfo_init(JavaxJmdnsServiceInfo *self);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withNSString_(NSString *type, NSString *name, jint port, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withNSString_(NSString *type, NSString *name, NSString *subtype, jint port, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withNSString_(NSString *type, NSString *name, jint port, jint weight, jint priority, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withNSString_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withJavaUtilMap_(NSString *type, NSString *name, jint port, jint weight, jint priority, id<JavaUtilMap> props);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withJavaUtilMap_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, id<JavaUtilMap> props);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withByteArray_(NSString *type, NSString *name, jint port, jint weight, jint priority, IOSByteArray *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withByteArray_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, IOSByteArray *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withBoolean_withNSString_(NSString *type, NSString *name, jint port, jint weight, jint priority, jboolean persistent, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withBoolean_withNSString_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, jboolean persistent, NSString *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withBoolean_withJavaUtilMap_(NSString *type, NSString *name, jint port, jint weight, jint priority, jboolean persistent, id<JavaUtilMap> props);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withBoolean_withJavaUtilMap_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, jboolean persistent, id<JavaUtilMap> props);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withInt_withInt_withInt_withBoolean_withByteArray_(NSString *type, NSString *name, jint port, jint weight, jint priority, jboolean persistent, IOSByteArray *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithNSString_withNSString_withNSString_withInt_withInt_withInt_withBoolean_withByteArray_(NSString *type, NSString *name, NSString *subtype, jint port, jint weight, jint priority, jboolean persistent, IOSByteArray *text);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo *JavaxJmdnsServiceInfo_createWithJavaUtilMap_withInt_withInt_withInt_withBoolean_withJavaUtilMap_(id<JavaUtilMap> qualifiedNameMap, jint port, jint weight, jint priority, jboolean persistent, id<JavaUtilMap> props);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsServiceInfo)

#endif

#if !defined (JavaxJmdnsServiceInfo_Fields_) && (INCLUDE_ALL_JavaxJmdnsServiceInfo || defined(INCLUDE_JavaxJmdnsServiceInfo_Fields))
#define JavaxJmdnsServiceInfo_Fields_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, JavaxJmdnsServiceInfo_Fields_Enum) {
  JavaxJmdnsServiceInfo_Fields_Enum_Domain = 0,
  JavaxJmdnsServiceInfo_Fields_Enum_Protocol = 1,
  JavaxJmdnsServiceInfo_Fields_Enum_Application = 2,
  JavaxJmdnsServiceInfo_Fields_Enum_Instance = 3,
  JavaxJmdnsServiceInfo_Fields_Enum_Subtype = 4,
};

@interface JavaxJmdnsServiceInfo_Fields : JavaLangEnum < NSCopying >

#pragma mark Public

+ (JavaxJmdnsServiceInfo_Fields *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsServiceInfo_Fields)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_values_[];

inline JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_get_Domain();
J2OBJC_ENUM_CONSTANT(JavaxJmdnsServiceInfo_Fields, Domain)

inline JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_get_Protocol();
J2OBJC_ENUM_CONSTANT(JavaxJmdnsServiceInfo_Fields, Protocol)

inline JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_get_Application();
J2OBJC_ENUM_CONSTANT(JavaxJmdnsServiceInfo_Fields, Application)

inline JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_get_Instance();
J2OBJC_ENUM_CONSTANT(JavaxJmdnsServiceInfo_Fields, Instance)

inline JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_get_Subtype();
J2OBJC_ENUM_CONSTANT(JavaxJmdnsServiceInfo_Fields, Subtype)

FOUNDATION_EXPORT IOSObjectArray *JavaxJmdnsServiceInfo_Fields_values();

FOUNDATION_EXPORT JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaxJmdnsServiceInfo_Fields *JavaxJmdnsServiceInfo_Fields_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsServiceInfo_Fields)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsServiceInfo")
