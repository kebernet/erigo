//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/DNSMessage.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplDNSMessage")
#ifdef RESTRICT_JavaxJmdnsImplDNSMessage
#define INCLUDE_ALL_JavaxJmdnsImplDNSMessage 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplDNSMessage 1
#endif
#undef RESTRICT_JavaxJmdnsImplDNSMessage

#if !defined (JavaxJmdnsImplDNSMessage_) && (INCLUDE_ALL_JavaxJmdnsImplDNSMessage || defined(INCLUDE_JavaxJmdnsImplDNSMessage))
#define JavaxJmdnsImplDNSMessage_

@class IOSByteArray;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface JavaxJmdnsImplDNSMessage : NSObject {
 @public
  jboolean _multicast_;
  id<JavaUtilList> _questions_;
  id<JavaUtilList> _answers_;
  id<JavaUtilList> _authoritativeAnswers_;
  id<JavaUtilList> _additionals_;
}

#pragma mark Public

- (id<JavaUtilCollection>)getAdditionals;

- (id<JavaUtilCollection>)getAllAnswers;

- (id<JavaUtilCollection>)getAnswers;

- (id<JavaUtilCollection>)getAuthorities;

- (jint)getFlags;

- (jint)getId;

- (jint)getNumberOfAdditionals;

- (jint)getNumberOfAnswers;

- (jint)getNumberOfAuthorities;

- (jint)getNumberOfQuestions;

- (id<JavaUtilCollection>)getQuestions;

- (jboolean)isEmpty;

- (jboolean)isMulticast;

- (jboolean)isQuery;

- (jboolean)isResponse;

- (jboolean)isTruncated;

- (void)setFlagsWithInt:(jint)flags;

- (void)setIdWithInt:(jint)id_;

#pragma mark Protected

- (instancetype)initWithInt:(jint)flags
                    withInt:(jint)id_
                withBoolean:(jboolean)multicast;

- (NSString *)printWithByteArray:(IOSByteArray *)data;

#pragma mark Package-Private

- (NSString *)print;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsImplDNSMessage)

J2OBJC_FIELD_SETTER(JavaxJmdnsImplDNSMessage, _questions_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(JavaxJmdnsImplDNSMessage, _answers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(JavaxJmdnsImplDNSMessage, _authoritativeAnswers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(JavaxJmdnsImplDNSMessage, _additionals_, id<JavaUtilList>)

inline jboolean JavaxJmdnsImplDNSMessage_get_MULTICAST();
#define JavaxJmdnsImplDNSMessage_MULTICAST true
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplDNSMessage, MULTICAST, jboolean)

inline jboolean JavaxJmdnsImplDNSMessage_get_UNICAST();
#define JavaxJmdnsImplDNSMessage_UNICAST false
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplDNSMessage, UNICAST, jboolean)

FOUNDATION_EXPORT void JavaxJmdnsImplDNSMessage_initWithInt_withInt_withBoolean_(JavaxJmdnsImplDNSMessage *self, jint flags, jint id_, jboolean multicast);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplDNSMessage)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplDNSMessage")
