//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/DNSQuestion.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplDNSQuestion")
#ifdef RESTRICT_JavaxJmdnsImplDNSQuestion
#define INCLUDE_ALL_JavaxJmdnsImplDNSQuestion 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplDNSQuestion 1
#endif
#undef RESTRICT_JavaxJmdnsImplDNSQuestion

#if !defined (JavaxJmdnsImplDNSQuestion_) && (INCLUDE_ALL_JavaxJmdnsImplDNSQuestion || defined(INCLUDE_JavaxJmdnsImplDNSQuestion))
#define JavaxJmdnsImplDNSQuestion_

#define RESTRICT_JavaxJmdnsImplDNSEntry 1
#define INCLUDE_JavaxJmdnsImplDNSEntry 1
#include "javax/jmdns/impl/DNSEntry.h"

@class JavaLangStringBuilder;
@class JavaxJmdnsImplConstantsDNSRecordClass;
@class JavaxJmdnsImplConstantsDNSRecordType;
@class JavaxJmdnsImplJmDNSImpl;
@class JavaxJmdnsImplServiceInfoImpl;
@protocol JavaUtilSet;

@interface JavaxJmdnsImplDNSQuestion : JavaxJmdnsImplDNSEntry

#pragma mark Public

- (void)addAnswersWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)jmDNSImpl
                              withJavaUtilSet:(id<JavaUtilSet>)answers;

- (jboolean)iAmTheOnlyOneWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)jmDNSImpl;

- (jboolean)isExpiredWithLong:(jlong)now;

- (jboolean)isStaleWithLong:(jlong)now;

+ (JavaxJmdnsImplDNSQuestion *)newQuestionWithNSString:(NSString *)name
              withJavaxJmdnsImplConstantsDNSRecordType:(JavaxJmdnsImplConstantsDNSRecordType *)type
             withJavaxJmdnsImplConstantsDNSRecordClass:(JavaxJmdnsImplConstantsDNSRecordClass *)recordClass
                                           withBoolean:(jboolean)unique OBJC_METHOD_FAMILY_NONE;

- (void)toStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)aLog;

#pragma mark Protected

- (void)addAnswersForServiceInfoWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)jmDNSImpl
                                            withJavaUtilSet:(id<JavaUtilSet>)answers
                          withJavaxJmdnsImplServiceInfoImpl:(JavaxJmdnsImplServiceInfoImpl *)info;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)name
withJavaxJmdnsImplConstantsDNSRecordType:(JavaxJmdnsImplConstantsDNSRecordType *)type
withJavaxJmdnsImplConstantsDNSRecordClass:(JavaxJmdnsImplConstantsDNSRecordClass *)recordClass
                     withBoolean:(jboolean)unique;

- (jboolean)answeredByWithJavaxJmdnsImplDNSEntry:(JavaxJmdnsImplDNSEntry *)rec;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplDNSQuestion)

FOUNDATION_EXPORT void JavaxJmdnsImplDNSQuestion_initWithNSString_withJavaxJmdnsImplConstantsDNSRecordType_withJavaxJmdnsImplConstantsDNSRecordClass_withBoolean_(JavaxJmdnsImplDNSQuestion *self, NSString *name, JavaxJmdnsImplConstantsDNSRecordType *type, JavaxJmdnsImplConstantsDNSRecordClass *recordClass, jboolean unique);

FOUNDATION_EXPORT JavaxJmdnsImplDNSQuestion *new_JavaxJmdnsImplDNSQuestion_initWithNSString_withJavaxJmdnsImplConstantsDNSRecordType_withJavaxJmdnsImplConstantsDNSRecordClass_withBoolean_(NSString *name, JavaxJmdnsImplConstantsDNSRecordType *type, JavaxJmdnsImplConstantsDNSRecordClass *recordClass, jboolean unique) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplDNSQuestion *create_JavaxJmdnsImplDNSQuestion_initWithNSString_withJavaxJmdnsImplConstantsDNSRecordType_withJavaxJmdnsImplConstantsDNSRecordClass_withBoolean_(NSString *name, JavaxJmdnsImplConstantsDNSRecordType *type, JavaxJmdnsImplConstantsDNSRecordClass *recordClass, jboolean unique);

FOUNDATION_EXPORT JavaxJmdnsImplDNSQuestion *JavaxJmdnsImplDNSQuestion_newQuestionWithNSString_withJavaxJmdnsImplConstantsDNSRecordType_withJavaxJmdnsImplConstantsDNSRecordClass_withBoolean_(NSString *name, JavaxJmdnsImplConstantsDNSRecordType *type, JavaxJmdnsImplConstantsDNSRecordClass *recordClass, jboolean unique);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplDNSQuestion)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplDNSQuestion")
