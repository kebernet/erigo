//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/DNSStatefulObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject")
#ifdef RESTRICT_JavaxJmdnsImplDNSStatefulObject
#define INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject 1
#endif
#undef RESTRICT_JavaxJmdnsImplDNSStatefulObject
#ifdef INCLUDE_JavaxJmdnsImplDNSStatefulObject_DefaultImplementation
#define INCLUDE_JavaxJmdnsImplDNSStatefulObject 1
#endif

#if !defined (JavaxJmdnsImplDNSStatefulObject_) && (INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject || defined(INCLUDE_JavaxJmdnsImplDNSStatefulObject))
#define JavaxJmdnsImplDNSStatefulObject_

@class JavaxJmdnsImplConstantsDNSState;
@class JavaxJmdnsImplJmDNSImpl;
@class JavaxJmdnsImplTasksDNSTask;

@protocol JavaxJmdnsImplDNSStatefulObject < JavaObject >

- (JavaxJmdnsImplJmDNSImpl *)getDns;

- (void)associateWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task
                    withJavaxJmdnsImplConstantsDNSState:(JavaxJmdnsImplConstantsDNSState *)state;

- (void)removeAssociationWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task;

- (jboolean)isAssociatedWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task
                           withJavaxJmdnsImplConstantsDNSState:(JavaxJmdnsImplConstantsDNSState *)state;

- (jboolean)advanceStateWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task;

- (jboolean)revertState;

- (jboolean)cancelState;

- (jboolean)closeState;

- (jboolean)recoverState;

- (jboolean)isProbing;

- (jboolean)isAnnouncing;

- (jboolean)isAnnounced;

- (jboolean)isCanceling;

- (jboolean)isCanceled;

- (jboolean)isClosing;

- (jboolean)isClosed;

- (jboolean)waitForAnnouncedWithLong:(jlong)timeout;

- (jboolean)waitForCanceledWithLong:(jlong)timeout;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsImplDNSStatefulObject)

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplDNSStatefulObject)

#endif

#if !defined (JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore_) && (INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject || defined(INCLUDE_JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore))
#define JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore_

@interface JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name;

- (void)signalEvent;

- (NSString *)description;

- (void)waitForEventWithLong:(jlong)timeout;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore)

FOUNDATION_EXPORT void JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore_initWithNSString_(JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore *self, NSString *name);

FOUNDATION_EXPORT JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore *new_JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore *create_JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore_initWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplDNSStatefulObject_DNSStatefulObjectSemaphore)

#endif

#if !defined (JavaxJmdnsImplDNSStatefulObject_DefaultImplementation_) && (INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject || defined(INCLUDE_JavaxJmdnsImplDNSStatefulObject_DefaultImplementation))
#define JavaxJmdnsImplDNSStatefulObject_DefaultImplementation_

#define RESTRICT_JavaUtilConcurrentLocksReentrantLock 1
#define INCLUDE_JavaUtilConcurrentLocksReentrantLock 1
#include "java/util/concurrent/locks/ReentrantLock.h"

@class JavaxJmdnsImplConstantsDNSState;
@class JavaxJmdnsImplJmDNSImpl;
@class JavaxJmdnsImplTasksDNSTask;

@interface JavaxJmdnsImplDNSStatefulObject_DefaultImplementation : JavaUtilConcurrentLocksReentrantLock < JavaxJmdnsImplDNSStatefulObject > {
 @public
  volatile_id _task_;
  volatile_id _state_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)advanceStateWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task;

- (void)associateWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task
                    withJavaxJmdnsImplConstantsDNSState:(JavaxJmdnsImplConstantsDNSState *)state;

- (jboolean)cancelState;

- (jboolean)closeState;

- (JavaxJmdnsImplJmDNSImpl *)getDns;

- (jboolean)isAnnounced;

- (jboolean)isAnnouncing;

- (jboolean)isAssociatedWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task
                           withJavaxJmdnsImplConstantsDNSState:(JavaxJmdnsImplConstantsDNSState *)state;

- (jboolean)isCanceled;

- (jboolean)isCanceling;

- (jboolean)isClosed;

- (jboolean)isClosing;

- (jboolean)isProbing;

- (jboolean)recoverState;

- (void)removeAssociationWithTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task;

- (jboolean)revertState;

- (NSString *)description;

- (jboolean)waitForAnnouncedWithLong:(jlong)timeout;

- (jboolean)waitForCanceledWithLong:(jlong)timeout;

#pragma mark Protected

- (void)setDnsWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)dns;

- (void)setStateWithJavaxJmdnsImplConstantsDNSState:(JavaxJmdnsImplConstantsDNSState *)state;

- (void)setTaskWithJavaxJmdnsImplTasksDNSTask:(JavaxJmdnsImplTasksDNSTask *)task;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplDNSStatefulObject_DefaultImplementation)

J2OBJC_VOLATILE_FIELD_SETTER(JavaxJmdnsImplDNSStatefulObject_DefaultImplementation, _task_, JavaxJmdnsImplTasksDNSTask *)
J2OBJC_VOLATILE_FIELD_SETTER(JavaxJmdnsImplDNSStatefulObject_DefaultImplementation, _state_, JavaxJmdnsImplConstantsDNSState *)

FOUNDATION_EXPORT void JavaxJmdnsImplDNSStatefulObject_DefaultImplementation_init(JavaxJmdnsImplDNSStatefulObject_DefaultImplementation *self);

FOUNDATION_EXPORT JavaxJmdnsImplDNSStatefulObject_DefaultImplementation *new_JavaxJmdnsImplDNSStatefulObject_DefaultImplementation_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplDNSStatefulObject_DefaultImplementation *create_JavaxJmdnsImplDNSStatefulObject_DefaultImplementation_init();

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplDNSStatefulObject_DefaultImplementation)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplDNSStatefulObject")
