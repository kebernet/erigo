//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/ListenerStatus.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplListenerStatus")
#ifdef RESTRICT_JavaxJmdnsImplListenerStatus
#define INCLUDE_ALL_JavaxJmdnsImplListenerStatus 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplListenerStatus 1
#endif
#undef RESTRICT_JavaxJmdnsImplListenerStatus
#ifdef INCLUDE_JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus
#define INCLUDE_JavaxJmdnsImplListenerStatus 1
#endif
#ifdef INCLUDE_JavaxJmdnsImplListenerStatus_ServiceListenerStatus
#define INCLUDE_JavaxJmdnsImplListenerStatus 1
#endif

#if !defined (JavaxJmdnsImplListenerStatus_) && (INCLUDE_ALL_JavaxJmdnsImplListenerStatus || defined(INCLUDE_JavaxJmdnsImplListenerStatus))
#define JavaxJmdnsImplListenerStatus_

@protocol JavaUtilEventListener;

@interface JavaxJmdnsImplListenerStatus : NSObject

#pragma mark Public

- (instancetype)initWithJavaUtilEventListener:(id<JavaUtilEventListener>)listener
                                  withBoolean:(jboolean)synch;

- (jboolean)isEqual:(id)obj;

- (id<JavaUtilEventListener>)getListener;

- (NSUInteger)hash;

- (jboolean)isSynchronous;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsImplListenerStatus)

inline jboolean JavaxJmdnsImplListenerStatus_get_SYNCHONEOUS();
#define JavaxJmdnsImplListenerStatus_SYNCHONEOUS true
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplListenerStatus, SYNCHONEOUS, jboolean)

inline jboolean JavaxJmdnsImplListenerStatus_get_ASYNCHONEOUS();
#define JavaxJmdnsImplListenerStatus_ASYNCHONEOUS false
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplListenerStatus, ASYNCHONEOUS, jboolean)

FOUNDATION_EXPORT void JavaxJmdnsImplListenerStatus_initWithJavaUtilEventListener_withBoolean_(JavaxJmdnsImplListenerStatus *self, id<JavaUtilEventListener> listener, jboolean synch);

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus *new_JavaxJmdnsImplListenerStatus_initWithJavaUtilEventListener_withBoolean_(id<JavaUtilEventListener> listener, jboolean synch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus *create_JavaxJmdnsImplListenerStatus_initWithJavaUtilEventListener_withBoolean_(id<JavaUtilEventListener> listener, jboolean synch);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplListenerStatus)

#endif

#if !defined (JavaxJmdnsImplListenerStatus_ServiceListenerStatus_) && (INCLUDE_ALL_JavaxJmdnsImplListenerStatus || defined(INCLUDE_JavaxJmdnsImplListenerStatus_ServiceListenerStatus))
#define JavaxJmdnsImplListenerStatus_ServiceListenerStatus_

@class JavaxJmdnsServiceEvent;
@protocol JavaxJmdnsServiceListener;

@interface JavaxJmdnsImplListenerStatus_ServiceListenerStatus : JavaxJmdnsImplListenerStatus

#pragma mark Public

- (instancetype)initWithJavaxJmdnsServiceListener:(id<JavaxJmdnsServiceListener>)listener
                                      withBoolean:(jboolean)synch;

- (id<JavaxJmdnsServiceListener>)getListener;

- (NSString *)description;

#pragma mark Package-Private

- (void)serviceAddedWithJavaxJmdnsServiceEvent:(JavaxJmdnsServiceEvent *)event;

- (void)serviceRemovedWithJavaxJmdnsServiceEvent:(JavaxJmdnsServiceEvent *)event;

- (void)serviceResolvedWithJavaxJmdnsServiceEvent:(JavaxJmdnsServiceEvent *)event;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplListenerStatus_ServiceListenerStatus)

FOUNDATION_EXPORT void JavaxJmdnsImplListenerStatus_ServiceListenerStatus_initWithJavaxJmdnsServiceListener_withBoolean_(JavaxJmdnsImplListenerStatus_ServiceListenerStatus *self, id<JavaxJmdnsServiceListener> listener, jboolean synch);

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus_ServiceListenerStatus *new_JavaxJmdnsImplListenerStatus_ServiceListenerStatus_initWithJavaxJmdnsServiceListener_withBoolean_(id<JavaxJmdnsServiceListener> listener, jboolean synch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus_ServiceListenerStatus *create_JavaxJmdnsImplListenerStatus_ServiceListenerStatus_initWithJavaxJmdnsServiceListener_withBoolean_(id<JavaxJmdnsServiceListener> listener, jboolean synch);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplListenerStatus_ServiceListenerStatus)

#endif

#if !defined (JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus_) && (INCLUDE_ALL_JavaxJmdnsImplListenerStatus || defined(INCLUDE_JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus))
#define JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus_

@class JavaxJmdnsServiceEvent;
@protocol JavaxJmdnsServiceTypeListener;

@interface JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus : JavaxJmdnsImplListenerStatus

#pragma mark Public

- (instancetype)initWithJavaxJmdnsServiceTypeListener:(id<JavaxJmdnsServiceTypeListener>)listener
                                          withBoolean:(jboolean)synch;

- (id<JavaxJmdnsServiceTypeListener>)getListener;

- (NSString *)description;

#pragma mark Package-Private

- (void)serviceTypeAddedWithJavaxJmdnsServiceEvent:(JavaxJmdnsServiceEvent *)event;

- (void)subTypeForServiceTypeAddedWithJavaxJmdnsServiceEvent:(JavaxJmdnsServiceEvent *)event;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus)

FOUNDATION_EXPORT void JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus_initWithJavaxJmdnsServiceTypeListener_withBoolean_(JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus *self, id<JavaxJmdnsServiceTypeListener> listener, jboolean synch);

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus *new_JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus_initWithJavaxJmdnsServiceTypeListener_withBoolean_(id<JavaxJmdnsServiceTypeListener> listener, jboolean synch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus *create_JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus_initWithJavaxJmdnsServiceTypeListener_withBoolean_(id<JavaxJmdnsServiceTypeListener> listener, jboolean synch);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplListenerStatus_ServiceTypeListenerStatus)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplListenerStatus")
