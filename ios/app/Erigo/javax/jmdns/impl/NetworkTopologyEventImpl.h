//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/NetworkTopologyEventImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplNetworkTopologyEventImpl")
#ifdef RESTRICT_JavaxJmdnsImplNetworkTopologyEventImpl
#define INCLUDE_ALL_JavaxJmdnsImplNetworkTopologyEventImpl 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplNetworkTopologyEventImpl 1
#endif
#undef RESTRICT_JavaxJmdnsImplNetworkTopologyEventImpl

#if !defined (JavaxJmdnsImplNetworkTopologyEventImpl_) && (INCLUDE_ALL_JavaxJmdnsImplNetworkTopologyEventImpl || defined(INCLUDE_JavaxJmdnsImplNetworkTopologyEventImpl))
#define JavaxJmdnsImplNetworkTopologyEventImpl_

#define RESTRICT_JavaxJmdnsNetworkTopologyEvent 1
#define INCLUDE_JavaxJmdnsNetworkTopologyEvent 1
#include "javax/jmdns/NetworkTopologyEvent.h"

@class JavaNetInetAddress;
@class JavaxJmdnsJmDNS;
@protocol JavaxJmdnsNetworkTopologyListener;

@interface JavaxJmdnsImplNetworkTopologyEventImpl : JavaxJmdnsNetworkTopologyEvent < NSCopying >

#pragma mark Public

- (instancetype)initWithJavaxJmdnsJmDNS:(JavaxJmdnsJmDNS *)jmDNS
                 withJavaNetInetAddress:(JavaNetInetAddress *)inetAddress;

- (JavaxJmdnsImplNetworkTopologyEventImpl *)java_clone;

- (JavaxJmdnsJmDNS *)getDNS;

- (JavaNetInetAddress *)getInetAddress;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaxJmdnsNetworkTopologyListener:(id<JavaxJmdnsNetworkTopologyListener>)jmmDNS
                                   withJavaNetInetAddress:(JavaNetInetAddress *)inetAddress;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsImplNetworkTopologyEventImpl)

FOUNDATION_EXPORT void JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsJmDNS_withJavaNetInetAddress_(JavaxJmdnsImplNetworkTopologyEventImpl *self, JavaxJmdnsJmDNS *jmDNS, JavaNetInetAddress *inetAddress);

FOUNDATION_EXPORT JavaxJmdnsImplNetworkTopologyEventImpl *new_JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsJmDNS_withJavaNetInetAddress_(JavaxJmdnsJmDNS *jmDNS, JavaNetInetAddress *inetAddress) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplNetworkTopologyEventImpl *create_JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsJmDNS_withJavaNetInetAddress_(JavaxJmdnsJmDNS *jmDNS, JavaNetInetAddress *inetAddress);

FOUNDATION_EXPORT void JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsNetworkTopologyListener_withJavaNetInetAddress_(JavaxJmdnsImplNetworkTopologyEventImpl *self, id<JavaxJmdnsNetworkTopologyListener> jmmDNS, JavaNetInetAddress *inetAddress);

FOUNDATION_EXPORT JavaxJmdnsImplNetworkTopologyEventImpl *new_JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsNetworkTopologyListener_withJavaNetInetAddress_(id<JavaxJmdnsNetworkTopologyListener> jmmDNS, JavaNetInetAddress *inetAddress) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplNetworkTopologyEventImpl *create_JavaxJmdnsImplNetworkTopologyEventImpl_initWithJavaxJmdnsNetworkTopologyListener_withJavaNetInetAddress_(id<JavaxJmdnsNetworkTopologyListener> jmmDNS, JavaNetInetAddress *inetAddress);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplNetworkTopologyEventImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplNetworkTopologyEventImpl")
