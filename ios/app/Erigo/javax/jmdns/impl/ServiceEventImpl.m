//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/ServiceEventImpl.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "javax/jmdns/JmDNS.h"
#include "javax/jmdns/ServiceEvent.h"
#include "javax/jmdns/ServiceInfo.h"
#include "javax/jmdns/impl/JmDNSImpl.h"
#include "javax/jmdns/impl/ServiceEventImpl.h"
#include "javax/jmdns/impl/ServiceInfoImpl.h"

@interface JavaxJmdnsImplServiceEventImpl () {
 @public
  NSString *_type_;
  NSString *_name_;
  JavaxJmdnsServiceInfo *_info_;
}

@end

J2OBJC_FIELD_SETTER(JavaxJmdnsImplServiceEventImpl, _type_, NSString *)
J2OBJC_FIELD_SETTER(JavaxJmdnsImplServiceEventImpl, _name_, NSString *)
J2OBJC_FIELD_SETTER(JavaxJmdnsImplServiceEventImpl, _info_, JavaxJmdnsServiceInfo *)

inline jlong JavaxJmdnsImplServiceEventImpl_get_serialVersionUID();
#define JavaxJmdnsImplServiceEventImpl_serialVersionUID 7107973622016897488LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplServiceEventImpl, serialVersionUID, jlong)

@implementation JavaxJmdnsImplServiceEventImpl

- (instancetype)initWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)jmDNS
                                   withNSString:(NSString *)type
                                   withNSString:(NSString *)name
                      withJavaxJmdnsServiceInfo:(JavaxJmdnsServiceInfo *)info {
  JavaxJmdnsImplServiceEventImpl_initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_(self, jmDNS, type, name, info);
  return self;
}

- (JavaxJmdnsJmDNS *)getDNS {
  return (JavaxJmdnsJmDNS *) cast_chk([self getSource], [JavaxJmdnsJmDNS class]);
}

- (NSString *)getType {
  return _type_;
}

- (NSString *)getName {
  return _name_;
}

- (NSString *)description {
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_init();
  (void) [buf appendWithNSString:JreStrcat("C$CIC", '[', [[self java_getClass] getSimpleName], '@', JavaLangSystem_identityHashCodeWithId_(self), ' ')];
  (void) [buf appendWithNSString:@"\n\tname: '"];
  (void) [buf appendWithNSString:[self getName]];
  (void) [buf appendWithNSString:@"' type: '"];
  (void) [buf appendWithNSString:[self getType]];
  (void) [buf appendWithNSString:@"' info: '"];
  (void) [buf appendWithId:[self getInfo]];
  (void) [buf appendWithNSString:@"']"];
  return [buf description];
}

- (JavaxJmdnsServiceInfo *)getInfo {
  return _info_;
}

- (JavaxJmdnsImplServiceEventImpl *)java_clone {
  JavaxJmdnsImplServiceInfoImpl *newInfo = new_JavaxJmdnsImplServiceInfoImpl_initWithJavaxJmdnsServiceInfo_([self getInfo]);
  return new_JavaxJmdnsImplServiceEventImpl_initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_((JavaxJmdnsImplJmDNSImpl *) cast_chk([self getDNS], [JavaxJmdnsImplJmDNSImpl class]), [self getType], [self getName], newInfo);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsJmDNS;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsServiceInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsImplServiceEventImpl;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaxJmdnsImplJmDNSImpl:withNSString:withNSString:withJavaxJmdnsServiceInfo:);
  methods[1].selector = @selector(getDNS);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getInfo);
  methods[6].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = JavaxJmdnsImplServiceEventImpl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_type_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_info_", "LJavaxJmdnsServiceInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaxJmdnsImplJmDNSImpl;LNSString;LNSString;LJavaxJmdnsServiceInfo;", "toString", "clone" };
  static const J2ObjcClassInfo _JavaxJmdnsImplServiceEventImpl = { "ServiceEventImpl", "javax.jmdns.impl", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_JavaxJmdnsImplServiceEventImpl;
}

@end

void JavaxJmdnsImplServiceEventImpl_initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_(JavaxJmdnsImplServiceEventImpl *self, JavaxJmdnsImplJmDNSImpl *jmDNS, NSString *type, NSString *name, JavaxJmdnsServiceInfo *info) {
  JavaxJmdnsServiceEvent_initWithId_(self, jmDNS);
  self->_type_ = type;
  self->_name_ = name;
  self->_info_ = info;
}

JavaxJmdnsImplServiceEventImpl *new_JavaxJmdnsImplServiceEventImpl_initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_(JavaxJmdnsImplJmDNSImpl *jmDNS, NSString *type, NSString *name, JavaxJmdnsServiceInfo *info) {
  J2OBJC_NEW_IMPL(JavaxJmdnsImplServiceEventImpl, initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_, jmDNS, type, name, info)
}

JavaxJmdnsImplServiceEventImpl *create_JavaxJmdnsImplServiceEventImpl_initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_(JavaxJmdnsImplJmDNSImpl *jmDNS, NSString *type, NSString *name, JavaxJmdnsServiceInfo *info) {
  J2OBJC_CREATE_IMPL(JavaxJmdnsImplServiceEventImpl, initWithJavaxJmdnsImplJmDNSImpl_withNSString_withNSString_withJavaxJmdnsServiceInfo_, jmDNS, type, name, info)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxJmdnsImplServiceEventImpl)
