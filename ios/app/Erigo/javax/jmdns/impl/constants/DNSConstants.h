//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/constants/DNSConstants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplConstantsDNSConstants")
#ifdef RESTRICT_JavaxJmdnsImplConstantsDNSConstants
#define INCLUDE_ALL_JavaxJmdnsImplConstantsDNSConstants 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplConstantsDNSConstants 1
#endif
#undef RESTRICT_JavaxJmdnsImplConstantsDNSConstants

#if !defined (JavaxJmdnsImplConstantsDNSConstants_) && (INCLUDE_ALL_JavaxJmdnsImplConstantsDNSConstants || defined(INCLUDE_JavaxJmdnsImplConstantsDNSConstants))
#define JavaxJmdnsImplConstantsDNSConstants_

@interface JavaxJmdnsImplConstantsDNSConstants : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(JavaxJmdnsImplConstantsDNSConstants)

inline NSString *JavaxJmdnsImplConstantsDNSConstants_get_MDNS_GROUP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxJmdnsImplConstantsDNSConstants_MDNS_GROUP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxJmdnsImplConstantsDNSConstants, MDNS_GROUP, NSString *)

inline NSString *JavaxJmdnsImplConstantsDNSConstants_get_MDNS_GROUP_IPV6();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *JavaxJmdnsImplConstantsDNSConstants_MDNS_GROUP_IPV6;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxJmdnsImplConstantsDNSConstants, MDNS_GROUP_IPV6, NSString *)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_MDNS_PORT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint JavaxJmdnsImplConstantsDNSConstants_MDNS_PORT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(JavaxJmdnsImplConstantsDNSConstants, MDNS_PORT, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_DNS_PORT();
#define JavaxJmdnsImplConstantsDNSConstants_DNS_PORT 53
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, DNS_PORT, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_DNS_TTL();
#define JavaxJmdnsImplConstantsDNSConstants_DNS_TTL 3600
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, DNS_TTL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_MAX_MSG_TYPICAL();
#define JavaxJmdnsImplConstantsDNSConstants_MAX_MSG_TYPICAL 1460
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, MAX_MSG_TYPICAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_MAX_MSG_ABSOLUTE();
#define JavaxJmdnsImplConstantsDNSConstants_MAX_MSG_ABSOLUTE 8972
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, MAX_MSG_ABSOLUTE, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_QR_MASK();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_QR_MASK 32768
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_QR_MASK, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_QR_QUERY();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_QR_QUERY 0
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_QR_QUERY, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_QR_RESPONSE();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_QR_RESPONSE 32768
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_QR_RESPONSE, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_AA();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_AA 1024
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_AA, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_TC();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_TC 512
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_TC, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_RD();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_RD 256
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_RD, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_RA();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_RA 32768
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_RA, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_Z();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_Z 64
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_Z, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_AD();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_AD 32
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_AD, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_FLAGS_CD();
#define JavaxJmdnsImplConstantsDNSConstants_FLAGS_CD 16
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, FLAGS_CD, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_SHARED_QUERY_TIME();
#define JavaxJmdnsImplConstantsDNSConstants_SHARED_QUERY_TIME 20
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, SHARED_QUERY_TIME, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_QUERY_WAIT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_QUERY_WAIT_INTERVAL 225
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, QUERY_WAIT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_PROBE_WAIT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_PROBE_WAIT_INTERVAL 250
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, PROBE_WAIT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_RESPONSE_MIN_WAIT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_RESPONSE_MIN_WAIT_INTERVAL 20
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, RESPONSE_MIN_WAIT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_RESPONSE_MAX_WAIT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_RESPONSE_MAX_WAIT_INTERVAL 115
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, RESPONSE_MAX_WAIT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_PROBE_CONFLICT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_PROBE_CONFLICT_INTERVAL 1000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, PROBE_CONFLICT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_PROBE_THROTTLE_COUNT();
#define JavaxJmdnsImplConstantsDNSConstants_PROBE_THROTTLE_COUNT 10
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, PROBE_THROTTLE_COUNT, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_PROBE_THROTTLE_COUNT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_PROBE_THROTTLE_COUNT_INTERVAL 5000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, PROBE_THROTTLE_COUNT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_ANNOUNCE_WAIT_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_ANNOUNCE_WAIT_INTERVAL 1000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, ANNOUNCE_WAIT_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_RECORD_REAPER_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_RECORD_REAPER_INTERVAL 10000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, RECORD_REAPER_INTERVAL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_RECORD_EXPIRY_DELAY();
#define JavaxJmdnsImplConstantsDNSConstants_RECORD_EXPIRY_DELAY 1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, RECORD_EXPIRY_DELAY, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_KNOWN_ANSWER_TTL();
#define JavaxJmdnsImplConstantsDNSConstants_KNOWN_ANSWER_TTL 120
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, KNOWN_ANSWER_TTL, jint)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_ANNOUNCED_RENEWAL_TTL_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_ANNOUNCED_RENEWAL_TTL_INTERVAL 1800000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, ANNOUNCED_RENEWAL_TTL_INTERVAL, jint)

inline jlong JavaxJmdnsImplConstantsDNSConstants_get_CLOSE_TIMEOUT();
#define JavaxJmdnsImplConstantsDNSConstants_CLOSE_TIMEOUT 5000LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, CLOSE_TIMEOUT, jlong)

inline jlong JavaxJmdnsImplConstantsDNSConstants_get_SERVICE_INFO_TIMEOUT();
#define JavaxJmdnsImplConstantsDNSConstants_SERVICE_INFO_TIMEOUT 6000LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, SERVICE_INFO_TIMEOUT, jlong)

inline jint JavaxJmdnsImplConstantsDNSConstants_get_NETWORK_CHECK_INTERVAL();
#define JavaxJmdnsImplConstantsDNSConstants_NETWORK_CHECK_INTERVAL 10000
J2OBJC_STATIC_FIELD_CONSTANT(JavaxJmdnsImplConstantsDNSConstants, NETWORK_CHECK_INTERVAL, jint)

FOUNDATION_EXPORT void JavaxJmdnsImplConstantsDNSConstants_init(JavaxJmdnsImplConstantsDNSConstants *self);

FOUNDATION_EXPORT JavaxJmdnsImplConstantsDNSConstants *new_JavaxJmdnsImplConstantsDNSConstants_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxJmdnsImplConstantsDNSConstants *create_JavaxJmdnsImplConstantsDNSConstants_init();

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplConstantsDNSConstants)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplConstantsDNSConstants")
