//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/constants/DNSRecordType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/logging/Logger.h"
#include "javax/jmdns/impl/constants/DNSRecordType.h"

@interface JavaxJmdnsImplConstantsDNSRecordType () {
 @public
  NSString *_externalName_;
  jint _index_;
}

@end

J2OBJC_FIELD_SETTER(JavaxJmdnsImplConstantsDNSRecordType, _externalName_, NSString *)

inline JavaUtilLoggingLogger *JavaxJmdnsImplConstantsDNSRecordType_get_logger();
inline JavaUtilLoggingLogger *JavaxJmdnsImplConstantsDNSRecordType_set_logger(JavaUtilLoggingLogger *value);
static JavaUtilLoggingLogger *JavaxJmdnsImplConstantsDNSRecordType_logger;
J2OBJC_STATIC_FIELD_OBJ(JavaxJmdnsImplConstantsDNSRecordType, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static void JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(JavaxJmdnsImplConstantsDNSRecordType *self, NSString *name, jint index, NSString *__name, jint __ordinal);

__attribute__((unused)) static JavaxJmdnsImplConstantsDNSRecordType *new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(NSString *name, jint index, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(JavaxJmdnsImplConstantsDNSRecordType)

JavaxJmdnsImplConstantsDNSRecordType *JavaxJmdnsImplConstantsDNSRecordType_values_[59];

@implementation JavaxJmdnsImplConstantsDNSRecordType

- (NSString *)externalName {
  return _externalName_;
}

- (jint)indexValue {
  return _index_;
}

+ (JavaxJmdnsImplConstantsDNSRecordType *)typeForNameWithNSString:(NSString *)name {
  return JavaxJmdnsImplConstantsDNSRecordType_typeForNameWithNSString_(name);
}

+ (JavaxJmdnsImplConstantsDNSRecordType *)typeForIndexWithInt:(jint)index {
  return JavaxJmdnsImplConstantsDNSRecordType_typeForIndexWithInt_(index);
}

- (NSString *)description {
  return JreStrcat("$$I", [self name], @" index ", [self indexValue]);
}

+ (IOSObjectArray *)values {
  return JavaxJmdnsImplConstantsDNSRecordType_values();
}

+ (JavaxJmdnsImplConstantsDNSRecordType *)valueOfWithNSString:(NSString *)name {
  return JavaxJmdnsImplConstantsDNSRecordType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsImplConstantsDNSRecordType;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsImplConstantsDNSRecordType;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaxJmdnsImplConstantsDNSRecordType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxJmdnsImplConstantsDNSRecordType;", 0x9, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(externalName);
  methods[1].selector = @selector(indexValue);
  methods[2].selector = @selector(typeForNameWithNSString:);
  methods[3].selector = @selector(typeForIndexWithInt:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(values);
  methods[6].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_IGNORE", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "TYPE_A", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "TYPE_NS", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "TYPE_MD", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "TYPE_MF", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "TYPE_CNAME", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "TYPE_SOA", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "TYPE_MB", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "TYPE_MG", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "TYPE_MR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "TYPE_NULL", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "TYPE_WKS", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "TYPE_PTR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 18, -1, -1 },
    { "TYPE_HINFO", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 19, -1, -1 },
    { "TYPE_MINFO", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 20, -1, -1 },
    { "TYPE_MX", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 21, -1, -1 },
    { "TYPE_TXT", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 22, -1, -1 },
    { "TYPE_RP", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 23, -1, -1 },
    { "TYPE_AFSDB", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 24, -1, -1 },
    { "TYPE_X25", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 25, -1, -1 },
    { "TYPE_ISDN", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 26, -1, -1 },
    { "TYPE_RT", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 27, -1, -1 },
    { "TYPE_NSAP", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 28, -1, -1 },
    { "TYPE_NSAP_PTR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 29, -1, -1 },
    { "TYPE_SIG", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 30, -1, -1 },
    { "TYPE_KEY", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 31, -1, -1 },
    { "TYPE_PX", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 32, -1, -1 },
    { "TYPE_GPOS", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 33, -1, -1 },
    { "TYPE_AAAA", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 34, -1, -1 },
    { "TYPE_LOC", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 35, -1, -1 },
    { "TYPE_NXT", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 36, -1, -1 },
    { "TYPE_EID", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 37, -1, -1 },
    { "TYPE_NIMLOC", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 38, -1, -1 },
    { "TYPE_SRV", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 39, -1, -1 },
    { "TYPE_ATMA", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 40, -1, -1 },
    { "TYPE_NAPTR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 41, -1, -1 },
    { "TYPE_KX", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 42, -1, -1 },
    { "TYPE_CERT", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 43, -1, -1 },
    { "TYPE_A6", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 44, -1, -1 },
    { "TYPE_DNAME", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 45, -1, -1 },
    { "TYPE_SINK", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 46, -1, -1 },
    { "TYPE_OPT", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 47, -1, -1 },
    { "TYPE_APL", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 48, -1, -1 },
    { "TYPE_DS", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 49, -1, -1 },
    { "TYPE_SSHFP", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 50, -1, -1 },
    { "TYPE_RRSIG", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 51, -1, -1 },
    { "TYPE_NSEC", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 52, -1, -1 },
    { "TYPE_DNSKEY", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 53, -1, -1 },
    { "TYPE_UINFO", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 54, -1, -1 },
    { "TYPE_UID", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 55, -1, -1 },
    { "TYPE_GID", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 56, -1, -1 },
    { "TYPE_UNSPEC", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 57, -1, -1 },
    { "TYPE_TKEY", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 58, -1, -1 },
    { "TYPE_TSIG", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 59, -1, -1 },
    { "TYPE_IXFR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 60, -1, -1 },
    { "TYPE_AXFR", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 61, -1, -1 },
    { "TYPE_MAILA", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 62, -1, -1 },
    { "TYPE_MAILB", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 63, -1, -1 },
    { "TYPE_ANY", "LJavaxJmdnsImplConstantsDNSRecordType;", .constantValue.asLong = 0, 0x4019, -1, 64, -1, -1 },
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0xa, -1, 65, -1, -1 },
    { "_externalName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_index_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "typeForName", "LNSString;", "typeForIndex", "I", "toString", "valueOf", &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IGNORE), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_A), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NS), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MD), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MF), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_CNAME), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SOA), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MB), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MG), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NULL), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_WKS), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_PTR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_HINFO), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MINFO), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MX), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TXT), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RP), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AFSDB), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_X25), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ISDN), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RT), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSAP), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSAP_PTR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SIG), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_KEY), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_PX), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_GPOS), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AAAA), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_LOC), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NXT), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_EID), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NIMLOC), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SRV), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ATMA), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NAPTR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_KX), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_CERT), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_A6), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DNAME), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SINK), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_OPT), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_APL), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DS), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SSHFP), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RRSIG), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSEC), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DNSKEY), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UINFO), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UID), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_GID), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UNSPEC), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TKEY), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TSIG), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IXFR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AXFR), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MAILA), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MAILB), &JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ANY), &JavaxJmdnsImplConstantsDNSRecordType_logger, "Ljava/lang/Enum<Ljavax/jmdns/impl/constants/DNSRecordType;>;" };
  static const J2ObjcClassInfo _JavaxJmdnsImplConstantsDNSRecordType = { "DNSRecordType", "javax.jmdns.impl.constants", ptrTable, methods, fields, 7, 0x4011, 7, 62, -1, -1, -1, 66, -1 };
  return &_JavaxJmdnsImplConstantsDNSRecordType;
}

+ (void)initialize {
  if (self == [JavaxJmdnsImplConstantsDNSRecordType class]) {
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IGNORE) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"ignore", 0, @"TYPE_IGNORE", 0);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_A) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"a", 1, @"TYPE_A", 1);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NS) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"ns", 2, @"TYPE_NS", 2);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MD) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"md", 3, @"TYPE_MD", 3);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MF) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mf", 4, @"TYPE_MF", 4);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_CNAME) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"cname", 5, @"TYPE_CNAME", 5);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SOA) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"soa", 6, @"TYPE_SOA", 6);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MB) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mb", 7, @"TYPE_MB", 7);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MG) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mg", 8, @"TYPE_MG", 8);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mr", 9, @"TYPE_MR", 9);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NULL) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"null", 10, @"TYPE_NULL", 10);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_WKS) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"wks", 11, @"TYPE_WKS", 11);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_PTR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"ptr", 12, @"TYPE_PTR", 12);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_HINFO) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"hinfo", 13, @"TYPE_HINFO", 13);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MINFO) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"minfo", 14, @"TYPE_MINFO", 14);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MX) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mx", 15, @"TYPE_MX", 15);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TXT) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"txt", 16, @"TYPE_TXT", 16);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RP) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"rp", 17, @"TYPE_RP", 17);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AFSDB) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"afsdb", 18, @"TYPE_AFSDB", 18);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_X25) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"x25", 19, @"TYPE_X25", 19);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ISDN) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"isdn", 20, @"TYPE_ISDN", 20);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RT) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"rt", 21, @"TYPE_RT", 21);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSAP) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"nsap", 22, @"TYPE_NSAP", 22);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSAP_PTR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"nsap-otr", 23, @"TYPE_NSAP_PTR", 23);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SIG) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"sig", 24, @"TYPE_SIG", 24);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_KEY) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"key", 25, @"TYPE_KEY", 25);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_PX) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"px", 26, @"TYPE_PX", 26);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_GPOS) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"gpos", 27, @"TYPE_GPOS", 27);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AAAA) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"aaaa", 28, @"TYPE_AAAA", 28);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_LOC) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"loc", 29, @"TYPE_LOC", 29);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NXT) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"nxt", 30, @"TYPE_NXT", 30);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_EID) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"eid", 31, @"TYPE_EID", 31);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NIMLOC) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"nimloc", 32, @"TYPE_NIMLOC", 32);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SRV) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"srv", 33, @"TYPE_SRV", 33);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ATMA) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"atma", 34, @"TYPE_ATMA", 34);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NAPTR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"naptr", 35, @"TYPE_NAPTR", 35);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_KX) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"kx", 36, @"TYPE_KX", 36);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_CERT) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"cert", 37, @"TYPE_CERT", 37);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_A6) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"a6", 38, @"TYPE_A6", 38);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DNAME) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"dname", 39, @"TYPE_DNAME", 39);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SINK) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"sink", 40, @"TYPE_SINK", 40);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_OPT) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"opt", 41, @"TYPE_OPT", 41);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_APL) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"apl", 42, @"TYPE_APL", 42);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DS) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"ds", 43, @"TYPE_DS", 43);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_SSHFP) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"sshfp", 44, @"TYPE_SSHFP", 44);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_RRSIG) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"rrsig", 46, @"TYPE_RRSIG", 45);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_NSEC) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"nsec", 47, @"TYPE_NSEC", 46);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_DNSKEY) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"dnskey", 48, @"TYPE_DNSKEY", 47);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UINFO) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"uinfo", 100, @"TYPE_UINFO", 48);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UID) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"uid", 101, @"TYPE_UID", 49);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_GID) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"gid", 102, @"TYPE_GID", 50);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_UNSPEC) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"unspec", 103, @"TYPE_UNSPEC", 51);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TKEY) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"tkey", 249, @"TYPE_TKEY", 52);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_TSIG) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"tsig", 250, @"TYPE_TSIG", 53);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IXFR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"ixfr", 251, @"TYPE_IXFR", 54);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_AXFR) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"axfr", 252, @"TYPE_AXFR", 55);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MAILA) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mails", 253, @"TYPE_MAILA", 56);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_MAILB) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"mailb", 254, @"TYPE_MAILB", 57);
    JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_ANY) = new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(@"any", 255, @"TYPE_ANY", 58);
    JavaxJmdnsImplConstantsDNSRecordType_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([JavaxJmdnsImplConstantsDNSRecordType_class_() getName]);
    J2OBJC_SET_INITIALIZED(JavaxJmdnsImplConstantsDNSRecordType)
  }
}

@end

void JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(JavaxJmdnsImplConstantsDNSRecordType *self, NSString *name, jint index, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->_externalName_ = name;
  self->_index_ = index;
}

JavaxJmdnsImplConstantsDNSRecordType *new_JavaxJmdnsImplConstantsDNSRecordType_initWithNSString_withInt_withNSString_withInt_(NSString *name, jint index, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(JavaxJmdnsImplConstantsDNSRecordType, initWithNSString_withInt_withNSString_withInt_, name, index, __name, __ordinal)
}

JavaxJmdnsImplConstantsDNSRecordType *JavaxJmdnsImplConstantsDNSRecordType_typeForNameWithNSString_(NSString *name) {
  JavaxJmdnsImplConstantsDNSRecordType_initialize();
  if (name != nil) {
    NSString *aName = [name lowercaseString];
    {
      IOSObjectArray *a__ = JavaxJmdnsImplConstantsDNSRecordType_values();
      JavaxJmdnsImplConstantsDNSRecordType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaxJmdnsImplConstantsDNSRecordType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaxJmdnsImplConstantsDNSRecordType *aType = *b__++;
        if ([((NSString *) nil_chk(((JavaxJmdnsImplConstantsDNSRecordType *) nil_chk(aType))->_externalName_)) isEqual:aName]) return aType;
      }
    }
  }
  [((JavaUtilLoggingLogger *) nil_chk(JavaxJmdnsImplConstantsDNSRecordType_logger)) severeWithNSString:JreStrcat("$$", @"Could not find record type for name: ", name)];
  return JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IGNORE);
}

JavaxJmdnsImplConstantsDNSRecordType *JavaxJmdnsImplConstantsDNSRecordType_typeForIndexWithInt_(jint index) {
  JavaxJmdnsImplConstantsDNSRecordType_initialize();
  {
    IOSObjectArray *a__ = JavaxJmdnsImplConstantsDNSRecordType_values();
    JavaxJmdnsImplConstantsDNSRecordType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaxJmdnsImplConstantsDNSRecordType * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaxJmdnsImplConstantsDNSRecordType *aType = *b__++;
      if (((JavaxJmdnsImplConstantsDNSRecordType *) nil_chk(aType))->_index_ == index) return aType;
    }
  }
  [((JavaUtilLoggingLogger *) nil_chk(JavaxJmdnsImplConstantsDNSRecordType_logger)) severeWithNSString:JreStrcat("$I", @"Could not find record type for index: ", index)];
  return JreEnum(JavaxJmdnsImplConstantsDNSRecordType, TYPE_IGNORE);
}

IOSObjectArray *JavaxJmdnsImplConstantsDNSRecordType_values() {
  JavaxJmdnsImplConstantsDNSRecordType_initialize();
  return [IOSObjectArray arrayWithObjects:JavaxJmdnsImplConstantsDNSRecordType_values_ count:59 type:JavaxJmdnsImplConstantsDNSRecordType_class_()];
}

JavaxJmdnsImplConstantsDNSRecordType *JavaxJmdnsImplConstantsDNSRecordType_valueOfWithNSString_(NSString *name) {
  JavaxJmdnsImplConstantsDNSRecordType_initialize();
  for (int i = 0; i < 59; i++) {
    JavaxJmdnsImplConstantsDNSRecordType *e = JavaxJmdnsImplConstantsDNSRecordType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

JavaxJmdnsImplConstantsDNSRecordType *JavaxJmdnsImplConstantsDNSRecordType_fromOrdinal(NSUInteger ordinal) {
  JavaxJmdnsImplConstantsDNSRecordType_initialize();
  if (ordinal >= 59) {
    return nil;
  }
  return JavaxJmdnsImplConstantsDNSRecordType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JavaxJmdnsImplConstantsDNSRecordType)
