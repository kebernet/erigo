//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/javax/jmdns/impl/tasks/DNSTask.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxJmdnsImplTasksDNSTask")
#ifdef RESTRICT_JavaxJmdnsImplTasksDNSTask
#define INCLUDE_ALL_JavaxJmdnsImplTasksDNSTask 0
#else
#define INCLUDE_ALL_JavaxJmdnsImplTasksDNSTask 1
#endif
#undef RESTRICT_JavaxJmdnsImplTasksDNSTask

#if !defined (JavaxJmdnsImplTasksDNSTask_) && (INCLUDE_ALL_JavaxJmdnsImplTasksDNSTask || defined(INCLUDE_JavaxJmdnsImplTasksDNSTask))
#define JavaxJmdnsImplTasksDNSTask_

#define RESTRICT_JavaUtilTimerTask 1
#define INCLUDE_JavaUtilTimerTask 1
#include "java/util/TimerTask.h"

@class JavaUtilTimer;
@class JavaxJmdnsImplDNSIncoming;
@class JavaxJmdnsImplDNSOutgoing;
@class JavaxJmdnsImplDNSQuestion;
@class JavaxJmdnsImplDNSRecord;
@class JavaxJmdnsImplJmDNSImpl;

@interface JavaxJmdnsImplTasksDNSTask : JavaUtilTimerTask

#pragma mark Public

- (JavaxJmdnsImplDNSOutgoing *)addAdditionalAnswerWithJavaxJmdnsImplDNSOutgoing:(JavaxJmdnsImplDNSOutgoing *)outArg
                                                  withJavaxJmdnsImplDNSIncoming:(JavaxJmdnsImplDNSIncoming *)inArg
                                                    withJavaxJmdnsImplDNSRecord:(JavaxJmdnsImplDNSRecord *)rec;

- (JavaxJmdnsImplDNSOutgoing *)addAnswerWithJavaxJmdnsImplDNSOutgoing:(JavaxJmdnsImplDNSOutgoing *)outArg
                                        withJavaxJmdnsImplDNSIncoming:(JavaxJmdnsImplDNSIncoming *)inArg
                                          withJavaxJmdnsImplDNSRecord:(JavaxJmdnsImplDNSRecord *)rec;

- (JavaxJmdnsImplDNSOutgoing *)addAnswerWithJavaxJmdnsImplDNSOutgoing:(JavaxJmdnsImplDNSOutgoing *)outArg
                                          withJavaxJmdnsImplDNSRecord:(JavaxJmdnsImplDNSRecord *)rec
                                                             withLong:(jlong)now;

- (JavaxJmdnsImplDNSOutgoing *)addAuthoritativeAnswerWithJavaxJmdnsImplDNSOutgoing:(JavaxJmdnsImplDNSOutgoing *)outArg
                                                       withJavaxJmdnsImplDNSRecord:(JavaxJmdnsImplDNSRecord *)rec;

- (JavaxJmdnsImplDNSOutgoing *)addQuestionWithJavaxJmdnsImplDNSOutgoing:(JavaxJmdnsImplDNSOutgoing *)outArg
                                          withJavaxJmdnsImplDNSQuestion:(JavaxJmdnsImplDNSQuestion *)rec;

- (JavaxJmdnsImplJmDNSImpl *)getDns;

- (NSString *)getName;

- (void)startWithJavaUtilTimer:(JavaUtilTimer *)timer;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithJavaxJmdnsImplJmDNSImpl:(JavaxJmdnsImplJmDNSImpl *)jmDNSImpl;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxJmdnsImplTasksDNSTask)

FOUNDATION_EXPORT void JavaxJmdnsImplTasksDNSTask_initWithJavaxJmdnsImplJmDNSImpl_(JavaxJmdnsImplTasksDNSTask *self, JavaxJmdnsImplJmDNSImpl *jmDNSImpl);

J2OBJC_TYPE_LITERAL_HEADER(JavaxJmdnsImplTasksDNSTask)

#endif

#pragma pop_macro("INCLUDE_ALL_JavaxJmdnsImplTasksDNSTask")
