//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/impl/CertificateTool.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetKebernetConfigurationClientImplCertificateTool")
#ifdef RESTRICT_NetKebernetConfigurationClientImplCertificateTool
#define INCLUDE_ALL_NetKebernetConfigurationClientImplCertificateTool 0
#else
#define INCLUDE_ALL_NetKebernetConfigurationClientImplCertificateTool 1
#endif
#undef RESTRICT_NetKebernetConfigurationClientImplCertificateTool

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetKebernetConfigurationClientImplCertificateTool_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplCertificateTool || defined(INCLUDE_NetKebernetConfigurationClientImplCertificateTool))
#define NetKebernetConfigurationClientImplCertificateTool_

@class JavaSecurityKeyStore;
@protocol JavaUtilList;

@interface NetKebernetConfigurationClientImplCertificateTool : NSObject

#pragma mark Public

- (instancetype)initWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)trustStore;

- (jboolean)addCertificatesForUrlWithNSString:(NSString *)url;

- (jboolean)addCertificatesToKeyStoreWithJavaUtilList:(id<JavaUtilList>)certificates;

- (id<JavaUtilList>)fetchCertificatesForSocketWithNSString:(NSString *)host
                                                   withInt:(jint)port;

- (id<JavaUtilList>)fetchCertificatesForUrlWithNSString:(NSString *)aURL;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplCertificateTool)

FOUNDATION_EXPORT void NetKebernetConfigurationClientImplCertificateTool_initWithJavaSecurityKeyStore_(NetKebernetConfigurationClientImplCertificateTool *self, JavaSecurityKeyStore *trustStore);

FOUNDATION_EXPORT NetKebernetConfigurationClientImplCertificateTool *new_NetKebernetConfigurationClientImplCertificateTool_initWithJavaSecurityKeyStore_(JavaSecurityKeyStore *trustStore) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetKebernetConfigurationClientImplCertificateTool *create_NetKebernetConfigurationClientImplCertificateTool_initWithJavaSecurityKeyStore_(JavaSecurityKeyStore *trustStore);

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplCertificateTool)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetKebernetConfigurationClientImplCertificateTool")
