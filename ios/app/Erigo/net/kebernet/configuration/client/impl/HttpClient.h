//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/impl/HttpClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient")
#ifdef RESTRICT_NetKebernetConfigurationClientImplHttpClient
#define INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient 0
#else
#define INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient 1
#endif
#undef RESTRICT_NetKebernetConfigurationClientImplHttpClient
#ifdef INCLUDE_NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken
#define INCLUDE_NetKebernetConfigurationClientImplHttpClient_AuthenticationToken 1
#endif
#ifdef INCLUDE_NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken
#define INCLUDE_NetKebernetConfigurationClientImplHttpClient_AuthenticationToken 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient))
#define NetKebernetConfigurationClientImplHttpClient_

@class JavaNetURI;
@class JavaSecurityKeyStore;
@protocol JavaUtilFunctionConsumer;
@protocol NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback;
@protocol NetKebernetConfigurationClientImplHttpClient_AuthenticationToken;
@protocol NetKebernetConfigurationClientImplHttpClient_ErrorCallback;

@interface NetKebernetConfigurationClientImplHttpClient : NSObject

#pragma mark Public

- (instancetype)initWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)keyStore
withNetKebernetConfigurationClientImplHttpClient_AuthenticationCallback:(id<NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback>)authenticationCallback;

+ (void)clearCachedAuthentication;

- (void)getToStreamWithNSString:(NSString *)deviceName
                   withNSString:(NSString *)url
withNetKebernetConfigurationClientImplHttpClient_AuthenticationToken:(id<NetKebernetConfigurationClientImplHttpClient_AuthenticationToken>)authenticationToken
   withJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)callback;

- (void)getToStreamWithNSString:(NSString *)deviceName
                   withNSString:(NSString *)url
   withJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)callback;

- (void)setAuthenticationCallbackWithNetKebernetConfigurationClientImplHttpClient_AuthenticationCallback:(id<NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback>)callback;

- (void)setErrorCallbackWithNetKebernetConfigurationClientImplHttpClient_ErrorCallback:(id<NetKebernetConfigurationClientImplHttpClient_ErrorCallback>)callback;

+ (NSString *)uriToKeyWithJavaNetURI:(JavaNetURI *)uri;

@end

J2OBJC_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient)

inline NSString *NetKebernetConfigurationClientImplHttpClient_get_AUTHENTICATION_HEADER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *NetKebernetConfigurationClientImplHttpClient_AUTHENTICATION_HEADER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetKebernetConfigurationClientImplHttpClient, AUTHENTICATION_HEADER, NSString *)

FOUNDATION_EXPORT void NetKebernetConfigurationClientImplHttpClient_initWithJavaSecurityKeyStore_withNetKebernetConfigurationClientImplHttpClient_AuthenticationCallback_(NetKebernetConfigurationClientImplHttpClient *self, JavaSecurityKeyStore *keyStore, id<NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback> authenticationCallback);

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient *new_NetKebernetConfigurationClientImplHttpClient_initWithJavaSecurityKeyStore_withNetKebernetConfigurationClientImplHttpClient_AuthenticationCallback_(JavaSecurityKeyStore *keyStore, id<NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback> authenticationCallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient *create_NetKebernetConfigurationClientImplHttpClient_initWithJavaSecurityKeyStore_withNetKebernetConfigurationClientImplHttpClient_AuthenticationCallback_(JavaSecurityKeyStore *keyStore, id<NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback> authenticationCallback);

FOUNDATION_EXPORT NSString *NetKebernetConfigurationClientImplHttpClient_uriToKeyWithJavaNetURI_(JavaNetURI *uri);

FOUNDATION_EXPORT void NetKebernetConfigurationClientImplHttpClient_clearCachedAuthentication();

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient)

#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback))
#define NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback_

@protocol JavaUtilFunctionConsumer;
@protocol NetKebernetConfigurationClientImplHttpClient_AuthenticationToken;

@protocol NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback < JavaObject >

- (void)authenticationRequiredWithNSString:(NSString *)deviceName
                              withNSString:(NSString *)url
withNetKebernetConfigurationClientImplHttpClient_AuthenticationToken:(id<NetKebernetConfigurationClientImplHttpClient_AuthenticationToken>)previousToken
              withJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback)

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient_AuthenticationCallback)

#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_AuthenticationToken_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient_AuthenticationToken))
#define NetKebernetConfigurationClientImplHttpClient_AuthenticationToken_

@protocol NetKebernetConfigurationClientImplHttpClient_AuthenticationToken < JavaObject >

- (NSString *)getScheme;

- (NSString *)getValue;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient_AuthenticationToken)

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient_AuthenticationToken)

#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_ErrorCallback_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient_ErrorCallback))
#define NetKebernetConfigurationClientImplHttpClient_ErrorCallback_

@protocol NetKebernetConfigurationClientImplHttpClient_ErrorCallback < JavaObject >

- (void)onErrorWithNSString:(NSString *)errorMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient_ErrorCallback)

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient_ErrorCallback)

#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken))
#define NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken_

@interface NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken : NSObject < NetKebernetConfigurationClientImplHttpClient_AuthenticationToken >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)username
                    withNSString:(NSString *)password;

- (jboolean)isEqual:(id)o;

- (NSString *)getPassword;

- (NSString *)getScheme;

- (NSString *)getUsername;

- (NSString *)getValue;

- (NSUInteger)hash;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken)

FOUNDATION_EXPORT void NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken_initWithNSString_withNSString_(NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken *self, NSString *username, NSString *password);

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken *new_NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken_initWithNSString_withNSString_(NSString *username, NSString *password) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken *create_NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken_initWithNSString_withNSString_(NSString *username, NSString *password);

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient_BasicAuthenticationToken)

#endif

#if !defined (NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken_) && (INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient || defined(INCLUDE_NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken))
#define NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken_

@interface NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken : NSObject < NetKebernetConfigurationClientImplHttpClient_AuthenticationToken >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)token;

- (jboolean)isEqual:(id)o;

- (NSString *)getScheme;

- (NSString *)getValue;

- (NSUInteger)hash;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken)

FOUNDATION_EXPORT void NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken_initWithNSString_(NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken *self, NSString *token);

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken *new_NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken_initWithNSString_(NSString *token) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken *create_NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken_initWithNSString_(NSString *token);

J2OBJC_TYPE_LITERAL_HEADER(NetKebernetConfigurationClientImplHttpClient_BearerAuthenticationToken)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NetKebernetConfigurationClientImplHttpClient")
