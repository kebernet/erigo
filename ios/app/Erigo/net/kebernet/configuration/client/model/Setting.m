//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/model/Setting.java
//

#include "J2ObjC_source.h"
#include "net/kebernet/configuration/client/model/Setting.h"

@interface ERMSetting () {
 @public
  NSString *id__;
  NSString *name_;
  NSString *validationExpression_;
  NSString *type_;
}

@end

J2OBJC_FIELD_SETTER(ERMSetting, id__, NSString *)
J2OBJC_FIELD_SETTER(ERMSetting, name_, NSString *)
J2OBJC_FIELD_SETTER(ERMSetting, validationExpression_, NSString *)
J2OBJC_FIELD_SETTER(ERMSetting, type_, NSString *)

@implementation ERMSetting

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ERMSetting_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getId {
  return id__;
}

- (void)setIdWithNSString:(NSString *)id_ {
  self->id__ = id_;
}

- (NSString *)getName {
  return name_;
}

- (void)setNameWithNSString:(NSString *)name {
  self->name_ = name;
}

- (NSString *)getValidationExpression {
  return validationExpression_;
}

- (void)setValidationExpressionWithNSString:(NSString *)validationExpression {
  self->validationExpression_ = validationExpression;
}

- (NSString *)getType {
  return type_;
}

- (void)setTypeWithNSString:(NSString *)type {
  self->type_ = type;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getId);
  methods[2].selector = @selector(setIdWithNSString:);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(setNameWithNSString:);
  methods[5].selector = @selector(getValidationExpression);
  methods[6].selector = @selector(setValidationExpressionWithNSString:);
  methods[7].selector = @selector(getType);
  methods[8].selector = @selector(setTypeWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSString;", .constantValue.asLong = 0, 0x2, 5, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "validationExpression_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "type_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setId", "LNSString;", "setName", "setValidationExpression", "setType", "id" };
  static const J2ObjcClassInfo _ERMSetting = { "Setting", "net.kebernet.configuration.client.model", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_ERMSetting;
}

@end

void ERMSetting_init(ERMSetting *self) {
  NSObject_init(self);
}

ERMSetting *new_ERMSetting_init() {
  J2OBJC_NEW_IMPL(ERMSetting, init)
}

ERMSetting *create_ERMSetting_init() {
  J2OBJC_CREATE_IMPL(ERMSetting, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ERMSetting)
