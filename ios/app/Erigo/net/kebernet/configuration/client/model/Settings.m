//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/model/Settings.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/MoreObjects.h"
#include "com/google/common/base/Objects.h"
#include "java/util/List.h"
#include "net/kebernet/configuration/client/model/Settings.h"

@interface ERMSettings () {
 @public
  NSString *description__;
  id<JavaUtilList> groups_;
}

@end

J2OBJC_FIELD_SETTER(ERMSettings, description__, NSString *)
J2OBJC_FIELD_SETTER(ERMSettings, groups_, id<JavaUtilList>)

@implementation ERMSettings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ERMSettings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getDescription {
  return description__;
}

- (void)setDescriptionWithNSString:(NSString *)description_ {
  self->description__ = description_;
}

- (id<JavaUtilList>)getGroups {
  return groups_;
}

- (void)setGroupsWithJavaUtilList:(id<JavaUtilList>)groups {
  self->groups_ = groups;
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (!([o isKindOfClass:[ERMSettings class]])) return false;
  ERMSettings *settings = (ERMSettings *) cast_chk(o, [ERMSettings class]);
  return GVBObjects_equalWithId_withId_(description__, ((ERMSettings *) nil_chk(settings))->description__) && GVBObjects_equalWithId_withId_(groups_, settings->groups_);
}

- (NSUInteger)hash {
  return GVBObjects_hashCodeWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ description__, groups_ } count:2 type:NSObject_class_()]);
}

- (NSString *)description {
  return [((GVBMoreObjects_ToStringHelper *) nil_chk([((GVBMoreObjects_ToStringHelper *) nil_chk([((GVBMoreObjects_ToStringHelper *) nil_chk(GVBMoreObjects_toStringHelperWithId_(self))) addWithNSString:@"description" withId:description__])) addWithNSString:@"groups" withId:groups_])) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDescription);
  methods[2].selector = @selector(setDescriptionWithNSString:);
  methods[3].selector = @selector(getGroups);
  methods[4].selector = @selector(setGroupsWithJavaUtilList:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x2, 10, -1, -1, -1 },
    { "groups_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "setDescription", "LNSString;", "()Ljava/util/List<Lnet/kebernet/configuration/client/model/Group;>;", "setGroups", "LJavaUtilList;", "(Ljava/util/List<Lnet/kebernet/configuration/client/model/Group;>;)V", "equals", "LNSObject;", "hashCode", "toString", "description", "Ljava/util/List<Lnet/kebernet/configuration/client/model/Group;>;" };
  static const J2ObjcClassInfo _ERMSettings = { "Settings", "net.kebernet.configuration.client.model", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_ERMSettings;
}

@end

void ERMSettings_init(ERMSettings *self) {
  NSObject_init(self);
}

ERMSettings *new_ERMSettings_init() {
  J2OBJC_NEW_IMPL(ERMSettings, init)
}

ERMSettings *create_ERMSettings_init() {
  J2OBJC_CREATE_IMPL(ERMSettings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ERMSettings)
