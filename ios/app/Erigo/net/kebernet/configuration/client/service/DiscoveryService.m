//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/service/DiscoveryService.java
//

#include "J2ObjC_source.h"
#include "net/kebernet/configuration/client/service/DiscoveryService.h"

@interface ERSDiscoveryService : NSObject

@end

@interface ERSDiscoveryService_DeviceListCallback : NSObject

@end

@interface ERSDiscoveryService_ErrorCallback : NSObject

@end

@implementation ERSDiscoveryService

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(listenForDevicesWithERSDiscoveryService_DeviceListCallback:);
  methods[1].selector = @selector(listKnownDevicesWithERSDiscoveryService_DeviceListCallback:);
  methods[2].selector = @selector(setErrorCallbackWithERSDiscoveryService_ErrorCallback:);
  methods[3].selector = @selector(refresh);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "listenForDevices", "LERSDiscoveryService_DeviceListCallback;", "listKnownDevices", "setErrorCallback", "LERSDiscoveryService_ErrorCallback;", "LERSDiscoveryService_DeviceListCallback;LERSDiscoveryService_ErrorCallback;" };
  static const J2ObjcClassInfo _ERSDiscoveryService = { "DiscoveryService", "net.kebernet.configuration.client.service", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, 5, -1, -1, -1 };
  return &_ERSDiscoveryService;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ERSDiscoveryService)

@implementation ERSDiscoveryService_DeviceListCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onDevicesWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onDevices", "LJavaUtilList;", "(Ljava/util/List<Lnet/kebernet/configuration/client/model/Device;>;)Z", "LERSDiscoveryService;" };
  static const J2ObjcClassInfo _ERSDiscoveryService_DeviceListCallback = { "DeviceListCallback", "net.kebernet.configuration.client.service", ptrTable, methods, NULL, 7, 0x609, 1, 0, 3, -1, -1, -1, -1 };
  return &_ERSDiscoveryService_DeviceListCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ERSDiscoveryService_DeviceListCallback)

@implementation ERSDiscoveryService_ErrorCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSString;", "LERSDiscoveryService;" };
  static const J2ObjcClassInfo _ERSDiscoveryService_ErrorCallback = { "ErrorCallback", "net.kebernet.configuration.client.service", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ERSDiscoveryService_ErrorCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ERSDiscoveryService_ErrorCallback)
