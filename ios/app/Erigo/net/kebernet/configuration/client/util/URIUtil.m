//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Volumes/Personal/Documents/raspi-config/client-framework/build/j2oSources/net/kebernet/configuration/client/util/URIUtil.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/net/URI.h"
#include "java/net/URISyntaxException.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "net/kebernet/configuration/client/util/URIUtil.h"

inline JavaUtilLoggingLogger *NetKebernetConfigurationClientUtilURIUtil_get_LOGGER();
static JavaUtilLoggingLogger *NetKebernetConfigurationClientUtilURIUtil_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(NetKebernetConfigurationClientUtilURIUtil, LOGGER, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(NetKebernetConfigurationClientUtilURIUtil)

@implementation NetKebernetConfigurationClientUtilURIUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  NetKebernetConfigurationClientUtilURIUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)resolveRelativeURIWithNSString:(NSString *)base
                                withNSString:(NSString *)relative {
  return NetKebernetConfigurationClientUtilURIUtil_resolveRelativeURIWithNSString_withNSString_(base, relative);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resolveRelativeURIWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "resolveRelativeURI", "LNSString;LNSString;", &NetKebernetConfigurationClientUtilURIUtil_LOGGER };
  static const J2ObjcClassInfo _NetKebernetConfigurationClientUtilURIUtil = { "URIUtil", "net.kebernet.configuration.client.util", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_NetKebernetConfigurationClientUtilURIUtil;
}

+ (void)initialize {
  if (self == [NetKebernetConfigurationClientUtilURIUtil class]) {
    NetKebernetConfigurationClientUtilURIUtil_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_([NetKebernetConfigurationClientUtilURIUtil_class_() getCanonicalName]);
    J2OBJC_SET_INITIALIZED(NetKebernetConfigurationClientUtilURIUtil)
  }
}

@end

void NetKebernetConfigurationClientUtilURIUtil_init(NetKebernetConfigurationClientUtilURIUtil *self) {
  NSObject_init(self);
}

NetKebernetConfigurationClientUtilURIUtil *new_NetKebernetConfigurationClientUtilURIUtil_init() {
  J2OBJC_NEW_IMPL(NetKebernetConfigurationClientUtilURIUtil, init)
}

NetKebernetConfigurationClientUtilURIUtil *create_NetKebernetConfigurationClientUtilURIUtil_init() {
  J2OBJC_CREATE_IMPL(NetKebernetConfigurationClientUtilURIUtil, init)
}

NSString *NetKebernetConfigurationClientUtilURIUtil_resolveRelativeURIWithNSString_withNSString_(NSString *base, NSString *relative) {
  NetKebernetConfigurationClientUtilURIUtil_initialize();
  @try {
    JavaNetURI *uri = new_JavaNetURI_initWithNSString_(base);
    return [((JavaNetURI *) nil_chk([uri resolveWithJavaNetURI:new_JavaNetURI_initWithNSString_(relative)])) description];
  }
  @catch (JavaLangNullPointerException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(NetKebernetConfigurationClientUtilURIUtil_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$$", @"Couldn't resolve ", relative, @" from ", base)];
    return relative;
  }
  @catch (JavaNetURISyntaxException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(NetKebernetConfigurationClientUtilURIUtil_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$$", @"Couldn't resolve ", relative, @" from ", base)];
    return relative;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(NetKebernetConfigurationClientUtilURIUtil)
