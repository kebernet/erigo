buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
//        classpath "de.gesellix:gradle-debian-plugin:16"
        classpath  group: 'com.netflix.nebula', name: 'gradle-ospackage-plugin', version: '4.4.0'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "net.ltgt.apt"
apply plugin: 'nebula.ospackage'
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
    compile project(":client-framework")
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
    compile group: 'org.javassist', name: 'javassist', version: '3.16.1-GA'
    compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.10'
    //compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.9.2'
    compile group: 'org.kohsuke', name: 'libpam4j', version: '1.8'
    compile 'io.dropwizard:dropwizard-core:1.0.2'
    compile 'io.dropwizard:dropwizard-assets:1.0.2'
    compile 'com.squareup.dagger:dagger:1.2.5'
    compile 'org.codehaus.groovy:groovy-all:1.+'
    compile 'org.fusesource.jansi:jansi:1.+'
    compile 'jline:jline:1.+'
    apt 'com.squareup.dagger:dagger-compiler:1.2.5'
}

test {
    systemProperties = [
            "test.resources": file("src/test/resources").getAbsolutePath(),
            "build.dir" : project.buildDir.getAbsolutePath()
    ]
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/pureperfect/**',
                                        '**/*InjectAdapter.class',
                                        '**/*ModuleAdapter.class',
                                        '**/*ProvidesAdapter.class'])
        })
    }
}


shadowJar {
    classifier = "all"
}

distributions {
    main {
        baseName = "erigo-server"
        applicationName = 'erigo-server'
        mainClassName = "net.kebernet.configuration.server.ConfigurationService"
        contents {

        }
    }
}

ospackage {
    packageName = 'erigo-server'
    version =  project.version
    release = '1'
    os = LINUX

    //installUtils file('scripts/rpm/utils.sh')
//    preInstall file('scripts/rpm/preInstall.sh')
//    postInstall file('scripts/rpm/postInstall.sh')
    preUninstall 'rm -rf /opt/erigo-server'
//    postUninstall file('scripts/rpm/postUninstall.sh')

    into '/opt/erigo-server'

    from(file("build/libs/")) {
        include "*-all.jar"
        into 'lib'
    }

    from(file("src/bash")) {
        into 'bin'
        fileMode = 0550
    }


}
//
//buildRpm {
//    requires('bar', '2.2', GREATER | EQUAL)
//    requires('baz', '1.0.1', LESS)
//    link('/etc/init.d/fooâ€™, '/opt/foo/bin/foo.init')
//}
//
buildDeb() {
    requires('dhcp3-server')
    requires('oracle-java8-jdk')
    link('/etc/init.d/erigo-server', '/opt/ergo-server/bin/erigo-server-init')
}
tasks.buildDeb.dependsOn(shadowJar)
tasks.build.dependsOn buildDeb

